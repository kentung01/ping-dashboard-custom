interface RequestConfig extends RequestInit {
    params?: {
        [key: string]: any;
    };
}
export interface XHRResponse<T> {
    data: T;
    status: number;
}
export declare class XHRClient {
    private _baseUrl;
    private _customHeaders?;
    constructor(baseURL: string);
    setCustomHeader({ header, value }: {
        header: string;
        value: string;
    }): void;
    private _getHeaders;
    private _buildUrl;
    get(url: string, config?: Omit<RequestConfig, "body">): Promise<{
        data: any;
        status: number;
    }>;
    post(url: string, config?: Omit<RequestConfig, "body">): Promise<{
        data: any;
        status: number;
    }>;
}
export {};
