import { AdEventServerController } from "../../../apis/adEventServer/AdEventServerController";
import { ENVIRONMENT } from "../../../types";
import { BannerAdConfig } from "./types";
import { AdServerController } from "../../../apis/adServer/AdServerController";
import { ClientIdentity } from "../../ClientIdentity/ClientIdentity";
import { BannerAdHelper } from "./BannerAdHelper";
export declare class BannerAd extends BannerAdHelper {
    private _containerId;
    private _adConfig;
    private _adServerController;
    private _placementId;
    private _adEventController;
    private _requestId;
    private _environment;
    private _errorCallback?;
    constructor(adEventServerController: AdEventServerController, adServerController: AdServerController, placementId: string, containerId: string, environment: ENVIRONMENT, adConfig?: BannerAdConfig, cb?: (error: string) => void);
    private _fetchAd;
    private _renderAd;
    private _handleAdLoadFailed;
    private _registerAdClick;
    private _registerAdImpressionAndLoad;
    private _registerInstantAdImpression;
    private _registerAdChargeableImpression;
    private _initRequest;
    private _appendBrandWatermark;
    showAd(adSlot: HTMLElement, clientIdentity: ClientIdentity): Promise<void>;
}
