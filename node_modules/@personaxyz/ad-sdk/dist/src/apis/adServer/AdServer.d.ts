import { BaseApiServer } from "../BaseApiServer";
import { XHRResponse } from "../../services/XHRClient";
import { ENVIRONMENT } from "../../types";
import { DeviceMetadata } from "../../utils/clientDevice";
export type AdResponse<T = Record<string, any>> = {
    success: boolean;
    message: string;
    data: T;
};
export interface AdRequest extends DeviceMetadata {
    placementId: string;
    walletAddress?: string;
    userEmail?: string;
    detectedWalletAddress?: string;
}
export declare class AdServer extends BaseApiServer {
    constructor(apiKey: string, environment: ENVIRONMENT);
    fetchAd<K extends AdRequest, T extends AdResponse>(params: K & {
        requestId: string;
    }): Promise<XHRResponse<T> | undefined>;
}
