import { ENVIRONMENT } from "../../types";
import { DeviceMetadata } from "../../utils/clientDevice";
import { BaseApiServer } from "../BaseApiServer";
export interface OnAdRequestProperties {
    placementId: string;
    walletAddress?: string;
    userEmail?: string;
    deviceMetadata: DeviceMetadata;
    currentOrigin: string;
    currentPathname: string;
    release: string;
}
export interface OnAdRequestCompleteProperties extends OnAdRequestProperties {
    creativeId: string;
}
export interface OnAdRequestFailProperties extends OnAdRequestProperties {
    errorMessage: string;
    errorStatus?: number;
}
export interface OnAdLoadFailProperties extends OnAdRequestProperties {
    creativeId: string;
    errorMessage: string;
}
export interface OnAdLoadCompleteProperties extends OnAdRequestProperties {
    creativeId: string;
}
export interface OnAdClickProperties extends OnAdRequestProperties {
    creativeId: string;
}
export interface OnAdImpressionProperties extends OnAdRequestProperties {
    creativeId: string;
    triggeredAt: string;
    visiblePercentage: Number;
}
export interface OnAdChargeableImpressionProperties extends OnAdRequestProperties {
    creativeId: string;
    triggeredAt: string;
    visiblePercentage: Number;
}
export declare class AdEventServer extends BaseApiServer {
    private _environment;
    constructor(apiKey: string, environment: ENVIRONMENT);
    private _sendEvent;
    sendAdRequestEvent(properties: OnAdRequestProperties & {
        requestId: string;
    }): void;
    sendAdRequestCompleteEvent(properties: OnAdRequestCompleteProperties & {
        requestId: string;
    }): void;
    sendAdRequestFailEvent(properties: OnAdRequestFailProperties & {
        requestId: string;
    }): void;
    sendAdLoadCompleteEvent(properties: OnAdLoadCompleteProperties & {
        requestId: string;
    }): void;
    sendAdLoadFailEvent(properties: OnAdLoadFailProperties & {
        requestId: string;
    }): void;
    sendAdClickEvent(properties: OnAdClickProperties & {
        requestId: string;
    }): void;
    sendAdImpressionEvent(properties: OnAdImpressionProperties & {
        requestId: string;
    }): void;
    sendAdChargeableImpressionEvent(properties: OnAdChargeableImpressionProperties & {
        requestId: string;
    }): void;
}
