import {
  require_browser,
  require_build,
  require_minimal,
  require_xstream
} from "./chunk-NRCVWSQX.js";
import {
  require_bn,
  require_crypto,
  require_elliptic,
  require_fs,
  require_path,
  require_pbkdf2,
  require_ripemd160,
  require_sha256,
  require_sha3,
  require_sha512
} from "./chunk-Z7VITNO2.js";
import {
  require_base64_js,
  require_bech32
} from "./chunk-A445YNSG.js";
import {
  __commonJS,
  __toESM
} from "./chunk-2GTGKKMZ.js";

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/encoding/build/ascii.js
var require_ascii = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/encoding/build/ascii.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.fromAscii = exports.toAscii = void 0;
    function toAscii(input) {
      const toNums = (str) => str.split("").map((x3) => {
        const charCode = x3.charCodeAt(0);
        if (charCode < 32 || charCode > 126) {
          throw new Error("Cannot encode character that is out of printable ASCII range: " + charCode);
        }
        return charCode;
      });
      return Uint8Array.from(toNums(input));
    }
    exports.toAscii = toAscii;
    function fromAscii(data) {
      const fromNums = (listOfNumbers) => listOfNumbers.map((x3) => {
        if (x3 < 32 || x3 > 126) {
          throw new Error("Cannot decode character that is out of printable ASCII range: " + x3);
        }
        return String.fromCharCode(x3);
      });
      return fromNums(Array.from(data)).join("");
    }
    exports.fromAscii = fromAscii;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/encoding/build/base64.js
var require_base64 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/encoding/build/base64.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.fromBase64 = exports.toBase64 = void 0;
    var base64js = __importStar(require_base64_js());
    function toBase64(data) {
      return base64js.fromByteArray(data);
    }
    exports.toBase64 = toBase64;
    function fromBase64(base64String) {
      if (!base64String.match(/^[a-zA-Z0-9+/]*={0,2}$/)) {
        throw new Error("Invalid base64 string format");
      }
      return base64js.toByteArray(base64String);
    }
    exports.fromBase64 = fromBase64;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/encoding/build/bech32.js
var require_bech322 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/encoding/build/bech32.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.normalizeBech32 = exports.fromBech32 = exports.toBech32 = void 0;
    var bech32 = __importStar(require_bech32());
    function toBech32(prefix, data, limit) {
      const address = bech32.encode(prefix, bech32.toWords(data), limit);
      return address;
    }
    exports.toBech32 = toBech32;
    function fromBech32(address, limit = Infinity) {
      const decodedAddress = bech32.decode(address, limit);
      return {
        prefix: decodedAddress.prefix,
        data: new Uint8Array(bech32.fromWords(decodedAddress.words))
      };
    }
    exports.fromBech32 = fromBech32;
    function normalizeBech32(address) {
      const { prefix, data } = fromBech32(address);
      return toBech32(prefix, data);
    }
    exports.normalizeBech32 = normalizeBech32;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/encoding/build/hex.js
var require_hex = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/encoding/build/hex.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.fromHex = exports.toHex = void 0;
    function toHex(data) {
      let out = "";
      for (const byte of data) {
        out += ("0" + byte.toString(16)).slice(-2);
      }
      return out;
    }
    exports.toHex = toHex;
    function fromHex(hexstring) {
      if (hexstring.length % 2 !== 0) {
        throw new Error("hex string length must be a multiple of 2");
      }
      const out = new Uint8Array(hexstring.length / 2);
      for (let i3 = 0; i3 < out.length; i3++) {
        const j2 = 2 * i3;
        const hexByteAsString = hexstring.slice(j2, j2 + 2);
        if (!hexByteAsString.match(/[0-9a-f]{2}/i)) {
          throw new Error("hex string contains invalid characters");
        }
        out[i3] = parseInt(hexByteAsString, 16);
      }
      return out;
    }
    exports.fromHex = fromHex;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/encoding/build/rfc3339.js
var require_rfc3339 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/encoding/build/rfc3339.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.toRfc3339 = exports.fromRfc3339 = void 0;
    var rfc3339Matcher = /^(\d{4})-(\d{2})-(\d{2})[T ](\d{2}):(\d{2}):(\d{2})(\.\d{1,9})?((?:[+-]\d{2}:\d{2})|Z)$/;
    function padded(integer, length = 2) {
      return integer.toString().padStart(length, "0");
    }
    function fromRfc3339(str) {
      const matches = rfc3339Matcher.exec(str);
      if (!matches) {
        throw new Error("Date string is not in RFC3339 format");
      }
      const year = +matches[1];
      const month = +matches[2];
      const day = +matches[3];
      const hour = +matches[4];
      const minute = +matches[5];
      const second = +matches[6];
      const milliSeconds = matches[7] ? Math.floor(+matches[7] * 1e3) : 0;
      let tzOffsetSign;
      let tzOffsetHours;
      let tzOffsetMinutes;
      if (matches[8] === "Z") {
        tzOffsetSign = 1;
        tzOffsetHours = 0;
        tzOffsetMinutes = 0;
      } else {
        tzOffsetSign = matches[8].substring(0, 1) === "-" ? -1 : 1;
        tzOffsetHours = +matches[8].substring(1, 3);
        tzOffsetMinutes = +matches[8].substring(4, 6);
      }
      const tzOffset = tzOffsetSign * (tzOffsetHours * 60 + tzOffsetMinutes) * 60;
      const timestamp = Date.UTC(year, month - 1, day, hour, minute, second, milliSeconds) - tzOffset * 1e3;
      return new Date(timestamp);
    }
    exports.fromRfc3339 = fromRfc3339;
    function toRfc3339(date) {
      const year = date.getUTCFullYear();
      const month = padded(date.getUTCMonth() + 1);
      const day = padded(date.getUTCDate());
      const hour = padded(date.getUTCHours());
      const minute = padded(date.getUTCMinutes());
      const second = padded(date.getUTCSeconds());
      const ms = padded(date.getUTCMilliseconds(), 3);
      return `${year}-${month}-${day}T${hour}:${minute}:${second}.${ms}Z`;
    }
    exports.toRfc3339 = toRfc3339;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/encoding/build/utf8.js
var require_utf8 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/encoding/build/utf8.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.fromUtf8 = exports.toUtf8 = void 0;
    function toUtf8(str) {
      return new TextEncoder().encode(str);
    }
    exports.toUtf8 = toUtf8;
    function fromUtf8(data, lossy = false) {
      const fatal = !lossy;
      return new TextDecoder("utf-8", { fatal }).decode(data);
    }
    exports.fromUtf8 = fromUtf8;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/encoding/build/index.js
var require_build2 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/encoding/build/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.toUtf8 = exports.fromUtf8 = exports.toRfc3339 = exports.fromRfc3339 = exports.toHex = exports.fromHex = exports.toBech32 = exports.normalizeBech32 = exports.fromBech32 = exports.toBase64 = exports.fromBase64 = exports.toAscii = exports.fromAscii = void 0;
    var ascii_1 = require_ascii();
    Object.defineProperty(exports, "fromAscii", { enumerable: true, get: function() {
      return ascii_1.fromAscii;
    } });
    Object.defineProperty(exports, "toAscii", { enumerable: true, get: function() {
      return ascii_1.toAscii;
    } });
    var base64_1 = require_base64();
    Object.defineProperty(exports, "fromBase64", { enumerable: true, get: function() {
      return base64_1.fromBase64;
    } });
    Object.defineProperty(exports, "toBase64", { enumerable: true, get: function() {
      return base64_1.toBase64;
    } });
    var bech32_1 = require_bech322();
    Object.defineProperty(exports, "fromBech32", { enumerable: true, get: function() {
      return bech32_1.fromBech32;
    } });
    Object.defineProperty(exports, "normalizeBech32", { enumerable: true, get: function() {
      return bech32_1.normalizeBech32;
    } });
    Object.defineProperty(exports, "toBech32", { enumerable: true, get: function() {
      return bech32_1.toBech32;
    } });
    var hex_1 = require_hex();
    Object.defineProperty(exports, "fromHex", { enumerable: true, get: function() {
      return hex_1.fromHex;
    } });
    Object.defineProperty(exports, "toHex", { enumerable: true, get: function() {
      return hex_1.toHex;
    } });
    var rfc3339_1 = require_rfc3339();
    Object.defineProperty(exports, "fromRfc3339", { enumerable: true, get: function() {
      return rfc3339_1.fromRfc3339;
    } });
    Object.defineProperty(exports, "toRfc3339", { enumerable: true, get: function() {
      return rfc3339_1.toRfc3339;
    } });
    var utf8_1 = require_utf8();
    Object.defineProperty(exports, "fromUtf8", { enumerable: true, get: function() {
      return utf8_1.fromUtf8;
    } });
    Object.defineProperty(exports, "toUtf8", { enumerable: true, get: function() {
      return utf8_1.toUtf8;
    } });
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/math/build/decimal.js
var require_decimal = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/math/build/decimal.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Decimal = void 0;
    var bn_js_1 = __importDefault(require_bn());
    var maxFractionalDigits = 100;
    var Decimal = class _Decimal {
      constructor(atomics, fractionalDigits) {
        if (!atomics.match(/^[0-9]+$/)) {
          throw new Error("Invalid string format. Only non-negative integers in decimal representation supported.");
        }
        this.data = {
          atomics: new bn_js_1.default(atomics),
          fractionalDigits
        };
      }
      static fromUserInput(input, fractionalDigits) {
        _Decimal.verifyFractionalDigits(fractionalDigits);
        const badCharacter = input.match(/[^0-9.]/);
        if (badCharacter) {
          throw new Error(`Invalid character at position ${badCharacter.index + 1}`);
        }
        let whole;
        let fractional;
        if (input === "") {
          whole = "0";
          fractional = "";
        } else if (input.search(/\./) === -1) {
          whole = input;
          fractional = "";
        } else {
          const parts = input.split(".");
          switch (parts.length) {
            case 0:
            case 1:
              throw new Error("Fewer than two elements in split result. This must not happen here.");
            case 2:
              if (!parts[1])
                throw new Error("Fractional part missing");
              whole = parts[0];
              fractional = parts[1].replace(/0+$/, "");
              break;
            default:
              throw new Error("More than one separator found");
          }
        }
        if (fractional.length > fractionalDigits) {
          throw new Error("Got more fractional digits than supported");
        }
        const quantity = `${whole}${fractional.padEnd(fractionalDigits, "0")}`;
        return new _Decimal(quantity, fractionalDigits);
      }
      static fromAtomics(atomics, fractionalDigits) {
        _Decimal.verifyFractionalDigits(fractionalDigits);
        return new _Decimal(atomics, fractionalDigits);
      }
      /**
       * Creates a Decimal with value 0.0 and the given number of fractial digits.
       *
       * Fractional digits are not relevant for the value but needed to be able
       * to perform arithmetic operations with other decimals.
       */
      static zero(fractionalDigits) {
        _Decimal.verifyFractionalDigits(fractionalDigits);
        return new _Decimal("0", fractionalDigits);
      }
      /**
       * Creates a Decimal with value 1.0 and the given number of fractial digits.
       *
       * Fractional digits are not relevant for the value but needed to be able
       * to perform arithmetic operations with other decimals.
       */
      static one(fractionalDigits) {
        _Decimal.verifyFractionalDigits(fractionalDigits);
        return new _Decimal("1" + "0".repeat(fractionalDigits), fractionalDigits);
      }
      static verifyFractionalDigits(fractionalDigits) {
        if (!Number.isInteger(fractionalDigits))
          throw new Error("Fractional digits is not an integer");
        if (fractionalDigits < 0)
          throw new Error("Fractional digits must not be negative");
        if (fractionalDigits > maxFractionalDigits) {
          throw new Error(`Fractional digits must not exceed ${maxFractionalDigits}`);
        }
      }
      static compare(a2, b3) {
        if (a2.fractionalDigits !== b3.fractionalDigits)
          throw new Error("Fractional digits do not match");
        return a2.data.atomics.cmp(new bn_js_1.default(b3.atomics));
      }
      get atomics() {
        return this.data.atomics.toString();
      }
      get fractionalDigits() {
        return this.data.fractionalDigits;
      }
      /** Creates a new instance with the same value */
      clone() {
        return new _Decimal(this.atomics, this.fractionalDigits);
      }
      /** Returns the greatest decimal <= this which has no fractional part (rounding down) */
      floor() {
        const factor = new bn_js_1.default(10).pow(new bn_js_1.default(this.data.fractionalDigits));
        const whole = this.data.atomics.div(factor);
        const fractional = this.data.atomics.mod(factor);
        if (fractional.isZero()) {
          return this.clone();
        } else {
          return _Decimal.fromAtomics(whole.mul(factor).toString(), this.fractionalDigits);
        }
      }
      /** Returns the smallest decimal >= this which has no fractional part (rounding up) */
      ceil() {
        const factor = new bn_js_1.default(10).pow(new bn_js_1.default(this.data.fractionalDigits));
        const whole = this.data.atomics.div(factor);
        const fractional = this.data.atomics.mod(factor);
        if (fractional.isZero()) {
          return this.clone();
        } else {
          return _Decimal.fromAtomics(whole.addn(1).mul(factor).toString(), this.fractionalDigits);
        }
      }
      toString() {
        const factor = new bn_js_1.default(10).pow(new bn_js_1.default(this.data.fractionalDigits));
        const whole = this.data.atomics.div(factor);
        const fractional = this.data.atomics.mod(factor);
        if (fractional.isZero()) {
          return whole.toString();
        } else {
          const fullFractionalPart = fractional.toString().padStart(this.data.fractionalDigits, "0");
          const trimmedFractionalPart = fullFractionalPart.replace(/0+$/, "");
          return `${whole.toString()}.${trimmedFractionalPart}`;
        }
      }
      /**
       * Returns an approximation as a float type. Only use this if no
       * exact calculation is required.
       */
      toFloatApproximation() {
        const out = Number(this.toString());
        if (Number.isNaN(out))
          throw new Error("Conversion to number failed");
        return out;
      }
      /**
       * a.plus(b) returns a+b.
       *
       * Both values need to have the same fractional digits.
       */
      plus(b3) {
        if (this.fractionalDigits !== b3.fractionalDigits)
          throw new Error("Fractional digits do not match");
        const sum = this.data.atomics.add(new bn_js_1.default(b3.atomics));
        return new _Decimal(sum.toString(), this.fractionalDigits);
      }
      /**
       * a.minus(b) returns a-b.
       *
       * Both values need to have the same fractional digits.
       * The resulting difference needs to be non-negative.
       */
      minus(b3) {
        if (this.fractionalDigits !== b3.fractionalDigits)
          throw new Error("Fractional digits do not match");
        const difference = this.data.atomics.sub(new bn_js_1.default(b3.atomics));
        if (difference.ltn(0))
          throw new Error("Difference must not be negative");
        return new _Decimal(difference.toString(), this.fractionalDigits);
      }
      /**
       * a.multiply(b) returns a*b.
       *
       * We only allow multiplication by unsigned integers to avoid rounding errors.
       */
      multiply(b3) {
        const product = this.data.atomics.mul(new bn_js_1.default(b3.toString()));
        return new _Decimal(product.toString(), this.fractionalDigits);
      }
      equals(b3) {
        return _Decimal.compare(this, b3) === 0;
      }
      isLessThan(b3) {
        return _Decimal.compare(this, b3) < 0;
      }
      isLessThanOrEqual(b3) {
        return _Decimal.compare(this, b3) <= 0;
      }
      isGreaterThan(b3) {
        return _Decimal.compare(this, b3) > 0;
      }
      isGreaterThanOrEqual(b3) {
        return _Decimal.compare(this, b3) >= 0;
      }
    };
    exports.Decimal = Decimal;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/math/build/integers.js
var require_integers = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/math/build/integers.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Uint64 = exports.Uint53 = exports.Int53 = exports.Uint32 = void 0;
    var bn_js_1 = __importDefault(require_bn());
    var uint64MaxValue = new bn_js_1.default("18446744073709551615", 10, "be");
    var Uint32 = class _Uint32 {
      constructor(input) {
        if (Number.isNaN(input)) {
          throw new Error("Input is not a number");
        }
        if (!Number.isInteger(input)) {
          throw new Error("Input is not an integer");
        }
        if (input < 0 || input > 4294967295) {
          throw new Error("Input not in uint32 range: " + input.toString());
        }
        this.data = input;
      }
      /** @deprecated use Uint32.fromBytes */
      static fromBigEndianBytes(bytes) {
        return _Uint32.fromBytes(bytes);
      }
      /**
       * Creates a Uint32 from a fixed length byte array.
       *
       * @param bytes a list of exactly 4 bytes
       * @param endianess defaults to big endian
       */
      static fromBytes(bytes, endianess = "be") {
        if (bytes.length !== 4) {
          throw new Error("Invalid input length. Expected 4 bytes.");
        }
        for (let i3 = 0; i3 < bytes.length; ++i3) {
          if (!Number.isInteger(bytes[i3]) || bytes[i3] > 255 || bytes[i3] < 0) {
            throw new Error("Invalid value in byte. Found: " + bytes[i3]);
          }
        }
        const beBytes = endianess === "be" ? bytes : Array.from(bytes).reverse();
        return new _Uint32(beBytes[0] * 2 ** 24 + beBytes[1] * 2 ** 16 + beBytes[2] * 2 ** 8 + beBytes[3]);
      }
      static fromString(str) {
        if (!str.match(/^[0-9]+$/)) {
          throw new Error("Invalid string format");
        }
        return new _Uint32(Number.parseInt(str, 10));
      }
      toBytesBigEndian() {
        return new Uint8Array([
          Math.floor(this.data / 2 ** 24) & 255,
          Math.floor(this.data / 2 ** 16) & 255,
          Math.floor(this.data / 2 ** 8) & 255,
          Math.floor(this.data / 2 ** 0) & 255
        ]);
      }
      toBytesLittleEndian() {
        return new Uint8Array([
          Math.floor(this.data / 2 ** 0) & 255,
          Math.floor(this.data / 2 ** 8) & 255,
          Math.floor(this.data / 2 ** 16) & 255,
          Math.floor(this.data / 2 ** 24) & 255
        ]);
      }
      toNumber() {
        return this.data;
      }
      toBigInt() {
        return BigInt(this.toNumber());
      }
      toString() {
        return this.data.toString();
      }
    };
    exports.Uint32 = Uint32;
    var Int53 = class _Int53 {
      constructor(input) {
        if (Number.isNaN(input)) {
          throw new Error("Input is not a number");
        }
        if (!Number.isInteger(input)) {
          throw new Error("Input is not an integer");
        }
        if (input < Number.MIN_SAFE_INTEGER || input > Number.MAX_SAFE_INTEGER) {
          throw new Error("Input not in int53 range: " + input.toString());
        }
        this.data = input;
      }
      static fromString(str) {
        if (!str.match(/^-?[0-9]+$/)) {
          throw new Error("Invalid string format");
        }
        return new _Int53(Number.parseInt(str, 10));
      }
      toNumber() {
        return this.data;
      }
      toBigInt() {
        return BigInt(this.toNumber());
      }
      toString() {
        return this.data.toString();
      }
    };
    exports.Int53 = Int53;
    var Uint53 = class _Uint53 {
      constructor(input) {
        const signed = new Int53(input);
        if (signed.toNumber() < 0) {
          throw new Error("Input is negative");
        }
        this.data = signed;
      }
      static fromString(str) {
        const signed = Int53.fromString(str);
        return new _Uint53(signed.toNumber());
      }
      toNumber() {
        return this.data.toNumber();
      }
      toBigInt() {
        return BigInt(this.toNumber());
      }
      toString() {
        return this.data.toString();
      }
    };
    exports.Uint53 = Uint53;
    var Uint64 = class _Uint64 {
      constructor(data) {
        if (data.isNeg()) {
          throw new Error("Input is negative");
        }
        if (data.gt(uint64MaxValue)) {
          throw new Error("Input exceeds uint64 range");
        }
        this.data = data;
      }
      /** @deprecated use Uint64.fromBytes */
      static fromBytesBigEndian(bytes) {
        return _Uint64.fromBytes(bytes);
      }
      /**
       * Creates a Uint64 from a fixed length byte array.
       *
       * @param bytes a list of exactly 8 bytes
       * @param endianess defaults to big endian
       */
      static fromBytes(bytes, endianess = "be") {
        if (bytes.length !== 8) {
          throw new Error("Invalid input length. Expected 8 bytes.");
        }
        for (let i3 = 0; i3 < bytes.length; ++i3) {
          if (!Number.isInteger(bytes[i3]) || bytes[i3] > 255 || bytes[i3] < 0) {
            throw new Error("Invalid value in byte. Found: " + bytes[i3]);
          }
        }
        const beBytes = endianess === "be" ? Array.from(bytes) : Array.from(bytes).reverse();
        return new _Uint64(new bn_js_1.default(beBytes));
      }
      static fromString(str) {
        if (!str.match(/^[0-9]+$/)) {
          throw new Error("Invalid string format");
        }
        return new _Uint64(new bn_js_1.default(str, 10, "be"));
      }
      static fromNumber(input) {
        if (Number.isNaN(input)) {
          throw new Error("Input is not a number");
        }
        if (!Number.isInteger(input)) {
          throw new Error("Input is not an integer");
        }
        let bigint;
        try {
          bigint = new bn_js_1.default(input);
        } catch {
          throw new Error("Input is not a safe integer");
        }
        return new _Uint64(bigint);
      }
      toBytesBigEndian() {
        return Uint8Array.from(this.data.toArray("be", 8));
      }
      toBytesLittleEndian() {
        return Uint8Array.from(this.data.toArray("le", 8));
      }
      toString() {
        return this.data.toString(10);
      }
      toBigInt() {
        return BigInt(this.toString());
      }
      toNumber() {
        return this.data.toNumber();
      }
    };
    exports.Uint64 = Uint64;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/math/build/index.js
var require_build3 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/math/build/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Uint64 = exports.Uint53 = exports.Uint32 = exports.Int53 = exports.Decimal = void 0;
    var decimal_1 = require_decimal();
    Object.defineProperty(exports, "Decimal", { enumerable: true, get: function() {
      return decimal_1.Decimal;
    } });
    var integers_1 = require_integers();
    Object.defineProperty(exports, "Int53", { enumerable: true, get: function() {
      return integers_1.Int53;
    } });
    Object.defineProperty(exports, "Uint32", { enumerable: true, get: function() {
      return integers_1.Uint32;
    } });
    Object.defineProperty(exports, "Uint53", { enumerable: true, get: function() {
      return integers_1.Uint53;
    } });
    Object.defineProperty(exports, "Uint64", { enumerable: true, get: function() {
      return integers_1.Uint64;
    } });
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/proto-signing/build/coins.js
var require_coins = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/proto-signing/build/coins.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.parseCoins = void 0;
    function parseCoins(input) {
      return input.replace(/\s/g, "").split(",").filter(Boolean).map((part) => {
        const match = part.match(/^([0-9]+)([a-zA-Z][a-zA-Z0-9/]{2,127})$/);
        if (!match)
          throw new Error("Got an invalid coin string");
        return {
          amount: match[1].replace(/^0+/, "") || "0",
          denom: match[2]
        };
      });
    }
    exports.parseCoins = parseCoins;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/long/src/long.js
var require_long = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/long/src/long.js"(exports, module) {
    module.exports = Long;
    var wasm = null;
    try {
      wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([
        0,
        97,
        115,
        109,
        1,
        0,
        0,
        0,
        1,
        13,
        2,
        96,
        0,
        1,
        127,
        96,
        4,
        127,
        127,
        127,
        127,
        1,
        127,
        3,
        7,
        6,
        0,
        1,
        1,
        1,
        1,
        1,
        6,
        6,
        1,
        127,
        1,
        65,
        0,
        11,
        7,
        50,
        6,
        3,
        109,
        117,
        108,
        0,
        1,
        5,
        100,
        105,
        118,
        95,
        115,
        0,
        2,
        5,
        100,
        105,
        118,
        95,
        117,
        0,
        3,
        5,
        114,
        101,
        109,
        95,
        115,
        0,
        4,
        5,
        114,
        101,
        109,
        95,
        117,
        0,
        5,
        8,
        103,
        101,
        116,
        95,
        104,
        105,
        103,
        104,
        0,
        0,
        10,
        191,
        1,
        6,
        4,
        0,
        35,
        0,
        11,
        36,
        1,
        1,
        126,
        32,
        0,
        173,
        32,
        1,
        173,
        66,
        32,
        134,
        132,
        32,
        2,
        173,
        32,
        3,
        173,
        66,
        32,
        134,
        132,
        126,
        34,
        4,
        66,
        32,
        135,
        167,
        36,
        0,
        32,
        4,
        167,
        11,
        36,
        1,
        1,
        126,
        32,
        0,
        173,
        32,
        1,
        173,
        66,
        32,
        134,
        132,
        32,
        2,
        173,
        32,
        3,
        173,
        66,
        32,
        134,
        132,
        127,
        34,
        4,
        66,
        32,
        135,
        167,
        36,
        0,
        32,
        4,
        167,
        11,
        36,
        1,
        1,
        126,
        32,
        0,
        173,
        32,
        1,
        173,
        66,
        32,
        134,
        132,
        32,
        2,
        173,
        32,
        3,
        173,
        66,
        32,
        134,
        132,
        128,
        34,
        4,
        66,
        32,
        135,
        167,
        36,
        0,
        32,
        4,
        167,
        11,
        36,
        1,
        1,
        126,
        32,
        0,
        173,
        32,
        1,
        173,
        66,
        32,
        134,
        132,
        32,
        2,
        173,
        32,
        3,
        173,
        66,
        32,
        134,
        132,
        129,
        34,
        4,
        66,
        32,
        135,
        167,
        36,
        0,
        32,
        4,
        167,
        11,
        36,
        1,
        1,
        126,
        32,
        0,
        173,
        32,
        1,
        173,
        66,
        32,
        134,
        132,
        32,
        2,
        173,
        32,
        3,
        173,
        66,
        32,
        134,
        132,
        130,
        34,
        4,
        66,
        32,
        135,
        167,
        36,
        0,
        32,
        4,
        167,
        11
      ])), {}).exports;
    } catch (e2) {
    }
    function Long(low, high, unsigned) {
      this.low = low | 0;
      this.high = high | 0;
      this.unsigned = !!unsigned;
    }
    Long.prototype.__isLong__;
    Object.defineProperty(Long.prototype, "__isLong__", { value: true });
    function isLong(obj) {
      return (obj && obj["__isLong__"]) === true;
    }
    Long.isLong = isLong;
    var INT_CACHE = {};
    var UINT_CACHE = {};
    function fromInt(value, unsigned) {
      var obj, cachedObj, cache;
      if (unsigned) {
        value >>>= 0;
        if (cache = 0 <= value && value < 256) {
          cachedObj = UINT_CACHE[value];
          if (cachedObj)
            return cachedObj;
        }
        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);
        if (cache)
          UINT_CACHE[value] = obj;
        return obj;
      } else {
        value |= 0;
        if (cache = -128 <= value && value < 128) {
          cachedObj = INT_CACHE[value];
          if (cachedObj)
            return cachedObj;
        }
        obj = fromBits(value, value < 0 ? -1 : 0, false);
        if (cache)
          INT_CACHE[value] = obj;
        return obj;
      }
    }
    Long.fromInt = fromInt;
    function fromNumber(value, unsigned) {
      if (isNaN(value))
        return unsigned ? UZERO : ZERO;
      if (unsigned) {
        if (value < 0)
          return UZERO;
        if (value >= TWO_PWR_64_DBL)
          return MAX_UNSIGNED_VALUE;
      } else {
        if (value <= -TWO_PWR_63_DBL)
          return MIN_VALUE;
        if (value + 1 >= TWO_PWR_63_DBL)
          return MAX_VALUE;
      }
      if (value < 0)
        return fromNumber(-value, unsigned).neg();
      return fromBits(value % TWO_PWR_32_DBL | 0, value / TWO_PWR_32_DBL | 0, unsigned);
    }
    Long.fromNumber = fromNumber;
    function fromBits(lowBits, highBits, unsigned) {
      return new Long(lowBits, highBits, unsigned);
    }
    Long.fromBits = fromBits;
    var pow_dbl = Math.pow;
    function fromString(str, unsigned, radix) {
      if (str.length === 0)
        throw Error("empty string");
      if (str === "NaN" || str === "Infinity" || str === "+Infinity" || str === "-Infinity")
        return ZERO;
      if (typeof unsigned === "number") {
        radix = unsigned, unsigned = false;
      } else {
        unsigned = !!unsigned;
      }
      radix = radix || 10;
      if (radix < 2 || 36 < radix)
        throw RangeError("radix");
      var p3;
      if ((p3 = str.indexOf("-")) > 0)
        throw Error("interior hyphen");
      else if (p3 === 0) {
        return fromString(str.substring(1), unsigned, radix).neg();
      }
      var radixToPower = fromNumber(pow_dbl(radix, 8));
      var result = ZERO;
      for (var i3 = 0; i3 < str.length; i3 += 8) {
        var size = Math.min(8, str.length - i3), value = parseInt(str.substring(i3, i3 + size), radix);
        if (size < 8) {
          var power = fromNumber(pow_dbl(radix, size));
          result = result.mul(power).add(fromNumber(value));
        } else {
          result = result.mul(radixToPower);
          result = result.add(fromNumber(value));
        }
      }
      result.unsigned = unsigned;
      return result;
    }
    Long.fromString = fromString;
    function fromValue(val, unsigned) {
      if (typeof val === "number")
        return fromNumber(val, unsigned);
      if (typeof val === "string")
        return fromString(val, unsigned);
      return fromBits(val.low, val.high, typeof unsigned === "boolean" ? unsigned : val.unsigned);
    }
    Long.fromValue = fromValue;
    var TWO_PWR_16_DBL = 1 << 16;
    var TWO_PWR_24_DBL = 1 << 24;
    var TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;
    var TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;
    var TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;
    var TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);
    var ZERO = fromInt(0);
    Long.ZERO = ZERO;
    var UZERO = fromInt(0, true);
    Long.UZERO = UZERO;
    var ONE = fromInt(1);
    Long.ONE = ONE;
    var UONE = fromInt(1, true);
    Long.UONE = UONE;
    var NEG_ONE = fromInt(-1);
    Long.NEG_ONE = NEG_ONE;
    var MAX_VALUE = fromBits(4294967295 | 0, 2147483647 | 0, false);
    Long.MAX_VALUE = MAX_VALUE;
    var MAX_UNSIGNED_VALUE = fromBits(4294967295 | 0, 4294967295 | 0, true);
    Long.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;
    var MIN_VALUE = fromBits(0, 2147483648 | 0, false);
    Long.MIN_VALUE = MIN_VALUE;
    var LongPrototype = Long.prototype;
    LongPrototype.toInt = function toInt() {
      return this.unsigned ? this.low >>> 0 : this.low;
    };
    LongPrototype.toNumber = function toNumber() {
      if (this.unsigned)
        return (this.high >>> 0) * TWO_PWR_32_DBL + (this.low >>> 0);
      return this.high * TWO_PWR_32_DBL + (this.low >>> 0);
    };
    LongPrototype.toString = function toString(radix) {
      radix = radix || 10;
      if (radix < 2 || 36 < radix)
        throw RangeError("radix");
      if (this.isZero())
        return "0";
      if (this.isNegative()) {
        if (this.eq(MIN_VALUE)) {
          var radixLong = fromNumber(radix), div = this.div(radixLong), rem1 = div.mul(radixLong).sub(this);
          return div.toString(radix) + rem1.toInt().toString(radix);
        } else
          return "-" + this.neg().toString(radix);
      }
      var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned), rem = this;
      var result = "";
      while (true) {
        var remDiv = rem.div(radixToPower), intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0, digits = intval.toString(radix);
        rem = remDiv;
        if (rem.isZero())
          return digits + result;
        else {
          while (digits.length < 6)
            digits = "0" + digits;
          result = "" + digits + result;
        }
      }
    };
    LongPrototype.getHighBits = function getHighBits() {
      return this.high;
    };
    LongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {
      return this.high >>> 0;
    };
    LongPrototype.getLowBits = function getLowBits() {
      return this.low;
    };
    LongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {
      return this.low >>> 0;
    };
    LongPrototype.getNumBitsAbs = function getNumBitsAbs() {
      if (this.isNegative())
        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();
      var val = this.high != 0 ? this.high : this.low;
      for (var bit = 31; bit > 0; bit--)
        if ((val & 1 << bit) != 0)
          break;
      return this.high != 0 ? bit + 33 : bit + 1;
    };
    LongPrototype.isZero = function isZero() {
      return this.high === 0 && this.low === 0;
    };
    LongPrototype.eqz = LongPrototype.isZero;
    LongPrototype.isNegative = function isNegative() {
      return !this.unsigned && this.high < 0;
    };
    LongPrototype.isPositive = function isPositive() {
      return this.unsigned || this.high >= 0;
    };
    LongPrototype.isOdd = function isOdd() {
      return (this.low & 1) === 1;
    };
    LongPrototype.isEven = function isEven() {
      return (this.low & 1) === 0;
    };
    LongPrototype.equals = function equals(other) {
      if (!isLong(other))
        other = fromValue(other);
      if (this.unsigned !== other.unsigned && this.high >>> 31 === 1 && other.high >>> 31 === 1)
        return false;
      return this.high === other.high && this.low === other.low;
    };
    LongPrototype.eq = LongPrototype.equals;
    LongPrototype.notEquals = function notEquals(other) {
      return !this.eq(
        /* validates */
        other
      );
    };
    LongPrototype.neq = LongPrototype.notEquals;
    LongPrototype.ne = LongPrototype.notEquals;
    LongPrototype.lessThan = function lessThan(other) {
      return this.comp(
        /* validates */
        other
      ) < 0;
    };
    LongPrototype.lt = LongPrototype.lessThan;
    LongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {
      return this.comp(
        /* validates */
        other
      ) <= 0;
    };
    LongPrototype.lte = LongPrototype.lessThanOrEqual;
    LongPrototype.le = LongPrototype.lessThanOrEqual;
    LongPrototype.greaterThan = function greaterThan(other) {
      return this.comp(
        /* validates */
        other
      ) > 0;
    };
    LongPrototype.gt = LongPrototype.greaterThan;
    LongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {
      return this.comp(
        /* validates */
        other
      ) >= 0;
    };
    LongPrototype.gte = LongPrototype.greaterThanOrEqual;
    LongPrototype.ge = LongPrototype.greaterThanOrEqual;
    LongPrototype.compare = function compare(other) {
      if (!isLong(other))
        other = fromValue(other);
      if (this.eq(other))
        return 0;
      var thisNeg = this.isNegative(), otherNeg = other.isNegative();
      if (thisNeg && !otherNeg)
        return -1;
      if (!thisNeg && otherNeg)
        return 1;
      if (!this.unsigned)
        return this.sub(other).isNegative() ? -1 : 1;
      return other.high >>> 0 > this.high >>> 0 || other.high === this.high && other.low >>> 0 > this.low >>> 0 ? -1 : 1;
    };
    LongPrototype.comp = LongPrototype.compare;
    LongPrototype.negate = function negate() {
      if (!this.unsigned && this.eq(MIN_VALUE))
        return MIN_VALUE;
      return this.not().add(ONE);
    };
    LongPrototype.neg = LongPrototype.negate;
    LongPrototype.add = function add(addend) {
      if (!isLong(addend))
        addend = fromValue(addend);
      var a48 = this.high >>> 16;
      var a32 = this.high & 65535;
      var a16 = this.low >>> 16;
      var a00 = this.low & 65535;
      var b48 = addend.high >>> 16;
      var b32 = addend.high & 65535;
      var b16 = addend.low >>> 16;
      var b00 = addend.low & 65535;
      var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
      c00 += a00 + b00;
      c16 += c00 >>> 16;
      c00 &= 65535;
      c16 += a16 + b16;
      c32 += c16 >>> 16;
      c16 &= 65535;
      c32 += a32 + b32;
      c48 += c32 >>> 16;
      c32 &= 65535;
      c48 += a48 + b48;
      c48 &= 65535;
      return fromBits(c16 << 16 | c00, c48 << 16 | c32, this.unsigned);
    };
    LongPrototype.subtract = function subtract(subtrahend) {
      if (!isLong(subtrahend))
        subtrahend = fromValue(subtrahend);
      return this.add(subtrahend.neg());
    };
    LongPrototype.sub = LongPrototype.subtract;
    LongPrototype.multiply = function multiply(multiplier) {
      if (this.isZero())
        return ZERO;
      if (!isLong(multiplier))
        multiplier = fromValue(multiplier);
      if (wasm) {
        var low = wasm.mul(
          this.low,
          this.high,
          multiplier.low,
          multiplier.high
        );
        return fromBits(low, wasm.get_high(), this.unsigned);
      }
      if (multiplier.isZero())
        return ZERO;
      if (this.eq(MIN_VALUE))
        return multiplier.isOdd() ? MIN_VALUE : ZERO;
      if (multiplier.eq(MIN_VALUE))
        return this.isOdd() ? MIN_VALUE : ZERO;
      if (this.isNegative()) {
        if (multiplier.isNegative())
          return this.neg().mul(multiplier.neg());
        else
          return this.neg().mul(multiplier).neg();
      } else if (multiplier.isNegative())
        return this.mul(multiplier.neg()).neg();
      if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))
        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);
      var a48 = this.high >>> 16;
      var a32 = this.high & 65535;
      var a16 = this.low >>> 16;
      var a00 = this.low & 65535;
      var b48 = multiplier.high >>> 16;
      var b32 = multiplier.high & 65535;
      var b16 = multiplier.low >>> 16;
      var b00 = multiplier.low & 65535;
      var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
      c00 += a00 * b00;
      c16 += c00 >>> 16;
      c00 &= 65535;
      c16 += a16 * b00;
      c32 += c16 >>> 16;
      c16 &= 65535;
      c16 += a00 * b16;
      c32 += c16 >>> 16;
      c16 &= 65535;
      c32 += a32 * b00;
      c48 += c32 >>> 16;
      c32 &= 65535;
      c32 += a16 * b16;
      c48 += c32 >>> 16;
      c32 &= 65535;
      c32 += a00 * b32;
      c48 += c32 >>> 16;
      c32 &= 65535;
      c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
      c48 &= 65535;
      return fromBits(c16 << 16 | c00, c48 << 16 | c32, this.unsigned);
    };
    LongPrototype.mul = LongPrototype.multiply;
    LongPrototype.divide = function divide(divisor) {
      if (!isLong(divisor))
        divisor = fromValue(divisor);
      if (divisor.isZero())
        throw Error("division by zero");
      if (wasm) {
        if (!this.unsigned && this.high === -2147483648 && divisor.low === -1 && divisor.high === -1) {
          return this;
        }
        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(
          this.low,
          this.high,
          divisor.low,
          divisor.high
        );
        return fromBits(low, wasm.get_high(), this.unsigned);
      }
      if (this.isZero())
        return this.unsigned ? UZERO : ZERO;
      var approx, rem, res;
      if (!this.unsigned) {
        if (this.eq(MIN_VALUE)) {
          if (divisor.eq(ONE) || divisor.eq(NEG_ONE))
            return MIN_VALUE;
          else if (divisor.eq(MIN_VALUE))
            return ONE;
          else {
            var halfThis = this.shr(1);
            approx = halfThis.div(divisor).shl(1);
            if (approx.eq(ZERO)) {
              return divisor.isNegative() ? ONE : NEG_ONE;
            } else {
              rem = this.sub(divisor.mul(approx));
              res = approx.add(rem.div(divisor));
              return res;
            }
          }
        } else if (divisor.eq(MIN_VALUE))
          return this.unsigned ? UZERO : ZERO;
        if (this.isNegative()) {
          if (divisor.isNegative())
            return this.neg().div(divisor.neg());
          return this.neg().div(divisor).neg();
        } else if (divisor.isNegative())
          return this.div(divisor.neg()).neg();
        res = ZERO;
      } else {
        if (!divisor.unsigned)
          divisor = divisor.toUnsigned();
        if (divisor.gt(this))
          return UZERO;
        if (divisor.gt(this.shru(1)))
          return UONE;
        res = UZERO;
      }
      rem = this;
      while (rem.gte(divisor)) {
        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));
        var log2 = Math.ceil(Math.log(approx) / Math.LN2), delta = log2 <= 48 ? 1 : pow_dbl(2, log2 - 48), approxRes = fromNumber(approx), approxRem = approxRes.mul(divisor);
        while (approxRem.isNegative() || approxRem.gt(rem)) {
          approx -= delta;
          approxRes = fromNumber(approx, this.unsigned);
          approxRem = approxRes.mul(divisor);
        }
        if (approxRes.isZero())
          approxRes = ONE;
        res = res.add(approxRes);
        rem = rem.sub(approxRem);
      }
      return res;
    };
    LongPrototype.div = LongPrototype.divide;
    LongPrototype.modulo = function modulo(divisor) {
      if (!isLong(divisor))
        divisor = fromValue(divisor);
      if (wasm) {
        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(
          this.low,
          this.high,
          divisor.low,
          divisor.high
        );
        return fromBits(low, wasm.get_high(), this.unsigned);
      }
      return this.sub(this.div(divisor).mul(divisor));
    };
    LongPrototype.mod = LongPrototype.modulo;
    LongPrototype.rem = LongPrototype.modulo;
    LongPrototype.not = function not() {
      return fromBits(~this.low, ~this.high, this.unsigned);
    };
    LongPrototype.and = function and(other) {
      if (!isLong(other))
        other = fromValue(other);
      return fromBits(this.low & other.low, this.high & other.high, this.unsigned);
    };
    LongPrototype.or = function or(other) {
      if (!isLong(other))
        other = fromValue(other);
      return fromBits(this.low | other.low, this.high | other.high, this.unsigned);
    };
    LongPrototype.xor = function xor(other) {
      if (!isLong(other))
        other = fromValue(other);
      return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);
    };
    LongPrototype.shiftLeft = function shiftLeft(numBits) {
      if (isLong(numBits))
        numBits = numBits.toInt();
      if ((numBits &= 63) === 0)
        return this;
      else if (numBits < 32)
        return fromBits(this.low << numBits, this.high << numBits | this.low >>> 32 - numBits, this.unsigned);
      else
        return fromBits(0, this.low << numBits - 32, this.unsigned);
    };
    LongPrototype.shl = LongPrototype.shiftLeft;
    LongPrototype.shiftRight = function shiftRight(numBits) {
      if (isLong(numBits))
        numBits = numBits.toInt();
      if ((numBits &= 63) === 0)
        return this;
      else if (numBits < 32)
        return fromBits(this.low >>> numBits | this.high << 32 - numBits, this.high >> numBits, this.unsigned);
      else
        return fromBits(this.high >> numBits - 32, this.high >= 0 ? 0 : -1, this.unsigned);
    };
    LongPrototype.shr = LongPrototype.shiftRight;
    LongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {
      if (isLong(numBits))
        numBits = numBits.toInt();
      numBits &= 63;
      if (numBits === 0)
        return this;
      else {
        var high = this.high;
        if (numBits < 32) {
          var low = this.low;
          return fromBits(low >>> numBits | high << 32 - numBits, high >>> numBits, this.unsigned);
        } else if (numBits === 32)
          return fromBits(high, 0, this.unsigned);
        else
          return fromBits(high >>> numBits - 32, 0, this.unsigned);
      }
    };
    LongPrototype.shru = LongPrototype.shiftRightUnsigned;
    LongPrototype.shr_u = LongPrototype.shiftRightUnsigned;
    LongPrototype.toSigned = function toSigned() {
      if (!this.unsigned)
        return this;
      return fromBits(this.low, this.high, false);
    };
    LongPrototype.toUnsigned = function toUnsigned() {
      if (this.unsigned)
        return this;
      return fromBits(this.low, this.high, true);
    };
    LongPrototype.toBytes = function toBytes(le2) {
      return le2 ? this.toBytesLE() : this.toBytesBE();
    };
    LongPrototype.toBytesLE = function toBytesLE() {
      var hi = this.high, lo = this.low;
      return [
        lo & 255,
        lo >>> 8 & 255,
        lo >>> 16 & 255,
        lo >>> 24,
        hi & 255,
        hi >>> 8 & 255,
        hi >>> 16 & 255,
        hi >>> 24
      ];
    };
    LongPrototype.toBytesBE = function toBytesBE() {
      var hi = this.high, lo = this.low;
      return [
        hi >>> 24,
        hi >>> 16 & 255,
        hi >>> 8 & 255,
        hi & 255,
        lo >>> 24,
        lo >>> 16 & 255,
        lo >>> 8 & 255,
        lo & 255
      ];
    };
    Long.fromBytes = function fromBytes(bytes, unsigned, le2) {
      return le2 ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);
    };
    Long.fromBytesLE = function fromBytesLE(bytes, unsigned) {
      return new Long(
        bytes[0] | bytes[1] << 8 | bytes[2] << 16 | bytes[3] << 24,
        bytes[4] | bytes[5] << 8 | bytes[6] << 16 | bytes[7] << 24,
        unsigned
      );
    };
    Long.fromBytesBE = function fromBytesBE(bytes, unsigned) {
      return new Long(
        bytes[4] << 24 | bytes[5] << 16 | bytes[6] << 8 | bytes[7],
        bytes[0] << 24 | bytes[1] << 16 | bytes[2] << 8 | bytes[3],
        unsigned
      );
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/helpers.js
var require_helpers = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/helpers.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.fromJsonTimestamp = exports.fromTimestamp = exports.toTimestamp = exports.setPaginationParams = exports.isObject = exports.isSet = exports.fromDuration = exports.toDuration = exports.omitDefault = exports.base64FromBytes = exports.bytesFromBase64 = exports.Long = void 0;
    var _m0 = __importStar(require_minimal());
    var long_1 = __importDefault(require_long());
    exports.Long = long_1.default;
    if (_m0.util.Long !== long_1.default) {
      _m0.util.Long = long_1.default;
      _m0.configure();
    }
    var globalThis2 = (() => {
      if (typeof globalThis2 !== "undefined")
        return globalThis2;
      if (typeof self !== "undefined")
        return self;
      if (typeof window !== "undefined")
        return window;
      if (typeof global !== "undefined")
        return global;
      throw "Unable to locate global object";
    })();
    var atob2 = globalThis2.atob || ((b64) => globalThis2.Buffer.from(b64, "base64").toString("binary"));
    function bytesFromBase64(b64) {
      const bin = atob2(b64);
      const arr = new Uint8Array(bin.length);
      for (let i3 = 0; i3 < bin.length; ++i3) {
        arr[i3] = bin.charCodeAt(i3);
      }
      return arr;
    }
    exports.bytesFromBase64 = bytesFromBase64;
    var btoa2 = globalThis2.btoa || ((bin) => globalThis2.Buffer.from(bin, "binary").toString("base64"));
    function base64FromBytes(arr) {
      const bin = [];
      arr.forEach((byte) => {
        bin.push(String.fromCharCode(byte));
      });
      return btoa2(bin.join(""));
    }
    exports.base64FromBytes = base64FromBytes;
    function omitDefault(input) {
      if (typeof input === "string") {
        return input === "" ? void 0 : input;
      }
      if (typeof input === "number") {
        return input === 0 ? void 0 : input;
      }
      if (long_1.default.isLong(input)) {
        return input.isZero() ? void 0 : input;
      }
      throw new Error(`Got unsupported type ${typeof input}`);
    }
    exports.omitDefault = omitDefault;
    function toDuration(duration) {
      return {
        seconds: long_1.default.fromNumber(Math.floor(parseInt(duration) / 1e9)),
        nanos: parseInt(duration) % 1e9
      };
    }
    exports.toDuration = toDuration;
    function fromDuration(duration) {
      return (parseInt(duration.seconds.toString()) * 1e9 + duration.nanos).toString();
    }
    exports.fromDuration = fromDuration;
    function isSet(value) {
      return value !== null && value !== void 0;
    }
    exports.isSet = isSet;
    function isObject(value) {
      return typeof value === "object" && value !== null;
    }
    exports.isObject = isObject;
    var setPaginationParams = (options, pagination) => {
      if (!pagination) {
        return options;
      }
      if (typeof (pagination == null ? void 0 : pagination.countTotal) !== "undefined") {
        options.params["pagination.count_total"] = pagination.countTotal;
      }
      if (typeof (pagination == null ? void 0 : pagination.key) !== "undefined") {
        options.params["pagination.key"] = Buffer.from(pagination.key).toString("base64");
      }
      if (typeof (pagination == null ? void 0 : pagination.limit) !== "undefined") {
        options.params["pagination.limit"] = pagination.limit.toString();
      }
      if (typeof (pagination == null ? void 0 : pagination.offset) !== "undefined") {
        options.params["pagination.offset"] = pagination.offset.toString();
      }
      if (typeof (pagination == null ? void 0 : pagination.reverse) !== "undefined") {
        options.params["pagination.reverse"] = pagination.reverse;
      }
      return options;
    };
    exports.setPaginationParams = setPaginationParams;
    function toTimestamp(date) {
      const seconds = numberToLong(date.getTime() / 1e3);
      const nanos = date.getTime() % 1e3 * 1e6;
      return {
        seconds,
        nanos
      };
    }
    exports.toTimestamp = toTimestamp;
    function fromTimestamp(t2) {
      let millis = t2.seconds.toNumber() * 1e3;
      millis += t2.nanos / 1e6;
      return new Date(millis);
    }
    exports.fromTimestamp = fromTimestamp;
    var timestampFromJSON = (object) => {
      return {
        seconds: isSet(object.seconds) ? long_1.default.fromValue(object.seconds) : long_1.default.ZERO,
        nanos: isSet(object.nanos) ? Number(object.nanos) : 0
      };
    };
    function fromJsonTimestamp(o2) {
      if (o2 instanceof Date) {
        return toTimestamp(o2);
      } else if (typeof o2 === "string") {
        return toTimestamp(new Date(o2));
      } else {
        return timestampFromJSON(o2);
      }
    }
    exports.fromJsonTimestamp = fromJsonTimestamp;
    function numberToLong(number) {
      return long_1.default.fromNumber(number);
    }
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/google/protobuf/any.js
var require_any = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/google/protobuf/any.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Any = exports.protobufPackage = void 0;
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "google.protobuf";
    function createBaseAny() {
      return {
        typeUrl: "",
        value: new Uint8Array()
      };
    }
    exports.Any = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.typeUrl !== "") {
          writer.uint32(10).string(message.typeUrl);
        }
        if (message.value.length !== 0) {
          writer.uint32(18).bytes(message.value);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseAny();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.typeUrl = reader.string();
              break;
            case 2:
              message.value = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          typeUrl: (0, helpers_1.isSet)(object.typeUrl) ? String(object.typeUrl) : "",
          value: (0, helpers_1.isSet)(object.value) ? (0, helpers_1.bytesFromBase64)(object.value) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.typeUrl !== void 0 && (obj.typeUrl = message.typeUrl);
        message.value !== void 0 && (obj.value = (0, helpers_1.base64FromBytes)(message.value !== void 0 ? message.value : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseAny();
        message.typeUrl = object.typeUrl ?? "";
        message.value = object.value ?? new Uint8Array();
        return message;
      }
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/crypto/multisig/v1beta1/multisig.js
var require_multisig = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/crypto/multisig/v1beta1/multisig.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.CompactBitArray = exports.MultiSignature = exports.protobufPackage = void 0;
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.crypto.multisig.v1beta1";
    function createBaseMultiSignature() {
      return {
        signatures: []
      };
    }
    exports.MultiSignature = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.signatures) {
          writer.uint32(10).bytes(v3);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMultiSignature();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.signatures.push(reader.bytes());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          signatures: Array.isArray(object == null ? void 0 : object.signatures) ? object.signatures.map((e2) => (0, helpers_1.bytesFromBase64)(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.signatures) {
          obj.signatures = message.signatures.map((e2) => (0, helpers_1.base64FromBytes)(e2 !== void 0 ? e2 : new Uint8Array()));
        } else {
          obj.signatures = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseMultiSignature();
        message.signatures = ((_a = object.signatures) == null ? void 0 : _a.map((e2) => e2)) || [];
        return message;
      }
    };
    function createBaseCompactBitArray() {
      return {
        extraBitsStored: 0,
        elems: new Uint8Array()
      };
    }
    exports.CompactBitArray = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.extraBitsStored !== 0) {
          writer.uint32(8).uint32(message.extraBitsStored);
        }
        if (message.elems.length !== 0) {
          writer.uint32(18).bytes(message.elems);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseCompactBitArray();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.extraBitsStored = reader.uint32();
              break;
            case 2:
              message.elems = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          extraBitsStored: (0, helpers_1.isSet)(object.extraBitsStored) ? Number(object.extraBitsStored) : 0,
          elems: (0, helpers_1.isSet)(object.elems) ? (0, helpers_1.bytesFromBase64)(object.elems) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.extraBitsStored !== void 0 && (obj.extraBitsStored = Math.round(message.extraBitsStored));
        message.elems !== void 0 && (obj.elems = (0, helpers_1.base64FromBytes)(message.elems !== void 0 ? message.elems : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseCompactBitArray();
        message.extraBitsStored = object.extraBitsStored ?? 0;
        message.elems = object.elems ?? new Uint8Array();
        return message;
      }
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/tx/signing/v1beta1/signing.js
var require_signing = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/tx/signing/v1beta1/signing.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SignatureDescriptor_Data_Multi = exports.SignatureDescriptor_Data_Single = exports.SignatureDescriptor_Data = exports.SignatureDescriptor = exports.SignatureDescriptors = exports.signModeToJSON = exports.signModeFromJSON = exports.SignMode = exports.protobufPackage = void 0;
    var multisig_1 = require_multisig();
    var any_1 = require_any();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.tx.signing.v1beta1";
    var SignMode;
    (function(SignMode2) {
      SignMode2[SignMode2["SIGN_MODE_UNSPECIFIED"] = 0] = "SIGN_MODE_UNSPECIFIED";
      SignMode2[SignMode2["SIGN_MODE_DIRECT"] = 1] = "SIGN_MODE_DIRECT";
      SignMode2[SignMode2["SIGN_MODE_TEXTUAL"] = 2] = "SIGN_MODE_TEXTUAL";
      SignMode2[SignMode2["SIGN_MODE_LEGACY_AMINO_JSON"] = 127] = "SIGN_MODE_LEGACY_AMINO_JSON";
      SignMode2[SignMode2["SIGN_MODE_EIP_191"] = 191] = "SIGN_MODE_EIP_191";
      SignMode2[SignMode2["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
    })(SignMode = exports.SignMode || (exports.SignMode = {}));
    function signModeFromJSON(object) {
      switch (object) {
        case 0:
        case "SIGN_MODE_UNSPECIFIED":
          return SignMode.SIGN_MODE_UNSPECIFIED;
        case 1:
        case "SIGN_MODE_DIRECT":
          return SignMode.SIGN_MODE_DIRECT;
        case 2:
        case "SIGN_MODE_TEXTUAL":
          return SignMode.SIGN_MODE_TEXTUAL;
        case 127:
        case "SIGN_MODE_LEGACY_AMINO_JSON":
          return SignMode.SIGN_MODE_LEGACY_AMINO_JSON;
        case 191:
        case "SIGN_MODE_EIP_191":
          return SignMode.SIGN_MODE_EIP_191;
        case -1:
        case "UNRECOGNIZED":
        default:
          return SignMode.UNRECOGNIZED;
      }
    }
    exports.signModeFromJSON = signModeFromJSON;
    function signModeToJSON(object) {
      switch (object) {
        case SignMode.SIGN_MODE_UNSPECIFIED:
          return "SIGN_MODE_UNSPECIFIED";
        case SignMode.SIGN_MODE_DIRECT:
          return "SIGN_MODE_DIRECT";
        case SignMode.SIGN_MODE_TEXTUAL:
          return "SIGN_MODE_TEXTUAL";
        case SignMode.SIGN_MODE_LEGACY_AMINO_JSON:
          return "SIGN_MODE_LEGACY_AMINO_JSON";
        case SignMode.SIGN_MODE_EIP_191:
          return "SIGN_MODE_EIP_191";
        case SignMode.UNRECOGNIZED:
        default:
          return "UNRECOGNIZED";
      }
    }
    exports.signModeToJSON = signModeToJSON;
    function createBaseSignatureDescriptors() {
      return {
        signatures: []
      };
    }
    exports.SignatureDescriptors = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.signatures) {
          exports.SignatureDescriptor.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseSignatureDescriptors();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.signatures.push(exports.SignatureDescriptor.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          signatures: Array.isArray(object == null ? void 0 : object.signatures) ? object.signatures.map((e2) => exports.SignatureDescriptor.fromJSON(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.signatures) {
          obj.signatures = message.signatures.map((e2) => e2 ? exports.SignatureDescriptor.toJSON(e2) : void 0);
        } else {
          obj.signatures = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseSignatureDescriptors();
        message.signatures = ((_a = object.signatures) == null ? void 0 : _a.map((e2) => exports.SignatureDescriptor.fromPartial(e2))) || [];
        return message;
      }
    };
    function createBaseSignatureDescriptor() {
      return {
        publicKey: void 0,
        data: void 0,
        sequence: helpers_1.Long.UZERO
      };
    }
    exports.SignatureDescriptor = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.publicKey !== void 0) {
          any_1.Any.encode(message.publicKey, writer.uint32(10).fork()).ldelim();
        }
        if (message.data !== void 0) {
          exports.SignatureDescriptor_Data.encode(message.data, writer.uint32(18).fork()).ldelim();
        }
        if (!message.sequence.isZero()) {
          writer.uint32(24).uint64(message.sequence);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseSignatureDescriptor();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.publicKey = any_1.Any.decode(reader, reader.uint32());
              break;
            case 2:
              message.data = exports.SignatureDescriptor_Data.decode(reader, reader.uint32());
              break;
            case 3:
              message.sequence = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          publicKey: (0, helpers_1.isSet)(object.publicKey) ? any_1.Any.fromJSON(object.publicKey) : void 0,
          data: (0, helpers_1.isSet)(object.data) ? exports.SignatureDescriptor_Data.fromJSON(object.data) : void 0,
          sequence: (0, helpers_1.isSet)(object.sequence) ? helpers_1.Long.fromValue(object.sequence) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.publicKey !== void 0 && (obj.publicKey = message.publicKey ? any_1.Any.toJSON(message.publicKey) : void 0);
        message.data !== void 0 && (obj.data = message.data ? exports.SignatureDescriptor_Data.toJSON(message.data) : void 0);
        message.sequence !== void 0 && (obj.sequence = (message.sequence || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseSignatureDescriptor();
        message.publicKey = object.publicKey !== void 0 && object.publicKey !== null ? any_1.Any.fromPartial(object.publicKey) : void 0;
        message.data = object.data !== void 0 && object.data !== null ? exports.SignatureDescriptor_Data.fromPartial(object.data) : void 0;
        message.sequence = object.sequence !== void 0 && object.sequence !== null ? helpers_1.Long.fromValue(object.sequence) : helpers_1.Long.UZERO;
        return message;
      }
    };
    function createBaseSignatureDescriptor_Data() {
      return {
        single: void 0,
        multi: void 0
      };
    }
    exports.SignatureDescriptor_Data = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.single !== void 0) {
          exports.SignatureDescriptor_Data_Single.encode(message.single, writer.uint32(10).fork()).ldelim();
        }
        if (message.multi !== void 0) {
          exports.SignatureDescriptor_Data_Multi.encode(message.multi, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseSignatureDescriptor_Data();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.single = exports.SignatureDescriptor_Data_Single.decode(reader, reader.uint32());
              break;
            case 2:
              message.multi = exports.SignatureDescriptor_Data_Multi.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          single: (0, helpers_1.isSet)(object.single) ? exports.SignatureDescriptor_Data_Single.fromJSON(object.single) : void 0,
          multi: (0, helpers_1.isSet)(object.multi) ? exports.SignatureDescriptor_Data_Multi.fromJSON(object.multi) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.single !== void 0 && (obj.single = message.single ? exports.SignatureDescriptor_Data_Single.toJSON(message.single) : void 0);
        message.multi !== void 0 && (obj.multi = message.multi ? exports.SignatureDescriptor_Data_Multi.toJSON(message.multi) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseSignatureDescriptor_Data();
        message.single = object.single !== void 0 && object.single !== null ? exports.SignatureDescriptor_Data_Single.fromPartial(object.single) : void 0;
        message.multi = object.multi !== void 0 && object.multi !== null ? exports.SignatureDescriptor_Data_Multi.fromPartial(object.multi) : void 0;
        return message;
      }
    };
    function createBaseSignatureDescriptor_Data_Single() {
      return {
        mode: 0,
        signature: new Uint8Array()
      };
    }
    exports.SignatureDescriptor_Data_Single = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.mode !== 0) {
          writer.uint32(8).int32(message.mode);
        }
        if (message.signature.length !== 0) {
          writer.uint32(18).bytes(message.signature);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseSignatureDescriptor_Data_Single();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.mode = reader.int32();
              break;
            case 2:
              message.signature = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          mode: (0, helpers_1.isSet)(object.mode) ? signModeFromJSON(object.mode) : 0,
          signature: (0, helpers_1.isSet)(object.signature) ? (0, helpers_1.bytesFromBase64)(object.signature) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.mode !== void 0 && (obj.mode = signModeToJSON(message.mode));
        message.signature !== void 0 && (obj.signature = (0, helpers_1.base64FromBytes)(message.signature !== void 0 ? message.signature : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseSignatureDescriptor_Data_Single();
        message.mode = object.mode ?? 0;
        message.signature = object.signature ?? new Uint8Array();
        return message;
      }
    };
    function createBaseSignatureDescriptor_Data_Multi() {
      return {
        bitarray: void 0,
        signatures: []
      };
    }
    exports.SignatureDescriptor_Data_Multi = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.bitarray !== void 0) {
          multisig_1.CompactBitArray.encode(message.bitarray, writer.uint32(10).fork()).ldelim();
        }
        for (const v3 of message.signatures) {
          exports.SignatureDescriptor_Data.encode(v3, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseSignatureDescriptor_Data_Multi();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.bitarray = multisig_1.CompactBitArray.decode(reader, reader.uint32());
              break;
            case 2:
              message.signatures.push(exports.SignatureDescriptor_Data.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          bitarray: (0, helpers_1.isSet)(object.bitarray) ? multisig_1.CompactBitArray.fromJSON(object.bitarray) : void 0,
          signatures: Array.isArray(object == null ? void 0 : object.signatures) ? object.signatures.map((e2) => exports.SignatureDescriptor_Data.fromJSON(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.bitarray !== void 0 && (obj.bitarray = message.bitarray ? multisig_1.CompactBitArray.toJSON(message.bitarray) : void 0);
        if (message.signatures) {
          obj.signatures = message.signatures.map((e2) => e2 ? exports.SignatureDescriptor_Data.toJSON(e2) : void 0);
        } else {
          obj.signatures = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseSignatureDescriptor_Data_Multi();
        message.bitarray = object.bitarray !== void 0 && object.bitarray !== null ? multisig_1.CompactBitArray.fromPartial(object.bitarray) : void 0;
        message.signatures = ((_a = object.signatures) == null ? void 0 : _a.map((e2) => exports.SignatureDescriptor_Data.fromPartial(e2))) || [];
        return message;
      }
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/base/v1beta1/coin.js
var require_coin = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/base/v1beta1/coin.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.DecProto = exports.IntProto = exports.DecCoin = exports.Coin = exports.protobufPackage = void 0;
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.base.v1beta1";
    function createBaseCoin() {
      return {
        denom: "",
        amount: ""
      };
    }
    exports.Coin = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.denom !== "") {
          writer.uint32(10).string(message.denom);
        }
        if (message.amount !== "") {
          writer.uint32(18).string(message.amount);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseCoin();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.denom = reader.string();
              break;
            case 2:
              message.amount = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          denom: (0, helpers_1.isSet)(object.denom) ? String(object.denom) : "",
          amount: (0, helpers_1.isSet)(object.amount) ? String(object.amount) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.denom !== void 0 && (obj.denom = message.denom);
        message.amount !== void 0 && (obj.amount = message.amount);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseCoin();
        message.denom = object.denom ?? "";
        message.amount = object.amount ?? "";
        return message;
      }
    };
    function createBaseDecCoin() {
      return {
        denom: "",
        amount: ""
      };
    }
    exports.DecCoin = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.denom !== "") {
          writer.uint32(10).string(message.denom);
        }
        if (message.amount !== "") {
          writer.uint32(18).string(message.amount);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseDecCoin();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.denom = reader.string();
              break;
            case 2:
              message.amount = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          denom: (0, helpers_1.isSet)(object.denom) ? String(object.denom) : "",
          amount: (0, helpers_1.isSet)(object.amount) ? String(object.amount) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.denom !== void 0 && (obj.denom = message.denom);
        message.amount !== void 0 && (obj.amount = message.amount);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseDecCoin();
        message.denom = object.denom ?? "";
        message.amount = object.amount ?? "";
        return message;
      }
    };
    function createBaseIntProto() {
      return {
        int: ""
      };
    }
    exports.IntProto = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.int !== "") {
          writer.uint32(10).string(message.int);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseIntProto();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.int = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          int: (0, helpers_1.isSet)(object.int) ? String(object.int) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.int !== void 0 && (obj.int = message.int);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseIntProto();
        message.int = object.int ?? "";
        return message;
      }
    };
    function createBaseDecProto() {
      return {
        dec: ""
      };
    }
    exports.DecProto = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.dec !== "") {
          writer.uint32(10).string(message.dec);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseDecProto();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.dec = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          dec: (0, helpers_1.isSet)(object.dec) ? String(object.dec) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.dec !== void 0 && (obj.dec = message.dec);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseDecProto();
        message.dec = object.dec ?? "";
        return message;
      }
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/tx/v1beta1/tx.js
var require_tx = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/tx/v1beta1/tx.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Fee = exports.ModeInfo_Multi = exports.ModeInfo_Single = exports.ModeInfo = exports.SignerInfo = exports.AuthInfo = exports.TxBody = exports.SignDoc = exports.TxRaw = exports.Tx = exports.protobufPackage = void 0;
    var any_1 = require_any();
    var signing_1 = require_signing();
    var multisig_1 = require_multisig();
    var coin_1 = require_coin();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.tx.v1beta1";
    function createBaseTx() {
      return {
        body: void 0,
        authInfo: void 0,
        signatures: []
      };
    }
    exports.Tx = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.body !== void 0) {
          exports.TxBody.encode(message.body, writer.uint32(10).fork()).ldelim();
        }
        if (message.authInfo !== void 0) {
          exports.AuthInfo.encode(message.authInfo, writer.uint32(18).fork()).ldelim();
        }
        for (const v3 of message.signatures) {
          writer.uint32(26).bytes(v3);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseTx();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.body = exports.TxBody.decode(reader, reader.uint32());
              break;
            case 2:
              message.authInfo = exports.AuthInfo.decode(reader, reader.uint32());
              break;
            case 3:
              message.signatures.push(reader.bytes());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          body: (0, helpers_1.isSet)(object.body) ? exports.TxBody.fromJSON(object.body) : void 0,
          authInfo: (0, helpers_1.isSet)(object.authInfo) ? exports.AuthInfo.fromJSON(object.authInfo) : void 0,
          signatures: Array.isArray(object == null ? void 0 : object.signatures) ? object.signatures.map((e2) => (0, helpers_1.bytesFromBase64)(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.body !== void 0 && (obj.body = message.body ? exports.TxBody.toJSON(message.body) : void 0);
        message.authInfo !== void 0 && (obj.authInfo = message.authInfo ? exports.AuthInfo.toJSON(message.authInfo) : void 0);
        if (message.signatures) {
          obj.signatures = message.signatures.map((e2) => (0, helpers_1.base64FromBytes)(e2 !== void 0 ? e2 : new Uint8Array()));
        } else {
          obj.signatures = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseTx();
        message.body = object.body !== void 0 && object.body !== null ? exports.TxBody.fromPartial(object.body) : void 0;
        message.authInfo = object.authInfo !== void 0 && object.authInfo !== null ? exports.AuthInfo.fromPartial(object.authInfo) : void 0;
        message.signatures = ((_a = object.signatures) == null ? void 0 : _a.map((e2) => e2)) || [];
        return message;
      }
    };
    function createBaseTxRaw() {
      return {
        bodyBytes: new Uint8Array(),
        authInfoBytes: new Uint8Array(),
        signatures: []
      };
    }
    exports.TxRaw = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.bodyBytes.length !== 0) {
          writer.uint32(10).bytes(message.bodyBytes);
        }
        if (message.authInfoBytes.length !== 0) {
          writer.uint32(18).bytes(message.authInfoBytes);
        }
        for (const v3 of message.signatures) {
          writer.uint32(26).bytes(v3);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseTxRaw();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.bodyBytes = reader.bytes();
              break;
            case 2:
              message.authInfoBytes = reader.bytes();
              break;
            case 3:
              message.signatures.push(reader.bytes());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          bodyBytes: (0, helpers_1.isSet)(object.bodyBytes) ? (0, helpers_1.bytesFromBase64)(object.bodyBytes) : new Uint8Array(),
          authInfoBytes: (0, helpers_1.isSet)(object.authInfoBytes) ? (0, helpers_1.bytesFromBase64)(object.authInfoBytes) : new Uint8Array(),
          signatures: Array.isArray(object == null ? void 0 : object.signatures) ? object.signatures.map((e2) => (0, helpers_1.bytesFromBase64)(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.bodyBytes !== void 0 && (obj.bodyBytes = (0, helpers_1.base64FromBytes)(message.bodyBytes !== void 0 ? message.bodyBytes : new Uint8Array()));
        message.authInfoBytes !== void 0 && (obj.authInfoBytes = (0, helpers_1.base64FromBytes)(message.authInfoBytes !== void 0 ? message.authInfoBytes : new Uint8Array()));
        if (message.signatures) {
          obj.signatures = message.signatures.map((e2) => (0, helpers_1.base64FromBytes)(e2 !== void 0 ? e2 : new Uint8Array()));
        } else {
          obj.signatures = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseTxRaw();
        message.bodyBytes = object.bodyBytes ?? new Uint8Array();
        message.authInfoBytes = object.authInfoBytes ?? new Uint8Array();
        message.signatures = ((_a = object.signatures) == null ? void 0 : _a.map((e2) => e2)) || [];
        return message;
      }
    };
    function createBaseSignDoc() {
      return {
        bodyBytes: new Uint8Array(),
        authInfoBytes: new Uint8Array(),
        chainId: "",
        accountNumber: helpers_1.Long.UZERO
      };
    }
    exports.SignDoc = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.bodyBytes.length !== 0) {
          writer.uint32(10).bytes(message.bodyBytes);
        }
        if (message.authInfoBytes.length !== 0) {
          writer.uint32(18).bytes(message.authInfoBytes);
        }
        if (message.chainId !== "") {
          writer.uint32(26).string(message.chainId);
        }
        if (!message.accountNumber.isZero()) {
          writer.uint32(32).uint64(message.accountNumber);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseSignDoc();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.bodyBytes = reader.bytes();
              break;
            case 2:
              message.authInfoBytes = reader.bytes();
              break;
            case 3:
              message.chainId = reader.string();
              break;
            case 4:
              message.accountNumber = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          bodyBytes: (0, helpers_1.isSet)(object.bodyBytes) ? (0, helpers_1.bytesFromBase64)(object.bodyBytes) : new Uint8Array(),
          authInfoBytes: (0, helpers_1.isSet)(object.authInfoBytes) ? (0, helpers_1.bytesFromBase64)(object.authInfoBytes) : new Uint8Array(),
          chainId: (0, helpers_1.isSet)(object.chainId) ? String(object.chainId) : "",
          accountNumber: (0, helpers_1.isSet)(object.accountNumber) ? helpers_1.Long.fromValue(object.accountNumber) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.bodyBytes !== void 0 && (obj.bodyBytes = (0, helpers_1.base64FromBytes)(message.bodyBytes !== void 0 ? message.bodyBytes : new Uint8Array()));
        message.authInfoBytes !== void 0 && (obj.authInfoBytes = (0, helpers_1.base64FromBytes)(message.authInfoBytes !== void 0 ? message.authInfoBytes : new Uint8Array()));
        message.chainId !== void 0 && (obj.chainId = message.chainId);
        message.accountNumber !== void 0 && (obj.accountNumber = (message.accountNumber || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseSignDoc();
        message.bodyBytes = object.bodyBytes ?? new Uint8Array();
        message.authInfoBytes = object.authInfoBytes ?? new Uint8Array();
        message.chainId = object.chainId ?? "";
        message.accountNumber = object.accountNumber !== void 0 && object.accountNumber !== null ? helpers_1.Long.fromValue(object.accountNumber) : helpers_1.Long.UZERO;
        return message;
      }
    };
    function createBaseTxBody() {
      return {
        messages: [],
        memo: "",
        timeoutHeight: helpers_1.Long.UZERO,
        extensionOptions: [],
        nonCriticalExtensionOptions: []
      };
    }
    exports.TxBody = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.messages) {
          any_1.Any.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        if (message.memo !== "") {
          writer.uint32(18).string(message.memo);
        }
        if (!message.timeoutHeight.isZero()) {
          writer.uint32(24).uint64(message.timeoutHeight);
        }
        for (const v3 of message.extensionOptions) {
          any_1.Any.encode(v3, writer.uint32(8186).fork()).ldelim();
        }
        for (const v3 of message.nonCriticalExtensionOptions) {
          any_1.Any.encode(v3, writer.uint32(16378).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseTxBody();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.messages.push(any_1.Any.decode(reader, reader.uint32()));
              break;
            case 2:
              message.memo = reader.string();
              break;
            case 3:
              message.timeoutHeight = reader.uint64();
              break;
            case 1023:
              message.extensionOptions.push(any_1.Any.decode(reader, reader.uint32()));
              break;
            case 2047:
              message.nonCriticalExtensionOptions.push(any_1.Any.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          messages: Array.isArray(object == null ? void 0 : object.messages) ? object.messages.map((e2) => any_1.Any.fromJSON(e2)) : [],
          memo: (0, helpers_1.isSet)(object.memo) ? String(object.memo) : "",
          timeoutHeight: (0, helpers_1.isSet)(object.timeoutHeight) ? helpers_1.Long.fromValue(object.timeoutHeight) : helpers_1.Long.UZERO,
          extensionOptions: Array.isArray(object == null ? void 0 : object.extensionOptions) ? object.extensionOptions.map((e2) => any_1.Any.fromJSON(e2)) : [],
          nonCriticalExtensionOptions: Array.isArray(object == null ? void 0 : object.nonCriticalExtensionOptions) ? object.nonCriticalExtensionOptions.map((e2) => any_1.Any.fromJSON(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.messages) {
          obj.messages = message.messages.map((e2) => e2 ? any_1.Any.toJSON(e2) : void 0);
        } else {
          obj.messages = [];
        }
        message.memo !== void 0 && (obj.memo = message.memo);
        message.timeoutHeight !== void 0 && (obj.timeoutHeight = (message.timeoutHeight || helpers_1.Long.UZERO).toString());
        if (message.extensionOptions) {
          obj.extensionOptions = message.extensionOptions.map((e2) => e2 ? any_1.Any.toJSON(e2) : void 0);
        } else {
          obj.extensionOptions = [];
        }
        if (message.nonCriticalExtensionOptions) {
          obj.nonCriticalExtensionOptions = message.nonCriticalExtensionOptions.map((e2) => e2 ? any_1.Any.toJSON(e2) : void 0);
        } else {
          obj.nonCriticalExtensionOptions = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a, _b, _c;
        const message = createBaseTxBody();
        message.messages = ((_a = object.messages) == null ? void 0 : _a.map((e2) => any_1.Any.fromPartial(e2))) || [];
        message.memo = object.memo ?? "";
        message.timeoutHeight = object.timeoutHeight !== void 0 && object.timeoutHeight !== null ? helpers_1.Long.fromValue(object.timeoutHeight) : helpers_1.Long.UZERO;
        message.extensionOptions = ((_b = object.extensionOptions) == null ? void 0 : _b.map((e2) => any_1.Any.fromPartial(e2))) || [];
        message.nonCriticalExtensionOptions = ((_c = object.nonCriticalExtensionOptions) == null ? void 0 : _c.map((e2) => any_1.Any.fromPartial(e2))) || [];
        return message;
      }
    };
    function createBaseAuthInfo() {
      return {
        signerInfos: [],
        fee: void 0
      };
    }
    exports.AuthInfo = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.signerInfos) {
          exports.SignerInfo.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        if (message.fee !== void 0) {
          exports.Fee.encode(message.fee, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseAuthInfo();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.signerInfos.push(exports.SignerInfo.decode(reader, reader.uint32()));
              break;
            case 2:
              message.fee = exports.Fee.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          signerInfos: Array.isArray(object == null ? void 0 : object.signerInfos) ? object.signerInfos.map((e2) => exports.SignerInfo.fromJSON(e2)) : [],
          fee: (0, helpers_1.isSet)(object.fee) ? exports.Fee.fromJSON(object.fee) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.signerInfos) {
          obj.signerInfos = message.signerInfos.map((e2) => e2 ? exports.SignerInfo.toJSON(e2) : void 0);
        } else {
          obj.signerInfos = [];
        }
        message.fee !== void 0 && (obj.fee = message.fee ? exports.Fee.toJSON(message.fee) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseAuthInfo();
        message.signerInfos = ((_a = object.signerInfos) == null ? void 0 : _a.map((e2) => exports.SignerInfo.fromPartial(e2))) || [];
        message.fee = object.fee !== void 0 && object.fee !== null ? exports.Fee.fromPartial(object.fee) : void 0;
        return message;
      }
    };
    function createBaseSignerInfo() {
      return {
        publicKey: void 0,
        modeInfo: void 0,
        sequence: helpers_1.Long.UZERO
      };
    }
    exports.SignerInfo = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.publicKey !== void 0) {
          any_1.Any.encode(message.publicKey, writer.uint32(10).fork()).ldelim();
        }
        if (message.modeInfo !== void 0) {
          exports.ModeInfo.encode(message.modeInfo, writer.uint32(18).fork()).ldelim();
        }
        if (!message.sequence.isZero()) {
          writer.uint32(24).uint64(message.sequence);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseSignerInfo();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.publicKey = any_1.Any.decode(reader, reader.uint32());
              break;
            case 2:
              message.modeInfo = exports.ModeInfo.decode(reader, reader.uint32());
              break;
            case 3:
              message.sequence = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          publicKey: (0, helpers_1.isSet)(object.publicKey) ? any_1.Any.fromJSON(object.publicKey) : void 0,
          modeInfo: (0, helpers_1.isSet)(object.modeInfo) ? exports.ModeInfo.fromJSON(object.modeInfo) : void 0,
          sequence: (0, helpers_1.isSet)(object.sequence) ? helpers_1.Long.fromValue(object.sequence) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.publicKey !== void 0 && (obj.publicKey = message.publicKey ? any_1.Any.toJSON(message.publicKey) : void 0);
        message.modeInfo !== void 0 && (obj.modeInfo = message.modeInfo ? exports.ModeInfo.toJSON(message.modeInfo) : void 0);
        message.sequence !== void 0 && (obj.sequence = (message.sequence || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseSignerInfo();
        message.publicKey = object.publicKey !== void 0 && object.publicKey !== null ? any_1.Any.fromPartial(object.publicKey) : void 0;
        message.modeInfo = object.modeInfo !== void 0 && object.modeInfo !== null ? exports.ModeInfo.fromPartial(object.modeInfo) : void 0;
        message.sequence = object.sequence !== void 0 && object.sequence !== null ? helpers_1.Long.fromValue(object.sequence) : helpers_1.Long.UZERO;
        return message;
      }
    };
    function createBaseModeInfo() {
      return {
        single: void 0,
        multi: void 0
      };
    }
    exports.ModeInfo = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.single !== void 0) {
          exports.ModeInfo_Single.encode(message.single, writer.uint32(10).fork()).ldelim();
        }
        if (message.multi !== void 0) {
          exports.ModeInfo_Multi.encode(message.multi, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseModeInfo();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.single = exports.ModeInfo_Single.decode(reader, reader.uint32());
              break;
            case 2:
              message.multi = exports.ModeInfo_Multi.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          single: (0, helpers_1.isSet)(object.single) ? exports.ModeInfo_Single.fromJSON(object.single) : void 0,
          multi: (0, helpers_1.isSet)(object.multi) ? exports.ModeInfo_Multi.fromJSON(object.multi) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.single !== void 0 && (obj.single = message.single ? exports.ModeInfo_Single.toJSON(message.single) : void 0);
        message.multi !== void 0 && (obj.multi = message.multi ? exports.ModeInfo_Multi.toJSON(message.multi) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseModeInfo();
        message.single = object.single !== void 0 && object.single !== null ? exports.ModeInfo_Single.fromPartial(object.single) : void 0;
        message.multi = object.multi !== void 0 && object.multi !== null ? exports.ModeInfo_Multi.fromPartial(object.multi) : void 0;
        return message;
      }
    };
    function createBaseModeInfo_Single() {
      return {
        mode: 0
      };
    }
    exports.ModeInfo_Single = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.mode !== 0) {
          writer.uint32(8).int32(message.mode);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseModeInfo_Single();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.mode = reader.int32();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          mode: (0, helpers_1.isSet)(object.mode) ? (0, signing_1.signModeFromJSON)(object.mode) : 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.mode !== void 0 && (obj.mode = (0, signing_1.signModeToJSON)(message.mode));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseModeInfo_Single();
        message.mode = object.mode ?? 0;
        return message;
      }
    };
    function createBaseModeInfo_Multi() {
      return {
        bitarray: void 0,
        modeInfos: []
      };
    }
    exports.ModeInfo_Multi = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.bitarray !== void 0) {
          multisig_1.CompactBitArray.encode(message.bitarray, writer.uint32(10).fork()).ldelim();
        }
        for (const v3 of message.modeInfos) {
          exports.ModeInfo.encode(v3, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseModeInfo_Multi();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.bitarray = multisig_1.CompactBitArray.decode(reader, reader.uint32());
              break;
            case 2:
              message.modeInfos.push(exports.ModeInfo.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          bitarray: (0, helpers_1.isSet)(object.bitarray) ? multisig_1.CompactBitArray.fromJSON(object.bitarray) : void 0,
          modeInfos: Array.isArray(object == null ? void 0 : object.modeInfos) ? object.modeInfos.map((e2) => exports.ModeInfo.fromJSON(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.bitarray !== void 0 && (obj.bitarray = message.bitarray ? multisig_1.CompactBitArray.toJSON(message.bitarray) : void 0);
        if (message.modeInfos) {
          obj.modeInfos = message.modeInfos.map((e2) => e2 ? exports.ModeInfo.toJSON(e2) : void 0);
        } else {
          obj.modeInfos = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseModeInfo_Multi();
        message.bitarray = object.bitarray !== void 0 && object.bitarray !== null ? multisig_1.CompactBitArray.fromPartial(object.bitarray) : void 0;
        message.modeInfos = ((_a = object.modeInfos) == null ? void 0 : _a.map((e2) => exports.ModeInfo.fromPartial(e2))) || [];
        return message;
      }
    };
    function createBaseFee() {
      return {
        amount: [],
        gasLimit: helpers_1.Long.UZERO,
        payer: "",
        granter: ""
      };
    }
    exports.Fee = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.amount) {
          coin_1.Coin.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        if (!message.gasLimit.isZero()) {
          writer.uint32(16).uint64(message.gasLimit);
        }
        if (message.payer !== "") {
          writer.uint32(26).string(message.payer);
        }
        if (message.granter !== "") {
          writer.uint32(34).string(message.granter);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseFee();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));
              break;
            case 2:
              message.gasLimit = reader.uint64();
              break;
            case 3:
              message.payer = reader.string();
              break;
            case 4:
              message.granter = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          amount: Array.isArray(object == null ? void 0 : object.amount) ? object.amount.map((e2) => coin_1.Coin.fromJSON(e2)) : [],
          gasLimit: (0, helpers_1.isSet)(object.gasLimit) ? helpers_1.Long.fromValue(object.gasLimit) : helpers_1.Long.UZERO,
          payer: (0, helpers_1.isSet)(object.payer) ? String(object.payer) : "",
          granter: (0, helpers_1.isSet)(object.granter) ? String(object.granter) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.amount) {
          obj.amount = message.amount.map((e2) => e2 ? coin_1.Coin.toJSON(e2) : void 0);
        } else {
          obj.amount = [];
        }
        message.gasLimit !== void 0 && (obj.gasLimit = (message.gasLimit || helpers_1.Long.UZERO).toString());
        message.payer !== void 0 && (obj.payer = message.payer);
        message.granter !== void 0 && (obj.granter = message.granter);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseFee();
        message.amount = ((_a = object.amount) == null ? void 0 : _a.map((e2) => coin_1.Coin.fromPartial(e2))) || [];
        message.gasLimit = object.gasLimit !== void 0 && object.gasLimit !== null ? helpers_1.Long.fromValue(object.gasLimit) : helpers_1.Long.UZERO;
        message.payer = object.payer ?? "";
        message.granter = object.granter ?? "";
        return message;
      }
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/proto-signing/build/decode.js
var require_decode = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/proto-signing/build/decode.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.decodeTxRaw = void 0;
    var tx_1 = require_tx();
    function decodeTxRaw(tx) {
      const txRaw = tx_1.TxRaw.decode(tx);
      return {
        authInfo: tx_1.AuthInfo.decode(txRaw.authInfoBytes),
        body: tx_1.TxBody.decode(txRaw.bodyBytes),
        signatures: txRaw.signatures
      };
    }
    exports.decodeTxRaw = decodeTxRaw;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/utils/build/arrays.js
var require_arrays = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/utils/build/arrays.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.arrayContentStartsWith = exports.arrayContentEquals = void 0;
    function arrayContentEquals(a2, b3) {
      if (a2.length !== b3.length)
        return false;
      for (let i3 = 0; i3 < a2.length; ++i3) {
        if (a2[i3] !== b3[i3])
          return false;
      }
      return true;
    }
    exports.arrayContentEquals = arrayContentEquals;
    function arrayContentStartsWith(a2, b3) {
      if (a2.length < b3.length)
        return false;
      for (let i3 = 0; i3 < b3.length; ++i3) {
        if (a2[i3] !== b3[i3])
          return false;
      }
      return true;
    }
    exports.arrayContentStartsWith = arrayContentStartsWith;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/utils/build/assert.js
var require_assert = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/utils/build/assert.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.assertDefinedAndNotNull = exports.assertDefined = exports.assert = void 0;
    function assert(condition, msg) {
      if (!condition) {
        throw new Error(msg || "condition is not truthy");
      }
    }
    exports.assert = assert;
    function assertDefined(value, msg) {
      if (value === void 0) {
        throw new Error(msg ?? "value is undefined");
      }
    }
    exports.assertDefined = assertDefined;
    function assertDefinedAndNotNull(value, msg) {
      if (value === void 0 || value === null) {
        throw new Error(msg ?? "value is undefined or null");
      }
    }
    exports.assertDefinedAndNotNull = assertDefinedAndNotNull;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/utils/build/sleep.js
var require_sleep = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/utils/build/sleep.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.sleep = void 0;
    async function sleep(ms) {
      return new Promise((resolve) => setTimeout(resolve, ms));
    }
    exports.sleep = sleep;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/utils/build/typechecks.js
var require_typechecks = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/utils/build/typechecks.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isDefined = exports.isUint8Array = exports.isNonNullObject = void 0;
    function isNonNullObject(data) {
      return typeof data === "object" && data !== null;
    }
    exports.isNonNullObject = isNonNullObject;
    function isUint8Array(data) {
      if (!isNonNullObject(data))
        return false;
      if (Object.prototype.toString.call(data) !== "[object Uint8Array]")
        return false;
      if (typeof Buffer !== "undefined" && typeof Buffer.isBuffer !== "undefined") {
        if (Buffer.isBuffer(data))
          return false;
      }
      return true;
    }
    exports.isUint8Array = isUint8Array;
    function isDefined(value) {
      return value !== void 0;
    }
    exports.isDefined = isDefined;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/utils/build/index.js
var require_build4 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/utils/build/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isUint8Array = exports.isNonNullObject = exports.isDefined = exports.sleep = exports.assertDefinedAndNotNull = exports.assertDefined = exports.assert = exports.arrayContentStartsWith = exports.arrayContentEquals = void 0;
    var arrays_1 = require_arrays();
    Object.defineProperty(exports, "arrayContentEquals", { enumerable: true, get: function() {
      return arrays_1.arrayContentEquals;
    } });
    Object.defineProperty(exports, "arrayContentStartsWith", { enumerable: true, get: function() {
      return arrays_1.arrayContentStartsWith;
    } });
    var assert_1 = require_assert();
    Object.defineProperty(exports, "assert", { enumerable: true, get: function() {
      return assert_1.assert;
    } });
    Object.defineProperty(exports, "assertDefined", { enumerable: true, get: function() {
      return assert_1.assertDefined;
    } });
    Object.defineProperty(exports, "assertDefinedAndNotNull", { enumerable: true, get: function() {
      return assert_1.assertDefinedAndNotNull;
    } });
    var sleep_1 = require_sleep();
    Object.defineProperty(exports, "sleep", { enumerable: true, get: function() {
      return sleep_1.sleep;
    } });
    var typechecks_1 = require_typechecks();
    Object.defineProperty(exports, "isDefined", { enumerable: true, get: function() {
      return typechecks_1.isDefined;
    } });
    Object.defineProperty(exports, "isNonNullObject", { enumerable: true, get: function() {
      return typechecks_1.isNonNullObject;
    } });
    Object.defineProperty(exports, "isUint8Array", { enumerable: true, get: function() {
      return typechecks_1.isUint8Array;
    } });
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/crypto/build/pbkdf2.js
var require_pbkdf22 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/crypto/build/pbkdf2.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.pbkdf2Sha512 = exports.pbkdf2Sha512Noble = exports.pbkdf2Sha512NodeCrypto = exports.pbkdf2Sha512Subtle = exports.getSubtle = exports.getNodeCrypto = void 0;
    var utils_1 = require_build4();
    var pbkdf2_1 = require_pbkdf2();
    var sha512_1 = require_sha512();
    async function getNodeCrypto() {
      try {
        const nodeCrypto = await Promise.resolve().then(() => __importStar(require_crypto()));
        if (typeof nodeCrypto === "object" && Object.keys(nodeCrypto).length <= 1) {
          return void 0;
        }
        return nodeCrypto;
      } catch {
        return void 0;
      }
    }
    exports.getNodeCrypto = getNodeCrypto;
    async function getSubtle() {
      var _a, _b, _c;
      let subtle = (_a = globalThis == null ? void 0 : globalThis.crypto) == null ? void 0 : _a.subtle;
      if (!subtle)
        subtle = (_c = (_b = globalThis == null ? void 0 : globalThis.crypto) == null ? void 0 : _b.webcrypto) == null ? void 0 : _c.subtle;
      return subtle;
    }
    exports.getSubtle = getSubtle;
    async function pbkdf2Sha512Subtle(subtle, secret, salt, iterations, keylen) {
      (0, utils_1.assert)(subtle, "Argument subtle is falsy");
      (0, utils_1.assert)(typeof subtle === "object", "Argument subtle is not of type object");
      (0, utils_1.assert)(typeof subtle.importKey === "function", "subtle.importKey is not a function");
      (0, utils_1.assert)(typeof subtle.deriveBits === "function", "subtle.deriveBits is not a function");
      return subtle.importKey("raw", secret, { name: "PBKDF2" }, false, ["deriveBits"]).then((key) => subtle.deriveBits({
        name: "PBKDF2",
        salt,
        iterations,
        hash: { name: "SHA-512" }
      }, key, keylen * 8).then((buffer) => new Uint8Array(buffer)));
    }
    exports.pbkdf2Sha512Subtle = pbkdf2Sha512Subtle;
    async function pbkdf2Sha512NodeCrypto(nodeCrypto, secret, salt, iterations, keylen) {
      (0, utils_1.assert)(nodeCrypto, "Argument nodeCrypto is falsy");
      (0, utils_1.assert)(typeof nodeCrypto === "object", "Argument nodeCrypto is not of type object");
      (0, utils_1.assert)(typeof nodeCrypto.pbkdf2 === "function", "nodeCrypto.pbkdf2 is not a function");
      return new Promise((resolve, reject) => {
        nodeCrypto.pbkdf2(secret, salt, iterations, keylen, "sha512", (error, result) => {
          if (error) {
            reject(error);
          } else {
            resolve(Uint8Array.from(result));
          }
        });
      });
    }
    exports.pbkdf2Sha512NodeCrypto = pbkdf2Sha512NodeCrypto;
    async function pbkdf2Sha512Noble(secret, salt, iterations, keylen) {
      return (0, pbkdf2_1.pbkdf2Async)(sha512_1.sha512, secret, salt, { c: iterations, dkLen: keylen });
    }
    exports.pbkdf2Sha512Noble = pbkdf2Sha512Noble;
    async function pbkdf2Sha512(secret, salt, iterations, keylen) {
      const subtle = await getSubtle();
      if (subtle) {
        return pbkdf2Sha512Subtle(subtle, secret, salt, iterations, keylen);
      } else {
        const nodeCrypto = await getNodeCrypto();
        if (nodeCrypto) {
          return pbkdf2Sha512NodeCrypto(nodeCrypto, secret, salt, iterations, keylen);
        } else {
          return pbkdf2Sha512Noble(secret, salt, iterations, keylen);
        }
      }
    }
    exports.pbkdf2Sha512 = pbkdf2Sha512;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/crypto/build/utils.js
var require_utils = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/crypto/build/utils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.toRealUint8Array = void 0;
    function toRealUint8Array(data) {
      if (data instanceof Uint8Array)
        return data;
      else
        return Uint8Array.from(data);
    }
    exports.toRealUint8Array = toRealUint8Array;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/crypto/build/sha.js
var require_sha = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/crypto/build/sha.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.sha512 = exports.Sha512 = exports.sha256 = exports.Sha256 = void 0;
    var sha256_1 = require_sha256();
    var sha512_1 = require_sha512();
    var utils_1 = require_utils();
    var Sha256 = class {
      constructor(firstData) {
        this.blockSize = 512 / 8;
        this.impl = sha256_1.sha256.create();
        if (firstData) {
          this.update(firstData);
        }
      }
      update(data) {
        this.impl.update((0, utils_1.toRealUint8Array)(data));
        return this;
      }
      digest() {
        return this.impl.digest();
      }
    };
    exports.Sha256 = Sha256;
    function sha256(data) {
      return new Sha256(data).digest();
    }
    exports.sha256 = sha256;
    var Sha512 = class {
      constructor(firstData) {
        this.blockSize = 1024 / 8;
        this.impl = sha512_1.sha512.create();
        if (firstData) {
          this.update(firstData);
        }
      }
      update(data) {
        this.impl.update((0, utils_1.toRealUint8Array)(data));
        return this;
      }
      digest() {
        return this.impl.digest();
      }
    };
    exports.Sha512 = Sha512;
    function sha512(data) {
      return new Sha512(data).digest();
    }
    exports.sha512 = sha512;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/crypto/build/bip39.js
var require_bip39 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/crypto/build/bip39.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Bip39 = exports.EnglishMnemonic = exports.mnemonicToEntropy = exports.entropyToMnemonic = void 0;
    var encoding_1 = require_build2();
    var pbkdf2_1 = require_pbkdf22();
    var sha_1 = require_sha();
    var wordlist = [
      "abandon",
      "ability",
      "able",
      "about",
      "above",
      "absent",
      "absorb",
      "abstract",
      "absurd",
      "abuse",
      "access",
      "accident",
      "account",
      "accuse",
      "achieve",
      "acid",
      "acoustic",
      "acquire",
      "across",
      "act",
      "action",
      "actor",
      "actress",
      "actual",
      "adapt",
      "add",
      "addict",
      "address",
      "adjust",
      "admit",
      "adult",
      "advance",
      "advice",
      "aerobic",
      "affair",
      "afford",
      "afraid",
      "again",
      "age",
      "agent",
      "agree",
      "ahead",
      "aim",
      "air",
      "airport",
      "aisle",
      "alarm",
      "album",
      "alcohol",
      "alert",
      "alien",
      "all",
      "alley",
      "allow",
      "almost",
      "alone",
      "alpha",
      "already",
      "also",
      "alter",
      "always",
      "amateur",
      "amazing",
      "among",
      "amount",
      "amused",
      "analyst",
      "anchor",
      "ancient",
      "anger",
      "angle",
      "angry",
      "animal",
      "ankle",
      "announce",
      "annual",
      "another",
      "answer",
      "antenna",
      "antique",
      "anxiety",
      "any",
      "apart",
      "apology",
      "appear",
      "apple",
      "approve",
      "april",
      "arch",
      "arctic",
      "area",
      "arena",
      "argue",
      "arm",
      "armed",
      "armor",
      "army",
      "around",
      "arrange",
      "arrest",
      "arrive",
      "arrow",
      "art",
      "artefact",
      "artist",
      "artwork",
      "ask",
      "aspect",
      "assault",
      "asset",
      "assist",
      "assume",
      "asthma",
      "athlete",
      "atom",
      "attack",
      "attend",
      "attitude",
      "attract",
      "auction",
      "audit",
      "august",
      "aunt",
      "author",
      "auto",
      "autumn",
      "average",
      "avocado",
      "avoid",
      "awake",
      "aware",
      "away",
      "awesome",
      "awful",
      "awkward",
      "axis",
      "baby",
      "bachelor",
      "bacon",
      "badge",
      "bag",
      "balance",
      "balcony",
      "ball",
      "bamboo",
      "banana",
      "banner",
      "bar",
      "barely",
      "bargain",
      "barrel",
      "base",
      "basic",
      "basket",
      "battle",
      "beach",
      "bean",
      "beauty",
      "because",
      "become",
      "beef",
      "before",
      "begin",
      "behave",
      "behind",
      "believe",
      "below",
      "belt",
      "bench",
      "benefit",
      "best",
      "betray",
      "better",
      "between",
      "beyond",
      "bicycle",
      "bid",
      "bike",
      "bind",
      "biology",
      "bird",
      "birth",
      "bitter",
      "black",
      "blade",
      "blame",
      "blanket",
      "blast",
      "bleak",
      "bless",
      "blind",
      "blood",
      "blossom",
      "blouse",
      "blue",
      "blur",
      "blush",
      "board",
      "boat",
      "body",
      "boil",
      "bomb",
      "bone",
      "bonus",
      "book",
      "boost",
      "border",
      "boring",
      "borrow",
      "boss",
      "bottom",
      "bounce",
      "box",
      "boy",
      "bracket",
      "brain",
      "brand",
      "brass",
      "brave",
      "bread",
      "breeze",
      "brick",
      "bridge",
      "brief",
      "bright",
      "bring",
      "brisk",
      "broccoli",
      "broken",
      "bronze",
      "broom",
      "brother",
      "brown",
      "brush",
      "bubble",
      "buddy",
      "budget",
      "buffalo",
      "build",
      "bulb",
      "bulk",
      "bullet",
      "bundle",
      "bunker",
      "burden",
      "burger",
      "burst",
      "bus",
      "business",
      "busy",
      "butter",
      "buyer",
      "buzz",
      "cabbage",
      "cabin",
      "cable",
      "cactus",
      "cage",
      "cake",
      "call",
      "calm",
      "camera",
      "camp",
      "can",
      "canal",
      "cancel",
      "candy",
      "cannon",
      "canoe",
      "canvas",
      "canyon",
      "capable",
      "capital",
      "captain",
      "car",
      "carbon",
      "card",
      "cargo",
      "carpet",
      "carry",
      "cart",
      "case",
      "cash",
      "casino",
      "castle",
      "casual",
      "cat",
      "catalog",
      "catch",
      "category",
      "cattle",
      "caught",
      "cause",
      "caution",
      "cave",
      "ceiling",
      "celery",
      "cement",
      "census",
      "century",
      "cereal",
      "certain",
      "chair",
      "chalk",
      "champion",
      "change",
      "chaos",
      "chapter",
      "charge",
      "chase",
      "chat",
      "cheap",
      "check",
      "cheese",
      "chef",
      "cherry",
      "chest",
      "chicken",
      "chief",
      "child",
      "chimney",
      "choice",
      "choose",
      "chronic",
      "chuckle",
      "chunk",
      "churn",
      "cigar",
      "cinnamon",
      "circle",
      "citizen",
      "city",
      "civil",
      "claim",
      "clap",
      "clarify",
      "claw",
      "clay",
      "clean",
      "clerk",
      "clever",
      "click",
      "client",
      "cliff",
      "climb",
      "clinic",
      "clip",
      "clock",
      "clog",
      "close",
      "cloth",
      "cloud",
      "clown",
      "club",
      "clump",
      "cluster",
      "clutch",
      "coach",
      "coast",
      "coconut",
      "code",
      "coffee",
      "coil",
      "coin",
      "collect",
      "color",
      "column",
      "combine",
      "come",
      "comfort",
      "comic",
      "common",
      "company",
      "concert",
      "conduct",
      "confirm",
      "congress",
      "connect",
      "consider",
      "control",
      "convince",
      "cook",
      "cool",
      "copper",
      "copy",
      "coral",
      "core",
      "corn",
      "correct",
      "cost",
      "cotton",
      "couch",
      "country",
      "couple",
      "course",
      "cousin",
      "cover",
      "coyote",
      "crack",
      "cradle",
      "craft",
      "cram",
      "crane",
      "crash",
      "crater",
      "crawl",
      "crazy",
      "cream",
      "credit",
      "creek",
      "crew",
      "cricket",
      "crime",
      "crisp",
      "critic",
      "crop",
      "cross",
      "crouch",
      "crowd",
      "crucial",
      "cruel",
      "cruise",
      "crumble",
      "crunch",
      "crush",
      "cry",
      "crystal",
      "cube",
      "culture",
      "cup",
      "cupboard",
      "curious",
      "current",
      "curtain",
      "curve",
      "cushion",
      "custom",
      "cute",
      "cycle",
      "dad",
      "damage",
      "damp",
      "dance",
      "danger",
      "daring",
      "dash",
      "daughter",
      "dawn",
      "day",
      "deal",
      "debate",
      "debris",
      "decade",
      "december",
      "decide",
      "decline",
      "decorate",
      "decrease",
      "deer",
      "defense",
      "define",
      "defy",
      "degree",
      "delay",
      "deliver",
      "demand",
      "demise",
      "denial",
      "dentist",
      "deny",
      "depart",
      "depend",
      "deposit",
      "depth",
      "deputy",
      "derive",
      "describe",
      "desert",
      "design",
      "desk",
      "despair",
      "destroy",
      "detail",
      "detect",
      "develop",
      "device",
      "devote",
      "diagram",
      "dial",
      "diamond",
      "diary",
      "dice",
      "diesel",
      "diet",
      "differ",
      "digital",
      "dignity",
      "dilemma",
      "dinner",
      "dinosaur",
      "direct",
      "dirt",
      "disagree",
      "discover",
      "disease",
      "dish",
      "dismiss",
      "disorder",
      "display",
      "distance",
      "divert",
      "divide",
      "divorce",
      "dizzy",
      "doctor",
      "document",
      "dog",
      "doll",
      "dolphin",
      "domain",
      "donate",
      "donkey",
      "donor",
      "door",
      "dose",
      "double",
      "dove",
      "draft",
      "dragon",
      "drama",
      "drastic",
      "draw",
      "dream",
      "dress",
      "drift",
      "drill",
      "drink",
      "drip",
      "drive",
      "drop",
      "drum",
      "dry",
      "duck",
      "dumb",
      "dune",
      "during",
      "dust",
      "dutch",
      "duty",
      "dwarf",
      "dynamic",
      "eager",
      "eagle",
      "early",
      "earn",
      "earth",
      "easily",
      "east",
      "easy",
      "echo",
      "ecology",
      "economy",
      "edge",
      "edit",
      "educate",
      "effort",
      "egg",
      "eight",
      "either",
      "elbow",
      "elder",
      "electric",
      "elegant",
      "element",
      "elephant",
      "elevator",
      "elite",
      "else",
      "embark",
      "embody",
      "embrace",
      "emerge",
      "emotion",
      "employ",
      "empower",
      "empty",
      "enable",
      "enact",
      "end",
      "endless",
      "endorse",
      "enemy",
      "energy",
      "enforce",
      "engage",
      "engine",
      "enhance",
      "enjoy",
      "enlist",
      "enough",
      "enrich",
      "enroll",
      "ensure",
      "enter",
      "entire",
      "entry",
      "envelope",
      "episode",
      "equal",
      "equip",
      "era",
      "erase",
      "erode",
      "erosion",
      "error",
      "erupt",
      "escape",
      "essay",
      "essence",
      "estate",
      "eternal",
      "ethics",
      "evidence",
      "evil",
      "evoke",
      "evolve",
      "exact",
      "example",
      "excess",
      "exchange",
      "excite",
      "exclude",
      "excuse",
      "execute",
      "exercise",
      "exhaust",
      "exhibit",
      "exile",
      "exist",
      "exit",
      "exotic",
      "expand",
      "expect",
      "expire",
      "explain",
      "expose",
      "express",
      "extend",
      "extra",
      "eye",
      "eyebrow",
      "fabric",
      "face",
      "faculty",
      "fade",
      "faint",
      "faith",
      "fall",
      "false",
      "fame",
      "family",
      "famous",
      "fan",
      "fancy",
      "fantasy",
      "farm",
      "fashion",
      "fat",
      "fatal",
      "father",
      "fatigue",
      "fault",
      "favorite",
      "feature",
      "february",
      "federal",
      "fee",
      "feed",
      "feel",
      "female",
      "fence",
      "festival",
      "fetch",
      "fever",
      "few",
      "fiber",
      "fiction",
      "field",
      "figure",
      "file",
      "film",
      "filter",
      "final",
      "find",
      "fine",
      "finger",
      "finish",
      "fire",
      "firm",
      "first",
      "fiscal",
      "fish",
      "fit",
      "fitness",
      "fix",
      "flag",
      "flame",
      "flash",
      "flat",
      "flavor",
      "flee",
      "flight",
      "flip",
      "float",
      "flock",
      "floor",
      "flower",
      "fluid",
      "flush",
      "fly",
      "foam",
      "focus",
      "fog",
      "foil",
      "fold",
      "follow",
      "food",
      "foot",
      "force",
      "forest",
      "forget",
      "fork",
      "fortune",
      "forum",
      "forward",
      "fossil",
      "foster",
      "found",
      "fox",
      "fragile",
      "frame",
      "frequent",
      "fresh",
      "friend",
      "fringe",
      "frog",
      "front",
      "frost",
      "frown",
      "frozen",
      "fruit",
      "fuel",
      "fun",
      "funny",
      "furnace",
      "fury",
      "future",
      "gadget",
      "gain",
      "galaxy",
      "gallery",
      "game",
      "gap",
      "garage",
      "garbage",
      "garden",
      "garlic",
      "garment",
      "gas",
      "gasp",
      "gate",
      "gather",
      "gauge",
      "gaze",
      "general",
      "genius",
      "genre",
      "gentle",
      "genuine",
      "gesture",
      "ghost",
      "giant",
      "gift",
      "giggle",
      "ginger",
      "giraffe",
      "girl",
      "give",
      "glad",
      "glance",
      "glare",
      "glass",
      "glide",
      "glimpse",
      "globe",
      "gloom",
      "glory",
      "glove",
      "glow",
      "glue",
      "goat",
      "goddess",
      "gold",
      "good",
      "goose",
      "gorilla",
      "gospel",
      "gossip",
      "govern",
      "gown",
      "grab",
      "grace",
      "grain",
      "grant",
      "grape",
      "grass",
      "gravity",
      "great",
      "green",
      "grid",
      "grief",
      "grit",
      "grocery",
      "group",
      "grow",
      "grunt",
      "guard",
      "guess",
      "guide",
      "guilt",
      "guitar",
      "gun",
      "gym",
      "habit",
      "hair",
      "half",
      "hammer",
      "hamster",
      "hand",
      "happy",
      "harbor",
      "hard",
      "harsh",
      "harvest",
      "hat",
      "have",
      "hawk",
      "hazard",
      "head",
      "health",
      "heart",
      "heavy",
      "hedgehog",
      "height",
      "hello",
      "helmet",
      "help",
      "hen",
      "hero",
      "hidden",
      "high",
      "hill",
      "hint",
      "hip",
      "hire",
      "history",
      "hobby",
      "hockey",
      "hold",
      "hole",
      "holiday",
      "hollow",
      "home",
      "honey",
      "hood",
      "hope",
      "horn",
      "horror",
      "horse",
      "hospital",
      "host",
      "hotel",
      "hour",
      "hover",
      "hub",
      "huge",
      "human",
      "humble",
      "humor",
      "hundred",
      "hungry",
      "hunt",
      "hurdle",
      "hurry",
      "hurt",
      "husband",
      "hybrid",
      "ice",
      "icon",
      "idea",
      "identify",
      "idle",
      "ignore",
      "ill",
      "illegal",
      "illness",
      "image",
      "imitate",
      "immense",
      "immune",
      "impact",
      "impose",
      "improve",
      "impulse",
      "inch",
      "include",
      "income",
      "increase",
      "index",
      "indicate",
      "indoor",
      "industry",
      "infant",
      "inflict",
      "inform",
      "inhale",
      "inherit",
      "initial",
      "inject",
      "injury",
      "inmate",
      "inner",
      "innocent",
      "input",
      "inquiry",
      "insane",
      "insect",
      "inside",
      "inspire",
      "install",
      "intact",
      "interest",
      "into",
      "invest",
      "invite",
      "involve",
      "iron",
      "island",
      "isolate",
      "issue",
      "item",
      "ivory",
      "jacket",
      "jaguar",
      "jar",
      "jazz",
      "jealous",
      "jeans",
      "jelly",
      "jewel",
      "job",
      "join",
      "joke",
      "journey",
      "joy",
      "judge",
      "juice",
      "jump",
      "jungle",
      "junior",
      "junk",
      "just",
      "kangaroo",
      "keen",
      "keep",
      "ketchup",
      "key",
      "kick",
      "kid",
      "kidney",
      "kind",
      "kingdom",
      "kiss",
      "kit",
      "kitchen",
      "kite",
      "kitten",
      "kiwi",
      "knee",
      "knife",
      "knock",
      "know",
      "lab",
      "label",
      "labor",
      "ladder",
      "lady",
      "lake",
      "lamp",
      "language",
      "laptop",
      "large",
      "later",
      "latin",
      "laugh",
      "laundry",
      "lava",
      "law",
      "lawn",
      "lawsuit",
      "layer",
      "lazy",
      "leader",
      "leaf",
      "learn",
      "leave",
      "lecture",
      "left",
      "leg",
      "legal",
      "legend",
      "leisure",
      "lemon",
      "lend",
      "length",
      "lens",
      "leopard",
      "lesson",
      "letter",
      "level",
      "liar",
      "liberty",
      "library",
      "license",
      "life",
      "lift",
      "light",
      "like",
      "limb",
      "limit",
      "link",
      "lion",
      "liquid",
      "list",
      "little",
      "live",
      "lizard",
      "load",
      "loan",
      "lobster",
      "local",
      "lock",
      "logic",
      "lonely",
      "long",
      "loop",
      "lottery",
      "loud",
      "lounge",
      "love",
      "loyal",
      "lucky",
      "luggage",
      "lumber",
      "lunar",
      "lunch",
      "luxury",
      "lyrics",
      "machine",
      "mad",
      "magic",
      "magnet",
      "maid",
      "mail",
      "main",
      "major",
      "make",
      "mammal",
      "man",
      "manage",
      "mandate",
      "mango",
      "mansion",
      "manual",
      "maple",
      "marble",
      "march",
      "margin",
      "marine",
      "market",
      "marriage",
      "mask",
      "mass",
      "master",
      "match",
      "material",
      "math",
      "matrix",
      "matter",
      "maximum",
      "maze",
      "meadow",
      "mean",
      "measure",
      "meat",
      "mechanic",
      "medal",
      "media",
      "melody",
      "melt",
      "member",
      "memory",
      "mention",
      "menu",
      "mercy",
      "merge",
      "merit",
      "merry",
      "mesh",
      "message",
      "metal",
      "method",
      "middle",
      "midnight",
      "milk",
      "million",
      "mimic",
      "mind",
      "minimum",
      "minor",
      "minute",
      "miracle",
      "mirror",
      "misery",
      "miss",
      "mistake",
      "mix",
      "mixed",
      "mixture",
      "mobile",
      "model",
      "modify",
      "mom",
      "moment",
      "monitor",
      "monkey",
      "monster",
      "month",
      "moon",
      "moral",
      "more",
      "morning",
      "mosquito",
      "mother",
      "motion",
      "motor",
      "mountain",
      "mouse",
      "move",
      "movie",
      "much",
      "muffin",
      "mule",
      "multiply",
      "muscle",
      "museum",
      "mushroom",
      "music",
      "must",
      "mutual",
      "myself",
      "mystery",
      "myth",
      "naive",
      "name",
      "napkin",
      "narrow",
      "nasty",
      "nation",
      "nature",
      "near",
      "neck",
      "need",
      "negative",
      "neglect",
      "neither",
      "nephew",
      "nerve",
      "nest",
      "net",
      "network",
      "neutral",
      "never",
      "news",
      "next",
      "nice",
      "night",
      "noble",
      "noise",
      "nominee",
      "noodle",
      "normal",
      "north",
      "nose",
      "notable",
      "note",
      "nothing",
      "notice",
      "novel",
      "now",
      "nuclear",
      "number",
      "nurse",
      "nut",
      "oak",
      "obey",
      "object",
      "oblige",
      "obscure",
      "observe",
      "obtain",
      "obvious",
      "occur",
      "ocean",
      "october",
      "odor",
      "off",
      "offer",
      "office",
      "often",
      "oil",
      "okay",
      "old",
      "olive",
      "olympic",
      "omit",
      "once",
      "one",
      "onion",
      "online",
      "only",
      "open",
      "opera",
      "opinion",
      "oppose",
      "option",
      "orange",
      "orbit",
      "orchard",
      "order",
      "ordinary",
      "organ",
      "orient",
      "original",
      "orphan",
      "ostrich",
      "other",
      "outdoor",
      "outer",
      "output",
      "outside",
      "oval",
      "oven",
      "over",
      "own",
      "owner",
      "oxygen",
      "oyster",
      "ozone",
      "pact",
      "paddle",
      "page",
      "pair",
      "palace",
      "palm",
      "panda",
      "panel",
      "panic",
      "panther",
      "paper",
      "parade",
      "parent",
      "park",
      "parrot",
      "party",
      "pass",
      "patch",
      "path",
      "patient",
      "patrol",
      "pattern",
      "pause",
      "pave",
      "payment",
      "peace",
      "peanut",
      "pear",
      "peasant",
      "pelican",
      "pen",
      "penalty",
      "pencil",
      "people",
      "pepper",
      "perfect",
      "permit",
      "person",
      "pet",
      "phone",
      "photo",
      "phrase",
      "physical",
      "piano",
      "picnic",
      "picture",
      "piece",
      "pig",
      "pigeon",
      "pill",
      "pilot",
      "pink",
      "pioneer",
      "pipe",
      "pistol",
      "pitch",
      "pizza",
      "place",
      "planet",
      "plastic",
      "plate",
      "play",
      "please",
      "pledge",
      "pluck",
      "plug",
      "plunge",
      "poem",
      "poet",
      "point",
      "polar",
      "pole",
      "police",
      "pond",
      "pony",
      "pool",
      "popular",
      "portion",
      "position",
      "possible",
      "post",
      "potato",
      "pottery",
      "poverty",
      "powder",
      "power",
      "practice",
      "praise",
      "predict",
      "prefer",
      "prepare",
      "present",
      "pretty",
      "prevent",
      "price",
      "pride",
      "primary",
      "print",
      "priority",
      "prison",
      "private",
      "prize",
      "problem",
      "process",
      "produce",
      "profit",
      "program",
      "project",
      "promote",
      "proof",
      "property",
      "prosper",
      "protect",
      "proud",
      "provide",
      "public",
      "pudding",
      "pull",
      "pulp",
      "pulse",
      "pumpkin",
      "punch",
      "pupil",
      "puppy",
      "purchase",
      "purity",
      "purpose",
      "purse",
      "push",
      "put",
      "puzzle",
      "pyramid",
      "quality",
      "quantum",
      "quarter",
      "question",
      "quick",
      "quit",
      "quiz",
      "quote",
      "rabbit",
      "raccoon",
      "race",
      "rack",
      "radar",
      "radio",
      "rail",
      "rain",
      "raise",
      "rally",
      "ramp",
      "ranch",
      "random",
      "range",
      "rapid",
      "rare",
      "rate",
      "rather",
      "raven",
      "raw",
      "razor",
      "ready",
      "real",
      "reason",
      "rebel",
      "rebuild",
      "recall",
      "receive",
      "recipe",
      "record",
      "recycle",
      "reduce",
      "reflect",
      "reform",
      "refuse",
      "region",
      "regret",
      "regular",
      "reject",
      "relax",
      "release",
      "relief",
      "rely",
      "remain",
      "remember",
      "remind",
      "remove",
      "render",
      "renew",
      "rent",
      "reopen",
      "repair",
      "repeat",
      "replace",
      "report",
      "require",
      "rescue",
      "resemble",
      "resist",
      "resource",
      "response",
      "result",
      "retire",
      "retreat",
      "return",
      "reunion",
      "reveal",
      "review",
      "reward",
      "rhythm",
      "rib",
      "ribbon",
      "rice",
      "rich",
      "ride",
      "ridge",
      "rifle",
      "right",
      "rigid",
      "ring",
      "riot",
      "ripple",
      "risk",
      "ritual",
      "rival",
      "river",
      "road",
      "roast",
      "robot",
      "robust",
      "rocket",
      "romance",
      "roof",
      "rookie",
      "room",
      "rose",
      "rotate",
      "rough",
      "round",
      "route",
      "royal",
      "rubber",
      "rude",
      "rug",
      "rule",
      "run",
      "runway",
      "rural",
      "sad",
      "saddle",
      "sadness",
      "safe",
      "sail",
      "salad",
      "salmon",
      "salon",
      "salt",
      "salute",
      "same",
      "sample",
      "sand",
      "satisfy",
      "satoshi",
      "sauce",
      "sausage",
      "save",
      "say",
      "scale",
      "scan",
      "scare",
      "scatter",
      "scene",
      "scheme",
      "school",
      "science",
      "scissors",
      "scorpion",
      "scout",
      "scrap",
      "screen",
      "script",
      "scrub",
      "sea",
      "search",
      "season",
      "seat",
      "second",
      "secret",
      "section",
      "security",
      "seed",
      "seek",
      "segment",
      "select",
      "sell",
      "seminar",
      "senior",
      "sense",
      "sentence",
      "series",
      "service",
      "session",
      "settle",
      "setup",
      "seven",
      "shadow",
      "shaft",
      "shallow",
      "share",
      "shed",
      "shell",
      "sheriff",
      "shield",
      "shift",
      "shine",
      "ship",
      "shiver",
      "shock",
      "shoe",
      "shoot",
      "shop",
      "short",
      "shoulder",
      "shove",
      "shrimp",
      "shrug",
      "shuffle",
      "shy",
      "sibling",
      "sick",
      "side",
      "siege",
      "sight",
      "sign",
      "silent",
      "silk",
      "silly",
      "silver",
      "similar",
      "simple",
      "since",
      "sing",
      "siren",
      "sister",
      "situate",
      "six",
      "size",
      "skate",
      "sketch",
      "ski",
      "skill",
      "skin",
      "skirt",
      "skull",
      "slab",
      "slam",
      "sleep",
      "slender",
      "slice",
      "slide",
      "slight",
      "slim",
      "slogan",
      "slot",
      "slow",
      "slush",
      "small",
      "smart",
      "smile",
      "smoke",
      "smooth",
      "snack",
      "snake",
      "snap",
      "sniff",
      "snow",
      "soap",
      "soccer",
      "social",
      "sock",
      "soda",
      "soft",
      "solar",
      "soldier",
      "solid",
      "solution",
      "solve",
      "someone",
      "song",
      "soon",
      "sorry",
      "sort",
      "soul",
      "sound",
      "soup",
      "source",
      "south",
      "space",
      "spare",
      "spatial",
      "spawn",
      "speak",
      "special",
      "speed",
      "spell",
      "spend",
      "sphere",
      "spice",
      "spider",
      "spike",
      "spin",
      "spirit",
      "split",
      "spoil",
      "sponsor",
      "spoon",
      "sport",
      "spot",
      "spray",
      "spread",
      "spring",
      "spy",
      "square",
      "squeeze",
      "squirrel",
      "stable",
      "stadium",
      "staff",
      "stage",
      "stairs",
      "stamp",
      "stand",
      "start",
      "state",
      "stay",
      "steak",
      "steel",
      "stem",
      "step",
      "stereo",
      "stick",
      "still",
      "sting",
      "stock",
      "stomach",
      "stone",
      "stool",
      "story",
      "stove",
      "strategy",
      "street",
      "strike",
      "strong",
      "struggle",
      "student",
      "stuff",
      "stumble",
      "style",
      "subject",
      "submit",
      "subway",
      "success",
      "such",
      "sudden",
      "suffer",
      "sugar",
      "suggest",
      "suit",
      "summer",
      "sun",
      "sunny",
      "sunset",
      "super",
      "supply",
      "supreme",
      "sure",
      "surface",
      "surge",
      "surprise",
      "surround",
      "survey",
      "suspect",
      "sustain",
      "swallow",
      "swamp",
      "swap",
      "swarm",
      "swear",
      "sweet",
      "swift",
      "swim",
      "swing",
      "switch",
      "sword",
      "symbol",
      "symptom",
      "syrup",
      "system",
      "table",
      "tackle",
      "tag",
      "tail",
      "talent",
      "talk",
      "tank",
      "tape",
      "target",
      "task",
      "taste",
      "tattoo",
      "taxi",
      "teach",
      "team",
      "tell",
      "ten",
      "tenant",
      "tennis",
      "tent",
      "term",
      "test",
      "text",
      "thank",
      "that",
      "theme",
      "then",
      "theory",
      "there",
      "they",
      "thing",
      "this",
      "thought",
      "three",
      "thrive",
      "throw",
      "thumb",
      "thunder",
      "ticket",
      "tide",
      "tiger",
      "tilt",
      "timber",
      "time",
      "tiny",
      "tip",
      "tired",
      "tissue",
      "title",
      "toast",
      "tobacco",
      "today",
      "toddler",
      "toe",
      "together",
      "toilet",
      "token",
      "tomato",
      "tomorrow",
      "tone",
      "tongue",
      "tonight",
      "tool",
      "tooth",
      "top",
      "topic",
      "topple",
      "torch",
      "tornado",
      "tortoise",
      "toss",
      "total",
      "tourist",
      "toward",
      "tower",
      "town",
      "toy",
      "track",
      "trade",
      "traffic",
      "tragic",
      "train",
      "transfer",
      "trap",
      "trash",
      "travel",
      "tray",
      "treat",
      "tree",
      "trend",
      "trial",
      "tribe",
      "trick",
      "trigger",
      "trim",
      "trip",
      "trophy",
      "trouble",
      "truck",
      "true",
      "truly",
      "trumpet",
      "trust",
      "truth",
      "try",
      "tube",
      "tuition",
      "tumble",
      "tuna",
      "tunnel",
      "turkey",
      "turn",
      "turtle",
      "twelve",
      "twenty",
      "twice",
      "twin",
      "twist",
      "two",
      "type",
      "typical",
      "ugly",
      "umbrella",
      "unable",
      "unaware",
      "uncle",
      "uncover",
      "under",
      "undo",
      "unfair",
      "unfold",
      "unhappy",
      "uniform",
      "unique",
      "unit",
      "universe",
      "unknown",
      "unlock",
      "until",
      "unusual",
      "unveil",
      "update",
      "upgrade",
      "uphold",
      "upon",
      "upper",
      "upset",
      "urban",
      "urge",
      "usage",
      "use",
      "used",
      "useful",
      "useless",
      "usual",
      "utility",
      "vacant",
      "vacuum",
      "vague",
      "valid",
      "valley",
      "valve",
      "van",
      "vanish",
      "vapor",
      "various",
      "vast",
      "vault",
      "vehicle",
      "velvet",
      "vendor",
      "venture",
      "venue",
      "verb",
      "verify",
      "version",
      "very",
      "vessel",
      "veteran",
      "viable",
      "vibrant",
      "vicious",
      "victory",
      "video",
      "view",
      "village",
      "vintage",
      "violin",
      "virtual",
      "virus",
      "visa",
      "visit",
      "visual",
      "vital",
      "vivid",
      "vocal",
      "voice",
      "void",
      "volcano",
      "volume",
      "vote",
      "voyage",
      "wage",
      "wagon",
      "wait",
      "walk",
      "wall",
      "walnut",
      "want",
      "warfare",
      "warm",
      "warrior",
      "wash",
      "wasp",
      "waste",
      "water",
      "wave",
      "way",
      "wealth",
      "weapon",
      "wear",
      "weasel",
      "weather",
      "web",
      "wedding",
      "weekend",
      "weird",
      "welcome",
      "west",
      "wet",
      "whale",
      "what",
      "wheat",
      "wheel",
      "when",
      "where",
      "whip",
      "whisper",
      "wide",
      "width",
      "wife",
      "wild",
      "will",
      "win",
      "window",
      "wine",
      "wing",
      "wink",
      "winner",
      "winter",
      "wire",
      "wisdom",
      "wise",
      "wish",
      "witness",
      "wolf",
      "woman",
      "wonder",
      "wood",
      "wool",
      "word",
      "work",
      "world",
      "worry",
      "worth",
      "wrap",
      "wreck",
      "wrestle",
      "wrist",
      "write",
      "wrong",
      "yard",
      "year",
      "yellow",
      "you",
      "young",
      "youth",
      "zebra",
      "zero",
      "zone",
      "zoo"
    ];
    function bytesToBitstring(bytes) {
      return Array.from(bytes).map((byte) => byte.toString(2).padStart(8, "0")).join("");
    }
    function deriveChecksumBits(entropy) {
      const entropyLengthBits = entropy.length * 8;
      const checksumLengthBits = entropyLengthBits / 32;
      const hash = (0, sha_1.sha256)(entropy);
      return bytesToBitstring(hash).slice(0, checksumLengthBits);
    }
    function bitstringToByte(bin) {
      return parseInt(bin, 2);
    }
    var allowedEntropyLengths = [16, 20, 24, 28, 32];
    var allowedWordLengths = [12, 15, 18, 21, 24];
    function entropyToMnemonic(entropy) {
      if (allowedEntropyLengths.indexOf(entropy.length) === -1) {
        throw new Error("invalid input length");
      }
      const entropyBits = bytesToBitstring(entropy);
      const checksumBits = deriveChecksumBits(entropy);
      const bits = entropyBits + checksumBits;
      const chunks = bits.match(/(.{11})/g);
      const words = chunks.map((binary) => {
        const index = bitstringToByte(binary);
        return wordlist[index];
      });
      return words.join(" ");
    }
    exports.entropyToMnemonic = entropyToMnemonic;
    var invalidNumberOfWorks = "Invalid number of words";
    var wordNotInWordlist = "Found word that is not in the wordlist";
    var invalidEntropy = "Invalid entropy";
    var invalidChecksum = "Invalid mnemonic checksum";
    function normalize(str) {
      return str.normalize("NFKD");
    }
    function mnemonicToEntropy(mnemonic) {
      const words = normalize(mnemonic).split(" ");
      if (!allowedWordLengths.includes(words.length)) {
        throw new Error(invalidNumberOfWorks);
      }
      const bits = words.map((word) => {
        const index = wordlist.indexOf(word);
        if (index === -1) {
          throw new Error(wordNotInWordlist);
        }
        return index.toString(2).padStart(11, "0");
      }).join("");
      const dividerIndex = Math.floor(bits.length / 33) * 32;
      const entropyBits = bits.slice(0, dividerIndex);
      const checksumBits = bits.slice(dividerIndex);
      const entropyBytes = entropyBits.match(/(.{1,8})/g).map(bitstringToByte);
      if (entropyBytes.length < 16 || entropyBytes.length > 32 || entropyBytes.length % 4 !== 0) {
        throw new Error(invalidEntropy);
      }
      const entropy = Uint8Array.from(entropyBytes);
      const newChecksum = deriveChecksumBits(entropy);
      if (newChecksum !== checksumBits) {
        throw new Error(invalidChecksum);
      }
      return entropy;
    }
    exports.mnemonicToEntropy = mnemonicToEntropy;
    var EnglishMnemonic = class _EnglishMnemonic {
      constructor(mnemonic) {
        if (!_EnglishMnemonic.mnemonicMatcher.test(mnemonic)) {
          throw new Error("Invalid mnemonic format");
        }
        const words = mnemonic.split(" ");
        const allowedWordsLengths = [12, 15, 18, 21, 24];
        if (allowedWordsLengths.indexOf(words.length) === -1) {
          throw new Error(`Invalid word count in mnemonic (allowed: ${allowedWordsLengths} got: ${words.length})`);
        }
        for (const word of words) {
          if (_EnglishMnemonic.wordlist.indexOf(word) === -1) {
            throw new Error("Mnemonic contains invalid word");
          }
        }
        mnemonicToEntropy(mnemonic);
        this.data = mnemonic;
      }
      toString() {
        return this.data;
      }
    };
    exports.EnglishMnemonic = EnglishMnemonic;
    EnglishMnemonic.wordlist = wordlist;
    EnglishMnemonic.mnemonicMatcher = /^[a-z]+( [a-z]+)*$/;
    var Bip39 = class {
      /**
       * Encodes raw entropy of length 16, 20, 24, 28 or 32 bytes as an English mnemonic between 12 and 24 words.
       *
       * | Entropy            | Words |
       * |--------------------|-------|
       * | 128 bit (16 bytes) |    12 |
       * | 160 bit (20 bytes) |    15 |
       * | 192 bit (24 bytes) |    18 |
       * | 224 bit (28 bytes) |    21 |
       * | 256 bit (32 bytes) |    24 |
       *
       *
       * @see https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki#generating-the-mnemonic
       * @param entropy The entropy to be encoded. This must be cryptographically secure.
       */
      static encode(entropy) {
        return new EnglishMnemonic(entropyToMnemonic(entropy));
      }
      static decode(mnemonic) {
        return mnemonicToEntropy(mnemonic.toString());
      }
      static async mnemonicToSeed(mnemonic, password) {
        const mnemonicBytes = (0, encoding_1.toUtf8)(normalize(mnemonic.toString()));
        const salt = "mnemonic" + (password ? normalize(password) : "");
        const saltBytes = (0, encoding_1.toUtf8)(salt);
        return (0, pbkdf2_1.pbkdf2Sha512)(mnemonicBytes, saltBytes, 2048, 64);
      }
    };
    exports.Bip39 = Bip39;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/crypto/build/hmac.js
var require_hmac = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/crypto/build/hmac.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Hmac = void 0;
    var Hmac = class {
      constructor(hashFunctionConstructor, originalKey) {
        const blockSize = new hashFunctionConstructor().blockSize;
        this.hash = (data) => new hashFunctionConstructor().update(data).digest();
        let key = originalKey;
        if (key.length > blockSize) {
          key = this.hash(key);
        }
        if (key.length < blockSize) {
          const zeroPadding = new Uint8Array(blockSize - key.length);
          key = new Uint8Array([...key, ...zeroPadding]);
        }
        this.oKeyPad = key.map((keyByte) => keyByte ^ 92);
        this.iKeyPad = key.map((keyByte) => keyByte ^ 54);
        this.messageHasher = new hashFunctionConstructor();
        this.blockSize = blockSize;
        this.update(this.iKeyPad);
      }
      update(data) {
        this.messageHasher.update(data);
        return this;
      }
      digest() {
        const innerHash = this.messageHasher.digest();
        return this.hash(new Uint8Array([...this.oKeyPad, ...innerHash]));
      }
    };
    exports.Hmac = Hmac;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/crypto/build/keccak.js
var require_keccak = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/crypto/build/keccak.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.keccak256 = exports.Keccak256 = void 0;
    var sha3_1 = require_sha3();
    var utils_1 = require_utils();
    var Keccak256 = class {
      constructor(firstData) {
        this.blockSize = 512 / 8;
        this.impl = sha3_1.keccak_256.create();
        if (firstData) {
          this.update(firstData);
        }
      }
      update(data) {
        this.impl.update((0, utils_1.toRealUint8Array)(data));
        return this;
      }
      digest() {
        return this.impl.digest();
      }
    };
    exports.Keccak256 = Keccak256;
    function keccak256(data) {
      return new Keccak256(data).digest();
    }
    exports.keccak256 = keccak256;
  }
});

// node_modules/libsodium/dist/modules/libsodium.js
var require_libsodium = __commonJS({
  "node_modules/libsodium/dist/modules/libsodium.js"(exports, module) {
    !function(A3) {
      function I3(A4) {
        "use strict";
        var I4;
        void 0 === (I4 = A4) && (I4 = {});
        var g3 = I4;
        "object" != typeof g3.sodium && ("object" == typeof global ? g3 = global : "object" == typeof window && (g3 = window));
        var C3 = I4;
        return I4.ready = new Promise(function(A5, I5) {
          (i3 = C3).onAbort = I5, i3.print = function(A6) {
          }, i3.printErr = function(A6) {
          }, i3.onRuntimeInitialized = function() {
            try {
              i3._crypto_secretbox_keybytes(), A5();
            } catch (A6) {
              I5(A6);
            }
          }, i3.useBackupModule = function() {
            return new Promise(function(A6, I6) {
              (i4 = {}).onAbort = I6, i4.onRuntimeInitialized = function() {
                Object.keys(C3).forEach(function(A7) {
                  "getRandomValue" !== A7 && delete C3[A7];
                }), Object.keys(i4).forEach(function(A7) {
                  C3[A7] = i4[A7];
                }), A6();
              };
              var g5, B4, Q4, i4 = void 0 !== i4 ? i4 : {}, E4 = Object.assign({}, i4), o3 = "object" == typeof window, a3 = "function" == typeof importScripts, n3 = "object" == typeof process && "object" == typeof process.versions && "string" == typeof process.versions.node, r2 = "";
              if (n3) {
                var f2 = require_fs(), t3 = require_path();
                r2 = a3 ? t3.dirname(r2) + "/" : __dirname + "/", g5 = (A7, I7) => {
                  var g6 = T4(A7);
                  return g6 ? I7 ? g6 : g6.toString() : (A7 = x4(A7) ? new URL(A7) : t3.normalize(A7), f2.readFileSync(A7, I7 ? void 0 : "utf8"));
                }, Q4 = (A7) => {
                  var I7 = g5(A7, true);
                  return I7.buffer || (I7 = new Uint8Array(I7)), I7;
                }, B4 = (A7, I7, g6) => {
                  var C4 = T4(A7);
                  C4 && I7(C4), A7 = x4(A7) ? new URL(A7) : t3.normalize(A7), f2.readFile(A7, function(A8, C5) {
                    A8 ? g6(A8) : I7(C5.buffer);
                  });
                }, process.argv.length > 1 && process.argv[1].replace(/\\/g, "/"), process.argv.slice(2), "undefined" != typeof module && (module.exports = i4), i4.inspect = function() {
                  return "[Emscripten Module object]";
                };
              } else
                (o3 || a3) && (a3 ? r2 = self.location.href : "undefined" != typeof document && document.currentScript && (r2 = document.currentScript.src), r2 = 0 !== r2.indexOf("blob:") ? r2.substr(0, r2.replace(/[?#].*/, "").lastIndexOf("/") + 1) : "", g5 = (A7) => {
                  try {
                    var I7 = new XMLHttpRequest();
                    return I7.open("GET", A7, false), I7.send(null), I7.responseText;
                  } catch (I8) {
                    var g6 = T4(A7);
                    if (g6)
                      return function(A8) {
                        for (var I9 = [], g7 = 0; g7 < A8.length; g7++) {
                          var C4 = A8[g7];
                          C4 > 255 && (C4 &= 255), I9.push(String.fromCharCode(C4));
                        }
                        return I9.join("");
                      }(g6);
                    throw I8;
                  }
                }, a3 && (Q4 = (A7) => {
                  try {
                    var I7 = new XMLHttpRequest();
                    return I7.open("GET", A7, false), I7.responseType = "arraybuffer", I7.send(null), new Uint8Array(I7.response);
                  } catch (I8) {
                    var g6 = T4(A7);
                    if (g6)
                      return g6;
                    throw I8;
                  }
                }), B4 = (A7, I7, g6) => {
                  var C4 = new XMLHttpRequest();
                  C4.open("GET", A7, true), C4.responseType = "arraybuffer", C4.onload = () => {
                    if (200 == C4.status || 0 == C4.status && C4.response)
                      I7(C4.response);
                    else {
                      var B5 = T4(A7);
                      B5 ? I7(B5.buffer) : g6();
                    }
                  }, C4.onerror = g6, C4.send(null);
                });
              i4.print;
              var e3, c3 = i4.printErr || void 0;
              Object.assign(i4, E4), E4 = null, i4.arguments && i4.arguments, i4.thisProgram && i4.thisProgram, i4.quit && i4.quit, i4.wasmBinary && (e3 = i4.wasmBinary), i4.noExitRuntime;
              var y4, D3 = { Memory: function(A7) {
                this.buffer = new ArrayBuffer(65536 * A7.initial);
              }, Module: function(A7) {
              }, Instance: function(A7, I7) {
                this.exports = function(A8) {
                  for (var I8, g6 = new Uint8Array(123), C4 = 25; C4 >= 0; --C4)
                    g6[48 + C4] = 52 + C4, g6[65 + C4] = C4, g6[97 + C4] = 26 + C4;
                  function B5(A9, I9, C5) {
                    for (var B6, Q6, i5 = 0, E5 = I9, o4 = C5.length, a4 = I9 + (3 * o4 >> 2) - ("=" == C5[o4 - 2]) - ("=" == C5[o4 - 1]); i5 < o4; i5 += 4)
                      B6 = g6[C5.charCodeAt(i5 + 1)], Q6 = g6[C5.charCodeAt(i5 + 2)], A9[E5++] = g6[C5.charCodeAt(i5)] << 2 | B6 >> 4, E5 < a4 && (A9[E5++] = B6 << 4 | Q6 >> 2), E5 < a4 && (A9[E5++] = Q6 << 6 | g6[C5.charCodeAt(i5 + 3)]);
                  }
                  function Q5() {
                    throw new Error("abort");
                  }
                  return g6[43] = 62, g6[47] = 63, function(A9) {
                    var g7 = A9.a, C5 = g7.a, i5 = C5.buffer;
                    C5.grow = function(A10) {
                      A10 |= 0;
                      var g8 = 0 | rI(), B6 = g8 + A10 | 0;
                      if (g8 < B6 && B6 < 65536) {
                        var Q6 = new ArrayBuffer(r3(B6, 65536));
                        new Int8Array(Q6).set(E5), E5 = new Int8Array(Q6), new Int16Array(Q6), o4 = new Int32Array(Q6), a4 = new Uint8Array(Q6), new Uint16Array(Q6), n4 = new Uint32Array(Q6), new Float32Array(Q6), new Float64Array(Q6), i5 = Q6, C5.buffer = i5, I8 = a4;
                      }
                      return g8;
                    };
                    var E5 = new Int8Array(i5), o4 = (new Int16Array(i5), new Int32Array(i5)), a4 = new Uint8Array(i5), n4 = (new Uint16Array(i5), new Uint32Array(i5)), r3 = (new Float32Array(i5), new Float64Array(i5), Math.imul), f3 = (Math.fround, Math.abs, Math.clz32), t4 = (Math.min, Math.max, Math.floor, Math.ceil, Math.trunc, Math.sqrt, g7.b), e4 = g7.c, c4 = g7.d, y5 = g7.e, D4 = 101744, w4 = 0;
                    function h4(A10, I9) {
                      var g8, C6, B6, Q6, i6, o5 = 0, n5 = 0, r4 = 0, f4 = 0, t5 = 0, e5 = 0, c5 = 0, y6 = 0, D5 = 0, h5 = 0, s5 = 0, p6 = 0, u6 = 0, k6 = 0, F6 = 0, l5 = 0, S6 = 0, H6 = 0, M6 = 0, G6 = 0, U6 = 0, J6 = 0, N6 = 0, Y5 = 0, b6 = 0, _6 = 0, K6 = 0, P6 = 0, v6 = 0, m5 = 0, d4 = 0, L6 = 0, R6 = 0, x6 = 0, j5 = 0, X6 = 0, q5 = 0, z6 = 0, V6 = 0, O6 = 0, T6 = 0, W6 = 0, Z5 = 0, $5 = 0, AA2 = 0, IA2 = 0, gA2 = 0, CA2 = 0, BA2 = 0, QA2 = 0, iA2 = 0, EA2 = 0, oA2 = 0, aA2 = 0, rA2 = 0, fA2 = 0, tA2 = 0, eA2 = 0, cA2 = 0, yA2 = 0, DA2 = 0, wA2 = 0, hA2 = 0, sA2 = 0, pA2 = 0, uA2 = 0, kA2 = 0, FA2 = 0, lA2 = 0, SA2 = 0, HA2 = 0, MA2 = 0, GA2 = 0, UA2 = 0;
                      eA2 = a4[I9 + 40 | 0] | a4[I9 + 41 | 0] << 8 | a4[I9 + 42 | 0] << 16 | a4[I9 + 43 | 0] << 24, yA2 = o5 = a4[I9 + 44 | 0] | a4[I9 + 45 | 0] << 8 | a4[I9 + 46 | 0] << 16 | a4[I9 + 47 | 0] << 24, gA2 = a4[I9 + 104 | 0] | a4[I9 + 105 | 0] << 8 | a4[I9 + 106 | 0] << 16 | a4[I9 + 107 | 0] << 24, DA2 = o5 = a4[I9 + 108 | 0] | a4[I9 + 109 | 0] << 8 | a4[I9 + 110 | 0] << 16 | a4[I9 + 111 | 0] << 24, o5 = a4[I9 + 68 | 0] | a4[I9 + 69 | 0] << 8 | a4[I9 + 70 | 0] << 16 | a4[I9 + 71 | 0] << 24, q5 = a4[I9 + 64 | 0] | a4[I9 + 65 | 0] << 8 | a4[I9 + 66 | 0] << 16 | a4[I9 + 67 | 0] << 24, BA2 = o5, HA2 = o5 = a4[I9 + 36 | 0] | a4[I9 + 37 | 0] << 8 | a4[I9 + 38 | 0] << 16 | a4[I9 + 39 | 0] << 24, S6 = o5, oA2 = a4[I9 + 120 | 0] | a4[I9 + 121 | 0] << 8 | a4[I9 + 122 | 0] << 16 | a4[I9 + 123 | 0] << 24, pA2 = o5 = a4[I9 + 124 | 0] | a4[I9 + 125 | 0] << 8 | a4[I9 + 126 | 0] << 16 | a4[I9 + 127 | 0] << 24, B6 = o5 = a4[I9 + 92 | 0] | a4[I9 + 93 | 0] << 8 | a4[I9 + 94 | 0] << 16 | a4[I9 + 95 | 0] << 24, g8 = a4[I9 + 88 | 0] | a4[I9 + 89 | 0] << 8 | a4[I9 + 90 | 0] << 16 | a4[I9 + 91 | 0] << 24, X6 = o5, EA2 = a4[I9 + 80 | 0] | a4[I9 + 81 | 0] << 8 | a4[I9 + 82 | 0] << 16 | a4[I9 + 83 | 0] << 24, hA2 = o5 = a4[I9 + 84 | 0] | a4[I9 + 85 | 0] << 8 | a4[I9 + 86 | 0] << 16 | a4[I9 + 87 | 0] << 24, z6 = o5, QA2 = a4[A10 + 16 | 0] | a4[A10 + 17 | 0] << 8 | a4[A10 + 18 | 0] << 16 | a4[A10 + 19 | 0] << 24, o5 = (rA2 = a4[A10 + 52 | 0] | a4[A10 + 53 | 0] << 8 | a4[A10 + 54 | 0] << 16 | a4[A10 + 55 | 0] << 24) + S6 | 0, x6 = (aA2 = a4[A10 + 48 | 0] | a4[A10 + 49 | 0] << 8 | a4[A10 + 50 | 0] << 16 | a4[A10 + 51 | 0] << 24) + (fA2 = a4[I9 + 32 | 0] | a4[I9 + 33 | 0] << 8 | a4[I9 + 34 | 0] << 16 | a4[I9 + 35 | 0] << 24) | 0, o5 = (a4[A10 + 20 | 0] | a4[A10 + 21 | 0] << 8 | a4[A10 + 22 | 0] << 16 | a4[A10 + 23 | 0] << 24) + (aA2 >>> 0 > x6 >>> 0 ? o5 + 1 | 0 : o5) | 0, o5 = (QA2 = (n5 = x6) >>> 0 > (x6 = x6 + QA2 | 0) >>> 0 ? o5 + 1 | 0 : o5) + yA2 | 0, iA2 = cA2 = x6 + eA2 | 0, cA2 = o5 = cA2 >>> 0 < x6 >>> 0 ? o5 + 1 | 0 : o5, x6 = nA(x6 ^ (a4[A10 + 80 | 0] | a4[A10 + 81 | 0] << 8 | a4[A10 + 82 | 0] << 16 | a4[A10 + 83 | 0] << 24) ^ -79577749, QA2 ^ (a4[A10 + 84 | 0] | a4[A10 + 85 | 0] << 8 | a4[A10 + 86 | 0] << 16 | a4[A10 + 87 | 0] << 24) ^ 528734635, 32), FA2 = o5 = w4, o5 = o5 + 1013904242 | 0, QA2 = x6, T6 = o5 = (x6 = x6 - 23791573 | 0) >>> 0 < 4271175723 ? o5 + 1 | 0 : o5, rA2 = nA(x6 ^ aA2, o5 ^ rA2, 40), o5 = (o5 = cA2) + (cA2 = w4) | 0, aA2 = nA(QA2 ^ (D5 = aA2 = rA2 + iA2 | 0), FA2 ^ (h5 = D5 >>> 0 < rA2 >>> 0 ? o5 + 1 | 0 : o5), 48), o5 = T6 + (L6 = w4) | 0, k6 = o5 = (aA2 = x6 + (s5 = aA2) | 0) >>> 0 < x6 >>> 0 ? o5 + 1 | 0 : o5, aA2 = o5 = nA(rA2 ^ (u6 = aA2), cA2 ^ o5, 1), T6 = x6 = w4, cA2 = a4[I9 + 24 | 0] | a4[I9 + 25 | 0] << 8 | a4[I9 + 26 | 0] << 16 | a4[I9 + 27 | 0] << 24, FA2 = o5 = a4[I9 + 28 | 0] | a4[I9 + 29 | 0] << 8 | a4[I9 + 30 | 0] << 16 | a4[I9 + 31 | 0] << 24, tA2 = a4[A10 + 8 | 0] | a4[A10 + 9 | 0] << 8 | a4[A10 + 10 | 0] << 16 | a4[A10 + 11 | 0] << 24, x6 = (rA2 = a4[I9 + 16 | 0] | a4[I9 + 17 | 0] << 8 | a4[I9 + 18 | 0] << 16 | a4[I9 + 19 | 0] << 24) + (QA2 = a4[A10 + 40 | 0] | a4[A10 + 41 | 0] << 8 | a4[A10 + 42 | 0] << 16 | a4[A10 + 43 | 0] << 24) | 0, o5 = (MA2 = a4[I9 + 20 | 0] | a4[I9 + 21 | 0] << 8 | a4[I9 + 22 | 0] << 16 | a4[I9 + 23 | 0] << 24) + (UA2 = a4[A10 + 44 | 0] | a4[A10 + 45 | 0] << 8 | a4[A10 + 46 | 0] << 16 | a4[A10 + 47 | 0] << 24) | 0, o5 = (a4[A10 + 12 | 0] | a4[A10 + 13 | 0] << 8 | a4[A10 + 14 | 0] << 16 | a4[A10 + 15 | 0] << 24) + (x6 >>> 0 < QA2 >>> 0 ? o5 + 1 | 0 : o5) | 0, o5 = FA2 + (iA2 = (n5 = x6) >>> 0 > (x6 = x6 + tA2 | 0) >>> 0 ? o5 + 1 | 0 : o5) | 0, o5 = (tA2 = x6 + cA2 | 0) >>> 0 < x6 >>> 0 ? o5 + 1 | 0 : o5, n5 = nA(x6 ^ (a4[A10 + 72 | 0] | a4[A10 + 73 | 0] << 8 | a4[A10 + 74 | 0] << 16 | a4[A10 + 75 | 0] << 24) ^ 725511199, iA2 ^ (a4[A10 + 76 | 0] | a4[A10 + 77 | 0] << 8 | a4[A10 + 78 | 0] << 16 | a4[A10 + 79 | 0] << 24) ^ -1694144372, 32), e5 = nA(QA2 ^ (r4 = n5 - 2067093701 | 0), UA2 ^ (m5 = (b6 = x6 = w4) - ((n5 >>> 0 < 2067093701) + 1150833018 | 0) | 0), 40), o5 = (R6 = w4) + o5 | 0, o5 = (Y5 = (F6 = x6 = e5 + tA2 | 0) >>> 0 < e5 >>> 0 ? o5 + 1 | 0 : o5) + T6 | 0, o5 = (F6 >>> 0 > (x6 = F6 + aA2 | 0) >>> 0 ? o5 + 1 | 0 : o5) + z6 | 0, o5 = (QA2 = (f4 = x6) >>> 0 > (x6 = x6 + EA2 | 0) >>> 0 ? o5 + 1 | 0 : o5) + X6 | 0, P6 = X6 = x6 + g8 | 0, y6 = o5 = X6 >>> 0 < x6 >>> 0 ? o5 + 1 | 0 : o5, p6 = aA2, uA2 = T6, T6 = x6, iA2 = QA2, aA2 = a4[I9 + 8 | 0] | a4[I9 + 9 | 0] << 8 | a4[I9 + 10 | 0] << 16 | a4[I9 + 11 | 0] << 24, x6 = o5 = a4[I9 + 12 | 0] | a4[I9 + 13 | 0] << 8 | a4[I9 + 14 | 0] << 16 | a4[I9 + 15 | 0] << 24, UA2 = o5 = a4[0 | A10] | a4[A10 + 1 | 0] << 8 | a4[A10 + 2 | 0] << 16 | a4[A10 + 3 | 0] << 24, Q6 = QA2 = a4[A10 + 4 | 0] | a4[A10 + 5 | 0] << 8 | a4[A10 + 6 | 0] << 16 | a4[A10 + 7 | 0] << 24, z6 = o5, o5 = (lA2 = a4[I9 + 4 | 0] | a4[I9 + 5 | 0] << 8 | a4[I9 + 6 | 0] << 16 | a4[I9 + 7 | 0] << 24) + (t5 = a4[A10 + 36 | 0] | a4[A10 + 37 | 0] << 8 | a4[A10 + 38 | 0] << 16 | a4[A10 + 39 | 0] << 24) | 0, o5 = Q6 + ((X6 = a4[A10 + 32 | 0] | a4[A10 + 33 | 0] << 8 | a4[A10 + 34 | 0] << 16 | a4[A10 + 35 | 0] << 24) >>> 0 > (f4 = X6 + (QA2 = a4[0 | I9] | a4[I9 + 1 | 0] << 8 | a4[I9 + 2 | 0] << 16 | a4[I9 + 3 | 0] << 24) | 0) >>> 0 ? o5 + 1 | 0 : o5) | 0, o5 = (tA2 = (z6 = f4 + z6 | 0) >>> 0 < f4 >>> 0 ? o5 + 1 | 0 : o5) + x6 | 0, sA2 = f4 = z6 + aA2 | 0, f4 = o5 = f4 >>> 0 < z6 >>> 0 ? o5 + 1 | 0 : o5, c5 = X6, X6 = nA(z6 ^ (a4[0 | (o5 = A10 - -64 | 0)] | a4[o5 + 1 | 0] << 8 | a4[o5 + 2 | 0] << 16 | a4[o5 + 3 | 0] << 24) ^ -1377402159, tA2 ^ (a4[o5 + 4 | 0] | a4[o5 + 5 | 0] << 8 | a4[o5 + 6 | 0] << 16 | a4[o5 + 7 | 0] << 24) ^ 1359893119, 32), tA2 = o5 = w4, o5 = o5 + 1779033703 | 0, z6 = X6, U6 = o5 = (X6 = X6 - 205731576 | 0) >>> 0 < 4089235720 ? o5 + 1 | 0 : o5, t5 = nA(c5 ^ (l5 = X6), o5 ^ t5, 40), o5 = (K6 = w4) + f4 | 0, c5 = nA(z6 ^ (f4 = X6 = t5 + sA2 | 0), tA2 ^ (H6 = t5 >>> 0 > f4 >>> 0 ? o5 + 1 | 0 : o5), 48), o5 = nA(c5 ^ T6, (Z5 = w4) ^ iA2, 32), O6 = X6 = w4, v6 = o5, C6 = o5 = a4[I9 + 60 | 0] | a4[I9 + 61 | 0] << 8 | a4[I9 + 62 | 0] << 16 | a4[I9 + 63 | 0] << 24, tA2 = sA2 = a4[I9 + 56 | 0] | a4[I9 + 57 | 0] << 8 | a4[I9 + 58 | 0] << 16 | a4[I9 + 59 | 0] << 24, G6 = a4[A10 + 24 | 0] | a4[A10 + 25 | 0] << 8 | a4[A10 + 26 | 0] << 16 | a4[A10 + 27 | 0] << 24, X6 = (iA2 = a4[I9 + 48 | 0] | a4[I9 + 49 | 0] << 8 | a4[I9 + 50 | 0] << 16 | a4[I9 + 51 | 0] << 24) + (z6 = a4[A10 + 56 | 0] | a4[A10 + 57 | 0] << 8 | a4[A10 + 58 | 0] << 16 | a4[A10 + 59 | 0] << 24) | 0, o5 = (SA2 = a4[I9 + 52 | 0] | a4[I9 + 53 | 0] << 8 | a4[I9 + 54 | 0] << 16 | a4[I9 + 55 | 0] << 24) + (_6 = a4[A10 + 60 | 0] | a4[A10 + 61 | 0] << 8 | a4[A10 + 62 | 0] << 16 | a4[A10 + 63 | 0] << 24) | 0, o5 = (a4[A10 + 28 | 0] | a4[A10 + 29 | 0] << 8 | a4[A10 + 30 | 0] << 16 | a4[A10 + 31 | 0] << 24) + (X6 >>> 0 < z6 >>> 0 ? o5 + 1 | 0 : o5) | 0, o5 = C6 + (T6 = (M6 = X6) >>> 0 > (X6 = G6 + X6 | 0) >>> 0 ? o5 + 1 | 0 : o5) | 0, o5 = (G6 = X6 + tA2 | 0) >>> 0 < X6 >>> 0 ? o5 + 1 | 0 : o5, T6 = nA(X6 ^ (a4[A10 + 88 | 0] | a4[A10 + 89 | 0] << 8 | a4[A10 + 90 | 0] << 16 | a4[A10 + 91 | 0] << 24) ^ 327033209, T6 ^ (a4[A10 + 92 | 0] | a4[A10 + 93 | 0] << 8 | a4[A10 + 94 | 0] << 16 | a4[A10 + 95 | 0] << 24) ^ 1541459225, 32), z6 = nA(z6 ^ (tA2 = T6 + 1595750129 | 0), (M6 = _6) ^ (_6 = (J6 = X6 = w4) - ((T6 >>> 0 < 2699217167) + 1521486533 | 0) | 0), 40), o5 = (IA2 = w4) + o5 | 0, X6 = nA((G6 = X6 = z6 + G6 | 0) ^ T6, J6 ^ (M6 = G6 >>> 0 < z6 >>> 0 ? o5 + 1 | 0 : o5), 48), o5 = _6 + ($5 = w4) | 0, N6 = o5 = (X6 = tA2 + (_6 = X6) | 0) >>> 0 < tA2 >>> 0 ? o5 + 1 | 0 : o5, o5 = O6 + o5 | 0, V6 = p6 ^ (T6 = v6 + (J6 = X6) | 0), p6 = o5 = T6 >>> 0 < J6 >>> 0 ? o5 + 1 | 0 : o5, tA2 = nA(V6, o5 ^ uA2, 40), o5 = (uA2 = w4) + y6 | 0, X6 = nA(P6 = v6 ^ (y6 = X6 = tA2 + P6 | 0), O6 ^ (v6 = y6 >>> 0 < tA2 >>> 0 ? o5 + 1 | 0 : o5), 48), o5 = p6 + (CA2 = w4) | 0, O6 = o5 = (p6 = T6 + (P6 = X6) | 0) >>> 0 < T6 >>> 0 ? o5 + 1 | 0 : o5, X6 = (d4 = nA(p6 ^ tA2, uA2 ^ o5, 1)) + (T6 = a4[I9 + 72 | 0] | a4[I9 + 73 | 0] << 8 | a4[I9 + 74 | 0] << 16 | a4[I9 + 75 | 0] << 24) | 0, o5 = (wA2 = w4) + (uA2 = a4[I9 + 76 | 0] | a4[I9 + 77 | 0] << 8 | a4[I9 + 78 | 0] << 16 | a4[I9 + 79 | 0] << 24) | 0, kA2 = X6, j5 = X6 >>> 0 < T6 >>> 0 ? o5 + 1 | 0 : o5, W6 = DA2, X6 = a4[I9 + 96 | 0] | a4[I9 + 97 | 0] << 8 | a4[I9 + 98 | 0] << 16 | a4[I9 + 99 | 0] << 24, tA2 = o5 = a4[I9 + 100 | 0] | a4[I9 + 101 | 0] << 8 | a4[I9 + 102 | 0] << 16 | a4[I9 + 103 | 0] << 24, z6 = (o5 = D5) + (D5 = nA(J6 ^ z6, N6 ^ IA2, 1)) | 0, o5 = (J6 = w4) + h5 | 0, o5 = (D5 >>> 0 > z6 >>> 0 ? o5 + 1 | 0 : o5) + tA2 | 0, o5 = (h5 = (h5 = z6) >>> 0 > (z6 = X6 + z6 | 0) >>> 0 ? o5 + 1 | 0 : o5) + W6 | 0, V6 = N6 = z6 + gA2 | 0, N6 = o5 = N6 >>> 0 < z6 >>> 0 ? o5 + 1 | 0 : o5, F6 = nA(n5 ^ F6, Y5 ^ b6, 48), Y5 = o5 = nA(F6 ^ z6, (b6 = w4) ^ h5, 32), o5 = U6 + Z5 | 0, o5 = (IA2 = z6 = w4) + (l5 = (z6 = c5 + l5 | 0) >>> 0 < c5 >>> 0 ? o5 + 1 | 0 : o5) | 0, U6 = o5 = (h5 = z6) >>> 0 > (c5 = h5 + Y5 | 0) >>> 0 ? o5 + 1 | 0 : o5, D5 = nA(c5 ^ D5, J6 ^ o5, 40), o5 = (Z5 = w4) + N6 | 0, o5 = (J6 = D5 >>> 0 > (N6 = z6 = D5 + V6 | 0) >>> 0 ? o5 + 1 | 0 : o5) + j5 | 0, o5 = (n5 = N6 >>> 0 > (z6 = N6 + kA2 | 0) >>> 0 ? o5 + 1 | 0 : o5) + pA2 | 0, kA2 = j5 = z6 + oA2 | 0, j5 = o5 = j5 >>> 0 < z6 >>> 0 ? o5 + 1 | 0 : o5, V6 = z6, W6 = n5, z6 = a4[I9 + 116 | 0] | a4[I9 + 117 | 0] << 8 | a4[I9 + 118 | 0] << 16 | a4[I9 + 119 | 0] << 24, I9 = a4[I9 + 112 | 0] | a4[I9 + 113 | 0] << 8 | a4[I9 + 114 | 0] << 16 | a4[I9 + 115 | 0] << 24, t5 = nA(t5 ^ h5, l5 ^ K6, 1), o5 = (K6 = w4) + M6 | 0, o5 = ((n5 = t5 + G6 | 0) >>> 0 < t5 >>> 0 ? o5 + 1 | 0 : o5) + z6 | 0, o5 = (h5 = (l5 = n5) >>> 0 > (n5 = I9 + n5 | 0) >>> 0 ? o5 + 1 | 0 : o5) + pA2 | 0, GA2 = l5 = n5 + oA2 | 0, l5 = o5 = l5 >>> 0 < n5 >>> 0 ? o5 + 1 | 0 : o5, o5 = nA(n5 ^ s5, h5 ^ L6, 32), AA2 = n5 = w4, s5 = o5, h5 = n5, o5 = b6 + m5 | 0, F6 = n5 = r4 + F6 | 0, G6 = o5 = n5 >>> 0 < r4 >>> 0 ? o5 + 1 | 0 : o5, o5 = o5 + h5 | 0, M6 = n5 = n5 + s5 | 0, L6 = o5 = F6 >>> 0 > n5 >>> 0 ? o5 + 1 | 0 : o5, h5 = nA(n5 ^ t5, K6 ^ o5, 40), o5 = (K6 = w4) + l5 | 0, s5 = nA((n5 = h5 + GA2 | 0) ^ s5, AA2 ^ (r4 = n5 >>> 0 < h5 >>> 0 ? o5 + 1 | 0 : o5), 48), o5 = nA(s5 ^ V6, (GA2 = w4) ^ W6, 32), AA2 = t5 = w4, l5 = o5, V6 = t5, e5 = nA(e5 ^ F6, G6 ^ R6, 1), o5 = H6 + (F6 = w4) | 0, o5 = ((t5 = f4) >>> 0 > (f4 = f4 + e5 | 0) >>> 0 ? o5 + 1 | 0 : o5) + BA2 | 0, o5 = (f4 = (t5 = f4 + q5 | 0) >>> 0 < f4 >>> 0 ? o5 + 1 | 0 : o5) + uA2 | 0, W6 = H6 = t5 + T6 | 0, H6 = o5 = H6 >>> 0 < t5 >>> 0 ? o5 + 1 | 0 : o5, G6 = e5, t5 = nA(t5 ^ _6, f4 ^ $5, 32), o5 = (_6 = w4) + k6 | 0, u6 = nA(G6 ^ (f4 = e5 = t5 + u6 | 0), (k6 = t5 >>> 0 > f4 >>> 0 ? o5 + 1 | 0 : o5) ^ F6, 40), o5 = ($5 = w4) + H6 | 0, F6 = e5 = u6 + W6 | 0, e5 = nA(t5 ^ e5, _6 ^ (H6 = e5 >>> 0 < u6 >>> 0 ? o5 + 1 | 0 : o5), 48), o5 = k6 + (i6 = w4) | 0, k6 = e5, _6 = o5 = (e5 = f4 + e5 | 0) >>> 0 < f4 >>> 0 ? o5 + 1 | 0 : o5, o5 = o5 + V6 | 0, o5 = (G6 = e5) >>> 0 > (e5 = e5 + l5 | 0) >>> 0 ? o5 + 1 | 0 : o5, V6 = e5, e5 ^= d4, d4 = o5, t5 = nA(e5, wA2 ^ o5, 40), o5 = (wA2 = w4) + j5 | 0, j5 = e5 = t5 + kA2 | 0, o5 = B6 + (W6 = t5 >>> 0 > e5 >>> 0 ? o5 + 1 | 0 : o5) | 0, kA2 = e5 = e5 + g8 | 0, b6 = o5 = e5 >>> 0 < g8 >>> 0 ? o5 + 1 | 0 : o5, e5 = n5, m5 = gA2, R6 = DA2, n5 = nA(Y5 ^ N6, J6 ^ IA2, 48), o5 = U6 + (IA2 = w4) | 0, Y5 = n5, U6 = o5 = (f4 = c5 + n5 | 0) >>> 0 < c5 >>> 0 ? o5 + 1 | 0 : o5, n5 = nA(f4 ^ D5, Z5 ^ o5, 1), o5 = (c5 = w4) + R6 | 0, o5 = ((D5 = n5 + m5 | 0) >>> 0 < n5 >>> 0 ? o5 + 1 | 0 : o5) + r4 | 0, o5 = SA2 + (e5 = (r4 = e5 + D5 | 0) >>> 0 < D5 >>> 0 ? o5 + 1 | 0 : o5) | 0, N6 = D5 = r4 + iA2 | 0, D5 = o5 = D5 >>> 0 < iA2 >>> 0 ? o5 + 1 | 0 : o5, r4 = nA(r4 ^ k6, e5 ^ i6, 32), o5 = O6 + (J6 = w4) | 0, k6 = r4, p6 = o5 = (r4 = p6 + r4 | 0) >>> 0 < p6 >>> 0 ? o5 + 1 | 0 : o5, e5 = nA(n5 ^ r4, o5 ^ c5, 40), o5 = (o5 = D5) + (D5 = w4) | 0, c5 = n5 = e5 + N6 | 0, n5 = nA(n5 ^ k6, J6 ^ (N6 = n5 >>> 0 < e5 >>> 0 ? o5 + 1 | 0 : o5), 48), o5 = p6 + (Z5 = w4) | 0, J6 = n5, O6 = o5 = (p6 = r4 + n5 | 0) >>> 0 < r4 >>> 0 ? o5 + 1 | 0 : o5, n5 = nA(e5 ^ p6, D5 ^ o5, 1), o5 = (D5 = w4) + b6 | 0, o5 = C6 + (e5 = (r4 = n5 + kA2 | 0) >>> 0 < n5 >>> 0 ? o5 + 1 | 0 : o5) | 0, kA2 = k6 = r4 + sA2 | 0, k6 = o5 = k6 >>> 0 < sA2 >>> 0 ? o5 + 1 | 0 : o5, b6 = n5, m5 = D5, o5 = L6 + GA2 | 0, o5 = (n5 = s5 + M6 | 0) >>> 0 < s5 >>> 0 ? o5 + 1 | 0 : o5, s5 = n5, M6 = o5, o5 = nA(n5 ^ h5, K6 ^ o5, 1), h5 = D5 = w4, n5 = o5, o5 = H6 + z6 | 0, o5 = ((F6 = I9 + F6 | 0) >>> 0 < I9 >>> 0 ? o5 + 1 | 0 : o5) + D5 | 0, o5 = hA2 + (F6 = (D5 = n5 + F6 | 0) >>> 0 < F6 >>> 0 ? o5 + 1 | 0 : o5) | 0, L6 = H6 = D5 + EA2 | 0, H6 = o5 = H6 >>> 0 < EA2 >>> 0 ? o5 + 1 | 0 : o5, D5 = nA(D5 ^ P6, F6 ^ CA2, 32), o5 = U6 + (P6 = w4) | 0, F6 = D5, U6 = o5 = (U6 = f4) >>> 0 > (f4 = f4 + D5 | 0) >>> 0 ? o5 + 1 | 0 : o5, D5 = nA(n5 ^ f4, o5 ^ h5, 40), o5 = (K6 = w4) + H6 | 0, h5 = n5 = D5 + L6 | 0, n5 = nA(H6 = n5 ^ F6, P6 ^ (F6 = n5 >>> 0 < D5 >>> 0 ? o5 + 1 | 0 : o5), 48), o5 = U6 + (CA2 = w4) | 0, U6 = n5, H6 = n5 = f4 + n5 | 0, P6 = o5 = n5 >>> 0 < f4 >>> 0 ? o5 + 1 | 0 : o5, L6 = r4, R6 = e5, n5 = nA(u6 ^ G6, _6 ^ $5, 1), o5 = (f4 = w4) + S6 | 0, o5 = v6 + ((r4 = n5 + fA2 | 0) >>> 0 < n5 >>> 0 ? o5 + 1 | 0 : o5) | 0, o5 = BA2 + (e5 = (r4 = r4 + y6 | 0) >>> 0 < y6 >>> 0 ? o5 + 1 | 0 : o5) | 0, v6 = y6 = r4 + q5 | 0, y6 = o5 = y6 >>> 0 < r4 >>> 0 ? o5 + 1 | 0 : o5, u6 = n5, n5 = (r4 = nA(r4 ^ Y5, e5 ^ IA2, 32)) + s5 | 0, o5 = (s5 = w4) + M6 | 0, e5 = n5, f4 = nA(n5 ^ u6, (Y5 = n5 >>> 0 < r4 >>> 0 ? o5 + 1 | 0 : o5) ^ f4, 40), o5 = (IA2 = w4) + y6 | 0, y6 = n5 = f4 + v6 | 0, G6 = nA(n5 ^ r4, s5 ^ (v6 = n5 >>> 0 < f4 >>> 0 ? o5 + 1 | 0 : o5), 48), r4 = nA(G6 ^ L6, (o5 = R6) ^ (R6 = w4), 32), o5 = (L6 = w4) + P6 | 0, s5 = n5 = r4 + H6 | 0, u6 = nA(n5 ^ b6, (M6 = n5 >>> 0 < r4 >>> 0 ? o5 + 1 | 0 : o5) ^ m5, 40), o5 = (b6 = w4) + k6 | 0, k6 = n5 = u6 + kA2 | 0, n5 = nA(n5 ^ r4, L6 ^ (_6 = n5 >>> 0 < u6 >>> 0 ? o5 + 1 | 0 : o5), 48), o5 = M6 + ($5 = w4) | 0, M6 = n5, L6 = o5 = (r4 = s5) >>> 0 > (s5 = s5 + n5 | 0) >>> 0 ? o5 + 1 | 0 : o5, n5 = nA(s5 ^ u6, b6 ^ o5, 1), o5 = pA2 + (kA2 = w4) | 0, b6 = n5, GA2 = n5 = oA2 + n5 | 0, u6 = o5 = n5 >>> 0 < oA2 >>> 0 ? o5 + 1 | 0 : o5, r4 = eA2, n5 = nA(D5 ^ H6, K6 ^ P6, 1), o5 = N6 + (D5 = w4) | 0, o5 = ((H6 = c5) >>> 0 > (c5 = n5 + c5 | 0) >>> 0 ? o5 + 1 | 0 : o5) + yA2 | 0, o5 = (H6 = (r4 = r4 + c5 | 0) >>> 0 < c5 >>> 0 ? o5 + 1 | 0 : o5) + FA2 | 0, m5 = c5 = r4 + cA2 | 0, N6 = o5 = c5 >>> 0 < r4 >>> 0 ? o5 + 1 | 0 : o5, P6 = n5, c5 = nA(l5 ^ j5, W6 ^ AA2, 48), o5 = nA(c5 ^ r4, (K6 = w4) ^ H6, 32), AA2 = n5 = w4, l5 = o5, r4 = n5, o5 = Y5 + R6 | 0, o5 = (n5 = e5 + G6 | 0) >>> 0 < e5 >>> 0 ? o5 + 1 | 0 : o5, e5 = n5, Y5 = o5, o5 = o5 + r4 | 0, H6 = n5 = n5 + l5 | 0, G6 = o5 = e5 >>> 0 > n5 >>> 0 ? o5 + 1 | 0 : o5, r4 = nA(n5 ^ P6, o5 ^ D5, 40), o5 = (o5 = N6) + (N6 = w4) | 0, P6 = n5 = r4 + m5 | 0, j5 = o5 = n5 >>> 0 < r4 >>> 0 ? o5 + 1 | 0 : o5, o5 = o5 + u6 | 0, W6 = o5 = (D5 = n5 + GA2 | 0) >>> 0 < n5 >>> 0 ? o5 + 1 | 0 : o5, u6 = o5, n5 = nA(f4 ^ e5, Y5 ^ IA2, 1), o5 = x6 + (f4 = w4) | 0, o5 = F6 + ((e5 = n5 + aA2 | 0) >>> 0 < aA2 >>> 0 ? o5 + 1 | 0 : o5) | 0, o5 = tA2 + (h5 = (e5 = e5 + h5 | 0) >>> 0 < h5 >>> 0 ? o5 + 1 | 0 : o5) | 0, m5 = F6 = e5 + X6 | 0, F6 = o5 = F6 >>> 0 < X6 >>> 0 ? o5 + 1 | 0 : o5, Y5 = n5, o5 = nA(e5 ^ J6, h5 ^ Z5, 32), R6 = n5 = w4, e5 = o5, h5 = n5, o5 = K6 + d4 | 0, J6 = n5 = c5 + V6 | 0, d4 = o5 = n5 >>> 0 < c5 >>> 0 ? o5 + 1 | 0 : o5, o5 = o5 + h5 | 0, o5 = (c5 = n5 + e5 | 0) >>> 0 < n5 >>> 0 ? o5 + 1 | 0 : o5, n5 = c5 ^ Y5, Y5 = o5, h5 = nA(n5, o5 ^ f4, 40), o5 = (Z5 = w4) + F6 | 0, f4 = n5 = h5 + m5 | 0, V6 = nA(n5 ^ e5, R6 ^ (F6 = n5 >>> 0 < h5 >>> 0 ? o5 + 1 | 0 : o5), 48), o5 = nA(V6 ^ D5, (IA2 = w4) ^ u6, 32), GA2 = n5 = w4, m5 = o5, u6 = n5, n5 = nA(t5 ^ J6, d4 ^ wA2, 1), o5 = v6 + (t5 = w4) | 0, o5 = lA2 + ((e5 = n5 + y6 | 0) >>> 0 < y6 >>> 0 ? o5 + 1 | 0 : o5) | 0, o5 = (y6 = (e5 = e5 + QA2 | 0) >>> 0 < QA2 >>> 0 ? o5 + 1 | 0 : o5) + MA2 | 0, J6 = v6 = e5 + rA2 | 0, v6 = o5 = v6 >>> 0 < e5 >>> 0 ? o5 + 1 | 0 : o5, e5 = nA(e5 ^ U6, y6 ^ CA2, 32), o5 = O6 + (d4 = w4) | 0, U6 = e5, y6 = t5, t5 = o5 = (e5 = p6 + e5 | 0) >>> 0 < p6 >>> 0 ? o5 + 1 | 0 : o5, y6 = nA(n5 ^ e5, y6 ^ o5, 40), o5 = (CA2 = w4) + v6 | 0, p6 = n5 = y6 + J6 | 0, n5 = nA(J6 = n5 ^ U6, d4 ^ (U6 = n5 >>> 0 < y6 >>> 0 ? o5 + 1 | 0 : o5), 48), o5 = t5 + (K6 = w4) | 0, t5 = n5, v6 = n5 = e5 + n5 | 0, J6 = o5 = n5 >>> 0 < e5 >>> 0 ? o5 + 1 | 0 : o5, o5 = o5 + u6 | 0, O6 = o5 = (u6 = n5 + m5 | 0) >>> 0 < n5 >>> 0 ? o5 + 1 | 0 : o5, e5 = nA(u6 ^ b6, kA2 ^ o5, 40), o5 = W6 + (d4 = w4) | 0, o5 = ((n5 = e5 + D5 | 0) >>> 0 < D5 >>> 0 ? o5 + 1 | 0 : o5) + DA2 | 0, D5 = n5, W6 = n5 = n5 + gA2 | 0, b6 = o5 = D5 >>> 0 > n5 >>> 0 ? o5 + 1 | 0 : o5, R6 = BA2, D5 = nA(l5 ^ P6, j5 ^ AA2, 48), o5 = (wA2 = w4) + G6 | 0, l5 = n5 = D5 + H6 | 0, o5 = nA(n5 ^ r4, (H6 = n5 >>> 0 < D5 >>> 0 ? o5 + 1 | 0 : o5) ^ N6, 1), N6 = r4 = w4, n5 = o5, o5 = F6 + B6 | 0, o5 = ((f4 = f4 + g8 | 0) >>> 0 < g8 >>> 0 ? o5 + 1 | 0 : o5) + r4 | 0, o5 = (f4 = (r4 = n5 + f4 | 0) >>> 0 < f4 >>> 0 ? o5 + 1 | 0 : o5) + R6 | 0, G6 = F6 = r4 + q5 | 0, F6 = o5 = F6 >>> 0 < r4 >>> 0 ? o5 + 1 | 0 : o5, r4 = nA(r4 ^ t5, f4 ^ K6, 32), o5 = L6 + (P6 = w4) | 0, s5 = o5 = (t5 = r4 + s5 | 0) >>> 0 < s5 >>> 0 ? o5 + 1 | 0 : o5, f4 = nA(n5 ^ t5, o5 ^ N6, 40), o5 = (j5 = w4) + F6 | 0, F6 = n5 = f4 + G6 | 0, r4 = nA(n5 ^ r4, P6 ^ (N6 = n5 >>> 0 < f4 >>> 0 ? o5 + 1 | 0 : o5), 48), o5 = s5 + (G6 = w4) | 0, P6 = o5 = (s5 = r4 + t5 | 0) >>> 0 < t5 >>> 0 ? o5 + 1 | 0 : o5, n5 = nA(f4 ^ s5, j5 ^ o5, 1), o5 = (j5 = w4) + b6 | 0, o5 = uA2 + ((t5 = n5 + W6 | 0) >>> 0 < n5 >>> 0 ? o5 + 1 | 0 : o5) | 0, o5 = (f4 = (t5 = t5 + T6 | 0) >>> 0 < T6 >>> 0 ? o5 + 1 | 0 : o5) + S6 | 0, kA2 = S6 = t5 + fA2 | 0, S6 = o5 = S6 >>> 0 < t5 >>> 0 ? o5 + 1 | 0 : o5, L6 = n5, R6 = t5, K6 = f4, t5 = eA2, n5 = nA(y6 ^ v6, J6 ^ CA2, 1), o5 = _6 + (y6 = w4) | 0, o5 = ((f4 = k6) >>> 0 > (k6 = n5 + k6 | 0) >>> 0 ? o5 + 1 | 0 : o5) + yA2 | 0, o5 = MA2 + (f4 = (t5 = t5 + k6 | 0) >>> 0 < k6 >>> 0 ? o5 + 1 | 0 : o5) | 0, _6 = k6 = t5 + rA2 | 0, v6 = o5 = k6 >>> 0 < rA2 >>> 0 ? o5 + 1 | 0 : o5, k6 = n5, f4 = o5 = nA(t5 ^ D5, f4 ^ wA2, 32), o5 = Y5 + IA2 | 0, o5 = (J6 = n5 = w4) + (c5 = (n5 = c5 + V6 | 0) >>> 0 < c5 >>> 0 ? o5 + 1 | 0 : o5) | 0, Y5 = o5 = (D5 = n5 + f4 | 0) >>> 0 < n5 >>> 0 ? o5 + 1 | 0 : o5, k6 = nA(D5 ^ k6, o5 ^ y6, 40), o5 = (IA2 = w4) + v6 | 0, v6 = nA(_6 = (t5 = k6 + _6 | 0) ^ f4, J6 ^ (f4 = t5 >>> 0 < k6 >>> 0 ? o5 + 1 | 0 : o5), 48), o5 = nA(v6 ^ R6, (CA2 = w4) ^ K6, 32), wA2 = y6 = w4, _6 = o5, J6 = y6, n5 = nA(n5 ^ h5, c5 ^ Z5, 1), o5 = tA2 + (y6 = w4) | 0, o5 = U6 + ((c5 = n5 + X6 | 0) >>> 0 < X6 >>> 0 ? o5 + 1 | 0 : o5) | 0, o5 = lA2 + (p6 = (c5 = c5 + p6 | 0) >>> 0 < p6 >>> 0 ? o5 + 1 | 0 : o5) | 0, R6 = h5 = c5 + QA2 | 0, h5 = o5 = h5 >>> 0 < QA2 >>> 0 ? o5 + 1 | 0 : o5, U6 = n5, V6 = y6, c5 = nA(c5 ^ M6, p6 ^ $5, 32), o5 = (M6 = w4) + H6 | 0, y6 = n5 = c5 + l5 | 0, p6 = nA(n5 ^ U6, (l5 = n5 >>> 0 < c5 >>> 0 ? o5 + 1 | 0 : o5) ^ V6, 40), o5 = (Z5 = w4) + h5 | 0, U6 = n5 = p6 + R6 | 0, n5 = nA(n5 ^ c5, M6 ^ (H6 = n5 >>> 0 < p6 >>> 0 ? o5 + 1 | 0 : o5), 48), o5 = l5 + (R6 = w4) | 0, h5 = n5, l5 = n5 = y6 + n5 | 0, M6 = o5 = n5 >>> 0 < y6 >>> 0 ? o5 + 1 | 0 : o5, o5 = o5 + J6 | 0, J6 = n5 = n5 + _6 | 0, c5 = j5, j5 = o5 = l5 >>> 0 > n5 >>> 0 ? o5 + 1 | 0 : o5, c5 = nA(n5 ^ L6, c5 ^ o5, 40), o5 = (o5 = S6) + (S6 = w4) | 0, V6 = n5 = c5 + kA2 | 0, L6 = o5 = n5 >>> 0 < c5 >>> 0 ? o5 + 1 | 0 : o5, y6 = f4, n5 = nA(m5 ^ W6, b6 ^ GA2, 48), o5 = O6 + ($5 = w4) | 0, O6 = n5, f4 = (n5 = u6 + n5 | 0) ^ e5, e5 = o5 = n5 >>> 0 < u6 >>> 0 ? o5 + 1 | 0 : o5, f4 = nA(f4, o5 ^ d4, 1), o5 = (d4 = w4) + y6 | 0, o5 = C6 + ((t5 = f4 + t5 | 0) >>> 0 < f4 >>> 0 ? o5 + 1 | 0 : o5) | 0, o5 = (y6 = (t5 = t5 + sA2 | 0) >>> 0 < sA2 >>> 0 ? o5 + 1 | 0 : o5) + x6 | 0, W6 = u6 = t5 + aA2 | 0, u6 = o5 = u6 >>> 0 < t5 >>> 0 ? o5 + 1 | 0 : o5, t5 = nA(t5 ^ h5, y6 ^ R6, 32), o5 = P6 + (b6 = w4) | 0, P6 = t5, s5 = o5 = (y6 = s5 + t5 | 0) >>> 0 < s5 >>> 0 ? o5 + 1 | 0 : o5, f4 = nA(f4 ^ y6, d4 ^ o5, 40), o5 = (o5 = u6) + (u6 = w4) | 0, h5 = t5 = f4 + W6 | 0, t5 = nA(m5 = t5 ^ P6, b6 ^ (P6 = t5 >>> 0 < f4 >>> 0 ? o5 + 1 | 0 : o5), 48), o5 = s5 + (kA2 = w4) | 0, d4 = t5, W6 = o5 = (s5 = y6 + t5 | 0) >>> 0 < y6 >>> 0 ? o5 + 1 | 0 : o5, t5 = nA(f4 ^ s5, u6 ^ o5, 1), o5 = (u6 = w4) + L6 | 0, o5 = B6 + ((f4 = t5 + V6 | 0) >>> 0 < t5 >>> 0 ? o5 + 1 | 0 : o5) | 0, o5 = z6 + (y6 = (f4 = f4 + g8 | 0) >>> 0 < g8 >>> 0 ? o5 + 1 | 0 : o5) | 0, GA2 = b6 = I9 + f4 | 0, b6 = o5 = b6 >>> 0 < I9 >>> 0 ? o5 + 1 | 0 : o5, m5 = t5, R6 = u6, u6 = f4, K6 = y6, t5 = nA(p6 ^ l5, M6 ^ Z5, 1), o5 = (y6 = w4) + N6 | 0, o5 = hA2 + ((f4 = t5 + F6 | 0) >>> 0 < t5 >>> 0 ? o5 + 1 | 0 : o5) | 0, o5 = (p6 = (f4 = f4 + EA2 | 0) >>> 0 < EA2 >>> 0 ? o5 + 1 | 0 : o5) + z6 | 0, N6 = F6 = I9 + f4 | 0, F6 = o5 = F6 >>> 0 < f4 >>> 0 ? o5 + 1 | 0 : o5, l5 = t5, f4 = o5 = nA(f4 ^ O6, p6 ^ $5, 32), p6 = t5 = w4, o5 = Y5 + CA2 | 0, Y5 = o5 = (t5 = D5 + v6 | 0) >>> 0 < D5 >>> 0 ? o5 + 1 | 0 : o5, o5 = o5 + p6 | 0, o5 = (D5 = t5) >>> 0 > (t5 = t5 + f4 | 0) >>> 0 ? o5 + 1 | 0 : o5, v6 = t5, t5 ^= l5, l5 = o5, y6 = nA(t5, o5 ^ y6, 40), o5 = (Z5 = w4) + F6 | 0, p6 = nA(F6 = (t5 = y6 + N6 | 0) ^ f4, p6 ^ (f4 = t5 >>> 0 < y6 >>> 0 ? o5 + 1 | 0 : o5), 48), o5 = nA(p6 ^ u6, (o5 = K6) ^ (K6 = w4), 32), $5 = u6 = w4, F6 = o5, N6 = e5, e5 = r4, o5 = nA(D5 ^ k6, Y5 ^ IA2, 1), M6 = r4 = w4, D5 = o5, o5 = H6 + FA2 | 0, o5 = ((k6 = U6 + cA2 | 0) >>> 0 < cA2 >>> 0 ? o5 + 1 | 0 : o5) + r4 | 0, k6 = o5 = (r4 = D5 + k6 | 0) >>> 0 < k6 >>> 0 ? o5 + 1 | 0 : o5, e5 = nA(r4 ^ e5, o5 ^ G6, 32), o5 = (o5 = N6) + (N6 = w4) | 0, D5 = nA((n5 = e5 + n5 | 0) ^ D5, M6 ^ (Y5 = n5 >>> 0 < e5 >>> 0 ? o5 + 1 | 0 : o5), 40), o5 = k6 + (IA2 = w4) | 0, U6 = D5, o5 = SA2 + ((H6 = r4) >>> 0 > (r4 = r4 + D5 | 0) >>> 0 ? o5 + 1 | 0 : o5) | 0, H6 = o5 = (D5 = r4 + iA2 | 0) >>> 0 < iA2 >>> 0 ? o5 + 1 | 0 : o5, r4 = nA(e5 ^ D5, N6 ^ o5, 48), o5 = Y5 + (CA2 = w4) | 0, G6 = n5, e5 = r4, Y5 = n5 = n5 + r4 | 0, N6 = o5 = G6 >>> 0 > n5 >>> 0 ? o5 + 1 | 0 : o5, o5 = o5 + u6 | 0, G6 = o5 = (u6 = n5 + F6 | 0) >>> 0 < n5 >>> 0 ? o5 + 1 | 0 : o5, n5 = (k6 = nA(u6 ^ m5, o5 ^ R6, 40)) + GA2 | 0, o5 = (GA2 = w4) + b6 | 0, M6 = n5, O6 = n5 >>> 0 < k6 >>> 0 ? o5 + 1 | 0 : o5, n5 = nA(_6 ^ V6, L6 ^ wA2, 48), o5 = (_6 = w4) + j5 | 0, J6 = r4 = n5 + J6 | 0, m5 = S6, S6 = o5 = r4 >>> 0 < n5 >>> 0 ? o5 + 1 | 0 : o5, o5 = nA(r4 ^ c5, m5 ^ o5, 1), V6 = r4 = w4, c5 = o5, o5 = f4 + C6 | 0, o5 = ((t5 = t5 + sA2 | 0) >>> 0 < sA2 >>> 0 ? o5 + 1 | 0 : o5) + r4 | 0, o5 = uA2 + (t5 = (r4 = t5 + c5 | 0) >>> 0 < t5 >>> 0 ? o5 + 1 | 0 : o5) | 0, L6 = f4 = r4 + T6 | 0, f4 = o5 = f4 >>> 0 < T6 >>> 0 ? o5 + 1 | 0 : o5, r4 = nA(r4 ^ e5, t5 ^ CA2, 32), o5 = W6 + (b6 = w4) | 0, j5 = r4, r4 = (e5 = s5 + r4 | 0) ^ c5, c5 = o5 = e5 >>> 0 < s5 >>> 0 ? o5 + 1 | 0 : o5, t5 = nA(r4, V6 ^ o5, 40), o5 = (o5 = f4) + (f4 = w4) | 0, V6 = r4 = t5 + L6 | 0, r4 = nA(s5 = r4 ^ j5, b6 ^ (j5 = r4 >>> 0 < t5 >>> 0 ? o5 + 1 | 0 : o5), 48), o5 = c5 + (CA2 = w4) | 0, W6 = r4, e5 = o5 = (r4 = e5 + r4 | 0) >>> 0 < e5 >>> 0 ? o5 + 1 | 0 : o5, t5 = nA(r4 ^ t5, f4 ^ o5, 1), o5 = (s5 = w4) + O6 | 0, o5 = pA2 + ((f4 = t5 + M6 | 0) >>> 0 < t5 >>> 0 ? o5 + 1 | 0 : o5) | 0, o5 = (c5 = (f4 = f4 + oA2 | 0) >>> 0 < oA2 >>> 0 ? o5 + 1 | 0 : o5) + BA2 | 0, AA2 = L6 = f4 + q5 | 0, L6 = o5 = L6 >>> 0 < f4 >>> 0 ? o5 + 1 | 0 : o5, b6 = t5, m5 = f4, R6 = c5, t5 = nA(U6 ^ Y5, N6 ^ IA2, 1), o5 = (N6 = w4) + DA2 | 0, o5 = P6 + (t5 >>> 0 > (f4 = t5 + gA2 | 0) >>> 0 ? o5 + 1 | 0 : o5) | 0, c5 = o5 = (f4 = f4 + h5 | 0) >>> 0 < h5 >>> 0 ? o5 + 1 | 0 : o5, o5 = nA(n5 ^ f4, o5 ^ _6, 32), _6 = n5 = w4, h5 = o5, o5 = l5 + K6 | 0, o5 = (n5 = p6 + v6 | 0) >>> 0 < p6 >>> 0 ? o5 + 1 | 0 : o5, p6 = n5, Y5 = o5, o5 = _6 + o5 | 0, l5 = n5 = n5 + h5 | 0, U6 = o5 = p6 >>> 0 > n5 >>> 0 ? o5 + 1 | 0 : o5, n5 = nA(n5 ^ t5, N6 ^ o5, 40), o5 = c5 + (K6 = w4) | 0, v6 = n5, o5 = tA2 + ((n5 = f4 + n5 | 0) >>> 0 < f4 >>> 0 ? o5 + 1 | 0 : o5) | 0, o5 = (n5 = n5 + X6 | 0) >>> 0 < X6 >>> 0 ? o5 + 1 | 0 : o5, N6 = n5, n5 ^= h5, h5 = o5, c5 = nA(n5, _6 ^ o5, 48), o5 = nA(c5 ^ m5, (o5 = R6) ^ (R6 = w4), 32), IA2 = n5 = w4, _6 = o5, P6 = n5, n5 = nA(y6 ^ p6, Y5 ^ Z5, 1), o5 = FA2 + (f4 = w4) | 0, o5 = H6 + ((t5 = n5 + cA2 | 0) >>> 0 < cA2 >>> 0 ? o5 + 1 | 0 : o5) | 0, o5 = (y6 = (t5 = t5 + D5 | 0) >>> 0 < D5 >>> 0 ? o5 + 1 | 0 : o5) + x6 | 0, H6 = p6 = t5 + aA2 | 0, p6 = o5 = p6 >>> 0 < t5 >>> 0 ? o5 + 1 | 0 : o5, D5 = n5, Y5 = f4, n5 = (t5 = nA(t5 ^ d4, y6 ^ kA2, 32)) + J6 | 0, o5 = (J6 = w4) + S6 | 0, f4 = n5, y6 = nA(y6 = n5 ^ D5, (D5 = n5 >>> 0 < t5 >>> 0 ? o5 + 1 | 0 : o5) ^ Y5, 40), o5 = (Z5 = w4) + p6 | 0, p6 = n5 = y6 + H6 | 0, t5 = nA(n5 ^ t5, J6 ^ (S6 = n5 >>> 0 < y6 >>> 0 ? o5 + 1 | 0 : o5), 48), o5 = D5 + (Y5 = w4) | 0, H6 = n5 = t5 + f4 | 0, J6 = o5 = n5 >>> 0 < f4 >>> 0 ? o5 + 1 | 0 : o5, o5 = o5 + P6 | 0, P6 = o5 = (D5 = n5 + _6 | 0) >>> 0 < n5 >>> 0 ? o5 + 1 | 0 : o5, f4 = nA(D5 ^ b6, o5 ^ s5, 40), o5 = (d4 = w4) + L6 | 0, L6 = n5 = f4 + AA2 | 0, b6 = o5 = n5 >>> 0 < f4 >>> 0 ? o5 + 1 | 0 : o5, n5 = r4, s5 = e5, e5 = t5, r4 = nA(F6 ^ M6, O6 ^ $5, 48), o5 = G6 + (AA2 = w4) | 0, F6 = r4, u6 = o5 = (t5 = u6 + r4 | 0) >>> 0 < u6 >>> 0 ? o5 + 1 | 0 : o5, o5 = nA(t5 ^ k6, GA2 ^ o5, 1), G6 = r4 = w4, k6 = o5, o5 = h5 + HA2 | 0, o5 = ((h5 = N6 + fA2 | 0) >>> 0 < fA2 >>> 0 ? o5 + 1 | 0 : o5) + r4 | 0, h5 = o5 = (r4 = h5 + k6 | 0) >>> 0 < h5 >>> 0 ? o5 + 1 | 0 : o5, e5 = nA(r4 ^ e5, o5 ^ Y5, 32), o5 = (N6 = w4) + s5 | 0, k6 = nA((n5 = e5 + n5 | 0) ^ k6, G6 ^ (s5 = n5 >>> 0 < e5 >>> 0 ? o5 + 1 | 0 : o5), 40), o5 = h5 + (M6 = w4) | 0, o5 = lA2 + ((h5 = r4) >>> 0 > (r4 = r4 + k6 | 0) >>> 0 ? o5 + 1 | 0 : o5) | 0, Y5 = o5 = (h5 = r4 + QA2 | 0) >>> 0 < QA2 >>> 0 ? o5 + 1 | 0 : o5, r4 = nA(e5 ^ h5, N6 ^ o5, 48), o5 = s5 + ($5 = w4) | 0, N6 = r4, G6 = o5 = (s5 = n5 + r4 | 0) >>> 0 < n5 >>> 0 ? o5 + 1 | 0 : o5, n5 = nA(s5 ^ k6, M6 ^ o5, 1), o5 = (k6 = w4) + b6 | 0, o5 = hA2 + ((r4 = n5 + L6 | 0) >>> 0 < n5 >>> 0 ? o5 + 1 | 0 : o5) | 0, o5 = pA2 + (e5 = (r4 = r4 + EA2 | 0) >>> 0 < EA2 >>> 0 ? o5 + 1 | 0 : o5) | 0, wA2 = M6 = r4 + oA2 | 0, M6 = o5 = M6 >>> 0 < oA2 >>> 0 ? o5 + 1 | 0 : o5, O6 = n5, m5 = r4, n5 = nA(y6 ^ H6, J6 ^ Z5, 1), o5 = (y6 = w4) + j5 | 0, o5 = MA2 + ((r4 = n5 + V6 | 0) >>> 0 < n5 >>> 0 ? o5 + 1 | 0 : o5) | 0, o5 = SA2 + (H6 = (r4 = r4 + rA2 | 0) >>> 0 < rA2 >>> 0 ? o5 + 1 | 0 : o5) | 0, V6 = J6 = r4 + iA2 | 0, J6 = o5 = J6 >>> 0 < iA2 >>> 0 ? o5 + 1 | 0 : o5, j5 = n5, o5 = nA(r4 ^ F6, H6 ^ AA2, 32), AA2 = n5 = w4, r4 = o5, o5 = U6 + R6 | 0, l5 = n5 = c5 + l5 | 0, F6 = o5 = n5 >>> 0 < c5 >>> 0 ? o5 + 1 | 0 : o5, o5 = AA2 + o5 | 0, U6 = o5 = (c5 = n5 + r4 | 0) >>> 0 < n5 >>> 0 ? o5 + 1 | 0 : o5, y6 = nA(c5 ^ j5, o5 ^ y6, 40), o5 = (R6 = w4) + J6 | 0, H6 = n5 = y6 + V6 | 0, j5 = nA(n5 ^ r4, AA2 ^ (J6 = n5 >>> 0 < y6 >>> 0 ? o5 + 1 | 0 : o5), 48), o5 = nA(j5 ^ m5, (AA2 = w4) ^ e5, 32), Z5 = n5 = w4, V6 = o5, e5 = n5, r4 = eA2, n5 = nA(l5 ^ v6, F6 ^ K6, 1), o5 = S6 + (F6 = w4) | 0, o5 = ((l5 = p6) >>> 0 > (p6 = n5 + p6 | 0) >>> 0 ? o5 + 1 | 0 : o5) + yA2 | 0, o5 = hA2 + (p6 = (r4 = r4 + p6 | 0) >>> 0 < p6 >>> 0 ? o5 + 1 | 0 : o5) | 0, l5 = S6 = r4 + EA2 | 0, S6 = o5 = S6 >>> 0 < EA2 >>> 0 ? o5 + 1 | 0 : o5, r4 = nA(r4 ^ W6, p6 ^ CA2, 32), o5 = u6 + (v6 = w4) | 0, u6 = r4, o5 = (r4 = t5 + r4 | 0) >>> 0 < t5 >>> 0 ? o5 + 1 | 0 : o5, t5 = F6, F6 = o5, t5 = nA(n5 ^ r4, t5 ^ o5, 40), o5 = (K6 = w4) + S6 | 0, p6 = n5 = t5 + l5 | 0, n5 = nA(n5 ^ u6, v6 ^ (S6 = n5 >>> 0 < t5 >>> 0 ? o5 + 1 | 0 : o5), 48), o5 = F6 + (m5 = w4) | 0, F6 = n5, l5 = n5 = r4 + n5 | 0, v6 = o5 = n5 >>> 0 < r4 >>> 0 ? o5 + 1 | 0 : o5, o5 = o5 + e5 | 0, o5 = (u6 = n5 + V6 | 0) >>> 0 < n5 >>> 0 ? o5 + 1 | 0 : o5, n5 = u6 ^ O6, O6 = o5, k6 = nA(n5, o5 ^ k6, 40), o5 = (CA2 = w4) + M6 | 0, M6 = n5 = k6 + wA2 | 0, W6 = n5 >>> 0 < k6 >>> 0 ? o5 + 1 | 0 : o5, n5 = nA(_6 ^ L6, b6 ^ IA2, 48), o5 = P6 + (IA2 = w4) | 0, _6 = n5, o5 = (n5 = D5 + n5 | 0) >>> 0 < D5 >>> 0 ? o5 + 1 | 0 : o5, D5 = n5, P6 = o5, o5 = nA(n5 ^ f4, o5 ^ d4, 1), d4 = n5 = w4, e5 = o5, o5 = J6 + uA2 | 0, o5 = ((r4 = H6 + T6 | 0) >>> 0 < T6 >>> 0 ? o5 + 1 | 0 : o5) + n5 | 0, o5 = lA2 + (r4 = (n5 = r4 + e5 | 0) >>> 0 < r4 >>> 0 ? o5 + 1 | 0 : o5) | 0, H6 = f4 = n5 + QA2 | 0, f4 = o5 = f4 >>> 0 < QA2 >>> 0 ? o5 + 1 | 0 : o5, n5 = nA(n5 ^ F6, r4 ^ m5, 32), o5 = G6 + (J6 = w4) | 0, F6 = n5, s5 = o5 = (r4 = s5 + n5 | 0) >>> 0 < s5 >>> 0 ? o5 + 1 | 0 : o5, e5 = nA(r4 ^ e5, d4 ^ o5, 40), o5 = (d4 = w4) + f4 | 0, H6 = n5 = e5 + H6 | 0, n5 = nA(f4 = n5 ^ F6, J6 ^ (F6 = n5 >>> 0 < e5 >>> 0 ? o5 + 1 | 0 : o5), 48), o5 = s5 + (wA2 = w4) | 0, s5 = n5, G6 = o5 = (f4 = r4 + n5 | 0) >>> 0 < r4 >>> 0 ? o5 + 1 | 0 : o5, n5 = nA(f4 ^ e5, d4 ^ o5, 1), o5 = (J6 = w4) + W6 | 0, o5 = FA2 + ((r4 = n5 + M6 | 0) >>> 0 < n5 >>> 0 ? o5 + 1 | 0 : o5) | 0, o5 = (e5 = (r4 = r4 + cA2 | 0) >>> 0 < cA2 >>> 0 ? o5 + 1 | 0 : o5) + DA2 | 0, kA2 = d4 = r4 + gA2 | 0, d4 = o5 = d4 >>> 0 < r4 >>> 0 ? o5 + 1 | 0 : o5, L6 = n5, b6 = r4, m5 = e5, n5 = nA(t5 ^ l5, K6 ^ v6, 1), o5 = MA2 + (e5 = w4) | 0, o5 = Y5 + ((r4 = n5 + rA2 | 0) >>> 0 < rA2 >>> 0 ? o5 + 1 | 0 : o5) | 0, o5 = HA2 + (t5 = (r4 = r4 + h5 | 0) >>> 0 < h5 >>> 0 ? o5 + 1 | 0 : o5) | 0, v6 = h5 = r4 + fA2 | 0, h5 = o5 = h5 >>> 0 < fA2 >>> 0 ? o5 + 1 | 0 : o5, Y5 = n5, l5 = e5, o5 = nA(r4 ^ _6, t5 ^ IA2, 32), _6 = n5 = w4, t5 = o5, r4 = n5, o5 = U6 + AA2 | 0, o5 = (n5 = c5 + j5 | 0) >>> 0 < c5 >>> 0 ? o5 + 1 | 0 : o5, c5 = n5, U6 = o5, o5 = o5 + r4 | 0, o5 = (e5 = n5 + t5 | 0) >>> 0 < n5 >>> 0 ? o5 + 1 | 0 : o5, n5 = e5 ^ Y5, Y5 = o5, n5 = nA(n5, o5 ^ l5, 40), o5 = (o5 = h5) + (h5 = w4) | 0, l5 = r4 = n5 + v6 | 0, v6 = o5 = r4 >>> 0 < n5 >>> 0 ? o5 + 1 | 0 : o5, _6 = nA(r4 ^ t5, _6 ^ o5, 48), o5 = nA(_6 ^ b6, (o5 = m5) ^ (m5 = w4), 32), K6 = r4 = w4, j5 = o5, r4 = nA(c5 ^ y6, U6 ^ R6, 1), o5 = (c5 = w4) + yA2 | 0, o5 = S6 + ((t5 = r4 + eA2 | 0) >>> 0 < r4 >>> 0 ? o5 + 1 | 0 : o5) | 0, o5 = C6 + (y6 = (t5 = t5 + p6 | 0) >>> 0 < p6 >>> 0 ? o5 + 1 | 0 : o5) | 0, R6 = p6 = t5 + sA2 | 0, p6 = o5 = p6 >>> 0 < sA2 >>> 0 ? o5 + 1 | 0 : o5, S6 = r4, U6 = c5, t5 = nA(t5 ^ N6, y6 ^ $5, 32), o5 = (N6 = w4) + P6 | 0, c5 = r4 = t5 + D5 | 0, r4 = (y6 = nA(r4 ^ S6, (D5 = r4 >>> 0 < t5 >>> 0 ? o5 + 1 | 0 : o5) ^ U6, 40)) + R6 | 0, o5 = (R6 = w4) + p6 | 0, S6 = r4, r4 = nA(r4 ^ t5, N6 ^ (U6 = r4 >>> 0 < y6 >>> 0 ? o5 + 1 | 0 : o5), 48), o5 = D5 + (AA2 = w4) | 0, N6 = r4, P6 = r4 = c5 + r4 | 0, b6 = o5 = r4 >>> 0 < c5 >>> 0 ? o5 + 1 | 0 : o5, o5 = K6 + o5 | 0, o5 = (t5 = r4 + j5 | 0) >>> 0 < r4 >>> 0 ? o5 + 1 | 0 : o5, r4 = J6, J6 = o5, c5 = nA(t5 ^ L6, r4 ^ o5, 40), o5 = (IA2 = w4) + d4 | 0, p6 = r4 = c5 + kA2 | 0, o5 = nA(r4 ^ j5, K6 ^ (d4 = r4 >>> 0 < c5 >>> 0 ? o5 + 1 | 0 : o5), 48), K6 = r4 = w4, j5 = o5, r4 = n5, o5 = Y5 + m5 | 0, Y5 = n5 = e5 + _6 | 0, _6 = o5 = n5 >>> 0 < e5 >>> 0 ? o5 + 1 | 0 : o5, o5 = nA(n5 ^ r4, o5 ^ h5, 1), e5 = r4 = w4, n5 = o5, o5 = U6 + B6 | 0, o5 = ((D5 = S6 + g8 | 0) >>> 0 < g8 >>> 0 ? o5 + 1 | 0 : o5) + r4 | 0, o5 = tA2 + (D5 = (r4 = n5 + D5 | 0) >>> 0 < D5 >>> 0 ? o5 + 1 | 0 : o5) | 0, m5 = h5 = r4 + X6 | 0, h5 = o5 = h5 >>> 0 < X6 >>> 0 ? o5 + 1 | 0 : o5, S6 = n5, U6 = e5, n5 = nA(M6 ^ V6, W6 ^ Z5, 48), o5 = O6 + (Z5 = w4) | 0, M6 = n5, o5 = (n5 = u6 + n5 | 0) >>> 0 < u6 >>> 0 ? o5 + 1 | 0 : o5, u6 = n5, r4 = nA(r4 ^ s5, D5 ^ wA2, 32), O6 = o5, o5 = o5 + (V6 = w4) | 0, e5 = n5 = r4 + n5 | 0, D5 = nA(n5 ^ S6, (s5 = n5 >>> 0 < r4 >>> 0 ? o5 + 1 | 0 : o5) ^ U6, 40), o5 = (W6 = w4) + h5 | 0, h5 = n5 = D5 + m5 | 0, n5 = nA(n5 ^ r4, V6 ^ (S6 = n5 >>> 0 < D5 >>> 0 ? o5 + 1 | 0 : o5), 48), o5 = s5 + ($5 = w4) | 0, U6 = n5, V6 = o5 = (s5 = e5 + n5 | 0) >>> 0 < e5 >>> 0 ? o5 + 1 | 0 : o5, n5 = nA(D5 ^ s5, W6 ^ o5, 1), o5 = lA2 + (m5 = w4) | 0, W6 = n5, wA2 = n5 = QA2 + n5 | 0, e5 = o5 = n5 >>> 0 < QA2 >>> 0 ? o5 + 1 | 0 : o5, n5 = nA(k6 ^ u6, O6 ^ CA2, 1), o5 = (D5 = w4) + v6 | 0, o5 = SA2 + ((r4 = n5 + l5 | 0) >>> 0 < n5 >>> 0 ? o5 + 1 | 0 : o5) | 0, o5 = BA2 + (u6 = (r4 = r4 + iA2 | 0) >>> 0 < iA2 >>> 0 ? o5 + 1 | 0 : o5) | 0, O6 = k6 = r4 + q5 | 0, k6 = o5 = k6 >>> 0 < q5 >>> 0 ? o5 + 1 | 0 : o5, l5 = D5, r4 = nA(r4 ^ N6, u6 ^ AA2, 32), o5 = G6 + (AA2 = w4) | 0, v6 = r4, o5 = (D5 = f4 + r4 | 0) >>> 0 < f4 >>> 0 ? o5 + 1 | 0 : o5, f4 = l5, l5 = o5, u6 = nA(n5 ^ D5, f4 ^ o5, 40), o5 = (CA2 = w4) + k6 | 0, N6 = n5 = u6 + O6 | 0, o5 = (G6 = n5 >>> 0 < u6 >>> 0 ? o5 + 1 | 0 : o5) + e5 | 0, k6 = o5 = (e5 = n5 + wA2 | 0) >>> 0 < n5 >>> 0 ? o5 + 1 | 0 : o5, O6 = o5 = nA(e5 ^ j5, o5 ^ K6, 32), L6 = n5 = w4, n5 = nA(y6 ^ P6, b6 ^ R6, 1), o5 = (f4 = w4) + F6 | 0, o5 = z6 + ((r4 = n5 + H6 | 0) >>> 0 < n5 >>> 0 ? o5 + 1 | 0 : o5) | 0, o5 = (y6 = (r4 = I9 + r4 | 0) >>> 0 < I9 >>> 0 ? o5 + 1 | 0 : o5) + x6 | 0, b6 = F6 = r4 + aA2 | 0, F6 = o5 = F6 >>> 0 < r4 >>> 0 ? o5 + 1 | 0 : o5, H6 = n5, P6 = f4, r4 = nA(r4 ^ M6, y6 ^ Z5, 32), o5 = (M6 = w4) + _6 | 0, f4 = n5 = r4 + Y5 | 0, n5 = (y6 = nA(n5 ^ H6, (Y5 = n5 >>> 0 < r4 >>> 0 ? o5 + 1 | 0 : o5) ^ P6, 40)) + b6 | 0, o5 = (b6 = w4) + F6 | 0, F6 = n5, n5 = nA(n5 ^ r4, M6 ^ (H6 = n5 >>> 0 < y6 >>> 0 ? o5 + 1 | 0 : o5), 48), o5 = Y5 + (Z5 = w4) | 0, Y5 = n5, M6 = o5 = (n5 = f4 + n5 | 0) >>> 0 < f4 >>> 0 ? o5 + 1 | 0 : o5, o5 = o5 + L6 | 0, _6 = o5 = (f4 = n5) >>> 0 > (n5 = n5 + O6 | 0) >>> 0 ? o5 + 1 | 0 : o5, r4 = nA(n5 ^ W6, m5 ^ o5, 40), o5 = k6 + (m5 = w4) | 0, P6 = r4, o5 = B6 + ((r4 = e5 + r4 | 0) >>> 0 < e5 >>> 0 ? o5 + 1 | 0 : o5) | 0, W6 = r4 = r4 + g8 | 0, e5 = r4 ^ O6, O6 = o5 = r4 >>> 0 < g8 >>> 0 ? o5 + 1 | 0 : o5, r4 = nA(e5, L6 ^ o5, 48), o5 = _6 + (L6 = w4) | 0, _6 = o5 = (k6 = n5 + r4 | 0) >>> 0 < n5 >>> 0 ? o5 + 1 | 0 : o5, n5 = o5 = nA(k6 ^ P6, m5 ^ o5, 1), P6 = e5 = w4, e5 = nA(f4 ^ y6, M6 ^ b6, 1), o5 = S6 + (y6 = w4) | 0, o5 = SA2 + ((f4 = e5 + h5 | 0) >>> 0 < h5 >>> 0 ? o5 + 1 | 0 : o5) | 0, o5 = hA2 + (h5 = (f4 = f4 + iA2 | 0) >>> 0 < iA2 >>> 0 ? o5 + 1 | 0 : o5) | 0, m5 = S6 = f4 + EA2 | 0, S6 = o5 = S6 >>> 0 < EA2 >>> 0 ? o5 + 1 | 0 : o5, M6 = e5, b6 = y6, o5 = J6 + K6 | 0, o5 = (e5 = t5 + j5 | 0) >>> 0 < t5 >>> 0 ? o5 + 1 | 0 : o5, J6 = e5, v6 = nA(N6 ^ v6, G6 ^ AA2, 48), y6 = nA(f4 ^ v6, h5 ^ (AA2 = w4), 32), N6 = o5, o5 = o5 + (wA2 = w4) | 0, h5 = e5 = y6 + e5 | 0, e5 = nA(e5 ^ M6, (G6 = e5 >>> 0 < y6 >>> 0 ? o5 + 1 | 0 : o5) ^ b6, 40), o5 = (M6 = w4) + S6 | 0, b6 = o5 = (t5 = e5 + m5 | 0) >>> 0 < e5 >>> 0 ? o5 + 1 | 0 : o5, o5 = o5 + P6 | 0, o5 = C6 + ((j5 = t5) >>> 0 > (t5 = n5 + t5 | 0) >>> 0 ? o5 + 1 | 0 : o5) | 0, o5 = (f4 = (t5 = t5 + sA2 | 0) >>> 0 < sA2 >>> 0 ? o5 + 1 | 0 : o5) + yA2 | 0, kA2 = S6 = t5 + eA2 | 0, m5 = o5 = S6 >>> 0 < t5 >>> 0 ? o5 + 1 | 0 : o5, R6 = n5, K6 = t5, o5 = nA(c5 ^ J6, N6 ^ IA2, 1), c5 = t5 = w4, n5 = o5, o5 = H6 + MA2 | 0, o5 = ((S6 = F6 + rA2 | 0) >>> 0 < rA2 >>> 0 ? o5 + 1 | 0 : o5) + t5 | 0, o5 = tA2 + (S6 = (t5 = n5 + S6 | 0) >>> 0 < S6 >>> 0 ? o5 + 1 | 0 : o5) | 0, N6 = F6 = t5 + X6 | 0, F6 = o5 = F6 >>> 0 < X6 >>> 0 ? o5 + 1 | 0 : o5, H6 = n5, o5 = nA(t5 ^ U6, S6 ^ $5, 32), J6 = n5 = w4, t5 = o5, S6 = n5, o5 = l5 + AA2 | 0, l5 = n5 = D5 + v6 | 0, U6 = o5 = n5 >>> 0 < D5 >>> 0 ? o5 + 1 | 0 : o5, o5 = o5 + S6 | 0, o5 = (D5 = n5 + t5 | 0) >>> 0 < n5 >>> 0 ? o5 + 1 | 0 : o5;
                      n5 = D5 ^ H6, H6 = o5, S6 = nA(n5, o5 ^ c5, 40), o5 = (AA2 = w4) + F6 | 0, v6 = nA(F6 = (n5 = S6 + N6 | 0) ^ t5, J6 ^ (t5 = n5 >>> 0 < S6 >>> 0 ? o5 + 1 | 0 : o5), 48), o5 = nA(o5 = v6 ^ K6, (K6 = w4) ^ f4, 32), IA2 = f4 = w4, N6 = o5, F6 = f4, f4 = nA(u6 ^ l5, U6 ^ CA2, 1), o5 = BA2 + (u6 = w4) | 0, o5 = d4 + ((c5 = f4 + q5 | 0) >>> 0 < q5 >>> 0 ? o5 + 1 | 0 : o5) | 0, o5 = FA2 + (p6 = (c5 = c5 + p6 | 0) >>> 0 < p6 >>> 0 ? o5 + 1 | 0 : o5) | 0, U6 = l5 = c5 + cA2 | 0, l5 = o5 = l5 >>> 0 < cA2 >>> 0 ? o5 + 1 | 0 : o5, c5 = nA(c5 ^ Y5, p6 ^ Z5, 32), o5 = V6 + (J6 = w4) | 0, Y5 = c5, s5 = o5 = (c5 = s5 + c5 | 0) >>> 0 < s5 >>> 0 ? o5 + 1 | 0 : o5, p6 = nA(f4 ^ c5, o5 ^ u6, 40), o5 = (Z5 = w4) + l5 | 0, u6 = f4 = p6 + U6 | 0, f4 = nA(l5 = f4 ^ Y5, J6 ^ (Y5 = f4 >>> 0 < p6 >>> 0 ? o5 + 1 | 0 : o5), 48), o5 = s5 + ($5 = w4) | 0, l5 = f4, U6 = f4 = c5 + f4 | 0, J6 = o5 = f4 >>> 0 < c5 >>> 0 ? o5 + 1 | 0 : o5, o5 = o5 + F6 | 0, o5 = (c5 = f4 + N6 | 0) >>> 0 < f4 >>> 0 ? o5 + 1 | 0 : o5, f4 = P6, P6 = o5, s5 = nA(c5 ^ R6, f4 ^ o5, 40), o5 = (d4 = w4) + m5 | 0, F6 = f4 = s5 + kA2 | 0, f4 = nA(m5 = f4 ^ N6, IA2 ^ (N6 = f4 >>> 0 < s5 >>> 0 ? o5 + 1 | 0 : o5), 48), o5 = P6 + (IA2 = w4) | 0, P6 = f4, c5 = o5 = (f4 = c5 + f4 | 0) >>> 0 < c5 >>> 0 ? o5 + 1 | 0 : o5, d4 = o5 = nA(f4 ^ s5, d4 ^ o5, 1), CA2 = o5, V6 = s5 = w4, s5 = t5, t5 = e5, e5 = nA(y6 ^ j5, b6 ^ wA2, 48), o5 = G6 + (wA2 = w4) | 0, G6 = e5, o5 = (e5 = h5 + e5 | 0) >>> 0 < h5 >>> 0 ? o5 + 1 | 0 : o5, h5 = n5, n5 = t5 ^ e5, t5 = o5, n5 = nA(n5, o5 ^ M6, 1), o5 = (M6 = w4) + s5 | 0, o5 = HA2 + (n5 >>> 0 > (y6 = h5 + n5 | 0) >>> 0 ? o5 + 1 | 0 : o5) | 0, o5 = DA2 + (h5 = (y6 = y6 + fA2 | 0) >>> 0 < fA2 >>> 0 ? o5 + 1 | 0 : o5) | 0, j5 = s5 = y6 + gA2 | 0, s5 = o5 = s5 >>> 0 < gA2 >>> 0 ? o5 + 1 | 0 : o5, y6 = nA(y6 ^ l5, h5 ^ $5, 32), o5 = _6 + (b6 = w4) | 0, l5 = o5 = (h5 = y6 + k6 | 0) >>> 0 < k6 >>> 0 ? o5 + 1 | 0 : o5, k6 = nA(n5 ^ h5, M6 ^ o5, 40), o5 = ($5 = w4) + s5 | 0, M6 = n5 = k6 + j5 | 0, y6 = nA(n5 ^ y6, b6 ^ (_6 = n5 >>> 0 < k6 >>> 0 ? o5 + 1 | 0 : o5), 48), o5 = l5 + (j5 = w4) | 0, b6 = n5 = y6 + h5 | 0, l5 = n5, m5 = o5 = n5 >>> 0 < h5 >>> 0 ? o5 + 1 | 0 : o5, h5 = e5, s5 = t5, o5 = H6 + K6 | 0, o5 = (n5 = D5 + v6 | 0) >>> 0 < D5 >>> 0 ? o5 + 1 | 0 : o5, D5 = n5, n5 ^= S6, S6 = o5, o5 = nA(n5, AA2 ^ o5, 1), R6 = n5 = w4, H6 = o5, t5 = o5, o5 = Y5 + x6 | 0, o5 = ((e5 = u6 + aA2 | 0) >>> 0 < aA2 >>> 0 ? o5 + 1 | 0 : o5) + n5 | 0, u6 = o5 = (n5 = e5) >>> 0 > (e5 = t5 + e5 | 0) >>> 0 ? o5 + 1 | 0 : o5, t5 = nA(r4 ^ e5, o5 ^ L6, 32), o5 = (o5 = s5) + (s5 = w4) | 0, v6 = n5 = t5 + h5 | 0, r4 = nA(r4 = n5 ^ H6, R6 ^ (H6 = n5 >>> 0 < t5 >>> 0 ? o5 + 1 | 0 : o5), 40), o5 = u6 + (L6 = w4) | 0, o5 = uA2 + ((n5 = r4 + e5 | 0) >>> 0 < e5 >>> 0 ? o5 + 1 | 0 : o5) | 0, R6 = o5 = (h5 = n5 + T6 | 0) >>> 0 < T6 >>> 0 ? o5 + 1 | 0 : o5, s5 = nA(t5 ^ h5, s5 ^ o5, 48), kA2 = o5 = w4, n5 = nA(p6 ^ U6, J6 ^ Z5, 1), o5 = (t5 = w4) + O6 | 0, o5 = pA2 + ((e5 = n5 + W6 | 0) >>> 0 < n5 >>> 0 ? o5 + 1 | 0 : o5) | 0, o5 = z6 + (p6 = (e5 = e5 + oA2 | 0) >>> 0 < oA2 >>> 0 ? o5 + 1 | 0 : o5) | 0, O6 = u6 = I9 + e5 | 0, U6 = o5 = u6 >>> 0 < I9 >>> 0 ? o5 + 1 | 0 : o5, J6 = n5, u6 = nA(e5 ^ G6, p6 ^ wA2, 32), o5 = (Z5 = w4) + S6 | 0, S6 = n5 = u6 + D5 | 0, e5 = nA(n5 ^ J6, (G6 = n5 >>> 0 < u6 >>> 0 ? o5 + 1 | 0 : o5) ^ t5, 40), o5 = (o5 = U6) + (U6 = w4) | 0, J6 = n5 = e5 + O6 | 0, O6 = o5 = n5 >>> 0 < e5 >>> 0 ? o5 + 1 | 0 : o5, t5 = o5, o5 = z6 + V6 | 0, o5 = ((p6 = I9 + d4 | 0) >>> 0 < I9 >>> 0 ? o5 + 1 | 0 : o5) + t5 | 0, Y5 = o5 = (t5 = n5 + p6 | 0) >>> 0 < p6 >>> 0 ? o5 + 1 | 0 : o5, n5 = nA(t5 ^ s5, kA2 ^ o5, 32), o5 = (d4 = w4) + m5 | 0, D5 = nA((p6 = n5 + l5 | 0) ^ CA2, (o5 = p6 >>> 0 < n5 >>> 0 ? o5 + 1 | 0 : o5) ^ V6, 40), V6 = o5, o5 = DA2 + (l5 = w4) | 0, o5 = Y5 + ((W6 = D5 + gA2 | 0) >>> 0 < gA2 >>> 0 ? o5 + 1 | 0 : o5) | 0, o5 = (Y5 = t5 + W6 | 0) >>> 0 < t5 >>> 0 ? o5 + 1 | 0 : o5, t5 = d4, d4 = o5, t5 = nA(n5 ^ Y5, t5 ^ o5, 48), o5 = (o5 = V6) + (V6 = w4) | 0, n5 = D5 ^ (p6 = t5 + p6 | 0), D5 = o5 = p6 >>> 0 < t5 >>> 0 ? o5 + 1 | 0 : o5, W6 = o5 = nA(n5, o5 ^ l5, 1), CA2 = o5, K6 = n5 = w4, l5 = f4, AA2 = c5, f4 = e5, e5 = nA(u6 ^ J6, O6 ^ Z5, 48), o5 = G6 + (J6 = w4) | 0, u6 = n5 = e5 + S6 | 0, S6 = o5 = n5 >>> 0 < S6 >>> 0 ? o5 + 1 | 0 : o5, f4 = nA(n5 ^ f4, o5 ^ U6, 1), o5 = (O6 = w4) + HA2 | 0, o5 = R6 + ((n5 = f4 + fA2 | 0) >>> 0 < f4 >>> 0 ? o5 + 1 | 0 : o5) | 0, h5 = o5 = (c5 = n5 + h5 | 0) >>> 0 < h5 >>> 0 ? o5 + 1 | 0 : o5, n5 = nA(c5 ^ y6, o5 ^ j5, 32), o5 = (U6 = w4) + AA2 | 0, l5 = y6 = n5 + l5 | 0, G6 = o5 = y6 >>> 0 < n5 >>> 0 ? o5 + 1 | 0 : o5, f4 = nA(f4 ^ y6, o5 ^ O6, 40), o5 = hA2 + (wA2 = w4) | 0, O6 = f4, o5 = h5 + ((f4 = EA2 + f4 | 0) >>> 0 < EA2 >>> 0 ? o5 + 1 | 0 : o5) | 0, c5 = o5 = (f4 = f4 + c5 | 0) >>> 0 < c5 >>> 0 ? o5 + 1 | 0 : o5, y6 = nA(n5 ^ f4, o5 ^ U6, 48), o5 = (o5 = G6) + (G6 = w4) | 0, j5 = n5 = y6 + l5 | 0, U6 = n5, R6 = o5 = n5 >>> 0 < y6 >>> 0 ? o5 + 1 | 0 : o5, o5 = H6 + kA2 | 0, l5 = (n5 = s5 + v6 | 0) ^ r4, r4 = o5 = n5 >>> 0 < s5 >>> 0 ? o5 + 1 | 0 : o5, o5 = nA(l5, o5 ^ L6, 1), L6 = h5 = w4, l5 = o5, o5 = _6 + tA2 | 0, o5 = ((s5 = M6 + X6 | 0) >>> 0 < X6 >>> 0 ? o5 + 1 | 0 : o5) + h5 | 0, H6 = o5 = (H6 = s5) >>> 0 > (s5 = s5 + l5 | 0) >>> 0 ? o5 + 1 | 0 : o5, v6 = h5 = nA(s5 ^ P6, IA2 ^ o5, 32), M6 = o5 = w4, o5 = o5 + S6 | 0, _6 = h5 = h5 + u6 | 0, P6 = o5 = v6 >>> 0 > h5 >>> 0 ? o5 + 1 | 0 : o5, h5 = nA(h5 ^ l5, L6 ^ o5, 40), o5 = yA2 + (L6 = w4) | 0, o5 = H6 + ((u6 = h5 + eA2 | 0) >>> 0 < eA2 >>> 0 ? o5 + 1 | 0 : o5) | 0, u6 = o5 = (l5 = s5) >>> 0 > (s5 = s5 + u6 | 0) >>> 0 ? o5 + 1 | 0 : o5, l5 = nA(s5 ^ v6, o5 ^ M6, 48), IA2 = o5 = w4, S6 = o5, k6 = nA(k6 ^ b6, m5 ^ $5, 1), H6 = o5 = w4, v6 = e5, o5 = o5 + x6 | 0, o5 = N6 + ((e5 = k6 + aA2 | 0) >>> 0 < aA2 >>> 0 ? o5 + 1 | 0 : o5) | 0, o5 = (e5 = e5 + F6 | 0) >>> 0 < F6 >>> 0 ? o5 + 1 | 0 : o5, F6 = e5 ^ v6, v6 = o5, F6 = nA(F6, o5 ^ J6, 32), o5 = ($5 = w4) + r4 | 0, N6 = n5 = F6 + n5 | 0, r4 = nA(n5 ^ k6, (r4 = H6) ^ (H6 = n5 >>> 0 < F6 >>> 0 ? o5 + 1 | 0 : o5), 40), o5 = pA2 + (M6 = w4) | 0, o5 = v6 + ((n5 = r4 + oA2 | 0) >>> 0 < oA2 >>> 0 ? o5 + 1 | 0 : o5) | 0, v6 = n5 = n5 + e5 | 0, J6 = o5 = n5 >>> 0 < e5 >>> 0 ? o5 + 1 | 0 : o5, e5 = o5, o5 = K6 + SA2 | 0, o5 = ((k6 = W6 + iA2 | 0) >>> 0 < iA2 >>> 0 ? o5 + 1 | 0 : o5) + e5 | 0, W6 = o5 = (e5 = n5 + k6 | 0) >>> 0 < k6 >>> 0 ? o5 + 1 | 0 : o5, n5 = nA(e5 ^ l5, o5 ^ S6, 32), o5 = (b6 = w4) + R6 | 0, S6 = nA((k6 = n5 + U6 | 0) ^ CA2, (o5 = k6 >>> 0 < n5 >>> 0 ? o5 + 1 | 0 : o5) ^ K6, 40), m5 = U6 = w4, K6 = o5, o5 = U6 + FA2 | 0, o5 = W6 + ((U6 = S6 + cA2 | 0) >>> 0 < cA2 >>> 0 ? o5 + 1 | 0 : o5) | 0, W6 = o5 = (U6 = e5 + U6 | 0) >>> 0 < e5 >>> 0 ? o5 + 1 | 0 : o5, e5 = nA(n5 ^ U6, o5 ^ b6, 48), o5 = (b6 = w4) + K6 | 0, n5 = (k6 = e5 + k6 | 0) ^ S6, S6 = o5 = k6 >>> 0 < e5 >>> 0 ? o5 + 1 | 0 : o5, m5 = o5 = nA(n5, o5 ^ m5, 1), K6 = n5 = w4, AA2 = p6, Z5 = y6, y6 = r4, r4 = nA(F6 ^ v6, J6 ^ $5, 48), o5 = (F6 = w4) + H6 | 0, H6 = n5 = r4 + N6 | 0, v6 = o5 = n5 >>> 0 < r4 >>> 0 ? o5 + 1 | 0 : o5, y6 = nA(n5 ^ y6, o5 ^ M6, 1), o5 = (M6 = w4) + lA2 | 0, o5 = ((n5 = y6 + QA2 | 0) >>> 0 < y6 >>> 0 ? o5 + 1 | 0 : o5) + u6 | 0, s5 = o5 = (p6 = n5 + s5 | 0) >>> 0 < n5 >>> 0 ? o5 + 1 | 0 : o5, n5 = nA(p6 ^ Z5, o5 ^ G6, 32), o5 = (u6 = w4) + D5 | 0, N6 = D5 = n5 + AA2 | 0, G6 = o5 = D5 >>> 0 < n5 >>> 0 ? o5 + 1 | 0 : o5, y6 = nA(y6 ^ D5, o5 ^ M6, 40), o5 = C6 + (Z5 = w4) | 0, M6 = y6, o5 = s5 + ((y6 = sA2 + y6 | 0) >>> 0 < sA2 >>> 0 ? o5 + 1 | 0 : o5) | 0, J6 = o5 = (D5 = y6 + p6 | 0) >>> 0 < p6 >>> 0 ? o5 + 1 | 0 : o5, y6 = nA(n5 ^ D5, o5 ^ u6, 48), o5 = (o5 = G6) + (G6 = w4) | 0, N6 = n5 = y6 + N6 | 0, AA2 = o5 = n5 >>> 0 < y6 >>> 0 ? o5 + 1 | 0 : o5, s5 = t5, p6 = f4, o5 = P6 + IA2 | 0, t5 = o5 = (n5 = l5 + _6 | 0) >>> 0 < l5 >>> 0 ? o5 + 1 | 0 : o5, f4 = nA(n5 ^ h5, o5 ^ L6, 1), o5 = (h5 = w4) + BA2 | 0, o5 = ((u6 = f4 + q5 | 0) >>> 0 < f4 >>> 0 ? o5 + 1 | 0 : o5) + c5 | 0, c5 = nA(s5 ^ (p6 = p6 + u6 | 0), (o5 = p6 >>> 0 < u6 >>> 0 ? o5 + 1 | 0 : o5) ^ V6, 32), u6 = o5, l5 = f4, o5 = (s5 = w4) + v6 | 0, o5 = (f4 = c5 + H6 | 0) >>> 0 < c5 >>> 0 ? o5 + 1 | 0 : o5, H6 = f4, f4 ^= l5, l5 = o5, f4 = nA(f4, o5 ^ h5, 40), o5 = B6 + (v6 = w4) | 0, o5 = ((h5 = f4 + g8 | 0) >>> 0 < g8 >>> 0 ? o5 + 1 | 0 : o5) + u6 | 0, _6 = o5 = (u6 = h5) >>> 0 > (h5 = h5 + p6 | 0) >>> 0 ? o5 + 1 | 0 : o5, s5 = nA(c5 ^ h5, o5 ^ s5, 48), IA2 = o5 = w4, p6 = o5, c5 = nA(j5 ^ O6, R6 ^ wA2, 1), P6 = o5 = w4, O6 = t5, o5 = o5 + uA2 | 0, o5 = d4 + ((t5 = c5 + T6 | 0) >>> 0 < T6 >>> 0 ? o5 + 1 | 0 : o5) | 0, u6 = F6, F6 = o5 = (t5 = t5 + Y5 | 0) >>> 0 < Y5 >>> 0 ? o5 + 1 | 0 : o5, u6 = nA(r4 ^ t5, u6 ^ o5, 32), o5 = ($5 = w4) + O6 | 0, Y5 = n5 = u6 + n5 | 0, r4 = nA(n5 ^ c5, (r4 = P6) ^ (P6 = n5 >>> 0 < u6 >>> 0 ? o5 + 1 | 0 : o5), 40), o5 = MA2 + (O6 = w4) | 0, o5 = F6 + ((n5 = r4 + rA2 | 0) >>> 0 < rA2 >>> 0 ? o5 + 1 | 0 : o5) | 0, d4 = n5 = n5 + t5 | 0, j5 = o5 = n5 >>> 0 < t5 >>> 0 ? o5 + 1 | 0 : o5, t5 = o5, o5 = K6 + tA2 | 0, o5 = ((c5 = X6 + m5 | 0) >>> 0 < X6 >>> 0 ? o5 + 1 | 0 : o5) + t5 | 0, F6 = o5 = (t5 = n5 + c5 | 0) >>> 0 < c5 >>> 0 ? o5 + 1 | 0 : o5, n5 = nA(t5 ^ s5, o5 ^ p6, 32), o5 = (V6 = w4) + AA2 | 0, p6 = nA((c5 = n5 + N6 | 0) ^ m5, (o5 = c5 >>> 0 < n5 >>> 0 ? o5 + 1 | 0 : o5) ^ K6, 40), m5 = o5, o5 = x6 + (L6 = w4) | 0, o5 = F6 + ((R6 = p6 + aA2 | 0) >>> 0 < aA2 >>> 0 ? o5 + 1 | 0 : o5) | 0, o5 = (F6 = t5 + R6 | 0) >>> 0 < t5 >>> 0 ? o5 + 1 | 0 : o5, t5 = V6, V6 = o5, t5 = nA(n5 ^ F6, t5 ^ o5, 48), o5 = (o5 = m5) + (m5 = w4) | 0, n5 = (c5 = t5 + c5 | 0) ^ p6, p6 = o5 = c5 >>> 0 < t5 >>> 0 ? o5 + 1 | 0 : o5, L6 = o5 = nA(n5, o5 ^ L6, 1), R6 = n5 = w4, K6 = y6, y6 = r4, r4 = nA(u6 ^ d4, j5 ^ $5, 48), o5 = (o5 = P6) + (P6 = w4) | 0, Y5 = n5 = r4 + Y5 | 0, u6 = O6, O6 = o5 = n5 >>> 0 < r4 >>> 0 ? o5 + 1 | 0 : o5, y6 = nA(n5 ^ y6, u6 ^ o5, 1), o5 = (d4 = w4) + FA2 | 0, o5 = _6 + ((n5 = y6 + cA2 | 0) >>> 0 < y6 >>> 0 ? o5 + 1 | 0 : o5) | 0, u6 = h5, h5 = n5 + h5 | 0, n5 = G6, G6 = o5 = u6 >>> 0 > h5 >>> 0 ? o5 + 1 | 0 : o5, n5 = nA(h5 ^ K6, n5 ^ o5, 32), o5 = (o5 = S6) + (S6 = w4) | 0, _6 = o5 = (u6 = n5 + k6 | 0) >>> 0 < n5 >>> 0 ? o5 + 1 | 0 : o5, k6 = u6, y6 = nA(y6 ^ u6, o5 ^ d4, 40), o5 = uA2 + ($5 = w4) | 0, d4 = y6, o5 = G6 + ((y6 = T6 + y6 | 0) >>> 0 < T6 >>> 0 ? o5 + 1 | 0 : o5) | 0, G6 = o5 = (u6 = y6 + h5 | 0) >>> 0 < h5 >>> 0 ? o5 + 1 | 0 : o5, y6 = nA(n5 ^ u6, o5 ^ S6, 48), o5 = (o5 = _6) + (_6 = w4) | 0, j5 = n5 = y6 + k6 | 0, K6 = o5 = n5 >>> 0 < y6 >>> 0 ? o5 + 1 | 0 : o5, k6 = e5, o5 = l5 + IA2 | 0, e5 = o5 = (n5 = s5 + H6 | 0) >>> 0 < s5 >>> 0 ? o5 + 1 | 0 : o5, f4 = nA(n5 ^ f4, o5 ^ v6, 1), o5 = DA2 + (s5 = w4) | 0, o5 = J6 + ((h5 = f4 + gA2 | 0) >>> 0 < gA2 >>> 0 ? o5 + 1 | 0 : o5) | 0, l5 = (h5 = D5 + h5 | 0) ^ k6, k6 = o5 = h5 >>> 0 < D5 >>> 0 ? o5 + 1 | 0 : o5, D5 = nA(l5, o5 ^ b6, 32), S6 = o5 = w4, l5 = f4, o5 = o5 + O6 | 0, o5 = (f4 = D5 + Y5 | 0) >>> 0 < D5 >>> 0 ? o5 + 1 | 0 : o5, H6 = f4, f4 ^= l5, l5 = o5, f4 = nA(f4, o5 ^ s5, 40), o5 = B6 + (v6 = w4) | 0, o5 = k6 + ((s5 = f4 + g8 | 0) >>> 0 < g8 >>> 0 ? o5 + 1 | 0 : o5) | 0, J6 = o5 = (s5 = h5 + s5 | 0) >>> 0 < h5 >>> 0 ? o5 + 1 | 0 : o5, k6 = nA(D5 ^ s5, o5 ^ S6, 48), IA2 = o5 = w4, h5 = o5, D5 = nA(M6 ^ N6, Z5 ^ AA2, 1), Y5 = o5 = w4, N6 = e5, o5 = o5 + C6 | 0, o5 = W6 + ((e5 = D5 + sA2 | 0) >>> 0 < sA2 >>> 0 ? o5 + 1 | 0 : o5) | 0, U6 = o5 = (e5 = e5 + U6 | 0) >>> 0 < U6 >>> 0 ? o5 + 1 | 0 : o5, S6 = nA(r4 ^ e5, o5 ^ P6, 32), o5 = (CA2 = w4) + N6 | 0, N6 = n5 = S6 + n5 | 0, r4 = nA(n5 ^ D5, (M6 = n5 >>> 0 < S6 >>> 0 ? o5 + 1 | 0 : o5) ^ Y5, 40), o5 = z6 + (P6 = w4) | 0, o5 = U6 + ((n5 = I9 + r4 | 0) >>> 0 < I9 >>> 0 ? o5 + 1 | 0 : o5) | 0, U6 = n5 = n5 + e5 | 0, O6 = o5 = n5 >>> 0 < e5 >>> 0 ? o5 + 1 | 0 : o5, e5 = o5, o5 = R6 + pA2 | 0, o5 = ((D5 = L6 + oA2 | 0) >>> 0 < oA2 >>> 0 ? o5 + 1 | 0 : o5) + e5 | 0, Y5 = o5 = (e5 = n5 + D5 | 0) >>> 0 < D5 >>> 0 ? o5 + 1 | 0 : o5, n5 = nA(e5 ^ k6, o5 ^ h5, 32), o5 = (W6 = w4) + K6 | 0, h5 = nA((D5 = n5 + j5 | 0) ^ L6, (o5 = D5 >>> 0 < n5 >>> 0 ? o5 + 1 | 0 : o5) ^ R6, 40), b6 = o5, o5 = HA2 + (L6 = w4) | 0, o5 = Y5 + ((R6 = h5 + fA2 | 0) >>> 0 < fA2 >>> 0 ? o5 + 1 | 0 : o5) | 0, o5 = (Y5 = e5 + R6 | 0) >>> 0 < e5 >>> 0 ? o5 + 1 | 0 : o5, e5 = W6, W6 = o5, e5 = nA(n5 ^ Y5, e5 ^ o5, 48), o5 = (o5 = b6) + (b6 = w4) | 0, n5 = (D5 = e5 + D5 | 0) ^ h5, h5 = o5 = D5 >>> 0 < e5 >>> 0 ? o5 + 1 | 0 : o5, L6 = o5 = nA(n5, o5 ^ L6, 1), wA2 = o5, R6 = n5 = w4, AA2 = c5, Z5 = y6, c5 = r4, r4 = nA(S6 ^ U6, O6 ^ CA2, 48), o5 = (S6 = w4) + M6 | 0, U6 = n5 = r4 + N6 | 0, N6 = o5 = n5 >>> 0 < r4 >>> 0 ? o5 + 1 | 0 : o5, c5 = nA(n5 ^ c5, o5 ^ P6, 1), o5 = (P6 = w4) + yA2 | 0, o5 = J6 + ((n5 = c5 + eA2 | 0) >>> 0 < c5 >>> 0 ? o5 + 1 | 0 : o5) | 0, s5 = o5 = (y6 = n5 + s5 | 0) >>> 0 < s5 >>> 0 ? o5 + 1 | 0 : o5, n5 = nA(y6 ^ Z5, o5 ^ _6, 32), o5 = (M6 = w4) + p6 | 0, _6 = o5 = (p6 = n5 + AA2 | 0) >>> 0 < n5 >>> 0 ? o5 + 1 | 0 : o5, c5 = nA(c5 ^ p6, o5 ^ P6, 40), o5 = lA2 + (CA2 = w4) | 0, J6 = c5, o5 = s5 + ((c5 = QA2 + c5 | 0) >>> 0 < QA2 >>> 0 ? o5 + 1 | 0 : o5) | 0, s5 = c5 + y6 | 0, c5 = M6, M6 = o5 = s5 >>> 0 < y6 >>> 0 ? o5 + 1 | 0 : o5, c5 = nA(n5 ^ s5, c5 ^ o5, 48), o5 = (o5 = _6) + (_6 = w4) | 0, P6 = n5 = c5 + p6 | 0, O6 = o5 = n5 >>> 0 < c5 >>> 0 ? o5 + 1 | 0 : o5, y6 = t5, o5 = l5 + IA2 | 0, t5 = o5 = (n5 = k6 + H6 | 0) >>> 0 < k6 >>> 0 ? o5 + 1 | 0 : o5, f4 = nA(n5 ^ f4, o5 ^ v6, 1), o5 = (k6 = w4) + MA2 | 0, o5 = G6 + ((p6 = f4 + rA2 | 0) >>> 0 < f4 >>> 0 ? o5 + 1 | 0 : o5) | 0, y6 = nA(y6 ^ (p6 = p6 + u6 | 0), (o5 = p6 >>> 0 < u6 >>> 0 ? o5 + 1 | 0 : o5) ^ m5, 32), l5 = u6 = w4, u6 = o5, H6 = f4, o5 = l5 + N6 | 0, o5 = (f4 = y6 + U6 | 0) >>> 0 < y6 >>> 0 ? o5 + 1 | 0 : o5, U6 = f4, f4 ^= H6, H6 = o5, f4 = nA(f4, o5 ^ k6, 40), o5 = hA2 + (v6 = w4) | 0, o5 = ((k6 = f4 + EA2 | 0) >>> 0 < EA2 >>> 0 ? o5 + 1 | 0 : o5) + u6 | 0, G6 = l5, l5 = o5 = (u6 = p6 + k6 | 0) >>> 0 < k6 >>> 0 ? o5 + 1 | 0 : o5, k6 = nA(y6 ^ u6, G6 ^ o5, 48), IA2 = o5 = w4, p6 = o5, y6 = nA(j5 ^ d4, K6 ^ $5, 1), N6 = o5 = w4, G6 = t5, o5 = o5 + BA2 | 0, o5 = V6 + ((t5 = y6 + q5 | 0) >>> 0 < q5 >>> 0 ? o5 + 1 | 0 : o5) | 0, F6 = o5 = (t5 = t5 + F6 | 0) >>> 0 < F6 >>> 0 ? o5 + 1 | 0 : o5, S6 = nA(r4 ^ t5, o5 ^ S6, 32), o5 = ($5 = w4) + G6 | 0, G6 = n5 = S6 + n5 | 0, r4 = nA(n5 ^ y6, (r4 = N6) ^ (N6 = n5 >>> 0 < S6 >>> 0 ? o5 + 1 | 0 : o5), 40), o5 = SA2 + (d4 = w4) | 0, o5 = F6 + ((n5 = r4 + iA2 | 0) >>> 0 < iA2 >>> 0 ? o5 + 1 | 0 : o5) | 0, j5 = n5 = n5 + t5 | 0, V6 = o5 = n5 >>> 0 < t5 >>> 0 ? o5 + 1 | 0 : o5, t5 = o5, o5 = R6 + B6 | 0, o5 = ((y6 = L6 + g8 | 0) >>> 0 < g8 >>> 0 ? o5 + 1 | 0 : o5) + t5 | 0, F6 = o5 = (t5 = n5 + y6 | 0) >>> 0 < y6 >>> 0 ? o5 + 1 | 0 : o5, n5 = nA(t5 ^ k6, o5 ^ p6, 32), o5 = (L6 = w4) + O6 | 0, p6 = nA((y6 = n5 + P6 | 0) ^ wA2, (o5 = y6 >>> 0 < n5 >>> 0 ? o5 + 1 | 0 : o5) ^ R6, 40), R6 = o5, o5 = FA2 + (m5 = w4) | 0, o5 = F6 + ((K6 = p6 + cA2 | 0) >>> 0 < cA2 >>> 0 ? o5 + 1 | 0 : o5) | 0, o5 = (F6 = t5 + K6 | 0) >>> 0 < t5 >>> 0 ? o5 + 1 | 0 : o5, t5 = L6, L6 = o5, t5 = nA(n5 ^ F6, t5 ^ o5, 48), o5 = (o5 = R6) + (R6 = w4) | 0, n5 = (y6 = t5 + y6 | 0) ^ p6, p6 = o5 = y6 >>> 0 < t5 >>> 0 ? o5 + 1 | 0 : o5, m5 = o5 = nA(n5, o5 ^ m5, 1), K6 = n5 = w4, AA2 = D5, Z5 = c5, c5 = r4, r4 = nA(S6 ^ j5, V6 ^ $5, 48), o5 = (S6 = w4) + N6 | 0, N6 = n5 = r4 + G6 | 0, G6 = o5 = n5 >>> 0 < r4 >>> 0 ? o5 + 1 | 0 : o5, c5 = nA(n5 ^ c5, o5 ^ d4, 1), o5 = (d4 = w4) + lA2 | 0, o5 = l5 + ((n5 = c5 + QA2 | 0) >>> 0 < c5 >>> 0 ? o5 + 1 | 0 : o5) | 0, u6 = o5 = (D5 = n5 + u6 | 0) >>> 0 < u6 >>> 0 ? o5 + 1 | 0 : o5, n5 = nA(D5 ^ Z5, o5 ^ _6, 32), o5 = (l5 = w4) + h5 | 0, _6 = o5 = (h5 = n5 + AA2 | 0) >>> 0 < n5 >>> 0 ? o5 + 1 | 0 : o5, c5 = nA(c5 ^ h5, o5 ^ d4, 40), o5 = BA2 + ($5 = w4) | 0, d4 = c5, o5 = u6 + ((c5 = q5 + c5 | 0) >>> 0 < q5 >>> 0 ? o5 + 1 | 0 : o5) | 0, u6 = c5 + D5 | 0, c5 = l5, l5 = o5 = u6 >>> 0 < D5 >>> 0 ? o5 + 1 | 0 : o5, c5 = nA(n5 ^ u6, c5 ^ o5, 48), o5 = (o5 = _6) + (_6 = w4) | 0, j5 = n5 = c5 + h5 | 0, V6 = o5 = n5 >>> 0 < c5 >>> 0 ? o5 + 1 | 0 : o5, D5 = e5, o5 = H6 + IA2 | 0, e5 = o5 = (n5 = k6 + U6 | 0) >>> 0 < k6 >>> 0 ? o5 + 1 | 0 : o5, f4 = nA(n5 ^ f4, o5 ^ v6, 1), o5 = SA2 + (k6 = w4) | 0, o5 = M6 + ((h5 = f4 + iA2 | 0) >>> 0 < iA2 >>> 0 ? o5 + 1 | 0 : o5) | 0, s5 = o5 = (h5 = h5 + s5 | 0) >>> 0 < s5 >>> 0 ? o5 + 1 | 0 : o5, D5 = nA(D5 ^ h5, o5 ^ b6, 32), U6 = o5 = w4, H6 = f4, o5 = o5 + G6 | 0, o5 = (f4 = D5 + N6 | 0) >>> 0 < D5 >>> 0 ? o5 + 1 | 0 : o5, v6 = f4, f4 ^= H6, H6 = o5, f4 = nA(f4, o5 ^ k6, 40), o5 = pA2 + (N6 = w4) | 0, o5 = s5 + ((k6 = f4 + oA2 | 0) >>> 0 < oA2 >>> 0 ? o5 + 1 | 0 : o5) | 0, o5 = (s5 = h5 + k6 | 0) >>> 0 < h5 >>> 0 ? o5 + 1 | 0 : o5, h5 = U6, U6 = o5, k6 = nA(D5 ^ s5, h5 ^ o5, 48), IA2 = o5 = w4, h5 = o5, D5 = nA(J6 ^ P6, O6 ^ CA2, 1), G6 = o5 = w4, M6 = e5, o5 = o5 + z6 | 0, o5 = W6 + ((e5 = I9 + D5 | 0) >>> 0 < I9 >>> 0 ? o5 + 1 | 0 : o5) | 0, Y5 = o5 = (e5 = e5 + Y5 | 0) >>> 0 < Y5 >>> 0 ? o5 + 1 | 0 : o5, S6 = nA(r4 ^ e5, o5 ^ S6, 32), o5 = (CA2 = w4) + M6 | 0, M6 = n5 = S6 + n5 | 0, r4 = nA(n5 ^ D5, (r4 = G6) ^ (G6 = n5 >>> 0 < S6 >>> 0 ? o5 + 1 | 0 : o5), 40), o5 = uA2 + (J6 = w4) | 0, o5 = Y5 + ((n5 = r4 + T6 | 0) >>> 0 < T6 >>> 0 ? o5 + 1 | 0 : o5) | 0, P6 = n5 = n5 + e5 | 0, O6 = o5 = n5 >>> 0 < e5 >>> 0 ? o5 + 1 | 0 : o5, e5 = o5, o5 = K6 + DA2 | 0, o5 = ((D5 = m5 + gA2 | 0) >>> 0 < gA2 >>> 0 ? o5 + 1 | 0 : o5) + e5 | 0, Y5 = o5 = (e5 = n5 + D5 | 0) >>> 0 < D5 >>> 0 ? o5 + 1 | 0 : o5, n5 = nA(e5 ^ k6, o5 ^ h5, 32), o5 = (W6 = w4) + V6 | 0, h5 = nA((D5 = n5 + j5 | 0) ^ m5, (o5 = D5 >>> 0 < n5 >>> 0 ? o5 + 1 | 0 : o5) ^ K6, 40), m5 = o5, o5 = C6 + (b6 = w4) | 0, o5 = Y5 + ((K6 = h5 + sA2 | 0) >>> 0 < sA2 >>> 0 ? o5 + 1 | 0 : o5) | 0, o5 = (Y5 = e5 + K6 | 0) >>> 0 < e5 >>> 0 ? o5 + 1 | 0 : o5, e5 = W6, W6 = o5, e5 = nA(n5 ^ Y5, e5 ^ o5, 48), o5 = (o5 = m5) + (m5 = w4) | 0, n5 = (D5 = e5 + D5 | 0) ^ h5, h5 = o5 = D5 >>> 0 < e5 >>> 0 ? o5 + 1 | 0 : o5, b6 = o5 = nA(n5, o5 ^ b6, 1), K6 = n5 = w4, AA2 = y6, Z5 = c5, c5 = r4, r4 = nA(S6 ^ P6, O6 ^ CA2, 48), o5 = (S6 = w4) + G6 | 0, G6 = n5 = r4 + M6 | 0, M6 = o5 = n5 >>> 0 < r4 >>> 0 ? o5 + 1 | 0 : o5, c5 = nA(n5 ^ c5, o5 ^ J6, 1), o5 = (J6 = w4) + tA2 | 0, o5 = U6 + ((n5 = c5 + X6 | 0) >>> 0 < c5 >>> 0 ? o5 + 1 | 0 : o5) | 0, s5 = o5 = (y6 = n5 + s5 | 0) >>> 0 < s5 >>> 0 ? o5 + 1 | 0 : o5, n5 = nA(y6 ^ Z5, o5 ^ _6, 32), o5 = (U6 = w4) + p6 | 0, _6 = o5 = (p6 = n5 + AA2 | 0) >>> 0 < n5 >>> 0 ? o5 + 1 | 0 : o5, c5 = nA(c5 ^ p6, o5 ^ J6, 40), o5 = MA2 + (CA2 = w4) | 0, J6 = c5, o5 = s5 + ((c5 = rA2 + c5 | 0) >>> 0 < rA2 >>> 0 ? o5 + 1 | 0 : o5) | 0, s5 = c5 + y6 | 0, c5 = U6, U6 = o5 = s5 >>> 0 < y6 >>> 0 ? o5 + 1 | 0 : o5, c5 = nA(n5 ^ s5, c5 ^ o5, 48), o5 = (o5 = _6) + (_6 = w4) | 0, P6 = n5 = c5 + p6 | 0, O6 = o5 = n5 >>> 0 < c5 >>> 0 ? o5 + 1 | 0 : o5, y6 = t5, o5 = H6 + IA2 | 0, t5 = o5 = (n5 = k6 + v6 | 0) >>> 0 < k6 >>> 0 ? o5 + 1 | 0 : o5, f4 = nA(n5 ^ f4, o5 ^ N6, 1), o5 = (k6 = w4) + hA2 | 0, o5 = l5 + ((p6 = f4 + EA2 | 0) >>> 0 < f4 >>> 0 ? o5 + 1 | 0 : o5) | 0, u6 = o5 = (p6 = p6 + u6 | 0) >>> 0 < u6 >>> 0 ? o5 + 1 | 0 : o5, y6 = nA(y6 ^ p6, o5 ^ R6, 32), l5 = o5 = w4, H6 = f4, o5 = o5 + M6 | 0, o5 = (f4 = y6 + G6 | 0) >>> 0 < y6 >>> 0 ? o5 + 1 | 0 : o5, v6 = f4, f4 ^= H6, H6 = o5, f4 = nA(f4, o5 ^ k6, 40), o5 = yA2 + (N6 = w4) | 0, o5 = u6 + ((k6 = f4 + eA2 | 0) >>> 0 < eA2 >>> 0 ? o5 + 1 | 0 : o5) | 0, G6 = l5, l5 = o5 = (u6 = p6 + k6 | 0) >>> 0 < p6 >>> 0 ? o5 + 1 | 0 : o5, k6 = nA(y6 ^ u6, G6 ^ o5, 48), IA2 = o5 = w4, p6 = o5, y6 = nA(j5 ^ d4, V6 ^ $5, 1), G6 = o5 = w4, M6 = t5, o5 = o5 + x6 | 0, o5 = L6 + ((t5 = y6 + aA2 | 0) >>> 0 < aA2 >>> 0 ? o5 + 1 | 0 : o5) | 0, F6 = o5 = (t5 = t5 + F6 | 0) >>> 0 < F6 >>> 0 ? o5 + 1 | 0 : o5, S6 = nA(r4 ^ t5, o5 ^ S6, 32), o5 = ($5 = w4) + M6 | 0, M6 = n5 = S6 + n5 | 0, r4 = nA(n5 ^ y6, (r4 = G6) ^ (G6 = n5 >>> 0 < S6 >>> 0 ? o5 + 1 | 0 : o5), 40), o5 = HA2 + (d4 = w4) | 0, o5 = F6 + ((n5 = r4 + fA2 | 0) >>> 0 < fA2 >>> 0 ? o5 + 1 | 0 : o5) | 0, j5 = n5 = n5 + t5 | 0, V6 = o5 = n5 >>> 0 < t5 >>> 0 ? o5 + 1 | 0 : o5, t5 = o5, o5 = K6 + C6 | 0, o5 = ((y6 = b6 + sA2 | 0) >>> 0 < sA2 >>> 0 ? o5 + 1 | 0 : o5) + t5 | 0, F6 = o5 = (t5 = n5 + y6 | 0) >>> 0 < y6 >>> 0 ? o5 + 1 | 0 : o5, n5 = nA(t5 ^ k6, o5 ^ p6, 32), o5 = (L6 = w4) + O6 | 0, p6 = nA((y6 = n5 + P6 | 0) ^ b6, (o5 = y6 >>> 0 < n5 >>> 0 ? o5 + 1 | 0 : o5) ^ K6, 40), R6 = o5, o5 = SA2 + (b6 = w4) | 0, o5 = F6 + ((K6 = p6 + iA2 | 0) >>> 0 < iA2 >>> 0 ? o5 + 1 | 0 : o5) | 0, o5 = (F6 = t5 + K6 | 0) >>> 0 < t5 >>> 0 ? o5 + 1 | 0 : o5, t5 = L6, L6 = o5, t5 = nA(n5 ^ F6, t5 ^ o5, 48), o5 = (o5 = R6) + (R6 = w4) | 0, n5 = (y6 = t5 + y6 | 0) ^ p6, p6 = o5 = y6 >>> 0 < t5 >>> 0 ? o5 + 1 | 0 : o5, b6 = o5 = nA(n5, o5 ^ b6, 1), K6 = n5 = w4, AA2 = D5, Z5 = c5, c5 = r4, r4 = nA(S6 ^ j5, V6 ^ $5, 48), o5 = (S6 = w4) + G6 | 0, G6 = n5 = r4 + M6 | 0, M6 = o5 = n5 >>> 0 < r4 >>> 0 ? o5 + 1 | 0 : o5, c5 = nA(n5 ^ c5, o5 ^ d4, 1), o5 = (d4 = w4) + x6 | 0, o5 = l5 + ((n5 = c5 + aA2 | 0) >>> 0 < c5 >>> 0 ? o5 + 1 | 0 : o5) | 0, u6 = o5 = (D5 = n5 + u6 | 0) >>> 0 < u6 >>> 0 ? o5 + 1 | 0 : o5, n5 = nA(D5 ^ Z5, o5 ^ _6, 32), o5 = (l5 = w4) + h5 | 0, _6 = o5 = (h5 = n5 + AA2 | 0) >>> 0 < n5 >>> 0 ? o5 + 1 | 0 : o5, c5 = nA(c5 ^ h5, o5 ^ d4, 40), o5 = yA2 + ($5 = w4) | 0, d4 = c5, o5 = u6 + ((c5 = eA2 + c5 | 0) >>> 0 < eA2 >>> 0 ? o5 + 1 | 0 : o5) | 0, u6 = c5 + D5 | 0, c5 = l5, l5 = o5 = u6 >>> 0 < D5 >>> 0 ? o5 + 1 | 0 : o5, c5 = nA(n5 ^ u6, c5 ^ o5, 48), o5 = (o5 = _6) + (_6 = w4) | 0, j5 = n5 = c5 + h5 | 0, V6 = o5 = n5 >>> 0 < c5 >>> 0 ? o5 + 1 | 0 : o5, D5 = e5, o5 = H6 + IA2 | 0, e5 = o5 = (n5 = k6 + v6 | 0) >>> 0 < k6 >>> 0 ? o5 + 1 | 0 : o5, f4 = nA(n5 ^ f4, o5 ^ N6, 1), o5 = hA2 + (k6 = w4) | 0, o5 = U6 + ((h5 = f4 + EA2 | 0) >>> 0 < EA2 >>> 0 ? o5 + 1 | 0 : o5) | 0, s5 = o5 = (h5 = h5 + s5 | 0) >>> 0 < s5 >>> 0 ? o5 + 1 | 0 : o5, D5 = nA(D5 ^ h5, o5 ^ m5, 32), U6 = o5 = w4, H6 = f4, o5 = o5 + M6 | 0, o5 = (f4 = D5 + G6 | 0) >>> 0 < D5 >>> 0 ? o5 + 1 | 0 : o5, v6 = f4, f4 ^= H6, H6 = o5, f4 = nA(f4, o5 ^ k6, 40), o5 = MA2 + (N6 = w4) | 0, o5 = s5 + ((k6 = f4 + rA2 | 0) >>> 0 < rA2 >>> 0 ? o5 + 1 | 0 : o5) | 0, o5 = (s5 = h5 + k6 | 0) >>> 0 < h5 >>> 0 ? o5 + 1 | 0 : o5, h5 = U6, U6 = o5, k6 = nA(D5 ^ s5, h5 ^ o5, 48), IA2 = o5 = w4, h5 = o5, D5 = nA(J6 ^ P6, O6 ^ CA2, 1), G6 = o5 = w4, M6 = e5, o5 = o5 + BA2 | 0, o5 = W6 + ((e5 = D5 + q5 | 0) >>> 0 < q5 >>> 0 ? o5 + 1 | 0 : o5) | 0, Y5 = o5 = (e5 = e5 + Y5 | 0) >>> 0 < Y5 >>> 0 ? o5 + 1 | 0 : o5, S6 = nA(r4 ^ e5, o5 ^ S6, 32), o5 = (CA2 = w4) + M6 | 0, M6 = n5 = S6 + n5 | 0, r4 = nA(n5 ^ D5, (r4 = G6) ^ (G6 = n5 >>> 0 < S6 >>> 0 ? o5 + 1 | 0 : o5), 40), o5 = HA2 + (J6 = w4) | 0, o5 = Y5 + ((n5 = r4 + fA2 | 0) >>> 0 < fA2 >>> 0 ? o5 + 1 | 0 : o5) | 0, P6 = n5 = n5 + e5 | 0, O6 = o5 = n5 >>> 0 < e5 >>> 0 ? o5 + 1 | 0 : o5, e5 = o5, o5 = K6 + uA2 | 0, o5 = ((D5 = b6 + T6 | 0) >>> 0 < T6 >>> 0 ? o5 + 1 | 0 : o5) + e5 | 0, Y5 = o5 = (e5 = n5 + D5 | 0) >>> 0 < D5 >>> 0 ? o5 + 1 | 0 : o5, n5 = nA(e5 ^ k6, o5 ^ h5, 32), o5 = (W6 = w4) + V6 | 0, h5 = nA((D5 = n5 + j5 | 0) ^ b6, (o5 = D5 >>> 0 < n5 >>> 0 ? o5 + 1 | 0 : o5) ^ K6, 40), m5 = o5, o5 = z6 + (b6 = w4) | 0, o5 = Y5 + ((K6 = I9 + h5 | 0) >>> 0 < I9 >>> 0 ? o5 + 1 | 0 : o5) | 0, o5 = (Y5 = e5 + K6 | 0) >>> 0 < e5 >>> 0 ? o5 + 1 | 0 : o5, e5 = W6, W6 = o5, e5 = nA(n5 ^ Y5, e5 ^ o5, 48), o5 = (o5 = m5) + (m5 = w4) | 0, n5 = (D5 = e5 + D5 | 0) ^ h5, h5 = o5 = D5 >>> 0 < e5 >>> 0 ? o5 + 1 | 0 : o5, b6 = o5 = nA(n5, o5 ^ b6, 1), K6 = n5 = w4, AA2 = y6, Z5 = c5, c5 = r4, r4 = nA(S6 ^ P6, O6 ^ CA2, 48), o5 = (S6 = w4) + G6 | 0, G6 = n5 = r4 + M6 | 0, M6 = o5 = n5 >>> 0 < r4 >>> 0 ? o5 + 1 | 0 : o5, c5 = nA(n5 ^ c5, o5 ^ J6, 1), o5 = (J6 = w4) + pA2 | 0, o5 = U6 + ((n5 = c5 + oA2 | 0) >>> 0 < c5 >>> 0 ? o5 + 1 | 0 : o5) | 0, s5 = o5 = (y6 = n5 + s5 | 0) >>> 0 < s5 >>> 0 ? o5 + 1 | 0 : o5, n5 = nA(y6 ^ Z5, o5 ^ _6, 32), o5 = (U6 = w4) + p6 | 0, _6 = o5 = (p6 = n5 + AA2 | 0) >>> 0 < n5 >>> 0 ? o5 + 1 | 0 : o5, c5 = nA(c5 ^ p6, o5 ^ J6, 40), o5 = B6 + (CA2 = w4) | 0, J6 = c5, o5 = s5 + ((c5 = g8 + c5 | 0) >>> 0 < g8 >>> 0 ? o5 + 1 | 0 : o5) | 0, s5 = c5 + y6 | 0, c5 = U6, U6 = o5 = s5 >>> 0 < y6 >>> 0 ? o5 + 1 | 0 : o5, c5 = nA(n5 ^ s5, c5 ^ o5, 48), o5 = (o5 = _6) + (_6 = w4) | 0, P6 = n5 = c5 + p6 | 0, O6 = o5 = n5 >>> 0 < c5 >>> 0 ? o5 + 1 | 0 : o5, y6 = t5, o5 = H6 + IA2 | 0, t5 = o5 = (n5 = k6 + v6 | 0) >>> 0 < k6 >>> 0 ? o5 + 1 | 0 : o5, f4 = nA(n5 ^ f4, o5 ^ N6, 1), o5 = (k6 = w4) + DA2 | 0, o5 = l5 + ((p6 = f4 + gA2 | 0) >>> 0 < f4 >>> 0 ? o5 + 1 | 0 : o5) | 0, u6 = o5 = (p6 = p6 + u6 | 0) >>> 0 < u6 >>> 0 ? o5 + 1 | 0 : o5, y6 = nA(y6 ^ p6, o5 ^ R6, 32), l5 = o5 = w4, H6 = f4, o5 = o5 + M6 | 0, o5 = (f4 = y6 + G6 | 0) >>> 0 < y6 >>> 0 ? o5 + 1 | 0 : o5, v6 = f4, f4 ^= H6, H6 = o5, f4 = nA(f4, o5 ^ k6, 40), o5 = lA2 + (N6 = w4) | 0, o5 = u6 + ((k6 = f4 + QA2 | 0) >>> 0 < QA2 >>> 0 ? o5 + 1 | 0 : o5) | 0, G6 = l5, l5 = o5 = (u6 = p6 + k6 | 0) >>> 0 < p6 >>> 0 ? o5 + 1 | 0 : o5, k6 = nA(y6 ^ u6, G6 ^ o5, 48), IA2 = o5 = w4, p6 = o5, y6 = nA(j5 ^ d4, V6 ^ $5, 1), G6 = o5 = w4, M6 = t5, o5 = o5 + FA2 | 0, o5 = L6 + ((t5 = y6 + cA2 | 0) >>> 0 < cA2 >>> 0 ? o5 + 1 | 0 : o5) | 0, F6 = o5 = (t5 = t5 + F6 | 0) >>> 0 < F6 >>> 0 ? o5 + 1 | 0 : o5, S6 = nA(r4 ^ t5, o5 ^ S6, 32), o5 = ($5 = w4) + M6 | 0, M6 = n5 = S6 + n5 | 0, r4 = nA(n5 ^ y6, (r4 = G6) ^ (G6 = n5 >>> 0 < S6 >>> 0 ? o5 + 1 | 0 : o5), 40), o5 = tA2 + (d4 = w4) | 0, o5 = F6 + ((n5 = r4 + X6 | 0) >>> 0 < X6 >>> 0 ? o5 + 1 | 0 : o5) | 0, j5 = n5 = n5 + t5 | 0, V6 = o5 = n5 >>> 0 < t5 >>> 0 ? o5 + 1 | 0 : o5, t5 = o5, o5 = K6 + HA2 | 0, o5 = ((y6 = b6 + fA2 | 0) >>> 0 < fA2 >>> 0 ? o5 + 1 | 0 : o5) + t5 | 0, F6 = o5 = (t5 = n5 + y6 | 0) >>> 0 < y6 >>> 0 ? o5 + 1 | 0 : o5, n5 = nA(t5 ^ k6, o5 ^ p6, 32), o5 = (L6 = w4) + O6 | 0, p6 = nA((y6 = n5 + P6 | 0) ^ b6, (o5 = y6 >>> 0 < n5 >>> 0 ? o5 + 1 | 0 : o5) ^ K6, 40), R6 = o5, o5 = yA2 + (b6 = w4) | 0, o5 = F6 + ((K6 = p6 + eA2 | 0) >>> 0 < eA2 >>> 0 ? o5 + 1 | 0 : o5) | 0, o5 = (F6 = t5 + K6 | 0) >>> 0 < t5 >>> 0 ? o5 + 1 | 0 : o5, t5 = L6, L6 = o5, t5 = nA(n5 ^ F6, t5 ^ o5, 48), o5 = (o5 = R6) + (R6 = w4) | 0, n5 = (y6 = t5 + y6 | 0) ^ p6, p6 = o5 = y6 >>> 0 < t5 >>> 0 ? o5 + 1 | 0 : o5, b6 = o5 = nA(n5, o5 ^ b6, 1), K6 = n5 = w4, AA2 = D5, Z5 = c5, c5 = r4, r4 = nA(S6 ^ j5, V6 ^ $5, 48), o5 = (S6 = w4) + G6 | 0, G6 = n5 = r4 + M6 | 0, M6 = o5 = n5 >>> 0 < r4 >>> 0 ? o5 + 1 | 0 : o5, c5 = nA(n5 ^ c5, o5 ^ d4, 1), o5 = (d4 = w4) + SA2 | 0, o5 = l5 + ((n5 = c5 + iA2 | 0) >>> 0 < c5 >>> 0 ? o5 + 1 | 0 : o5) | 0, u6 = o5 = (D5 = n5 + u6 | 0) >>> 0 < u6 >>> 0 ? o5 + 1 | 0 : o5, n5 = nA(D5 ^ Z5, o5 ^ _6, 32), o5 = (l5 = w4) + h5 | 0, _6 = o5 = (h5 = n5 + AA2 | 0) >>> 0 < n5 >>> 0 ? o5 + 1 | 0 : o5, c5 = nA(c5 ^ h5, o5 ^ d4, 40), o5 = C6 + ($5 = w4) | 0, d4 = c5, o5 = u6 + ((c5 = sA2 + c5 | 0) >>> 0 < sA2 >>> 0 ? o5 + 1 | 0 : o5) | 0, u6 = c5 + D5 | 0, c5 = l5, l5 = o5 = u6 >>> 0 < D5 >>> 0 ? o5 + 1 | 0 : o5, c5 = nA(n5 ^ u6, c5 ^ o5, 48), o5 = (o5 = _6) + (_6 = w4) | 0, j5 = n5 = c5 + h5 | 0, V6 = o5 = n5 >>> 0 < c5 >>> 0 ? o5 + 1 | 0 : o5, D5 = e5, o5 = H6 + IA2 | 0, e5 = o5 = (n5 = k6 + v6 | 0) >>> 0 < k6 >>> 0 ? o5 + 1 | 0 : o5, f4 = nA(n5 ^ f4, o5 ^ N6, 1), o5 = lA2 + (k6 = w4) | 0, o5 = U6 + ((h5 = f4 + QA2 | 0) >>> 0 < QA2 >>> 0 ? o5 + 1 | 0 : o5) | 0, s5 = o5 = (h5 = h5 + s5 | 0) >>> 0 < s5 >>> 0 ? o5 + 1 | 0 : o5, D5 = nA(D5 ^ h5, o5 ^ m5, 32), U6 = o5 = w4, H6 = f4, o5 = o5 + M6 | 0, o5 = (f4 = D5 + G6 | 0) >>> 0 < D5 >>> 0 ? o5 + 1 | 0 : o5, v6 = f4, f4 ^= H6, H6 = o5, f4 = nA(f4, o5 ^ k6, 40), o5 = x6 + (N6 = w4) | 0, o5 = s5 + ((k6 = f4 + aA2 | 0) >>> 0 < aA2 >>> 0 ? o5 + 1 | 0 : o5) | 0, o5 = (s5 = h5 + k6 | 0) >>> 0 < h5 >>> 0 ? o5 + 1 | 0 : o5, h5 = U6, U6 = o5, k6 = nA(D5 ^ s5, h5 ^ o5, 48), IA2 = o5 = w4, h5 = o5, D5 = nA(J6 ^ P6, O6 ^ CA2, 1), G6 = o5 = w4, M6 = e5, o5 = o5 + MA2 | 0, o5 = W6 + ((e5 = D5 + rA2 | 0) >>> 0 < rA2 >>> 0 ? o5 + 1 | 0 : o5) | 0, Y5 = o5 = (e5 = e5 + Y5 | 0) >>> 0 < Y5 >>> 0 ? o5 + 1 | 0 : o5, S6 = nA(r4 ^ e5, o5 ^ S6, 32), o5 = (CA2 = w4) + M6 | 0, M6 = n5 = S6 + n5 | 0, r4 = nA(n5 ^ D5, (r4 = G6) ^ (G6 = n5 >>> 0 < S6 >>> 0 ? o5 + 1 | 0 : o5), 40), o5 = FA2 + (J6 = w4) | 0, o5 = Y5 + ((n5 = r4 + cA2 | 0) >>> 0 < cA2 >>> 0 ? o5 + 1 | 0 : o5) | 0, P6 = n5 = n5 + e5 | 0, O6 = o5 = n5 >>> 0 < e5 >>> 0 ? o5 + 1 | 0 : o5, e5 = o5, o5 = K6 + hA2 | 0, o5 = ((D5 = b6 + EA2 | 0) >>> 0 < EA2 >>> 0 ? o5 + 1 | 0 : o5) + e5 | 0, Y5 = o5 = (e5 = n5 + D5 | 0) >>> 0 < D5 >>> 0 ? o5 + 1 | 0 : o5, n5 = nA(e5 ^ k6, o5 ^ h5, 32), o5 = (W6 = w4) + V6 | 0, h5 = nA((D5 = n5 + j5 | 0) ^ b6, (o5 = D5 >>> 0 < n5 >>> 0 ? o5 + 1 | 0 : o5) ^ K6, 40), m5 = o5, o5 = B6 + (b6 = w4) | 0, o5 = Y5 + ((K6 = h5 + g8 | 0) >>> 0 < g8 >>> 0 ? o5 + 1 | 0 : o5) | 0, o5 = (Y5 = e5 + K6 | 0) >>> 0 < e5 >>> 0 ? o5 + 1 | 0 : o5, e5 = W6, W6 = o5, e5 = nA(n5 ^ Y5, e5 ^ o5, 48), o5 = (o5 = m5) + (m5 = w4) | 0, n5 = (D5 = e5 + D5 | 0) ^ h5, h5 = o5 = D5 >>> 0 < e5 >>> 0 ? o5 + 1 | 0 : o5, b6 = o5 = nA(n5, o5 ^ b6, 1), K6 = n5 = w4, AA2 = y6, Z5 = c5, c5 = r4, r4 = nA(S6 ^ P6, O6 ^ CA2, 48), o5 = (S6 = w4) + G6 | 0, G6 = n5 = r4 + M6 | 0, M6 = o5 = n5 >>> 0 < r4 >>> 0 ? o5 + 1 | 0 : o5, c5 = nA(n5 ^ c5, o5 ^ J6, 1), o5 = (P6 = w4) + BA2 | 0, o5 = U6 + ((n5 = c5 + q5 | 0) >>> 0 < c5 >>> 0 ? o5 + 1 | 0 : o5) | 0, s5 = o5 = (y6 = n5 + s5 | 0) >>> 0 < s5 >>> 0 ? o5 + 1 | 0 : o5, n5 = nA(y6 ^ Z5, o5 ^ _6, 32), o5 = (U6 = w4) + p6 | 0, _6 = p6 = n5 + AA2 | 0, J6 = o5 = p6 >>> 0 < n5 >>> 0 ? o5 + 1 | 0 : o5, c5 = nA(c5 ^ p6, o5 ^ P6, 40), o5 = uA2 + (AA2 = w4) | 0, P6 = c5, o5 = s5 + ((c5 = T6 + c5 | 0) >>> 0 < T6 >>> 0 ? o5 + 1 | 0 : o5) | 0, p6 = c5 + y6 | 0, c5 = U6, U6 = o5 = p6 >>> 0 < y6 >>> 0 ? o5 + 1 | 0 : o5, c5 = nA(n5 ^ p6, c5 ^ o5, 48), o5 = (o5 = J6) + (J6 = w4) | 0, _6 = n5 = c5 + _6 | 0, O6 = o5 = n5 >>> 0 < c5 >>> 0 ? o5 + 1 | 0 : o5, y6 = t5, o5 = H6 + IA2 | 0, t5 = o5 = (n5 = k6 + v6 | 0) >>> 0 < k6 >>> 0 ? o5 + 1 | 0 : o5, f4 = nA(n5 ^ f4, o5 ^ N6, 1), o5 = (k6 = w4) + z6 | 0, o5 = l5 + ((s5 = I9 + f4 | 0) >>> 0 < f4 >>> 0 ? o5 + 1 | 0 : o5) | 0, u6 = o5 = (s5 = s5 + u6 | 0) >>> 0 < u6 >>> 0 ? o5 + 1 | 0 : o5, l5 = y6 = nA(y6 ^ s5, o5 ^ R6, 32), H6 = o5 = w4, v6 = f4, o5 = o5 + M6 | 0, o5 = (f4 = y6 + G6 | 0) >>> 0 < y6 >>> 0 ? o5 + 1 | 0 : o5, N6 = f4, f4 ^= v6, v6 = o5, f4 = nA(f4, o5 ^ k6, 40), o5 = pA2 + (G6 = w4) | 0, o5 = u6 + ((y6 = f4 + oA2 | 0) >>> 0 < oA2 >>> 0 ? o5 + 1 | 0 : o5) | 0, M6 = (y6 = y6 + s5 | 0) ^ l5, l5 = o5 = y6 >>> 0 < s5 >>> 0 ? o5 + 1 | 0 : o5, s5 = nA(M6, o5 ^ H6, 48), R6 = o5 = w4, k6 = o5, H6 = u6 = nA(j5 ^ d4, V6 ^ $5, 1), M6 = o5 = w4, d4 = t5, o5 = o5 + tA2 | 0, o5 = L6 + ((t5 = u6 + X6 | 0) >>> 0 < X6 >>> 0 ? o5 + 1 | 0 : o5) | 0, o5 = (t5 = t5 + F6 | 0) >>> 0 < F6 >>> 0 ? o5 + 1 | 0 : o5, F6 = S6, S6 = o5, u6 = nA(r4 ^ t5, F6 ^ o5, 32), o5 = (Z5 = w4) + d4 | 0, F6 = n5 = u6 + n5 | 0, r4 = nA(r4 = n5 ^ H6, (H6 = n5 >>> 0 < u6 >>> 0 ? o5 + 1 | 0 : o5) ^ M6, 40), o5 = DA2 + (M6 = w4) | 0, o5 = S6 + ((n5 = r4 + gA2 | 0) >>> 0 < gA2 >>> 0 ? o5 + 1 | 0 : o5) | 0, S6 = n5 = n5 + t5 | 0, d4 = o5 = n5 >>> 0 < t5 >>> 0 ? o5 + 1 | 0 : o5, t5 = o5, o5 = K6 + uA2 | 0, o5 = ((L6 = T6) >>> 0 > (T6 = b6 + T6 | 0) >>> 0 ? o5 + 1 | 0 : o5) + t5 | 0, uA2 = o5 = (n5 = n5 + T6 | 0) >>> 0 < T6 >>> 0 ? o5 + 1 | 0 : o5, T6 = nA(n5 ^ s5, o5 ^ k6, 32), o5 = (j5 = w4) + O6 | 0, k6 = nA((t5 = _6 + T6 | 0) ^ b6, (o5 = t5 >>> 0 < T6 >>> 0 ? o5 + 1 | 0 : o5) ^ K6, 40), L6 = o5, o5 = pA2 + (V6 = w4) | 0, o5 = uA2 + ((b6 = oA2) >>> 0 > (oA2 = k6 + oA2 | 0) >>> 0 ? o5 + 1 | 0 : o5) | 0, o5 = (oA2 = n5 + oA2 | 0) >>> 0 < n5 >>> 0 ? o5 + 1 | 0 : o5, n5 = T6 ^ oA2, T6 = o5;
                      pA2 = nA(n5, o5 ^ j5, 48), o5 = (uA2 = w4) + L6 | 0, t5 = o5 = (n5 = t5 + pA2 | 0) >>> 0 < pA2 >>> 0 ? o5 + 1 | 0 : o5, o5 = nA(n5 ^ k6, o5 ^ V6, 1), k6 = w4, j5 = o5, V6 = D5, D5 = gA2, L6 = DA2, DA2 = nA(u6 ^ S6, d4 ^ Z5, 48), o5 = (u6 = w4) + H6 | 0, H6 = D5, F6 = o5 = (gA2 = F6 + DA2 | 0) >>> 0 < DA2 >>> 0 ? o5 + 1 | 0 : o5, D5 = nA(r4 ^ (S6 = gA2), o5 ^ M6, 1), o5 = (M6 = w4) + L6 | 0, o5 = l5 + (D5 >>> 0 > (gA2 = H6 + D5 | 0) >>> 0 ? o5 + 1 | 0 : o5) | 0, r4 = o5 = (gA2 = y6 + gA2 | 0) >>> 0 < y6 >>> 0 ? o5 + 1 | 0 : o5, c5 = nA(c5 ^ gA2, o5 ^ J6, 32), o5 = (o5 = h5) + (h5 = w4) | 0, l5 = y6 = c5 + V6 | 0, H6 = o5 = y6 >>> 0 < c5 >>> 0 ? o5 + 1 | 0 : o5, y6 = nA(y6 ^ D5, o5 ^ M6, 40), o5 = (M6 = w4) + SA2 | 0, o5 = (y6 >>> 0 > (iA2 = y6 + iA2 | 0) >>> 0 ? o5 + 1 | 0 : o5) + r4 | 0, r4 = o5 = (r4 = iA2) >>> 0 > (iA2 = gA2 + iA2 | 0) >>> 0 ? o5 + 1 | 0 : o5, c5 = nA(c5 ^ iA2, o5 ^ h5, 48), o5 = (D5 = w4) + H6 | 0, h5 = gA2 = c5 + l5 | 0, SA2 = o5 = gA2 >>> 0 < c5 >>> 0 ? o5 + 1 | 0 : o5, l5 = I9, H6 = z6, o5 = v6 + R6 | 0, gA2 = o5 = (I9 = s5 + N6 | 0) >>> 0 < s5 >>> 0 ? o5 + 1 | 0 : o5, z6 = nA(I9 ^ f4, o5 ^ G6, 1), o5 = (s5 = w4) + H6 | 0, o5 = U6 + ((f4 = l5 + z6 | 0) >>> 0 < z6 >>> 0 ? o5 + 1 | 0 : o5) | 0, e5 = nA((f4 = f4 + p6 | 0) ^ e5, (o5 = f4 >>> 0 < p6 >>> 0 ? o5 + 1 | 0 : o5) ^ m5, 32), l5 = o5, U6 = EA2, EA2 = z6, o5 = (p6 = w4) + F6 | 0, F6 = s5, s5 = o5 = (z6 = e5 + S6 | 0) >>> 0 < e5 >>> 0 ? o5 + 1 | 0 : o5, EA2 = nA(z6 ^ EA2, F6 ^ o5, 40), o5 = (S6 = w4) + hA2 | 0, o5 = ((hA2 = U6 + EA2 | 0) >>> 0 < EA2 >>> 0 ? o5 + 1 | 0 : o5) + l5 | 0, l5 = hA2, f4 = e5 ^ (hA2 = f4 + hA2 | 0), e5 = o5 = l5 >>> 0 > hA2 >>> 0 ? o5 + 1 | 0 : o5, o5 = nA(f4, o5 ^ p6, 48), v6 = f4 = w4, p6 = o5, F6 = q5, l5 = BA2, q5 = nA(_6 ^ P6, O6 ^ AA2, 1), H6 = o5 = w4, o5 = o5 + HA2 | 0, o5 = W6 + ((q5 = (U6 = q5) + fA2 | 0) >>> 0 < fA2 >>> 0 ? o5 + 1 | 0 : o5) | 0, fA2 = o5 = (q5 = Y5 + q5 | 0) >>> 0 < Y5 >>> 0 ? o5 + 1 | 0 : o5, BA2 = nA(q5 ^ DA2, o5 ^ u6, 32), o5 = (Y5 = w4) + gA2 | 0, gA2 = I9 = BA2 + I9 | 0, DA2 = nA(I9 ^ U6, (u6 = I9 >>> 0 < BA2 >>> 0 ? o5 + 1 | 0 : o5) ^ H6, 40), o5 = (o5 = l5) + (l5 = w4) | 0, o5 = fA2 + ((I9 = DA2 + F6 | 0) >>> 0 < DA2 >>> 0 ? o5 + 1 | 0 : o5) | 0, fA2 = I9 = I9 + q5 | 0, HA2 = o5 = I9 >>> 0 < q5 >>> 0 ? o5 + 1 | 0 : o5, q5 = o5, o5 = k6 + lA2 | 0, o5 = ((U6 = QA2) >>> 0 > (QA2 = j5 + QA2 | 0) >>> 0 ? o5 + 1 | 0 : o5) + q5 | 0, lA2 = o5 = (q5 = I9 + QA2 | 0) >>> 0 < QA2 >>> 0 ? o5 + 1 | 0 : o5, QA2 = nA(p6 ^ q5, o5 ^ f4, 32), o5 = (U6 = w4) + SA2 | 0, f4 = I9 = QA2 + h5 | 0, I9 = nA(I9 ^ j5, (F6 = k6) ^ (k6 = I9 >>> 0 < QA2 >>> 0 ? o5 + 1 | 0 : o5), 40), o5 = MA2 + (H6 = w4) | 0, MA2 = I9, o5 = lA2 + ((I9 = rA2 + I9 | 0) >>> 0 < rA2 >>> 0 ? o5 + 1 | 0 : o5) | 0, o5 = (I9 = I9 + q5 | 0) >>> 0 < q5 >>> 0 ? o5 + 1 | 0 : o5, lA2 = I9, N6 = (a4[A10 + 8 | 0] | a4[A10 + 9 | 0] << 8 | a4[A10 + 10 | 0] << 16 | a4[A10 + 11 | 0] << 24) ^ I9, F6 = o5, G6 = o5 ^ (a4[A10 + 12 | 0] | a4[A10 + 13 | 0] << 8 | a4[A10 + 14 | 0] << 16 | a4[A10 + 15 | 0] << 24), q5 = nA(BA2 ^ fA2, Y5 ^ HA2, 48), o5 = (fA2 = w4) + u6 | 0, u6 = I9 = q5 + gA2 | 0, HA2 = o5 = I9 >>> 0 < q5 >>> 0 ? o5 + 1 | 0 : o5, BA2 = eA2, o5 = s5 + v6 | 0, eA2 = o5 = (I9 = p6 + z6 | 0) >>> 0 < z6 >>> 0 ? o5 + 1 | 0 : o5, EA2 = nA(I9 ^ EA2, o5 ^ S6, 1), o5 = (p6 = w4) + yA2 | 0, o5 = ((BA2 = EA2 + BA2 | 0) >>> 0 < EA2 >>> 0 ? o5 + 1 | 0 : o5) + r4 | 0, BA2 = o5 = (yA2 = BA2 + iA2 | 0) >>> 0 < BA2 >>> 0 ? o5 + 1 | 0 : o5, gA2 = nA(yA2 ^ pA2, o5 ^ uA2, 32), o5 = (z6 = w4) + HA2 | 0, iA2 = o5 = (rA2 = gA2 + u6 | 0) >>> 0 < gA2 >>> 0 ? o5 + 1 | 0 : o5, pA2 = gA2, gA2 = nA(EA2 ^ rA2, o5 ^ p6, 40), o5 = (r4 = w4) + FA2 | 0, o5 = (gA2 >>> 0 > (EA2 = gA2 + cA2 | 0) >>> 0 ? o5 + 1 | 0 : o5) + BA2 | 0, s5 = z6, z6 = o5 = (yA2 = EA2 + yA2 | 0) >>> 0 < EA2 >>> 0 ? o5 + 1 | 0 : o5, EA2 = nA(pA2 ^ (cA2 = yA2), s5 ^ o5, 48), o5 = (p6 = w4) + iA2 | 0, o5 = (BA2 = EA2 + rA2 | 0) >>> 0 < EA2 >>> 0 ? o5 + 1 | 0 : o5, rA2 = BA2, BA2 ^= N6, E5[A10 + 8 | 0] = BA2, E5[A10 + 9 | 0] = BA2 >>> 8, E5[A10 + 10 | 0] = BA2 >>> 16, E5[A10 + 11 | 0] = BA2 >>> 24, iA2 = o5, o5 ^= G6, E5[A10 + 12 | 0] = o5, E5[A10 + 13 | 0] = o5 >>> 8, E5[A10 + 14 | 0] = o5 >>> 16, E5[A10 + 15 | 0] = o5 >>> 24, yA2 = I9, BA2 = eA2, I9 = q5, q5 = nA(y6 ^ h5, M6 ^ SA2, 1), o5 = (FA2 = w4) + B6 | 0, o5 = (q5 >>> 0 > (eA2 = q5 + g8 | 0) >>> 0 ? o5 + 1 | 0 : o5) + T6 | 0, oA2 = o5 = (h5 = eA2) >>> 0 > (eA2 = oA2 + eA2 | 0) >>> 0 ? o5 + 1 | 0 : o5, I9 = nA(I9 ^ eA2, o5 ^ fA2, 32), o5 = (o5 = BA2) + (BA2 = w4) | 0, fA2 = o5 = (yA2 = I9 + yA2 | 0) >>> 0 < I9 >>> 0 ? o5 + 1 | 0 : o5, pA2 = I9, yA2 = nA(q5 ^ (T6 = yA2), o5 ^ FA2, 40), o5 = (y6 = w4) + C6 | 0, o5 = oA2 + ((I9 = yA2 + sA2 | 0) >>> 0 < yA2 >>> 0 ? o5 + 1 | 0 : o5) | 0, o5 = (I9 = I9 + eA2 | 0) >>> 0 < eA2 >>> 0 ? o5 + 1 | 0 : o5, oA2 = I9, I9 ^= pA2, pA2 = o5, eA2 = nA(I9, o5 ^ BA2, 48), o5 = (h5 = w4) + fA2 | 0, T6 = I9 = eA2 + T6 | 0, fA2 = I9 >>> 0 < eA2 >>> 0 ? o5 + 1 | 0 : o5, DA2 = I9 = nA(u6 ^ DA2, l5 ^ HA2, 1), FA2 = o5 = w4, o5 = o5 + x6 | 0, o5 = e5 + ((I9 = I9 + aA2 | 0) >>> 0 < aA2 >>> 0 ? o5 + 1 | 0 : o5) | 0, x6 = o5 = (q5 = I9 + hA2 | 0) >>> 0 < hA2 >>> 0 ? o5 + 1 | 0 : o5, I9 = (BA2 = nA(c5 ^ q5, o5 ^ D5, 32)) + n5 | 0, o5 = (n5 = w4) + t5 | 0, hA2 = I9, I9 = (aA2 = nA(e5 = I9 ^ DA2, (DA2 = I9 >>> 0 < BA2 >>> 0 ? o5 + 1 | 0 : o5) ^ FA2, 40)) + X6 | 0, o5 = (X6 = w4) + tA2 | 0, o5 = x6 + (I9 >>> 0 < aA2 >>> 0 ? o5 + 1 | 0 : o5) | 0, o5 = (x6 = I9 + q5 | 0) >>> 0 < q5 >>> 0 ? o5 + 1 | 0 : o5, q5 = x6 ^ UA2 ^ T6, E5[0 | (I9 = A10)] = q5, E5[I9 + 1 | 0] = q5 >>> 8, E5[I9 + 2 | 0] = q5 >>> 16, E5[I9 + 3 | 0] = q5 >>> 24, q5 = o5 ^ Q6 ^ fA2, E5[I9 + 4 | 0] = q5, E5[I9 + 5 | 0] = q5 >>> 8, E5[I9 + 6 | 0] = q5 >>> 16, E5[I9 + 7 | 0] = q5 >>> 24, q5 = (BA2 = nA(x6 ^ BA2, o5 ^ n5, 48)) + hA2 | 0, o5 = (hA2 = w4) + DA2 | 0, o5 = (DA2 = q5 >>> 0 < BA2 >>> 0 ? o5 + 1 | 0 : o5) ^ (a4[I9 + 20 | 0] | a4[I9 + 21 | 0] << 8 | a4[I9 + 22 | 0] << 16 | a4[I9 + 23 | 0] << 24) ^ pA2, x6 = (a4[I9 + 16 | 0] | a4[I9 + 17 | 0] << 8 | a4[I9 + 18 | 0] << 16 | a4[I9 + 19 | 0] << 24) ^ oA2 ^ q5, E5[I9 + 16 | 0] = x6, E5[I9 + 17 | 0] = x6 >>> 8, E5[I9 + 18 | 0] = x6 >>> 16, E5[I9 + 19 | 0] = x6 >>> 24, E5[I9 + 20 | 0] = o5, E5[I9 + 21 | 0] = o5 >>> 8, E5[I9 + 22 | 0] = o5 >>> 16, E5[I9 + 23 | 0] = o5 >>> 24, I9 = nA(QA2 ^ lA2, F6 ^ U6, 48), x6 = w4, oA2 = a4[A10 + 36 | 0] | a4[A10 + 37 | 0] << 8 | a4[A10 + 38 | 0] << 16 | a4[A10 + 39 | 0] << 24, o5 = (a4[A10 + 32 | 0] | a4[A10 + 33 | 0] << 8 | a4[A10 + 34 | 0] << 16 | a4[A10 + 35 | 0] << 24) ^ nA(gA2 ^ rA2, r4 ^ iA2, 1) ^ I9, E5[A10 + 32 | 0] = o5, E5[A10 + 33 | 0] = o5 >>> 8, E5[A10 + 34 | 0] = o5 >>> 16, E5[A10 + 35 | 0] = o5 >>> 24, o5 = w4 ^ oA2 ^ x6, E5[A10 + 36 | 0] = o5, E5[A10 + 37 | 0] = o5 >>> 8, E5[A10 + 38 | 0] = o5 >>> 16, E5[A10 + 39 | 0] = o5 >>> 24, o5 = k6 + x6 | 0, o5 = (oA2 = I9 + f4 | 0) >>> 0 < I9 >>> 0 ? o5 + 1 | 0 : o5, gA2 = (a4[(I9 = A10) + 28 | 0] | a4[I9 + 29 | 0] << 8 | a4[I9 + 30 | 0] << 16 | a4[I9 + 31 | 0] << 24) ^ z6 ^ o5, x6 = (a4[I9 + 24 | 0] | a4[I9 + 25 | 0] << 8 | a4[I9 + 26 | 0] << 16 | a4[I9 + 27 | 0] << 24) ^ cA2 ^ oA2, E5[I9 + 24 | 0] = x6, E5[I9 + 25 | 0] = x6 >>> 8, E5[I9 + 26 | 0] = x6 >>> 16, E5[I9 + 27 | 0] = x6 >>> 24, E5[I9 + 28 | 0] = gA2, E5[I9 + 29 | 0] = gA2 >>> 8, E5[I9 + 30 | 0] = gA2 >>> 16, E5[I9 + 31 | 0] = gA2 >>> 24, gA2 = a4[I9 + 44 | 0] | a4[I9 + 45 | 0] << 8 | a4[I9 + 46 | 0] << 16 | a4[I9 + 47 | 0] << 24, I9 = eA2 ^ (a4[I9 + 40 | 0] | a4[I9 + 41 | 0] << 8 | a4[I9 + 42 | 0] << 16 | a4[I9 + 43 | 0] << 24) ^ nA(q5 ^ aA2, X6 ^ DA2, 1), E5[A10 + 40 | 0] = I9, E5[A10 + 41 | 0] = I9 >>> 8, E5[A10 + 42 | 0] = I9 >>> 16, E5[A10 + 43 | 0] = I9 >>> 24, I9 = h5 ^ w4 ^ gA2, E5[A10 + 44 | 0] = I9, E5[A10 + 45 | 0] = I9 >>> 8, E5[A10 + 46 | 0] = I9 >>> 16, E5[A10 + 47 | 0] = I9 >>> 24, q5 = a4[A10 + 60 | 0] | a4[A10 + 61 | 0] << 8 | a4[A10 + 62 | 0] << 16 | a4[A10 + 63 | 0] << 24, I9 = BA2 ^ (a4[A10 + 56 | 0] | a4[A10 + 57 | 0] << 8 | a4[A10 + 58 | 0] << 16 | a4[A10 + 59 | 0] << 24) ^ nA(T6 ^ yA2, y6 ^ fA2, 1), E5[A10 + 56 | 0] = I9, E5[A10 + 57 | 0] = I9 >>> 8, E5[A10 + 58 | 0] = I9 >>> 16, E5[A10 + 59 | 0] = I9 >>> 24, I9 = hA2 ^ w4 ^ q5, E5[A10 + 60 | 0] = I9, E5[A10 + 61 | 0] = I9 >>> 8, E5[A10 + 62 | 0] = I9 >>> 16, E5[A10 + 63 | 0] = I9 >>> 24, q5 = a4[A10 + 52 | 0] | a4[A10 + 53 | 0] << 8 | a4[A10 + 54 | 0] << 16 | a4[A10 + 55 | 0] << 24, I9 = EA2 ^ (a4[A10 + 48 | 0] | a4[A10 + 49 | 0] << 8 | a4[A10 + 50 | 0] << 16 | a4[A10 + 51 | 0] << 24) ^ nA(oA2 ^ MA2, o5 ^ H6, 1), E5[A10 + 48 | 0] = I9, E5[A10 + 49 | 0] = I9 >>> 8, E5[A10 + 50 | 0] = I9 >>> 16, E5[A10 + 51 | 0] = I9 >>> 24, I9 = p6 ^ w4 ^ q5, E5[A10 + 52 | 0] = I9, E5[A10 + 53 | 0] = I9 >>> 8, E5[A10 + 54 | 0] = I9 >>> 16, E5[A10 + 55 | 0] = I9 >>> 24;
                    }
                    function s4(A10, I9, g8, C6, B6, Q6, i6) {
                      var n5, r4, f4, t5, e5, c5, y6, h5, s5, p6, k6, F6, l5, S6, H6, G6, U6, J6, N6, Y5, b6, _6, K6, P6, d4, L6, R6, x6, j5, X6, q5, z6, V6, O6, T6, W6, Z5, $5, AA2, IA2, gA2, CA2, BA2, iA2, oA2, aA2, nA2, rA2, fA2 = 0, tA2 = 0, eA2 = 0, cA2 = 0, yA2 = 0, wA2 = 0, hA2 = 0, sA2 = 0, pA2 = 0, kA2 = 0, FA2 = 0, lA2 = 0, SA2 = 0, HA2 = 0, MA2 = 0, GA2 = 0, UA2 = 0, JA2 = 0, NA2 = 0, YA2 = 0, bA2 = 0, _A2 = 0, KA2 = 0, PA2 = 0, vA2 = 0, mA2 = 0, dA2 = 0, LA2 = 0, RA2 = 0, xA2 = 0, jA2 = 0, XA2 = 0, qA2 = 0, zA2 = 0, VA2 = 0, OA2 = 0, TA2 = 0, WA2 = 0, ZA2 = 0, AI2 = 0, II2 = 0, gI2 = 0, CI2 = 0, BI2 = 0, QI2 = 0, iI2 = 0;
                      return D4 = f4 = D4 - 560 | 0, EA(f4 + 352 | 0), i6 && m4(f4 + 352 | 0, 34768, 34, 0), QA(f4 + 288 | 0, Q6, 32, 0), m4(wA2 = f4 + 352 | 0, f4 + 320 | 0, 32, 0), m4(wA2, g8, C6, B6), M5(wA2, sA2 = f4 + 224 | 0), pA2 = a4[(tA2 = Q6) + 32 | 0] | a4[tA2 + 33 | 0] << 8 | a4[tA2 + 34 | 0] << 16 | a4[tA2 + 35 | 0] << 24, FA2 = a4[tA2 + 36 | 0] | a4[tA2 + 37 | 0] << 8 | a4[tA2 + 38 | 0] << 16 | a4[tA2 + 39 | 0] << 24, cA2 = a4[tA2 + 40 | 0] | a4[tA2 + 41 | 0] << 8 | a4[tA2 + 42 | 0] << 16 | a4[tA2 + 43 | 0] << 24, fA2 = a4[tA2 + 44 | 0] | a4[tA2 + 45 | 0] << 8 | a4[tA2 + 46 | 0] << 16 | a4[tA2 + 47 | 0] << 24, eA2 = a4[tA2 + 48 | 0] | a4[tA2 + 49 | 0] << 8 | a4[tA2 + 50 | 0] << 16 | a4[tA2 + 51 | 0] << 24, Q6 = a4[tA2 + 52 | 0] | a4[tA2 + 53 | 0] << 8 | a4[tA2 + 54 | 0] << 16 | a4[tA2 + 55 | 0] << 24, yA2 = a4[tA2 + 60 | 0] | a4[tA2 + 61 | 0] << 8 | a4[tA2 + 62 | 0] << 16 | a4[tA2 + 63 | 0] << 24, tA2 = a4[tA2 + 56 | 0] | a4[tA2 + 57 | 0] << 8 | a4[tA2 + 58 | 0] << 16 | a4[tA2 + 59 | 0] << 24, E5[A10 + 56 | 0] = tA2, E5[A10 + 57 | 0] = tA2 >>> 8, E5[A10 + 58 | 0] = tA2 >>> 16, E5[A10 + 59 | 0] = tA2 >>> 24, E5[A10 + 60 | 0] = yA2, E5[A10 + 61 | 0] = yA2 >>> 8, E5[A10 + 62 | 0] = yA2 >>> 16, E5[A10 + 63 | 0] = yA2 >>> 24, E5[A10 + 48 | 0] = eA2, E5[A10 + 49 | 0] = eA2 >>> 8, E5[A10 + 50 | 0] = eA2 >>> 16, E5[A10 + 51 | 0] = eA2 >>> 24, E5[A10 + 52 | 0] = Q6, E5[A10 + 53 | 0] = Q6 >>> 8, E5[A10 + 54 | 0] = Q6 >>> 16, E5[A10 + 55 | 0] = Q6 >>> 24, E5[A10 + 40 | 0] = cA2, E5[A10 + 41 | 0] = cA2 >>> 8, E5[A10 + 42 | 0] = cA2 >>> 16, E5[A10 + 43 | 0] = cA2 >>> 24, E5[A10 + 44 | 0] = fA2, E5[A10 + 45 | 0] = fA2 >>> 8, E5[A10 + 46 | 0] = fA2 >>> 16, E5[A10 + 47 | 0] = fA2 >>> 24, E5[0 | (Q6 = A10 + 32 | 0)] = pA2, E5[Q6 + 1 | 0] = pA2 >>> 8, E5[Q6 + 2 | 0] = pA2 >>> 16, E5[Q6 + 3 | 0] = pA2 >>> 24, E5[Q6 + 4 | 0] = FA2, E5[Q6 + 5 | 0] = FA2 >>> 8, E5[Q6 + 6 | 0] = FA2 >>> 16, E5[Q6 + 7 | 0] = FA2 >>> 24, u5(sA2), v5(f4, sA2), uA(A10, f4), EA(wA2), i6 && m4(f4 + 352 | 0, 34768, 34, 0), m4(i6 = f4 + 352 | 0, A10, 64, 0), m4(i6, g8, C6, B6), M5(i6, hA2 = f4 + 160 | 0), u5(hA2), E5[f4 + 288 | 0] = 248 & a4[f4 + 288 | 0], E5[f4 + 319 | 0] = 63 & a4[f4 + 319 | 0] | 64, g8 = a4[23 + (A10 = r4 = f4 + 288 | 0) | 0], cA2 = DA(t5 = a4[A10 + 21 | 0] | a4[A10 + 22 | 0] << 8 | g8 << 16 & 2031616, 0, e5 = (a4[hA2 + 28 | 0] | a4[hA2 + 29 | 0] << 8 | a4[hA2 + 30 | 0] << 16 | a4[hA2 + 31 | 0] << 24) >>> 7 | 0, 0), eA2 = w4, g8 = (A10 = a4[hA2 + 27 | 0]) >>> 24 | 0, B6 = A10 << 8 | (fA2 = a4[hA2 + 23 | 0] | a4[hA2 + 24 | 0] << 8 | a4[hA2 + 25 | 0] << 16 | a4[hA2 + 26 | 0] << 24) >>> 24, A10 = DA(c5 = 2097151 & ((3 & (FA2 = (A10 = (C6 = a4[hA2 + 28 | 0]) >>> 16 | 0) | g8)) << 30 | (g8 = (C6 <<= 16) | B6) >>> 2), 0, y6 = (i6 = a4[r4 + 23 | 0] | a4[r4 + 24 | 0] << 8 | a4[r4 + 25 | 0] << 16 | a4[r4 + 26 | 0] << 24) >>> 5 & 2097151, 0), g8 = w4 + eA2 | 0, C6 = A10 >>> 0 > (B6 = A10 + cA2 | 0) >>> 0 ? g8 + 1 | 0 : g8, A10 = DA(h5 = (g8 = a4[hA2 + 23 | 0]) << 16 & 2031616 | a4[hA2 + 21 | 0] | a4[hA2 + 22 | 0] << 8, 0, s5 = (a4[r4 + 28 | 0] | a4[r4 + 29 | 0] << 8 | a4[r4 + 30 | 0] << 16 | a4[r4 + 31 | 0] << 24) >>> 7 | 0, 0), C6 = w4 + C6 | 0, eA2 = g8 = A10 + B6 | 0, B6 = A10 >>> 0 > g8 >>> 0 ? C6 + 1 | 0 : C6, C6 = (A10 = a4[r4 + 27 | 0]) >>> 24 | 0, i6 = A10 << 8 | i6 >>> 24, A10 = DA(p6 = 2097151 & ((3 & (C6 |= g8 = (A10 = a4[r4 + 28 | 0]) >>> 16 | 0)) << 30 | (g8 = (A10 <<= 16) | i6) >>> 2), 0, k6 = fA2 >>> 5 & 2097151, 0), g8 = w4 + B6 | 0, tA2 = C6 = A10 + eA2 | 0, B6 = A10 >>> 0 > C6 >>> 0 ? g8 + 1 | 0 : g8, fA2 = DA(y6, 0, k6, 0), eA2 = w4, g8 = (A10 = a4[r4 + 19 | 0]) >>> 24 | 0, i6 = A10 << 8 | (UA2 = a4[r4 + 15 | 0] | a4[r4 + 16 | 0] << 8 | a4[r4 + 17 | 0] << 16 | a4[r4 + 18 | 0] << 24) >>> 24, C6 = g8, g8 = DA(F6 = (7 & (C6 |= g8 = (A10 = a4[r4 + 20 | 0]) >>> 16 | 0)) << 29 | (g8 = (A10 <<= 16) | i6) >>> 3, FA2 = C6 >>> 3 | 0, e5, 0), A10 = w4 + eA2 | 0, A10 = g8 >>> 0 > (C6 = g8 + fA2 | 0) >>> 0 ? A10 + 1 | 0 : A10, i6 = (g8 = DA(t5, 0, c5, 0)) + C6 | 0, C6 = w4 + A10 | 0, g8 = g8 >>> 0 > (fA2 = i6) >>> 0 ? C6 + 1 | 0 : C6, C6 = (A10 = a4[hA2 + 19 | 0]) >>> 24 | 0, eA2 = A10 << 8 | (GA2 = a4[hA2 + 15 | 0] | a4[hA2 + 16 | 0] << 8 | a4[hA2 + 17 | 0] << 16 | a4[hA2 + 18 | 0] << 24) >>> 24, A10 = DA(l5 = (7 & (cA2 = (A10 = (i6 = a4[hA2 + 20 | 0]) >>> 16 | 0) | C6)) << 29 | (C6 = (i6 <<= 16) | eA2) >>> 3, S6 = cA2 >>> 3 | 0, s5, 0), g8 = w4 + g8 | 0, g8 = A10 >>> 0 > (C6 = A10 + fA2 | 0) >>> 0 ? g8 + 1 | 0 : g8, A10 = DA(h5, 0, p6, 0), g8 = w4 + g8 | 0, pA2 = g8 = A10 >>> 0 > (sA2 = A10 + C6 | 0) >>> 0 ? g8 + 1 | 0 : g8, lA2 = A10 = g8 - ((sA2 >>> 0 < 4293918720) - 1 | 0) | 0, C6 = (g8 = A10 >>> 21 | 0) + B6 | 0, fA2 = C6 = (A10 = (2097151 & A10) << 11 | (cA2 = sA2 - -1048576 | 0) >>> 21) >>> 0 > (tA2 = A10 + tA2 | 0) >>> 0 ? C6 + 1 | 0 : C6, HA2 = A10 = C6 - ((tA2 >>> 0 < 4293918720) - 1 | 0) | 0, wA2 = (2097151 & A10) << 11 | (eA2 = tA2 - -1048576 | 0) >>> 21, i6 = A10 >>> 21 | 0, A10 = DA(s5, 0, k6, 0), g8 = w4, C6 = A10, A10 = DA(e5, 0, y6, 0), g8 = w4 + g8 | 0, g8 = A10 >>> 0 > (C6 = C6 + A10 | 0) >>> 0 ? g8 + 1 | 0 : g8, SA2 = (A10 = C6) + (C6 = DA(c5, 0, p6, 0)) | 0, A10 = w4 + g8 | 0, A10 = C6 >>> 0 > SA2 >>> 0 ? A10 + 1 | 0 : A10, yA2 = SA2 - (g8 = -2097152 & (C6 = SA2 - -1048576 | 0)) | 0, g8 = (A10 - ((131071 & (B6 = A10 - ((SA2 >>> 0 < 4293918720) - 1 | 0) | 0)) + (g8 >>> 0 > SA2 >>> 0) | 0) | 0) + i6 | 0, j5 = g8 = (A10 = yA2 + wA2 | 0) >>> 0 < yA2 >>> 0 ? g8 + 1 | 0 : g8, X6 = A10, yA2 = DA(A10, g8, 470296, 0), wA2 = w4, g8 = DA(e5, 0, p6, 0), A10 = w4, i6 = g8, g8 = DA(c5, 0, s5, 0), A10 = w4 + A10 | 0, g8 = g8 >>> 0 > (i6 = i6 + g8 | 0) >>> 0 ? A10 + 1 | 0 : A10, A10 = B6 >>> 21 | 0, B6 = (2097151 & B6) << 11 | C6 >>> 21, C6 = A10 + g8 | 0, _A2 = B6 = (C6 = B6 >>> 0 > (i6 = B6 + i6 | 0) >>> 0 ? C6 + 1 | 0 : C6) - ((i6 >>> 0 < 4293918720) - 1 | 0) | 0, A10 = i6 - (g8 = -2097152 & (bA2 = i6 - -1048576 | 0)) | 0, q5 = i6 = C6 - ((131071 & B6) + (g8 >>> 0 > i6 >>> 0) | 0) | 0, z6 = g8 = tA2 - (C6 = -2097152 & eA2) | 0, V6 = B6 = fA2 - ((C6 >>> 0 > tA2 >>> 0) + HA2 | 0) | 0, O6 = A10, C6 = DA(A10, i6, 666643, 0), A10 = w4 + wA2 | 0, A10 = C6 >>> 0 > (i6 = C6 + yA2 | 0) >>> 0 ? A10 + 1 | 0 : A10, C6 = DA(g8, B6, 654183, 0), g8 = w4 + A10 | 0, kA2 = B6 = C6 + i6 | 0, eA2 = C6 >>> 0 > B6 >>> 0 ? g8 + 1 | 0 : g8, SA2 = sA2 - (A10 = -2097152 & cA2) | 0, lA2 = pA2 - ((A10 >>> 0 > sA2 >>> 0) + lA2 | 0) | 0, g8 = DA(c5, 0, F6, FA2), C6 = w4, B6 = (A10 = g8) + (g8 = DA(H6 = UA2 >>> 6 & 2097151, 0, e5, 0)) | 0, A10 = w4 + C6 | 0, A10 = g8 >>> 0 > B6 >>> 0 ? A10 + 1 | 0 : A10, g8 = DA(y6, 0, h5, 0), C6 = w4 + A10 | 0, C6 = g8 >>> 0 > (B6 = g8 + B6 | 0) >>> 0 ? C6 + 1 | 0 : C6, A10 = DA(t5, 0, k6, 0), g8 = w4 + C6 | 0, g8 = A10 >>> 0 > (B6 = A10 + B6 | 0) >>> 0 ? g8 + 1 | 0 : g8, C6 = DA(s5, 0, G6 = GA2 >>> 6 & 2097151, 0), A10 = w4 + g8 | 0, A10 = C6 >>> 0 > (B6 = C6 + B6 | 0) >>> 0 ? A10 + 1 | 0 : A10, C6 = DA(p6, 0, l5, S6), g8 = w4 + A10 | 0, sA2 = B6 = C6 + B6 | 0, i6 = C6 >>> 0 > B6 >>> 0 ? g8 + 1 | 0 : g8, g8 = (A10 = a4[r4 + 14 | 0]) >>> 24 | 0, B6 = A10 << 8 | (pA2 = a4[r4 + 10 | 0] | a4[r4 + 11 | 0] << 8 | a4[r4 + 12 | 0] << 16 | a4[r4 + 13 | 0] << 24) >>> 24, g8 = DA(U6 = 2097151 & ((1 & (g8 |= A10 = (C6 = a4[r4 + 15 | 0]) >>> 16 | 0)) << 31 | (A10 = (C6 <<= 16) | B6) >>> 1), 0, e5, 0), A10 = w4, C6 = g8, g8 = DA(c5, 0, H6, 0), A10 = w4 + A10 | 0, A10 = g8 >>> 0 > (C6 = C6 + g8 | 0) >>> 0 ? A10 + 1 | 0 : A10, B6 = (g8 = DA(k6, 0, F6, FA2)) + C6 | 0, C6 = w4 + A10 | 0, C6 = g8 >>> 0 > B6 >>> 0 ? C6 + 1 | 0 : C6, A10 = DA(y6, 0, l5, S6), g8 = w4 + C6 | 0, g8 = A10 >>> 0 > (B6 = A10 + B6 | 0) >>> 0 ? g8 + 1 | 0 : g8, A10 = DA(t5, 0, h5, 0), g8 = w4 + g8 | 0, cA2 = C6 = A10 + B6 | 0, B6 = A10 >>> 0 > C6 >>> 0 ? g8 + 1 | 0 : g8, g8 = (A10 = a4[hA2 + 14 | 0]) >>> 24 | 0, fA2 = A10 << 8 | (tA2 = a4[hA2 + 10 | 0] | a4[hA2 + 11 | 0] << 8 | a4[hA2 + 12 | 0] << 16 | a4[hA2 + 13 | 0] << 24) >>> 24, C6 = g8, g8 = (A10 = a4[hA2 + 15 | 0]) >>> 16 | 0, g8 = DA(J6 = 2097151 & ((1 & (g8 |= C6)) << 31 | (A10 = A10 << 16 | fA2) >>> 1), 0, s5, 0), A10 = w4 + B6 | 0, A10 = g8 >>> 0 > (C6 = g8 + cA2 | 0) >>> 0 ? A10 + 1 | 0 : A10, g8 = DA(p6, 0, G6, 0), A10 = w4 + A10 | 0, fA2 = A10 = g8 >>> 0 > (cA2 = g8 + C6 | 0) >>> 0 ? A10 + 1 | 0 : A10, KA2 = g8 = A10 - ((cA2 >>> 0 < 4293918720) - 1 | 0) | 0, C6 = (A10 = g8 >>> 21 | 0) + i6 | 0, wA2 = C6 = (g8 = (2097151 & g8) << 11 | (yA2 = cA2 - -1048576 | 0) >>> 21) >>> 0 > (HA2 = g8 + sA2 | 0) >>> 0 ? C6 + 1 | 0 : C6, NA2 = g8 = C6 - ((HA2 >>> 0 < 4293918720) - 1 | 0) | 0, A10 = (A10 = g8 >>> 21 | 0) + lA2 | 0, T6 = A10 = (g8 = (C6 = (2097151 & g8) << 11 | (sA2 = HA2 - -1048576 | 0) >>> 21) + SA2 | 0) >>> 0 < C6 >>> 0 ? A10 + 1 | 0 : A10, W6 = g8, A10 = DA(g8, A10, -997805, -1), g8 = w4 + eA2 | 0, kA2 = C6 = A10 + kA2 | 0, eA2 = A10 >>> 0 > C6 >>> 0 ? g8 + 1 | 0 : g8, SA2 = (mA2 = a4[23 + (n5 = f4 + 224 | 0) | 0] | a4[n5 + 24 | 0] << 8 | a4[n5 + 25 | 0] << 16 | a4[n5 + 26 | 0] << 24) >>> 5 & 2097151, C6 = DA(N6 = (A10 = a4[r4 + 2 | 0]) << 16 & 2031616 | a4[0 | r4] | a4[r4 + 1 | 0] << 8, 0, k6, 0), g8 = w4, B6 = (A10 = DA(h5, 0, Y5 = (i6 = a4[r4 + 2 | 0] | a4[r4 + 3 | 0] << 8 | a4[r4 + 4 | 0] << 16 | a4[r4 + 5 | 0] << 24) >>> 5 & 2097151, 0)) + C6 | 0, C6 = w4 + g8 | 0, C6 = A10 >>> 0 > B6 >>> 0 ? C6 + 1 | 0 : C6, A10 = DA(b6 = (a4[r4 + 7 | 0] | a4[r4 + 8 | 0] << 8 | a4[r4 + 9 | 0] << 16 | a4[r4 + 10 | 0] << 24) >>> 7 & 2097151, 0, G6, 0), g8 = w4 + C6 | 0, g8 = A10 >>> 0 > (B6 = A10 + B6 | 0) >>> 0 ? g8 + 1 | 0 : g8, C6 = DA(J6, 0, _6 = pA2 >>> 4 & 2097151, 0), A10 = w4 + g8 | 0, pA2 = B6 = C6 + B6 | 0, B6 = C6 >>> 0 > B6 >>> 0 ? A10 + 1 | 0 : A10, i6 = (g8 = a4[r4 + 6 | 0]) << 8 | i6 >>> 24, C6 = A10 = g8 >>> 24 | 0, g8 = (A10 = a4[r4 + 7 | 0]) >>> 16 | 0, g8 = DA(K6 = 2097151 & ((3 & (g8 |= C6)) << 30 | (A10 = A10 << 16 | i6) >>> 2), 0, l5, S6), A10 = w4 + B6 | 0, A10 = g8 >>> 0 > (C6 = g8 + pA2 | 0) >>> 0 ? A10 + 1 | 0 : A10, B6 = (g8 = DA(H6, 0, P6 = (a4[hA2 + 7 | 0] | a4[hA2 + 8 | 0] << 8 | a4[hA2 + 9 | 0] << 16 | a4[hA2 + 10 | 0] << 24) >>> 7 & 2097151, 0)) + C6 | 0, C6 = w4 + A10 | 0, C6 = g8 >>> 0 > B6 >>> 0 ? C6 + 1 | 0 : C6, g8 = DA(U6, 0, YA2 = tA2 >>> 4 & 2097151, 0), A10 = w4 + C6 | 0, i6 = g8 >>> 0 > (B6 = g8 + B6 | 0) >>> 0 ? A10 + 1 | 0 : A10, A10 = (g8 = a4[hA2 + 6 | 0]) >>> 24 | 0, pA2 = g8 << 8 | (tA2 = a4[hA2 + 2 | 0] | a4[hA2 + 3 | 0] << 8 | a4[hA2 + 4 | 0] << 16 | a4[hA2 + 5 | 0] << 24) >>> 24, g8 = A10, A10 = DA(F6, FA2, d4 = 2097151 & ((3 & (g8 |= C6 = (A10 = a4[hA2 + 7 | 0]) >>> 16 | 0)) << 30 | (A10 = A10 << 16 | pA2) >>> 2), 0), g8 = w4 + i6 | 0, g8 = A10 >>> 0 > (C6 = A10 + B6 | 0) >>> 0 ? g8 + 1 | 0 : g8, B6 = C6, C6 = DA(L6 = (A10 = a4[hA2 + 2 | 0]) << 16 & 2031616 | a4[0 | hA2] | a4[hA2 + 1 | 0] << 8, 0, y6, 0), A10 = w4 + g8 | 0, A10 = C6 >>> 0 > (B6 = B6 + C6 | 0) >>> 0 ? A10 + 1 | 0 : A10, g8 = DA(t5, 0, R6 = tA2 >>> 5 & 2097151, 0), A10 = w4 + A10 | 0, g8 = g8 >>> 0 > (C6 = g8 + B6 | 0) >>> 0 ? A10 + 1 | 0 : A10, pA2 = A10 = C6 + SA2 | 0, i6 = g8 = A10 >>> 0 < C6 >>> 0 ? g8 + 1 | 0 : g8, B6 = a4[n5 + 21 | 0] | a4[n5 + 22 | 0] << 8, A10 = DA(h5, 0, N6, 0), g8 = w4, tA2 = (C6 = A10) + (A10 = DA(l5, S6, Y5, 0)) | 0, C6 = w4 + g8 | 0, C6 = A10 >>> 0 > tA2 >>> 0 ? C6 + 1 | 0 : C6, A10 = DA(J6, 0, b6, 0), g8 = w4 + C6 | 0, g8 = A10 >>> 0 > (tA2 = A10 + tA2 | 0) >>> 0 ? g8 + 1 | 0 : g8, A10 = DA(_6, 0, YA2, 0), g8 = w4 + g8 | 0, g8 = A10 >>> 0 > (C6 = A10 + tA2 | 0) >>> 0 ? g8 + 1 | 0 : g8, tA2 = (A10 = C6) + (C6 = DA(G6, 0, K6, 0)) | 0, A10 = w4 + g8 | 0, A10 = C6 >>> 0 > tA2 >>> 0 ? A10 + 1 | 0 : A10, g8 = DA(H6, 0, d4, 0), A10 = w4 + A10 | 0, A10 = g8 >>> 0 > (C6 = g8 + tA2 | 0) >>> 0 ? A10 + 1 | 0 : A10, tA2 = (g8 = DA(U6, 0, P6, 0)) + C6 | 0, C6 = w4 + A10 | 0, C6 = g8 >>> 0 > tA2 >>> 0 ? C6 + 1 | 0 : C6, A10 = DA(F6, FA2, R6, 0), g8 = w4 + C6 | 0, g8 = A10 >>> 0 > (tA2 = A10 + tA2 | 0) >>> 0 ? g8 + 1 | 0 : g8, A10 = DA(t5, 0, L6, 0), g8 = w4 + g8 | 0, A10 = A10 >>> 0 > (C6 = A10 + tA2 | 0) >>> 0 ? g8 + 1 | 0 : g8, g8 = (g8 = C6) >>> 0 > (C6 = C6 + B6 | 0) >>> 0 ? A10 + 1 | 0 : A10, B6 = C6, C6 = (A10 = a4[n5 + 23 | 0]) << 16 & 2031616, A10 = g8, C6 = A10 = C6 >>> 0 > (B6 = B6 + C6 | 0) >>> 0 ? A10 + 1 | 0 : A10, hA2 = A10 = A10 - ((B6 >>> 0 < 4293918720) - 1 | 0) | 0, g8 = (g8 = A10 >>> 21 | 0) + i6 | 0, A10 = (g8 = (i6 = pA2 = (A10 = (2097151 & A10) << 11 | (tA2 = B6 - -1048576 | 0) >>> 21) + pA2 | 0) >>> 0 < A10 >>> 0 ? g8 + 1 | 0 : g8) + eA2 | 0, A10 = (eA2 = i6 + kA2 | 0) >>> 0 < i6 >>> 0 ? A10 + 1 | 0 : A10, UA2 = i6 - -1048576 | 0, MA2 = i6 = g8 - ((i6 >>> 0 < 4293918720) - 1 | 0) | 0, JA2 = eA2 - (g8 = -2097152 & UA2) | 0, PA2 = A10 - ((g8 >>> 0 > eA2 >>> 0) + i6 | 0) | 0, pA2 = B6, eA2 = C6, A10 = DA(z6, V6, 470296, 0), g8 = w4, C6 = A10, A10 = DA(X6, j5, 666643, 0), g8 = w4 + g8 | 0, g8 = A10 >>> 0 > (C6 = C6 + A10 | 0) >>> 0 ? g8 + 1 | 0 : g8, B6 = (A10 = C6) + (C6 = DA(W6, T6, 654183, 0)) | 0, A10 = w4 + g8 | 0, GA2 = B6, i6 = C6 >>> 0 > B6 >>> 0 ? A10 + 1 | 0 : A10, g8 = DA(l5, S6, N6, 0), A10 = w4, C6 = g8, g8 = DA(G6, 0, Y5, 0), A10 = w4 + A10 | 0, A10 = g8 >>> 0 > (C6 = C6 + g8 | 0) >>> 0 ? A10 + 1 | 0 : A10, B6 = (g8 = C6) + (C6 = DA(b6, 0, YA2, 0)) | 0, g8 = w4 + A10 | 0, g8 = C6 >>> 0 > B6 >>> 0 ? g8 + 1 | 0 : g8, A10 = DA(_6, 0, P6, 0), C6 = w4 + g8 | 0, C6 = A10 >>> 0 > (B6 = A10 + B6 | 0) >>> 0 ? C6 + 1 | 0 : C6, A10 = DA(J6, 0, K6, 0), g8 = w4 + C6 | 0, g8 = A10 >>> 0 > (B6 = A10 + B6 | 0) >>> 0 ? g8 + 1 | 0 : g8, C6 = DA(H6, 0, R6, 0), A10 = w4 + g8 | 0, A10 = C6 >>> 0 > (B6 = C6 + B6 | 0) >>> 0 ? A10 + 1 | 0 : A10, g8 = DA(U6, 0, d4, 0), A10 = w4 + A10 | 0, A10 = g8 >>> 0 > (C6 = g8 + B6 | 0) >>> 0 ? A10 + 1 | 0 : A10, B6 = (g8 = C6) + (C6 = DA(F6, FA2, L6, 0)) | 0, g8 = w4 + A10 | 0, SA2 = B6, C6 = C6 >>> 0 > B6 >>> 0 ? g8 + 1 | 0 : g8, g8 = (A10 = a4[n5 + 19 | 0]) >>> 24 | 0, lA2 = A10 << 8 | (kA2 = a4[n5 + 15 | 0] | a4[n5 + 16 | 0] << 8 | a4[n5 + 17 | 0] << 16 | a4[n5 + 18 | 0] << 24) >>> 24, C6 = ((vA2 = (A10 = (B6 = a4[n5 + 20 | 0]) >>> 16 | 0) | g8) >>> 3 | 0) + C6 | 0, SA2 = B6 = (g8 = (7 & vA2) << 29 | (g8 = (B6 <<= 16) | lA2) >>> 3) + SA2 | 0, B6 = g8 >>> 0 > B6 >>> 0 ? C6 + 1 | 0 : C6, lA2 = kA2 >>> 6 & 2097151, A10 = DA(G6, 0, N6, 0), g8 = w4, C6 = A10, A10 = DA(J6, 0, Y5, 0), g8 = w4 + g8 | 0, g8 = A10 >>> 0 > (C6 = C6 + A10 | 0) >>> 0 ? g8 + 1 | 0 : g8, kA2 = (A10 = C6) + (C6 = DA(b6, 0, P6, 0)) | 0, A10 = w4 + g8 | 0, A10 = C6 >>> 0 > kA2 >>> 0 ? A10 + 1 | 0 : A10, C6 = DA(_6, 0, d4, 0), g8 = w4 + A10 | 0, g8 = C6 >>> 0 > (kA2 = C6 + kA2 | 0) >>> 0 ? g8 + 1 | 0 : g8, C6 = DA(K6, 0, YA2, 0), A10 = w4 + g8 | 0, A10 = C6 >>> 0 > (kA2 = C6 + kA2 | 0) >>> 0 ? A10 + 1 | 0 : A10, g8 = DA(H6, 0, L6, 0), C6 = w4 + A10 | 0, C6 = g8 >>> 0 > (kA2 = g8 + kA2 | 0) >>> 0 ? C6 + 1 | 0 : C6, A10 = DA(U6, 0, R6, 0), g8 = w4 + C6 | 0, A10 = A10 >>> 0 > (kA2 = A10 + kA2 | 0) >>> 0 ? g8 + 1 | 0 : g8, VA2 = A10 = (LA2 = kA2 + lA2 | 0) >>> 0 < kA2 >>> 0 ? A10 + 1 | 0 : A10, gI2 = A10 = A10 - ((LA2 >>> 0 < 4293918720) - 1 | 0) | 0, C6 = (2097151 & A10) << 11 | (qA2 = LA2 - -1048576 | 0) >>> 21, A10 = (A10 >>> 21 | 0) + B6 | 0, TA2 = A10 = C6 >>> 0 > (OA2 = C6 + SA2 | 0) >>> 0 ? A10 + 1 | 0 : A10, CI2 = A10 = A10 - ((OA2 >>> 0 < 4293918720) - 1 | 0) | 0, C6 = (2097151 & A10) << 11 | (xA2 = OA2 - -1048576 | 0) >>> 21, A10 = (A10 >>> 21 | 0) + i6 | 0, g8 = (C6 >>> 0 > (B6 = C6 + GA2 | 0) >>> 0 ? A10 + 1 | 0 : A10) + eA2 | 0, eA2 = (C6 = B6 + pA2 | 0) - (A10 = -2097152 & tA2) | 0, hA2 = A10 = (g8 = C6 >>> 0 < B6 >>> 0 ? g8 + 1 | 0 : g8) - ((A10 >>> 0 > C6 >>> 0) + hA2 | 0) | 0, BI2 = A10 = A10 - ((eA2 >>> 0 < 4293918720) - 1 | 0) | 0, C6 = (2097151 & A10) << 11 | (jA2 = eA2 - -1048576 | 0) >>> 21, A10 = (A10 >> 21) + PA2 | 0, B6 = A10 = C6 >>> 0 > (i6 = C6 + JA2 | 0) >>> 0 ? A10 + 1 | 0 : A10, II2 = A10 = A10 - ((i6 >>> 0 < 4293918720) - 1 | 0) | 0, XA2 = (2097151 & A10) << 11 | (GA2 = i6 - -1048576 | 0) >>> 21, pA2 = A10 >> 21, vA2 = HA2 - (A10 = -2097152 & sA2) | 0, NA2 = wA2 - ((A10 >>> 0 > HA2 >>> 0) + NA2 | 0) | 0, A10 = DA(e5, 0, s5, 0), zA2 = g8 = w4, JA2 = A10, kA2 = A10 - -1048576 | 0, RA2 = g8 = g8 - ((A10 >>> 0 < 4293918720) - 1 | 0) | 0, Z5 = A10 = g8 >>> 21 | 0, A10 = DA(x6 = (2097151 & g8) << 11 | kA2 >>> 21, A10, -683901, -1), g8 = w4 + fA2 | 0, g8 = A10 >>> 0 > (C6 = A10 + cA2 | 0) >>> 0 ? g8 + 1 | 0 : g8, sA2 = C6 - (A10 = -2097152 & yA2) | 0, tA2 = g8 - ((A10 >>> 0 > C6 >>> 0) + KA2 | 0) | 0, g8 = DA(k6, 0, H6, 0), A10 = w4, C6 = g8, g8 = DA(e5, 0, _6, 0), A10 = w4 + A10 | 0, A10 = g8 >>> 0 > (C6 = C6 + g8 | 0) >>> 0 ? A10 + 1 | 0 : A10, g8 = DA(c5, 0, U6, 0), A10 = w4 + A10 | 0, A10 = g8 >>> 0 > (C6 = g8 + C6 | 0) >>> 0 ? A10 + 1 | 0 : A10, fA2 = (g8 = C6) + (C6 = DA(h5, 0, F6, FA2)) | 0, g8 = w4 + A10 | 0, g8 = C6 >>> 0 > fA2 >>> 0 ? g8 + 1 | 0 : g8, A10 = DA(y6, 0, G6, 0), C6 = w4 + g8 | 0, C6 = A10 >>> 0 > (fA2 = A10 + fA2 | 0) >>> 0 ? C6 + 1 | 0 : C6, A10 = DA(t5, 0, l5, S6), g8 = w4 + C6 | 0, g8 = A10 >>> 0 > (fA2 = A10 + fA2 | 0) >>> 0 ? g8 + 1 | 0 : g8, C6 = DA(s5, 0, YA2, 0), A10 = w4 + g8 | 0, A10 = C6 >>> 0 > (fA2 = C6 + fA2 | 0) >>> 0 ? A10 + 1 | 0 : A10, g8 = DA(p6, 0, J6, 0), A10 = w4 + A10 | 0, cA2 = C6 = g8 + fA2 | 0, fA2 = g8 >>> 0 > C6 >>> 0 ? A10 + 1 | 0 : A10, A10 = DA(c5, 0, _6, 0), g8 = w4, C6 = A10, A10 = DA(e5, 0, b6, 0), g8 = w4 + g8 | 0, g8 = A10 >>> 0 > (C6 = C6 + A10 | 0) >>> 0 ? g8 + 1 | 0 : g8, wA2 = (A10 = DA(h5, 0, H6, 0)) + C6 | 0, C6 = w4 + g8 | 0, C6 = A10 >>> 0 > wA2 >>> 0 ? C6 + 1 | 0 : C6, A10 = DA(k6, 0, U6, 0), g8 = w4 + C6 | 0, g8 = A10 >>> 0 > (wA2 = A10 + wA2 | 0) >>> 0 ? g8 + 1 | 0 : g8, C6 = DA(F6, FA2, l5, S6), A10 = w4 + g8 | 0, A10 = C6 >>> 0 > (wA2 = C6 + wA2 | 0) >>> 0 ? A10 + 1 | 0 : A10, g8 = DA(y6, 0, J6, 0), A10 = w4 + A10 | 0, A10 = g8 >>> 0 > (C6 = g8 + wA2 | 0) >>> 0 ? A10 + 1 | 0 : A10, wA2 = (g8 = C6) + (C6 = DA(t5, 0, G6, 0)) | 0, g8 = w4 + A10 | 0, g8 = C6 >>> 0 > wA2 >>> 0 ? g8 + 1 | 0 : g8, A10 = DA(s5, 0, P6, 0), C6 = w4 + g8 | 0, C6 = A10 >>> 0 > (wA2 = A10 + wA2 | 0) >>> 0 ? C6 + 1 | 0 : C6, A10 = DA(p6, 0, YA2, 0), g8 = w4 + C6 | 0, lA2 = g8 = A10 >>> 0 > (SA2 = A10 + wA2 | 0) >>> 0 ? g8 + 1 | 0 : g8, ZA2 = A10 = g8 - ((SA2 >>> 0 < 4293918720) - 1 | 0) | 0, g8 = (2097151 & A10) << 11 | (HA2 = SA2 - -1048576 | 0) >>> 21, A10 = (A10 >>> 21 | 0) + fA2 | 0, yA2 = A10 = g8 >>> 0 > (KA2 = g8 + cA2 | 0) >>> 0 ? A10 + 1 | 0 : A10, dA2 = A10 = A10 - ((KA2 >>> 0 < 4293918720) - 1 | 0) | 0, g8 = (C6 = A10 >>> 21 | 0) + tA2 | 0, sA2 = g8 = (A10 = (2097151 & A10) << 11 | (wA2 = KA2 - -1048576 | 0) >>> 21) >>> 0 > (PA2 = A10 + sA2 | 0) >>> 0 ? g8 + 1 | 0 : g8, WA2 = A10 = g8 - ((PA2 >>> 0 < 4293918720) - 1 | 0) | 0, fA2 = (2097151 & A10) << 11 | (tA2 = PA2 - -1048576 | 0) >>> 21, A10 = (A10 >> 21) + NA2 | 0, $5 = A10 = (g8 = fA2 + vA2 | 0) >>> 0 < fA2 >>> 0 ? A10 + 1 | 0 : A10, AA2 = g8, A10 = DA(g8, A10, -683901, -1), g8 = w4 + pA2 | 0, XA2 = C6 = A10 + XA2 | 0, pA2 = A10 >>> 0 > C6 >>> 0 ? g8 + 1 | 0 : g8, A10 = DA(c5, 0, N6, 0), g8 = w4, C6 = A10, A10 = DA(k6, 0, Y5, 0), g8 = w4 + g8 | 0, g8 = A10 >>> 0 > (C6 = C6 + A10 | 0) >>> 0 ? g8 + 1 | 0 : g8, fA2 = (A10 = C6) + (C6 = DA(l5, S6, b6, 0)) | 0, A10 = w4 + g8 | 0, A10 = C6 >>> 0 > fA2 >>> 0 ? A10 + 1 | 0 : A10, g8 = DA(G6, 0, _6, 0), C6 = w4 + A10 | 0, C6 = g8 >>> 0 > (fA2 = g8 + fA2 | 0) >>> 0 ? C6 + 1 | 0 : C6, g8 = DA(h5, 0, K6, 0), A10 = w4 + C6 | 0, A10 = g8 >>> 0 > (fA2 = g8 + fA2 | 0) >>> 0 ? A10 + 1 | 0 : A10, C6 = DA(H6, 0, YA2, 0), g8 = w4 + A10 | 0, g8 = C6 >>> 0 > (fA2 = C6 + fA2 | 0) >>> 0 ? g8 + 1 | 0 : g8, A10 = DA(U6, 0, J6, 0), g8 = w4 + g8 | 0, g8 = A10 >>> 0 > (C6 = A10 + fA2 | 0) >>> 0 ? g8 + 1 | 0 : g8, fA2 = (A10 = C6) + (C6 = DA(F6, FA2, P6, 0)) | 0, A10 = w4 + g8 | 0, A10 = C6 >>> 0 > fA2 >>> 0 ? A10 + 1 | 0 : A10, g8 = DA(y6, 0, R6, 0), C6 = w4 + A10 | 0, C6 = g8 >>> 0 > (fA2 = g8 + fA2 | 0) >>> 0 ? C6 + 1 | 0 : C6, g8 = DA(t5, 0, d4, 0), A10 = w4 + C6 | 0, A10 = g8 >>> 0 > (fA2 = g8 + fA2 | 0) >>> 0 ? A10 + 1 | 0 : A10, C6 = DA(p6, 0, L6, 0), g8 = w4 + A10 | 0, NA2 = fA2 = C6 + fA2 | 0, C6 = C6 >>> 0 > fA2 >>> 0 ? g8 + 1 | 0 : g8, g8 = (A10 = a4[n5 + 27 | 0]) >>> 24 | 0, cA2 = A10 << 8 | mA2 >>> 24, fA2 = 2097151 & ((3 & (g8 |= A10 = (fA2 = a4[n5 + 28 | 0]) >>> 16 | 0)) << 30 | (A10 = (fA2 <<= 16) | cA2) >>> 2), g8 = C6, cA2 = A10 = fA2 + NA2 | 0, fA2 = A10 >>> 0 < fA2 >>> 0 ? g8 + 1 | 0 : g8, vA2 = DA(O6, q5, 470296, 0), NA2 = w4, A10 = (C6 = (2097151 & _A2) << 11 | bA2 >>> 21) + (JA2 - (g8 = -2097152 & kA2) | 0) | 0, g8 = zA2 - ((524287 & RA2) + (g8 >>> 0 > JA2 >>> 0) | 0) + (_A2 >>> 21) | 0, IA2 = g8 = A10 >>> 0 < C6 >>> 0 ? g8 + 1 | 0 : g8, gA2 = A10, g8 = DA(A10, g8, 666643, 0), A10 = w4 + NA2 | 0, A10 = g8 >>> 0 > (C6 = g8 + vA2 | 0) >>> 0 ? A10 + 1 | 0 : A10, kA2 = (g8 = DA(X6, j5, 654183, 0)) + C6 | 0, C6 = w4 + A10 | 0, C6 = g8 >>> 0 > kA2 >>> 0 ? C6 + 1 | 0 : C6, g8 = DA(z6, V6, -997805, -1), A10 = w4 + C6 | 0, A10 = g8 >>> 0 > (kA2 = g8 + kA2 | 0) >>> 0 ? A10 + 1 | 0 : A10, C6 = DA(W6, T6, 136657, 0), g8 = w4 + A10 | 0, UA2 = (A10 = (2097151 & MA2) << 11 | UA2 >>> 21) + (kA2 = C6 + kA2 | 0) | 0, g8 = (MA2 >>> 21 | 0) + (C6 >>> 0 > kA2 >>> 0 ? g8 + 1 | 0 : g8) | 0, RA2 = kA2 = fA2 - ((cA2 >>> 0 < 4293918720) - 1 | 0) | 0, A10 = (A10 >>> 0 > UA2 >>> 0 ? g8 + 1 | 0 : g8) + fA2 | 0, g8 = (fA2 = cA2 + UA2 | 0) - (C6 = -2097152 & (zA2 = cA2 - -1048576 | 0)) | 0, C6 = (A10 = (A10 = fA2 >>> 0 < UA2 >>> 0 ? A10 + 1 | 0 : A10) - ((C6 >>> 0 > fA2 >>> 0) + kA2 | 0) | 0) + pA2 | 0, vA2 = fA2 = A10 - ((g8 >>> 0 < 4293918720) - 1 | 0) | 0, JA2 = (C6 = (cA2 = g8 + XA2 | 0) >>> 0 < g8 >>> 0 ? C6 + 1 | 0 : C6) - (((g8 = -2097152 & (NA2 = g8 - -1048576 | 0)) >>> 0 > cA2 >>> 0) + fA2 | 0) | 0, mA2 = A10 = cA2 - g8 | 0, fA2 = i6, i6 = B6, AI2 = PA2 - (A10 = -2097152 & tA2) | 0, kA2 = sA2 - ((A10 >>> 0 > PA2 >>> 0) + WA2 | 0) | 0, A10 = DA(gA2, IA2, -683901, -1), g8 = w4, B6 = (C6 = A10) + (A10 = DA(x6, Z5, 136657, 0)) | 0, C6 = w4 + g8 | 0, g8 = yA2 + (A10 >>> 0 > B6 >>> 0 ? C6 + 1 | 0 : C6) | 0, wA2 = (C6 = B6 + KA2 | 0) - (A10 = -2097152 & wA2) | 0, sA2 = (g8 = C6 >>> 0 < KA2 >>> 0 ? g8 + 1 | 0 : g8) - ((A10 >>> 0 > C6 >>> 0) + dA2 | 0) | 0, g8 = DA(x6, Z5, -997805, -1), A10 = w4 + lA2 | 0, A10 = g8 >>> 0 > (C6 = g8 + SA2 | 0) >>> 0 ? A10 + 1 | 0 : A10, B6 = (g8 = DA(gA2, IA2, 136657, 0)) + C6 | 0, C6 = w4 + A10 | 0, C6 = g8 >>> 0 > B6 >>> 0 ? C6 + 1 | 0 : C6, A10 = DA(O6, q5, -683901, -1), g8 = w4 + C6 | 0, g8 = A10 >>> 0 > (B6 = A10 + B6 | 0) >>> 0 ? g8 + 1 | 0 : g8, tA2 = B6 - (A10 = -2097152 & HA2) | 0, pA2 = g8 - ((A10 >>> 0 > B6 >>> 0) + ZA2 | 0) | 0, g8 = DA(k6, 0, _6, 0), A10 = w4, C6 = g8, g8 = DA(c5, 0, b6, 0), A10 = w4 + A10 | 0, A10 = g8 >>> 0 > (C6 = C6 + g8 | 0) >>> 0 ? A10 + 1 | 0 : A10, B6 = (g8 = DA(e5, 0, K6, 0)) + C6 | 0, C6 = w4 + A10 | 0, C6 = g8 >>> 0 > B6 >>> 0 ? C6 + 1 | 0 : C6, A10 = DA(l5, S6, H6, 0), g8 = w4 + C6 | 0, g8 = A10 >>> 0 > (B6 = A10 + B6 | 0) >>> 0 ? g8 + 1 | 0 : g8, C6 = DA(h5, 0, U6, 0), A10 = w4 + g8 | 0, A10 = C6 >>> 0 > (B6 = C6 + B6 | 0) >>> 0 ? A10 + 1 | 0 : A10, C6 = DA(F6, FA2, G6, 0), g8 = w4 + A10 | 0, g8 = C6 >>> 0 > (B6 = C6 + B6 | 0) >>> 0 ? g8 + 1 | 0 : g8, C6 = DA(y6, 0, YA2, 0), A10 = w4 + g8 | 0, A10 = C6 >>> 0 > (B6 = C6 + B6 | 0) >>> 0 ? A10 + 1 | 0 : A10, g8 = DA(t5, 0, J6, 0), C6 = w4 + A10 | 0, C6 = g8 >>> 0 > (B6 = g8 + B6 | 0) >>> 0 ? C6 + 1 | 0 : C6, A10 = DA(s5, 0, d4, 0), g8 = w4 + C6 | 0, g8 = A10 >>> 0 > (B6 = A10 + B6 | 0) >>> 0 ? g8 + 1 | 0 : g8, C6 = DA(p6, 0, P6, 0), A10 = w4 + g8 | 0, cA2 = B6 = C6 + B6 | 0, B6 = C6 >>> 0 > B6 >>> 0 ? A10 + 1 | 0 : A10, A10 = DA(k6, 0, b6, 0), g8 = w4, C6 = A10, A10 = DA(e5, 0, Y5, 0), g8 = w4 + g8 | 0, g8 = A10 >>> 0 > (C6 = C6 + A10 | 0) >>> 0 ? g8 + 1 | 0 : g8, yA2 = (A10 = C6) + (C6 = DA(h5, 0, _6, 0)) | 0, A10 = w4 + g8 | 0, A10 = C6 >>> 0 > yA2 >>> 0 ? A10 + 1 | 0 : A10, g8 = DA(c5, 0, K6, 0), C6 = w4 + A10 | 0, C6 = g8 >>> 0 > (yA2 = g8 + yA2 | 0) >>> 0 ? C6 + 1 | 0 : C6, A10 = DA(H6, 0, G6, 0), g8 = w4 + C6 | 0, g8 = A10 >>> 0 > (yA2 = A10 + yA2 | 0) >>> 0 ? g8 + 1 | 0 : g8, C6 = DA(l5, S6, U6, 0), A10 = w4 + g8 | 0, A10 = C6 >>> 0 > (yA2 = C6 + yA2 | 0) >>> 0 ? A10 + 1 | 0 : A10, C6 = DA(F6, FA2, J6, 0), g8 = w4 + A10 | 0, g8 = C6 >>> 0 > (yA2 = C6 + yA2 | 0) >>> 0 ? g8 + 1 | 0 : g8, C6 = DA(y6, 0, P6, 0), A10 = w4 + g8 | 0, A10 = C6 >>> 0 > (yA2 = C6 + yA2 | 0) >>> 0 ? A10 + 1 | 0 : A10, g8 = DA(t5, 0, YA2, 0), C6 = w4 + A10 | 0, C6 = g8 >>> 0 > (yA2 = g8 + yA2 | 0) >>> 0 ? C6 + 1 | 0 : C6, yA2 = (A10 = DA(s5, 0, R6, 0)) + yA2 | 0, g8 = w4 + C6 | 0, C6 = DA(p6, 0, d4, 0), A10 = w4 + (A10 >>> 0 > yA2 >>> 0 ? g8 + 1 | 0 : g8) | 0, PA2 = A10 = C6 >>> 0 > (WA2 = C6 + yA2 | 0) >>> 0 ? A10 + 1 | 0 : A10, BA2 = A10 = A10 - ((WA2 >>> 0 < 4293918720) - 1 | 0) | 0, C6 = (2097151 & A10) << 11 | (_A2 = WA2 - -1048576 | 0) >>> 21, A10 = (A10 >>> 21 | 0) + B6 | 0, bA2 = A10 = C6 >>> 0 > (XA2 = C6 + cA2 | 0) >>> 0 ? A10 + 1 | 0 : A10, iA2 = A10 = A10 - ((XA2 >>> 0 < 4293918720) - 1 | 0) | 0, C6 = (2097151 & A10) << 11 | (MA2 = XA2 - -1048576 | 0) >>> 21, A10 = (A10 >>> 21 | 0) + pA2 | 0, UA2 = A10 = C6 >>> 0 > (KA2 = C6 + tA2 | 0) >>> 0 ? A10 + 1 | 0 : A10, oA2 = A10 = A10 - ((KA2 >>> 0 < 4293918720) - 1 | 0) | 0, C6 = (2097151 & A10) << 11 | (lA2 = KA2 - -1048576 | 0) >>> 21, A10 = (A10 >> 21) + sA2 | 0, B6 = A10 = C6 >>> 0 > (tA2 = C6 + wA2 | 0) >>> 0 ? A10 + 1 | 0 : A10, sA2 = A10 = A10 - ((tA2 >>> 0 < 4293918720) - 1 | 0) | 0, pA2 = (2097151 & A10) << 11 | (C6 = tA2 - -1048576 | 0) >>> 21, A10 = (A10 >> 21) + kA2 | 0, ZA2 = A10 = (cA2 = pA2 + AI2 | 0) >>> 0 < pA2 >>> 0 ? A10 + 1 | 0 : A10, dA2 = cA2, A10 = DA(cA2, A10, -683901, -1), g8 = w4, cA2 = A10, A10 = DA(AA2, $5, 136657, 0), g8 = w4 + g8 | 0, A10 = (A10 >>> 0 > (cA2 = cA2 + A10 | 0) >>> 0 ? g8 + 1 | 0 : g8) + i6 | 0, QI2 = (i6 = fA2 + cA2 | 0) - (g8 = -2097152 & GA2) | 0, iI2 = (A10 = i6 >>> 0 < cA2 >>> 0 ? A10 + 1 | 0 : A10) - ((g8 >>> 0 > i6 >>> 0) + II2 | 0) | 0, pA2 = eA2, cA2 = hA2, eA2 = DA(dA2, ZA2, 136657, 0), i6 = w4, AI2 = A10 = tA2 - (g8 = -2097152 & C6) | 0, CA2 = B6 = B6 - ((g8 >>> 0 > tA2 >>> 0) + sA2 | 0) | 0, C6 = DA(AA2, $5, -997805, -1), g8 = w4 + i6 | 0, g8 = C6 >>> 0 > (eA2 = C6 + eA2 | 0) >>> 0 ? g8 + 1 | 0 : g8, C6 = DA(A10, B6, -683901, -1), A10 = w4 + g8 | 0, II2 = B6 = C6 + eA2 | 0, fA2 = C6 >>> 0 > B6 >>> 0 ? A10 + 1 | 0 : A10, A10 = DA(W6, T6, 470296, 0), g8 = w4, B6 = (C6 = A10) + (A10 = DA(z6, V6, 666643, 0)) | 0, C6 = w4 + g8 | 0, g8 = TA2 + (A10 >>> 0 > B6 >>> 0 ? C6 + 1 | 0 : C6) | 0, kA2 = A10 = B6 + OA2 | 0, i6 = g8 = A10 >>> 0 < OA2 >>> 0 ? g8 + 1 | 0 : g8, g8 = DA(W6, T6, 666643, 0), A10 = w4 + VA2 | 0, A10 = g8 >>> 0 > (C6 = g8 + LA2 | 0) >>> 0 ? A10 + 1 | 0 : A10, wA2 = C6 - (g8 = -2097152 & qA2) | 0, SA2 = A10 - ((g8 >>> 0 > C6 >>> 0) + gI2 | 0) | 0, g8 = DA(J6, 0, N6, 0), A10 = w4, C6 = g8, g8 = DA(Y5, 0, YA2, 0), A10 = w4 + A10 | 0, A10 = g8 >>> 0 > (C6 = C6 + g8 | 0) >>> 0 ? A10 + 1 | 0 : A10, B6 = (g8 = C6) + (C6 = DA(b6, 0, d4, 0)) | 0, g8 = w4 + A10 | 0, g8 = C6 >>> 0 > B6 >>> 0 ? g8 + 1 | 0 : g8, C6 = DA(_6, 0, R6, 0), A10 = w4 + g8 | 0, A10 = C6 >>> 0 > (B6 = C6 + B6 | 0) >>> 0 ? A10 + 1 | 0 : A10, g8 = DA(K6, 0, P6, 0), C6 = w4 + A10 | 0, C6 = g8 >>> 0 > (B6 = g8 + B6 | 0) >>> 0 ? C6 + 1 | 0 : C6, A10 = DA(U6, 0, L6, 0), g8 = w4 + C6 | 0, tA2 = B6 = A10 + B6 | 0, B6 = A10 >>> 0 > B6 >>> 0 ? g8 + 1 | 0 : g8, g8 = (A10 = a4[n5 + 14 | 0]) >>> 24 | 0, eA2 = A10 << 8 | (sA2 = a4[n5 + 10 | 0] | a4[n5 + 11 | 0] << 8 | a4[n5 + 12 | 0] << 16 | a4[n5 + 13 | 0] << 24) >>> 24, g8 = 2097151 & ((1 & (g8 |= C6 = (A10 = a4[n5 + 15 | 0]) >>> 16 | 0)) << 31 | (A10 = eA2 | A10 << 16) >>> 1), A10 = B6, tA2 = C6 = g8 + tA2 | 0, B6 = g8 >>> 0 > C6 >>> 0 ? A10 + 1 | 0 : A10, eA2 = sA2 >>> 4 & 2097151, A10 = DA(N6, 0, YA2, 0), g8 = w4, C6 = A10, A10 = DA(Y5, 0, P6, 0), g8 = w4 + g8 | 0, g8 = A10 >>> 0 > (C6 = C6 + A10 | 0) >>> 0 ? g8 + 1 | 0 : g8, A10 = DA(b6, 0, R6, 0), g8 = w4 + g8 | 0, g8 = A10 >>> 0 > (C6 = A10 + C6 | 0) >>> 0 ? g8 + 1 | 0 : g8, sA2 = (A10 = C6) + (C6 = DA(_6, 0, L6, 0)) | 0, A10 = w4 + g8 | 0, A10 = C6 >>> 0 > sA2 >>> 0 ? A10 + 1 | 0 : A10, g8 = DA(K6, 0, d4, 0), C6 = w4 + A10 | 0, A10 = g8 >>> 0 > (sA2 = g8 + sA2 | 0) >>> 0 ? C6 + 1 | 0 : C6, hA2 = A10 = (qA2 = eA2 + sA2 | 0) >>> 0 < sA2 >>> 0 ? A10 + 1 | 0 : A10, aA2 = A10 = A10 - ((qA2 >>> 0 < 4293918720) - 1 | 0) | 0, g8 = (C6 = A10 >>> 21 | 0) + B6 | 0, HA2 = g8 = (A10 = (2097151 & A10) << 11 | (GA2 = qA2 - -1048576 | 0) >>> 21) >>> 0 > (TA2 = A10 + tA2 | 0) >>> 0 ? g8 + 1 | 0 : g8, nA2 = A10 = g8 - ((TA2 >>> 0 < 4293918720) - 1 | 0) | 0, g8 = (2097151 & A10) << 11 | (yA2 = TA2 - -1048576 | 0) >>> 21, A10 = (A10 >>> 21 | 0) + SA2 | 0, sA2 = A10 = g8 >>> 0 > (wA2 = g8 + wA2 | 0) >>> 0 ? A10 + 1 | 0 : A10, rA2 = A10 = A10 - ((wA2 >>> 0 < 4293918720) - 1 | 0) | 0, g8 = (C6 = A10 >> 21) + i6 | 0, gI2 = g8 = (g8 = (A10 = (2097151 & A10) << 11 | (tA2 = wA2 - -1048576 | 0) >>> 21) >>> 0 > (B6 = A10 + kA2 | 0) >>> 0 ? g8 + 1 | 0 : g8) - (((C6 = -2097152 & xA2) >>> 0 > B6 >>> 0) + CI2 | 0) | 0, xA2 = A10 = B6 - C6 | 0, eA2 = A10 - -1048576 | 0, CI2 = A10 = g8 - ((A10 >>> 0 < 4293918720) - 1 | 0) | 0, C6 = (g8 = A10 >> 21) + fA2 | 0, g8 = ((A10 = (2097151 & A10) << 11 | eA2 >>> 21) >>> 0 > (B6 = A10 + II2 | 0) >>> 0 ? C6 + 1 | 0 : C6) + cA2 | 0, LA2 = g8 = (g8 = (A10 = B6) >>> 0 > (B6 = B6 + pA2 | 0) >>> 0 ? g8 + 1 | 0 : g8) - (((C6 = -2097152 & jA2) >>> 0 > B6 >>> 0) + BI2 | 0) | 0, cA2 = A10 = B6 - C6 | 0, i6 = A10 - -1048576 | 0, VA2 = A10 = g8 - ((A10 >>> 0 < 4293918720) - 1 | 0) | 0, C6 = (g8 = A10 >> 21) + iI2 | 0, jA2 = A10 = (C6 = (A10 = (2097151 & A10) << 11 | i6 >>> 21) >>> 0 > (fA2 = A10 + QI2 | 0) >>> 0 ? C6 + 1 | 0 : C6) - ((fA2 >>> 0 < 4293918720) - 1 | 0) | 0, kA2 = mA2 - -1048576 | 0, SA2 = JA2 - ((mA2 >>> 0 < 4293918720) - 1 | 0) | 0, pA2 = (2097151 & A10) << 11 | (B6 = fA2 - -1048576 | 0) >>> 21, A10 = (A10 >> 21) + JA2 | 0, BI2 = (mA2 = pA2 + mA2 | 0) - (g8 = -2097152 & kA2) | 0, QI2 = (pA2 >>> 0 > mA2 >>> 0 ? A10 + 1 | 0 : A10) - ((g8 >>> 0 > mA2 >>> 0) + SA2 | 0) | 0, iI2 = fA2 - (A10 = -2097152 & B6) | 0, II2 = C6 - ((A10 >>> 0 > fA2 >>> 0) + jA2 | 0) | 0, OA2 = cA2 - (A10 = -2097152 & i6) | 0, mA2 = LA2 - ((A10 >>> 0 > cA2 >>> 0) + VA2 | 0) | 0, A10 = DA(dA2, ZA2, -997805, -1), g8 = w4, C6 = A10, A10 = DA(AA2, $5, 654183, 0), g8 = w4 + g8 | 0, g8 = A10 >>> 0 > (C6 = C6 + A10 | 0) >>> 0 ? g8 + 1 | 0 : g8, B6 = (A10 = C6) + (C6 = DA(AI2, CA2, 136657, 0)) | 0, A10 = w4 + g8 | 0, g8 = gI2 + (C6 >>> 0 > B6 >>> 0 ? A10 + 1 | 0 : A10) | 0, LA2 = (C6 = B6 + xA2 | 0) - (A10 = -2097152 & eA2) | 0, VA2 = (g8 = C6 >>> 0 < xA2 >>> 0 ? g8 + 1 | 0 : g8) - ((A10 >>> 0 > C6 >>> 0) + CI2 | 0) | 0, xA2 = KA2 - (A10 = -2097152 & lA2) | 0, JA2 = UA2 - ((A10 >>> 0 > KA2 >>> 0) + oA2 | 0) | 0, g8 = DA(gA2, IA2, -997805, -1), A10 = w4, C6 = g8, g8 = DA(x6, Z5, 654183, 0), A10 = w4 + A10 | 0, A10 = g8 >>> 0 > (C6 = C6 + g8 | 0) >>> 0 ? A10 + 1 | 0 : A10, B6 = (g8 = C6) + (C6 = DA(O6, q5, 136657, 0)) | 0, g8 = w4 + A10 | 0, g8 = C6 >>> 0 > B6 >>> 0 ? g8 + 1 | 0 : g8, A10 = DA(X6, j5, -683901, -1), C6 = w4 + g8 | 0, g8 = bA2 + (A10 >>> 0 > (B6 = A10 + B6 | 0) >>> 0 ? C6 + 1 | 0 : C6) | 0, lA2 = (C6 = B6 + XA2 | 0) - (A10 = -2097152 & MA2) | 0, UA2 = (g8 = C6 >>> 0 < XA2 >>> 0 ? g8 + 1 | 0 : g8) - ((A10 >>> 0 > C6 >>> 0) + iA2 | 0) | 0, g8 = DA(gA2, IA2, 654183, 0), A10 = w4, C6 = g8, g8 = DA(x6, Z5, 470296, 0), A10 = w4 + A10 | 0, A10 = g8 >>> 0 > (C6 = C6 + g8 | 0) >>> 0 ? A10 + 1 | 0 : A10, B6 = (g8 = DA(O6, q5, -997805, -1)) + C6 | 0, C6 = w4 + A10 | 0, g8 = PA2 + (g8 >>> 0 > B6 >>> 0 ? C6 + 1 | 0 : C6) | 0, g8 = (A10 = B6 + WA2 | 0) >>> 0 < WA2 >>> 0 ? g8 + 1 | 0 : g8, C6 = A10, A10 = DA(X6, j5, 136657, 0), g8 = w4 + g8 | 0, g8 = A10 >>> 0 > (C6 = C6 + A10 | 0) >>> 0 ? g8 + 1 | 0 : g8, B6 = (A10 = C6) + (C6 = DA(z6, V6, -683901, -1)) | 0, A10 = w4 + g8 | 0, eA2 = B6 - (g8 = -2097152 & _A2) | 0, i6 = (C6 >>> 0 > B6 >>> 0 ? A10 + 1 | 0 : A10) - ((g8 >>> 0 > B6 >>> 0) + BA2 | 0) | 0, B6 = (a4[n5 + 28 | 0] | a4[n5 + 29 | 0] << 8 | a4[n5 + 30 | 0] << 16 | a4[n5 + 31 | 0] << 24) >>> 7 | 0, A10 = DA(e5, 0, N6, 0), g8 = w4, fA2 = (C6 = A10) + (A10 = DA(c5, 0, Y5, 0)) | 0, C6 = w4 + g8 | 0, C6 = A10 >>> 0 > fA2 >>> 0 ? C6 + 1 | 0 : C6, A10 = DA(h5, 0, b6, 0), g8 = w4 + C6 | 0, g8 = A10 >>> 0 > (fA2 = A10 + fA2 | 0) >>> 0 ? g8 + 1 | 0 : g8, C6 = DA(l5, S6, _6, 0), A10 = w4 + g8 | 0, A10 = C6 >>> 0 > (fA2 = C6 + fA2 | 0) >>> 0 ? A10 + 1 | 0 : A10, C6 = DA(k6, 0, K6, 0), g8 = w4 + A10 | 0, g8 = C6 >>> 0 > (fA2 = C6 + fA2 | 0) >>> 0 ? g8 + 1 | 0 : g8, C6 = DA(H6, 0, J6, 0), A10 = w4 + g8 | 0, A10 = C6 >>> 0 > (fA2 = C6 + fA2 | 0) >>> 0 ? A10 + 1 | 0 : A10, g8 = DA(G6, 0, U6, 0), C6 = w4 + A10 | 0, C6 = g8 >>> 0 > (fA2 = g8 + fA2 | 0) >>> 0 ? C6 + 1 | 0 : C6, A10 = DA(F6, FA2, YA2, 0), g8 = w4 + C6 | 0, g8 = A10 >>> 0 > (fA2 = A10 + fA2 | 0) >>> 0 ? g8 + 1 | 0 : g8, C6 = DA(y6, 0, d4, 0), A10 = w4 + g8 | 0, A10 = C6 >>> 0 > (fA2 = C6 + fA2 | 0) >>> 0 ? A10 + 1 | 0 : A10, C6 = DA(t5, 0, P6, 0), g8 = w4 + A10 | 0, g8 = C6 >>> 0 > (fA2 = C6 + fA2 | 0) >>> 0 ? g8 + 1 | 0 : g8, C6 = DA(s5, 0, L6, 0), A10 = w4 + g8 | 0, A10 = C6 >>> 0 > (fA2 = C6 + fA2 | 0) >>> 0 ? A10 + 1 | 0 : A10, g8 = DA(p6, 0, R6, 0), C6 = w4 + A10 | 0, g8 = g8 >>> 0 > (fA2 = g8 + fA2 | 0) >>> 0 ? C6 + 1 | 0 : C6, bA2 = (C6 = (2097151 & RA2) << 11 | zA2 >>> 21) + (A10 = B6 + fA2 | 0) | 0, A10 = (RA2 >>> 21 | 0) + (g8 = A10 >>> 0 < fA2 >>> 0 ? g8 + 1 | 0 : g8) | 0, pA2 = A10 = C6 >>> 0 > bA2 >>> 0 ? A10 + 1 | 0 : A10, jA2 = g8 = A10 - ((bA2 >>> 0 < 4293918720) - 1 | 0) | 0, C6 = (A10 = g8 >>> 21 | 0) + i6 | 0, cA2 = C6 = (g8 = (2097151 & g8) << 11 | (FA2 = bA2 - -1048576 | 0) >>> 21) >>> 0 > (MA2 = g8 + eA2 | 0) >>> 0 ? C6 + 1 | 0 : C6, zA2 = g8 = C6 - ((MA2 >>> 0 < 4293918720) - 1 | 0) | 0, A10 = (A10 = g8 >> 21) + UA2 | 0, eA2 = A10 = (g8 = (2097151 & g8) << 11 | (fA2 = MA2 - -1048576 | 0) >>> 21) >>> 0 > (lA2 = g8 + lA2 | 0) >>> 0 ? A10 + 1 | 0 : A10, _A2 = g8 = A10 - ((lA2 >>> 0 < 4293918720) - 1 | 0) | 0, C6 = (A10 = g8 >> 21) + JA2 | 0, RA2 = C6 = (g8 = (B6 = (2097151 & g8) << 11 | (i6 = lA2 - -1048576 | 0) >>> 21) + xA2 | 0) >>> 0 < B6 >>> 0 ? C6 + 1 | 0 : C6, JA2 = g8, A10 = DA(g8, C6, -683901, -1), g8 = w4 + VA2 | 0, UA2 = C6 = A10 + LA2 | 0, B6 = A10 >>> 0 > C6 >>> 0 ? g8 + 1 | 0 : g8, g8 = DA(AA2, $5, 470296, 0), A10 = w4 + sA2 | 0, A10 = g8 >>> 0 > (wA2 = g8 + wA2 | 0) >>> 0 ? A10 + 1 | 0 : A10, g8 = DA(dA2, ZA2, 654183, 0), A10 = w4 + (A10 - (((C6 = -2097152 & tA2) >>> 0 > wA2 >>> 0) + rA2 | 0) | 0) | 0, A10 = g8 >>> 0 > (tA2 = g8 + (wA2 - C6 | 0) | 0) >>> 0 ? A10 + 1 | 0 : A10, C6 = DA(AI2, CA2, -997805, -1), g8 = w4 + A10 | 0, g8 = C6 >>> 0 > (tA2 = C6 + tA2 | 0) >>> 0 ? g8 + 1 | 0 : g8, PA2 = C6 = lA2 - (A10 = -2097152 & i6) | 0, YA2 = eA2 = eA2 - ((A10 >>> 0 > lA2 >>> 0) + _A2 | 0) | 0, tA2 = (i6 = DA(JA2, RA2, 136657, 0)) + tA2 | 0, A10 = w4 + g8 | 0, C6 = DA(C6, eA2, -683901, -1), g8 = w4 + (i6 >>> 0 > tA2 >>> 0 ? A10 + 1 | 0 : A10) | 0, eA2 = g8 = C6 >>> 0 > (sA2 = C6 + tA2 | 0) >>> 0 ? g8 + 1 | 0 : g8, _A2 = A10 = g8 - ((sA2 >>> 0 < 4293918720) - 1 | 0) | 0, g8 = (2097151 & A10) << 11 | (i6 = sA2 - -1048576 | 0) >>> 21, A10 = (A10 >> 21) + B6 | 0, lA2 = g8 = (A10 = g8 >>> 0 > (tA2 = g8 + UA2 | 0) >>> 0 ? A10 + 1 | 0 : A10) - ((tA2 >>> 0 < 4293918720) - 1 | 0) | 0, wA2 = (2097151 & g8) << 11 | (B6 = tA2 - -1048576 | 0) >>> 21, g8 = (g8 >> 21) + mA2 | 0, OA2 = UA2 = wA2 + OA2 | 0, UA2 = wA2 >>> 0 > UA2 >>> 0 ? g8 + 1 | 0 : g8, mA2 = tA2 - (g8 = -2097152 & B6) | 0, WA2 = A10 - ((g8 >>> 0 > tA2 >>> 0) + lA2 | 0) | 0, LA2 = sA2 - (A10 = -2097152 & i6) | 0, VA2 = eA2 - ((A10 >>> 0 > sA2 >>> 0) + _A2 | 0) | 0, A10 = DA(AA2, $5, 666643, 0), C6 = HA2 + w4 | 0, C6 = (i6 = A10 + TA2 | 0) >>> 0 < TA2 >>> 0 ? C6 + 1 | 0 : C6, B6 = (A10 = DA(dA2, ZA2, 470296, 0)) + (i6 - (g8 = -2097152 & yA2) | 0) | 0, g8 = w4 + (C6 - ((g8 >>> 0 > i6 >>> 0) + nA2 | 0) | 0) | 0, g8 = A10 >>> 0 > B6 >>> 0 ? g8 + 1 | 0 : g8, C6 = DA(AI2, CA2, 654183, 0), A10 = w4 + g8 | 0, tA2 = B6 = C6 + B6 | 0, B6 = C6 >>> 0 > B6 >>> 0 ? A10 + 1 | 0 : A10, i6 = MA2 - (A10 = -2097152 & fA2) | 0, eA2 = cA2 - ((A10 >>> 0 > MA2 >>> 0) + zA2 | 0) | 0, A10 = DA(gA2, IA2, 470296, 0), g8 = w4, C6 = A10, A10 = DA(x6, Z5, 666643, 0), g8 = w4 + g8 | 0, g8 = A10 >>> 0 > (C6 = C6 + A10 | 0) >>> 0 ? g8 + 1 | 0 : g8, A10 = DA(O6, q5, 654183, 0), g8 = w4 + g8 | 0, g8 = A10 >>> 0 > (C6 = A10 + C6 | 0) >>> 0 ? g8 + 1 | 0 : g8, fA2 = (A10 = C6) + (C6 = DA(X6, j5, -997805, -1)) | 0, A10 = w4 + g8 | 0, A10 = C6 >>> 0 > fA2 >>> 0 ? A10 + 1 | 0 : A10, g8 = DA(z6, V6, 136657, 0), A10 = w4 + A10 | 0, A10 = g8 >>> 0 > (C6 = g8 + fA2 | 0) >>> 0 ? A10 + 1 | 0 : A10, fA2 = (g8 = DA(W6, T6, -683901, -1)) + C6 | 0, C6 = w4 + A10 | 0, g8 = pA2 + (g8 >>> 0 > fA2 >>> 0 ? C6 + 1 | 0 : C6) | 0, MA2 = (C6 = (2097151 & vA2) << 11 | NA2 >>> 21) + ((fA2 = fA2 + bA2 | 0) - (A10 = -2097152 & FA2) | 0) | 0, A10 = ((g8 = fA2 >>> 0 < bA2 >>> 0 ? g8 + 1 | 0 : g8) - ((A10 >>> 0 > fA2 >>> 0) + jA2 | 0) | 0) + (vA2 >> 21) | 0, lA2 = A10 = C6 >>> 0 > MA2 >>> 0 ? A10 + 1 | 0 : A10, xA2 = A10 = A10 - ((MA2 >>> 0 < 4293918720) - 1 | 0) | 0, g8 = i6, i6 = (2097151 & A10) << 11 | (yA2 = MA2 - -1048576 | 0) >>> 21, A10 = (A10 >> 21) + eA2 | 0, _A2 = A10 = (C6 = g8 + i6 | 0) >>> 0 < i6 >>> 0 ? A10 + 1 | 0 : A10, bA2 = C6, A10 = DA(C6, A10, -683901, -1), g8 = w4 + B6 | 0, g8 = A10 >>> 0 > (C6 = A10 + tA2 | 0) >>> 0 ? g8 + 1 | 0 : g8, B6 = (A10 = C6) + (C6 = DA(JA2, RA2, -997805, -1)) | 0, A10 = w4 + g8 | 0, A10 = C6 >>> 0 > B6 >>> 0 ? A10 + 1 | 0 : A10, g8 = DA(PA2, YA2, 136657, 0), C6 = w4 + A10 | 0, NA2 = B6 = g8 + B6 | 0, cA2 = g8 >>> 0 > B6 >>> 0 ? C6 + 1 | 0 : C6, tA2 = qA2 - (A10 = -2097152 & GA2) | 0, pA2 = hA2 - ((A10 >>> 0 > qA2 >>> 0) + aA2 | 0) | 0, g8 = DA(N6, 0, P6, 0), A10 = w4, C6 = g8, g8 = DA(Y5, 0, d4, 0), A10 = w4 + A10 | 0, A10 = g8 >>> 0 > (C6 = C6 + g8 | 0) >>> 0 ? A10 + 1 | 0 : A10, g8 = DA(b6, 0, L6, 0), A10 = w4 + A10 | 0, A10 = g8 >>> 0 > (C6 = g8 + C6 | 0) >>> 0 ? A10 + 1 | 0 : A10, B6 = (g8 = DA(K6, 0, R6, 0)) + C6 | 0, C6 = w4 + A10 | 0, g8 = g8 >>> 0 > B6 >>> 0 ? C6 + 1 | 0 : C6, FA2 = C6 = (A10 = (a4[n5 + 7 | 0] | a4[n5 + 8 | 0] << 8 | a4[n5 + 9 | 0] << 16 | a4[n5 + 10 | 0] << 24) >>> 7 & 2097151) + B6 | 0, fA2 = A10 >>> 0 > C6 >>> 0 ? g8 + 1 | 0 : g8, A10 = DA(N6, 0, d4, 0), g8 = w4, C6 = A10, A10 = DA(Y5, 0, R6, 0), g8 = w4 + g8 | 0, g8 = A10 >>> 0 > (C6 = C6 + A10 | 0) >>> 0 ? g8 + 1 | 0 : g8, B6 = (A10 = C6) + (C6 = DA(K6, 0, L6, 0)) | 0, A10 = w4 + g8 | 0, eA2 = B6, B6 = C6 >>> 0 > B6 >>> 0 ? A10 + 1 | 0 : A10, A10 = (g8 = a4[n5 + 6 | 0]) >>> 24 | 0, i6 = g8 << 8 | (jA2 = a4[n5 + 2 | 0] | a4[n5 + 3 | 0] << 8 | a4[n5 + 4 | 0] << 16 | a4[n5 + 5 | 0] << 24) >>> 24, C6 = A10, g8 = (A10 = a4[n5 + 7 | 0]) >>> 16 | 0, g8 |= C6, C6 = B6, i6 = C6 = (A10 = 2097151 & ((3 & g8) << 30 | (A10 = A10 << 16 | i6) >>> 2)) >>> 0 > (eA2 = A10 + eA2 | 0) >>> 0 ? C6 + 1 | 0 : C6, XA2 = A10 = C6 - ((eA2 >>> 0 < 4293918720) - 1 | 0) | 0, C6 = (2097151 & A10) << 11 | (HA2 = eA2 - -1048576 | 0) >>> 21, A10 = (A10 >>> 21 | 0) + fA2 | 0, wA2 = A10 = C6 >>> 0 > (hA2 = C6 + FA2 | 0) >>> 0 ? A10 + 1 | 0 : A10, zA2 = A10 = A10 - ((hA2 >>> 0 < 4293918720) - 1 | 0) | 0, C6 = (g8 = A10 >>> 21 | 0) + pA2 | 0, C6 = (A10 = (2097151 & A10) << 11 | (sA2 = hA2 - -1048576 | 0) >>> 21) >>> 0 > (B6 = A10 + tA2 | 0) >>> 0 ? C6 + 1 | 0 : C6, g8 = DA(dA2, ZA2, 666643, 0), A10 = w4 + C6 | 0, A10 = g8 >>> 0 > (B6 = g8 + B6 | 0) >>> 0 ? A10 + 1 | 0 : A10, g8 = DA(AI2, CA2, 470296, 0), A10 = w4 + A10 | 0, A10 = g8 >>> 0 > (C6 = g8 + B6 | 0) >>> 0 ? A10 + 1 | 0 : A10, B6 = (g8 = C6) + (C6 = DA(bA2, _A2, 136657, 0)) | 0, g8 = w4 + A10 | 0, g8 = C6 >>> 0 > B6 >>> 0 ? g8 + 1 | 0 : g8, A10 = DA(JA2, RA2, 654183, 0), g8 = w4 + g8 | 0, g8 = A10 >>> 0 > (C6 = A10 + B6 | 0) >>> 0 ? g8 + 1 | 0 : g8, tA2 = (A10 = DA(PA2, YA2, -997805, -1)) + C6 | 0, C6 = w4 + g8 | 0, pA2 = C6 = A10 >>> 0 > tA2 >>> 0 ? C6 + 1 | 0 : C6, vA2 = A10 = C6 - ((tA2 >>> 0 < 4293918720) - 1 | 0) | 0, C6 = (2097151 & A10) << 11 | (FA2 = tA2 - -1048576 | 0) >>> 21, A10 = (A10 >> 21) + cA2 | 0, NA2 = C6 = (A10 = C6 >>> 0 > (B6 = C6 + NA2 | 0) >>> 0 ? A10 + 1 | 0 : A10) - ((B6 >>> 0 < 4293918720) - 1 | 0) | 0, fA2 = (2097151 & C6) << 11 | (cA2 = B6 - -1048576 | 0) >>> 21, C6 = (C6 >> 21) + VA2 | 0, KA2 = GA2 = fA2 + LA2 | 0, GA2 = fA2 >>> 0 > GA2 >>> 0 ? C6 + 1 | 0 : C6, fA2 = B6, g8 = A10, B6 = (MA2 - (A10 = -2097152 & yA2) | 0) + (yA2 = (2097151 & SA2) << 11 | kA2 >>> 21) | 0, A10 = (lA2 - ((A10 >>> 0 > MA2 >>> 0) + xA2 | 0) | 0) + (SA2 >> 21) | 0, kA2 = A10 = B6 >>> 0 < yA2 >>> 0 ? A10 + 1 | 0 : A10, LA2 = A10 = A10 - ((B6 >>> 0 < 4293918720) - 1 | 0) | 0, MA2 = C6 = A10 >> 21, A10 = DA(dA2 = (2097151 & A10) << 11 | (SA2 = B6 - -1048576 | 0) >>> 21, C6, -683901, -1), g8 = w4 + g8 | 0, g8 = A10 >>> 0 > (C6 = A10 + fA2 | 0) >>> 0 ? g8 + 1 | 0 : g8, VA2 = C6 - (A10 = -2097152 & cA2) | 0, qA2 = g8 - ((A10 >>> 0 > C6 >>> 0) + NA2 | 0) | 0, g8 = DA(dA2, MA2, 136657, 0), A10 = w4 + pA2 | 0, A10 = g8 >>> 0 > (C6 = g8 + tA2 | 0) >>> 0 ? A10 + 1 | 0 : A10, TA2 = C6 - (g8 = -2097152 & FA2) | 0, vA2 = A10 - ((g8 >>> 0 > C6 >>> 0) + vA2 | 0) | 0, g8 = DA(AI2, CA2, 666643, 0), A10 = w4 + (wA2 - (((C6 = -2097152 & sA2) >>> 0 > hA2 >>> 0) + zA2 | 0) | 0) | 0, A10 = g8 >>> 0 > (fA2 = g8 + (hA2 - C6 | 0) | 0) >>> 0 ? A10 + 1 | 0 : A10, C6 = DA(bA2, _A2, -997805, -1), g8 = w4 + A10 | 0, g8 = C6 >>> 0 > (fA2 = C6 + fA2 | 0) >>> 0 ? g8 + 1 | 0 : g8, A10 = DA(JA2, RA2, 470296, 0), C6 = w4 + g8 | 0, C6 = A10 >>> 0 > (fA2 = A10 + fA2 | 0) >>> 0 ? C6 + 1 | 0 : C6, g8 = DA(PA2, YA2, 654183, 0), A10 = w4 + C6 | 0, NA2 = fA2 = g8 + fA2 | 0, pA2 = g8 >>> 0 > fA2 >>> 0 ? A10 + 1 | 0 : A10, C6 = jA2 >>> 5 & 2097151, A10 = DA(N6, 0, R6, 0), g8 = w4, cA2 = A10, A10 = DA(Y5, 0, L6, 0), g8 = w4 + g8 | 0, A10 = A10 >>> 0 > (fA2 = cA2 + A10 | 0) >>> 0 ? g8 + 1 | 0 : g8, cA2 = g8 = C6 + fA2 | 0, C6 = A10 = g8 >>> 0 < fA2 >>> 0 ? A10 + 1 | 0 : A10, hA2 = (g8 = DA(N6, 0, L6, 0)) + (A10 = (A10 = a4[n5 + 2 | 0]) << 16 & 2031616 | a4[0 | n5] | a4[n5 + 1 | 0] << 8) | 0, g8 = w4, yA2 = g8 = A10 >>> 0 > hA2 >>> 0 ? g8 + 1 | 0 : g8, xA2 = g8 = g8 - ((hA2 >>> 0 < 4293918720) - 1 | 0) | 0, A10 = (A10 = g8 >>> 21 | 0) + C6 | 0, sA2 = A10 = (g8 = (2097151 & g8) << 11 | (wA2 = hA2 - -1048576 | 0) >>> 21) >>> 0 > (lA2 = g8 + cA2 | 0) >>> 0 ? A10 + 1 | 0 : A10, jA2 = g8 = A10 - ((lA2 >>> 0 < 4293918720) - 1 | 0) | 0, C6 = (2097151 & g8) << 11 | (tA2 = lA2 - -1048576 | 0) >>> 21, g8 = (g8 >>> 21 | 0) + i6 | 0, g8 = C6 >>> 0 > (fA2 = C6 + eA2 | 0) >>> 0 ? g8 + 1 | 0 : g8, C6 = DA(bA2, _A2, 654183, 0), A10 = w4 + (g8 - (((i6 = -2097152 & HA2) >>> 0 > fA2 >>> 0) + XA2 | 0) | 0) | 0, A10 = C6 >>> 0 > (eA2 = C6 + (fA2 - i6 | 0) | 0) >>> 0 ? A10 + 1 | 0 : A10, g8 = DA(JA2, RA2, 666643, 0), A10 = w4 + A10 | 0, A10 = g8 >>> 0 > (C6 = g8 + eA2 | 0) >>> 0 ? A10 + 1 | 0 : A10, FA2 = (g8 = C6) + (C6 = DA(PA2, YA2, 470296, 0)) | 0, g8 = w4 + A10 | 0, cA2 = g8 = C6 >>> 0 > FA2 >>> 0 ? g8 + 1 | 0 : g8, zA2 = g8 = g8 - ((FA2 >>> 0 < 4293918720) - 1 | 0) | 0, C6 = (A10 = g8 >> 21) + pA2 | 0, HA2 = g8 = (C6 = (g8 = (2097151 & g8) << 11 | (fA2 = FA2 - -1048576 | 0) >>> 21) >>> 0 > (eA2 = g8 + NA2 | 0) >>> 0 ? C6 + 1 | 0 : C6) - ((eA2 >>> 0 < 4293918720) - 1 | 0) | 0, pA2 = (2097151 & g8) << 11 | (i6 = eA2 - -1048576 | 0) >>> 21, g8 = (g8 >> 21) + vA2 | 0, RA2 = JA2 = pA2 + TA2 | 0, pA2 = pA2 >>> 0 > JA2 >>> 0 ? g8 + 1 | 0 : g8, A10 = DA(dA2, MA2, -997805, -1), g8 = w4 + C6 | 0, g8 = A10 >>> 0 > (eA2 = A10 + eA2 | 0) >>> 0 ? g8 + 1 | 0 : g8, vA2 = eA2 - (A10 = -2097152 & i6) | 0, NA2 = g8 - ((A10 >>> 0 > eA2 >>> 0) + HA2 | 0) | 0, g8 = DA(dA2, MA2, 654183, 0), A10 = w4 + cA2 | 0, A10 = g8 >>> 0 > (C6 = g8 + FA2 | 0) >>> 0 ? A10 + 1 | 0 : A10, JA2 = C6 - (g8 = -2097152 & fA2) | 0, HA2 = A10 - ((g8 >>> 0 > C6 >>> 0) + zA2 | 0) | 0, A10 = DA(bA2, _A2, 470296, 0), C6 = w4 + (sA2 - (((g8 = -2097152 & tA2) >>> 0 > lA2 >>> 0) + jA2 | 0) | 0) | 0, C6 = A10 >>> 0 > (i6 = A10 + (lA2 - g8 | 0) | 0) >>> 0 ? C6 + 1 | 0 : C6, g8 = DA(PA2, YA2, 666643, 0), A10 = w4 + C6 | 0, eA2 = i6 = g8 + i6 | 0, C6 = g8 >>> 0 > i6 >>> 0 ? A10 + 1 | 0 : A10, g8 = DA(bA2, _A2, 666643, 0), A10 = w4 + (yA2 - ((4095 & xA2) + ((i6 = -2097152 & wA2) >>> 0 > hA2 >>> 0) | 0) | 0) | 0, FA2 = A10 = g8 >>> 0 > (tA2 = g8 + (hA2 - i6 | 0) | 0) >>> 0 ? A10 + 1 | 0 : A10, yA2 = A10 = A10 - ((tA2 >>> 0 < 4293918720) - 1 | 0) | 0, i6 = (2097151 & A10) << 11 | (cA2 = tA2 - -1048576 | 0) >>> 21, A10 = (A10 >> 21) + C6 | 0, C6 = A10 = i6 >>> 0 > (fA2 = i6 + eA2 | 0) >>> 0 ? A10 + 1 | 0 : A10, wA2 = A10 = A10 - ((fA2 >>> 0 < 4293918720) - 1 | 0) | 0, i6 = (2097151 & A10) << 11 | (eA2 = fA2 - -1048576 | 0) >>> 21, A10 = (A10 >> 21) + HA2 | 0, i6 = i6 >>> 0 > (sA2 = i6 + JA2 | 0) >>> 0 ? A10 + 1 | 0 : A10, A10 = DA(dA2, MA2, 470296, 0), C6 = w4 + C6 | 0, C6 = A10 >>> 0 > (g8 = A10 + fA2 | 0) >>> 0 ? C6 + 1 | 0 : C6, fA2 = g8 - (A10 = -2097152 & eA2) | 0, eA2 = C6 - ((A10 >>> 0 > g8 >>> 0) + wA2 | 0) | 0, g8 = DA(dA2, MA2, 666643, 0), A10 = w4 + (FA2 - (((C6 = -2097152 & cA2) >>> 0 > tA2 >>> 0) + yA2 | 0) | 0) | 0, g8 = (C6 = (A10 = g8 >>> 0 > (lA2 = g8 + (tA2 - C6 | 0) | 0) >>> 0 ? A10 + 1 | 0 : A10) >> 21) + eA2 | 0, A10 = (A10 = (g8 = (A10 = (2097151 & A10) << 11 | lA2 >>> 21) >>> 0 > (HA2 = A10 + fA2 | 0) >>> 0 ? g8 + 1 | 0 : g8) >> 21) + i6 | 0, g8 = (g8 = (A10 = (g8 = (2097151 & g8) << 11 | HA2 >>> 21) >>> 0 > (yA2 = g8 + sA2 | 0) >>> 0 ? A10 + 1 | 0 : A10) >> 21) + NA2 | 0, C6 = (A10 = (g8 = (A10 = (2097151 & A10) << 11 | yA2 >>> 21) >>> 0 > (i6 = A10 + vA2 | 0) >>> 0 ? g8 + 1 | 0 : g8) >> 21) + pA2 | 0, A10 = (g8 = (C6 = (g8 = (2097151 & g8) << 11 | i6 >>> 21) >>> 0 > (wA2 = g8 + RA2 | 0) >>> 0 ? C6 + 1 | 0 : C6) >> 21) + qA2 | 0, g8 = (C6 = (A10 = (C6 = (2097151 & C6) << 11 | wA2 >>> 21) >>> 0 > (sA2 = C6 + VA2 | 0) >>> 0 ? A10 + 1 | 0 : A10) >> 21) + GA2 | 0, A10 = (A10 = (g8 = (A10 = (2097151 & A10) << 11 | sA2 >>> 21) >>> 0 > (tA2 = A10 + KA2 | 0) >>> 0 ? g8 + 1 | 0 : g8) >> 21) + WA2 | 0, g8 = (g8 = (A10 = (g8 = (2097151 & g8) << 11 | tA2 >>> 21) >>> 0 > (pA2 = g8 + mA2 | 0) >>> 0 ? A10 + 1 | 0 : A10) >> 21) + UA2 | 0, C6 = (A10 = (g8 = (A10 = (2097151 & A10) << 11 | pA2 >>> 21) >>> 0 > (FA2 = A10 + OA2 | 0) >>> 0 ? g8 + 1 | 0 : g8) >> 21) + II2 | 0, A10 = (g8 = (C6 = (g8 = (2097151 & g8) << 11 | FA2 >>> 21) >>> 0 > (cA2 = g8 + iI2 | 0) >>> 0 ? C6 + 1 | 0 : C6) >> 21) + QI2 | 0, eA2 = (SA2 = B6 - (g8 = -2097152 & SA2) | 0) + ((2097151 & (A10 = (C6 = (2097151 & C6) << 11 | cA2 >>> 21) >>> 0 > (fA2 = C6 + BI2 | 0) >>> 0 ? A10 + 1 | 0 : A10)) << 11 | fA2 >>> 21) | 0, A10 = (kA2 - ((g8 >>> 0 > B6 >>> 0) + LA2 | 0) | 0) + (A10 >> 21) | 0, SA2 = g8 = (A10 = eA2 >>> 0 < SA2 >>> 0 ? A10 + 1 | 0 : A10) >> 21, lA2 = (A10 = DA(GA2 = (2097151 & A10) << 11 | eA2 >>> 21, g8, 666643, 0)) + (g8 = 2097151 & lA2) | 0, A10 = w4, B6 = A10 = g8 >>> 0 > lA2 >>> 0 ? A10 + 1 | 0 : A10, E5[0 | Q6] = lA2, E5[Q6 + 1 | 0] = (255 & A10) << 24 | lA2 >>> 8, A10 = 2097151 & HA2, g8 = DA(GA2, SA2, 470296, 0) + A10 | 0, C6 = w4, A10 = (B6 >> 21) + (A10 >>> 0 > g8 >>> 0 ? C6 + 1 | 0 : C6) | 0, A10 = (kA2 = (2097151 & B6) << 11 | lA2 >>> 21) >>> 0 > (HA2 = kA2 + g8 | 0) >>> 0 ? A10 + 1 | 0 : A10, E5[Q6 + 4 | 0] = (2047 & A10) << 21 | HA2 >>> 11, g8 = A10, C6 = HA2, E5[Q6 + 3 | 0] = (7 & A10) << 29 | C6 >>> 3, E5[Q6 + 2 | 0] = 31 & ((65535 & B6) << 16 | lA2 >>> 16) | C6 << 5, B6 = 2097151 & yA2, yA2 = DA(GA2, SA2, 654183, 0) + B6 | 0, A10 = w4, HA2 = (2097151 & g8) << 11 | C6 >>> 21, g8 = (g8 >> 21) + (B6 = B6 >>> 0 > yA2 >>> 0 ? A10 + 1 | 0 : A10) | 0, A10 = g8 = (yA2 = HA2 + yA2 | 0) >>> 0 < HA2 >>> 0 ? g8 + 1 | 0 : g8, E5[Q6 + 6 | 0] = (63 & A10) << 26 | yA2 >>> 6, B6 = yA2, yA2 = 0, E5[Q6 + 5 | 0] = yA2 << 13 | (1572864 & C6) >>> 19 | B6 << 2, C6 = 2097151 & i6, i6 = DA(GA2, SA2, -997805, -1) + C6 | 0, g8 = w4, g8 = C6 >>> 0 > i6 >>> 0 ? g8 + 1 | 0 : g8, yA2 = (2097151 & (C6 = A10)) << 11 | B6 >>> 21, C6 = (A10 >>= 21) + g8 | 0, C6 = (i6 = yA2 + i6 | 0) >>> 0 < yA2 >>> 0 ? C6 + 1 | 0 : C6, E5[Q6 + 9 | 0] = (511 & C6) << 23 | i6 >>> 9, E5[Q6 + 8 | 0] = (1 & C6) << 31 | i6 >>> 1, g8 = 0, E5[Q6 + 7 | 0] = g8 << 18 | (2080768 & B6) >>> 14 | i6 << 7, g8 = 2097151 & wA2, B6 = DA(GA2, SA2, 136657, 0) + g8 | 0, A10 = w4, A10 = g8 >>> 0 > B6 >>> 0 ? A10 + 1 | 0 : A10, wA2 = (2097151 & (g8 = C6)) << 11 | i6 >>> 21, g8 = A10 + (C6 = g8 >> 21) | 0, g8 = (B6 = wA2 + B6 | 0) >>> 0 < wA2 >>> 0 ? g8 + 1 | 0 : g8, E5[Q6 + 12 | 0] = (4095 & g8) << 20 | B6 >>> 12, C6 = B6, E5[Q6 + 11 | 0] = (15 & g8) << 28 | C6 >>> 4, B6 = 0, E5[Q6 + 10 | 0] = B6 << 15 | (1966080 & i6) >>> 17 | C6 << 4, B6 = 2097151 & sA2, i6 = DA(GA2, SA2, -683901, -1) + B6 | 0, A10 = w4, A10 = B6 >>> 0 > i6 >>> 0 ? A10 + 1 | 0 : A10, B6 = g8, g8 = A10 + (g8 >>= 21) | 0, g8 = (B6 = (sA2 = i6) + (i6 = (2097151 & B6) << 11 | C6 >>> 21) | 0) >>> 0 < i6 >>> 0 ? g8 + 1 | 0 : g8, E5[Q6 + 14 | 0] = (127 & g8) << 25 | B6 >>> 7, i6 = 0, E5[Q6 + 13 | 0] = i6 << 12 | (1048576 & C6) >>> 20 | B6 << 1, A10 = g8 >> 21, C6 = (g8 = (2097151 & g8) << 11 | B6 >>> 21) >>> 0 > (i6 = g8 + (2097151 & tA2) | 0) >>> 0 ? A10 + 1 | 0 : A10, E5[Q6 + 17 | 0] = (1023 & C6) << 22 | i6 >>> 10, E5[Q6 + 16 | 0] = (3 & C6) << 30 | i6 >>> 2, g8 = 0, E5[Q6 + 15 | 0] = g8 << 17 | (2064384 & B6) >>> 15 | i6 << 6, A10 = C6 >> 21, A10 = (g8 = (2097151 & C6) << 11 | i6 >>> 21) >>> 0 > (C6 = g8 + (2097151 & pA2) | 0) >>> 0 ? A10 + 1 | 0 : A10, E5[Q6 + 20 | 0] = (8191 & A10) << 19 | C6 >>> 13, E5[Q6 + 19 | 0] = (31 & A10) << 27 | C6 >>> 5, B6 = (g8 = 2097151 & FA2) + (FA2 = (2097151 & A10) << 11 | C6 >>> 21) | 0, g8 = A10 >> 21, g8 = B6 >>> 0 < FA2 >>> 0 ? g8 + 1 | 0 : g8, FA2 = B6, E5[Q6 + 21 | 0] = B6, pA2 = 0, E5[Q6 + 18 | 0] = pA2 << 14 | (1835008 & i6) >>> 18 | C6 << 3, E5[Q6 + 22 | 0] = (255 & g8) << 24 | B6 >>> 8, C6 = g8 >> 21, C6 = (B6 = (i6 = (2097151 & g8) << 11 | B6 >>> 21) + (2097151 & cA2) | 0) >>> 0 < i6 >>> 0 ? C6 + 1 | 0 : C6, E5[Q6 + 25 | 0] = (2047 & C6) << 21 | B6 >>> 11, E5[Q6 + 24 | 0] = (7 & C6) << 29 | B6 >>> 3, E5[Q6 + 23 | 0] = 31 & ((65535 & g8) << 16 | FA2 >>> 16) | B6 << 5, A10 = C6 >> 21, A10 = (g8 = (2097151 & C6) << 11 | B6 >>> 21) >>> 0 > (C6 = g8 + (2097151 & fA2) | 0) >>> 0 ? A10 + 1 | 0 : A10, E5[Q6 + 27 | 0] = (63 & A10) << 26 | C6 >>> 6, i6 = 0, E5[Q6 + 26 | 0] = i6 << 13 | (1572864 & B6) >>> 19 | C6 << 2, g8 = A10 >> 21, g8 = (A10 = (B6 = (2097151 & A10) << 11 | C6 >>> 21) + (2097151 & eA2) | 0) >>> 0 < B6 >>> 0 ? g8 + 1 | 0 : g8, E5[Q6 + 31 | 0] = (131071 & g8) << 15 | A10 >>> 17, E5[Q6 + 30 | 0] = (511 & g8) << 23 | A10 >>> 9, E5[Q6 + 29 | 0] = (1 & g8) << 31 | A10 >>> 1, B6 = 0, E5[Q6 + 28 | 0] = B6 << 18 | (2080768 & C6) >>> 14 | A10 << 7, $A(r4, 64), $A(n5, 64), I9 && (o4[I9 >> 2] = 64, o4[I9 + 4 >> 2] = 0), D4 = f4 + 560 | 0, 0;
                    }
                    function p5(A10, I9, g8, C6) {
                      for (var B6 = 0, Q6 = 0, i6 = 0, E6 = 0, n5 = 0, r4 = 0, f4 = 0, t5 = 0, e5 = 0, c5 = 0, y6 = 0, D5 = 0, h5 = 0, s5 = 0, p6 = 0, u6 = 0, k6 = 0, F6 = 0, l5 = 0, S6 = 0, H6 = 0, M6 = 0, G6 = 0, U6 = 0, J6 = 0, N6 = 0, Y5 = 0, b6 = 0, _6 = 0, K6 = 0, P6 = 0, v6 = 0, m5 = 0, d4 = 0, L6 = 0, R6 = 0, x6 = 0; i6 = (B6 = f4 << 3) + g8 | 0, Q6 = a4[0 | (B6 = I9 + B6 | 0)] | a4[B6 + 1 | 0] << 8 | a4[B6 + 2 | 0] << 16 | a4[B6 + 3 | 0] << 24, H6 = a4[B6 + 4 | 0] | a4[B6 + 5 | 0] << 8 | a4[B6 + 6 | 0] << 16 | a4[B6 + 7 | 0] << 24, n5 = Q6 << 24 | (65280 & Q6) << 8, e5 = (r4 = 16711680 & Q6) << 24, r4 = r4 >>> 8 | 0, B6 = (t5 = -16777216 & Q6) >>> 24 | 0, o4[i6 >> 2] = e5 | t5 << 8 | -16777216 & ((255 & H6) << 24 | Q6 >>> 8) | 16711680 & ((16777215 & H6) << 8 | Q6 >>> 24) | H6 >>> 8 & 65280 | H6 >>> 24, Q6 = B6 | r4 | n5, B6 = 0, o4[i6 + 4 >> 2] = Q6 | B6 | B6, 16 != (0 | (f4 = f4 + 1 | 0)); )
                        ;
                      for (I9 = o4[A10 + 4 >> 2], o4[C6 >> 2] = o4[A10 >> 2], o4[C6 + 4 >> 2] = I9, I9 = o4[A10 + 60 >> 2], o4[C6 + 56 >> 2] = o4[A10 + 56 >> 2], o4[C6 + 60 >> 2] = I9, I9 = o4[A10 + 52 >> 2], o4[C6 + 48 >> 2] = o4[A10 + 48 >> 2], o4[C6 + 52 >> 2] = I9, I9 = o4[A10 + 44 >> 2], o4[C6 + 40 >> 2] = o4[A10 + 40 >> 2], o4[C6 + 44 >> 2] = I9, I9 = o4[A10 + 36 >> 2], o4[C6 + 32 >> 2] = o4[A10 + 32 >> 2], o4[C6 + 36 >> 2] = I9, I9 = o4[A10 + 28 >> 2], o4[C6 + 24 >> 2] = o4[A10 + 24 >> 2], o4[C6 + 28 >> 2] = I9, I9 = o4[A10 + 20 >> 2], o4[C6 + 16 >> 2] = o4[A10 + 16 >> 2], o4[C6 + 20 >> 2] = I9, I9 = o4[A10 + 12 >> 2], o4[C6 + 8 >> 2] = o4[A10 + 8 >> 2], o4[C6 + 12 >> 2] = I9; t5 = o4[C6 + 56 >> 2], n5 = o4[C6 + 60 >> 2], B6 = o4[(I9 = H6 = (M6 = x6 << 3) + g8 | 0) >> 2], I9 = o4[I9 + 4 >> 2], k6 = Q6 = o4[C6 + 36 >> 2], Q6 = nA(f4 = o4[C6 + 32 >> 2], Q6, 50), i6 = w4, Q6 = nA(f4, k6, 46) ^ Q6, i6 ^= w4, Q6 = nA(f4, k6, 23) ^ Q6, I9 = (w4 ^ i6) + I9 | 0, I9 = (B6 = Q6 + B6 | 0) >>> 0 < Q6 >>> 0 ? I9 + 1 | 0 : I9, B6 = (i6 = o4[(Q6 = M6 + 34e3 | 0) >> 2]) + B6 | 0, I9 = o4[Q6 + 4 >> 2] + I9 | 0, I9 = B6 >>> 0 < i6 >>> 0 ? I9 + 1 | 0 : I9, Q6 = (e5 = ((i6 = o4[C6 + 48 >> 2]) ^ (r4 = o4[C6 + 40 >> 2])) & f4 ^ i6) + B6 | 0, B6 = (((u6 = o4[C6 + 52 >> 2]) ^ (c5 = o4[C6 + 44 >> 2])) & k6 ^ u6) + I9 | 0, I9 = (Q6 >>> 0 < e5 >>> 0 ? B6 + 1 | 0 : B6) + n5 | 0, I9 = (B6 = Q6) >>> 0 > (Q6 = Q6 + t5 | 0) >>> 0 ? I9 + 1 | 0 : I9, t5 = (n5 = o4[C6 + 24 >> 2]) + Q6 | 0, B6 = o4[C6 + 28 >> 2] + I9 | 0, y6 = B6 = n5 >>> 0 > t5 >>> 0 ? B6 + 1 | 0 : B6, o4[C6 + 24 >> 2] = t5, o4[C6 + 28 >> 2] = B6, l5 = B6 = o4[C6 + 4 >> 2], B6 = nA(h5 = o4[C6 >> 2], B6, 36), n5 = w4, B6 = nA(h5, l5, 30) ^ B6, e5 = w4 ^ n5, n5 = Q6 + (nA(h5, l5, 25) ^ B6) | 0, B6 = I9 + (w4 ^ e5) | 0, B6 = Q6 >>> 0 > n5 >>> 0 ? B6 + 1 | 0 : B6, e5 = (I9 = n5) + (n5 = h5 & ((Q6 = o4[C6 + 16 >> 2]) | (s5 = o4[C6 + 8 >> 2])) | Q6 & s5) | 0, I9 = (I9 = B6) + (l5 & ((B6 = o4[C6 + 20 >> 2]) | (F6 = o4[C6 + 12 >> 2])) | B6 & F6) | 0, n5 = I9 = n5 >>> 0 > e5 >>> 0 ? I9 + 1 | 0 : I9, o4[C6 + 56 >> 2] = e5, o4[C6 + 60 >> 2] = I9, E6 = Q6, D5 = B6, S6 = o4[(I9 = P6 = (p6 = 8 | M6) + g8 | 0) >> 2], K6 = o4[I9 + 4 >> 2], B6 = ((c5 ^ k6) & y6 ^ c5) + u6 | 0, B6 = (I9 = (Q6 = (r4 ^ f4) & t5 ^ r4) + i6 | 0) >>> 0 < Q6 >>> 0 ? B6 + 1 | 0 : B6, Q6 = nA(t5, y6, 50), i6 = w4, Q6 = nA(t5, y6, 46) ^ Q6, i6 ^= w4, Q6 = (u6 = nA(t5, y6, 23) ^ Q6) + I9 | 0, I9 = (w4 ^ i6) + B6 | 0, I9 = (Q6 >>> 0 < u6 >>> 0 ? I9 + 1 | 0 : I9) + K6 | 0, I9 = (B6 = Q6 + S6 | 0) >>> 0 < Q6 >>> 0 ? I9 + 1 | 0 : I9, Q6 = (Q6 = B6) + (i6 = o4[(B6 = p6 + 34e3 | 0) >> 2]) | 0, B6 = o4[B6 + 4 >> 2] + I9 | 0, B6 = (I9 = Q6 >>> 0 < i6 >>> 0 ? B6 + 1 | 0 : B6) + D5 | 0, p6 = B6 = (E6 = Q6 + E6 | 0) >>> 0 < Q6 >>> 0 ? B6 + 1 | 0 : B6, o4[C6 + 16 >> 2] = E6, o4[C6 + 20 >> 2] = B6, I9 = I9 + ((F6 | l5) & n5 | F6 & l5) | 0, I9 = (B6 = Q6 + ((h5 | s5) & e5 | h5 & s5) | 0) >>> 0 < Q6 >>> 0 ? I9 + 1 | 0 : I9, Q6 = nA(e5, n5, 36), i6 = w4, Q6 = nA(e5, n5, 30) ^ Q6, D5 = w4 ^ i6, i6 = B6, B6 = nA(e5, n5, 25) ^ Q6, I9 = (w4 ^ D5) + I9 | 0, D5 = I9 = B6 >>> 0 > (i6 = i6 + B6 | 0) >>> 0 ? I9 + 1 | 0 : I9, o4[C6 + 48 >> 2] = i6, o4[C6 + 52 >> 2] = I9, I9 = (I9 = r4) + (r4 = o4[(B6 = K6 = (Q6 = 16 | M6) + g8 | 0) >> 2]) | 0, B6 = o4[B6 + 4 >> 2] + c5 | 0, B6 = I9 >>> 0 < r4 >>> 0 ? B6 + 1 | 0 : B6, Q6 = (c5 = I9) + (r4 = o4[(I9 = Q6 + 34e3 | 0) >> 2]) | 0, I9 = o4[I9 + 4 >> 2] + B6 | 0, I9 = ((y6 ^ k6) & p6 ^ k6) + (I9 = Q6 >>> 0 < r4 >>> 0 ? I9 + 1 | 0 : I9) | 0, I9 = (B6 = (B6 = Q6) + (Q6 = (t5 ^ f4) & E6 ^ f4) | 0) >>> 0 < Q6 >>> 0 ? I9 + 1 | 0 : I9, Q6 = nA(E6, p6, 50), r4 = w4, Q6 = nA(E6, p6, 46) ^ Q6, r4 ^= w4, Q6 = (c5 = nA(E6, p6, 23) ^ Q6) + B6 | 0, B6 = (w4 ^ r4) + I9 | 0, u6 = B6 = Q6 >>> 0 < c5 >>> 0 ? B6 + 1 | 0 : B6, I9 = B6, B6 = nA(i6, D5, 36), r4 = w4, B6 = nA(i6, D5, 30) ^ B6, c5 = w4 ^ r4, S6 = nA(i6, D5, 25) ^ B6, B6 = ((n5 | l5) & D5 | n5 & l5) + (w4 ^ c5) | 0, I9 = ((r4 = S6 + ((e5 | h5) & i6 | e5 & h5) | 0) >>> 0 < S6 >>> 0 ? B6 + 1 | 0 : B6) + I9 | 0, c5 = I9 = (B6 = r4) >>> 0 > (r4 = Q6 + r4 | 0) >>> 0 ? I9 + 1 | 0 : I9, o4[C6 + 40 >> 2] = r4, o4[C6 + 44 >> 2] = I9, B6 = u6 + F6 | 0, F6 = B6 = (s5 = Q6 + s5 | 0) >>> 0 < Q6 >>> 0 ? B6 + 1 | 0 : B6, o4[C6 + 8 >> 2] = s5, o4[C6 + 12 >> 2] = B6, B6 = (B6 = f4) + (f4 = o4[(I9 = N6 = (Q6 = 24 | M6) + g8 | 0) >> 2]) | 0, I9 = o4[I9 + 4 >> 2] + k6 | 0, I9 = B6 >>> 0 < f4 >>> 0 ? I9 + 1 | 0 : I9, Q6 = (k6 = B6) + (f4 = o4[(B6 = Q6 + 34e3 | 0) >> 2]) | 0, B6 = o4[B6 + 4 >> 2] + I9 | 0, B6 = (y6 ^ (y6 ^ p6) & F6) + (B6 = Q6 >>> 0 < f4 >>> 0 ? B6 + 1 | 0 : B6) | 0, B6 = (I9 = (I9 = Q6) + (Q6 = t5 ^ (t5 ^ E6) & s5) | 0) >>> 0 < Q6 >>> 0 ? B6 + 1 | 0 : B6, Q6 = nA(s5, F6, 50), f4 = w4, Q6 = nA(s5, F6, 46) ^ Q6, f4 ^= w4, Q6 = (u6 = nA(s5, F6, 23) ^ Q6) + I9 | 0, I9 = (w4 ^ f4) + B6 | 0, I9 = Q6 >>> 0 < u6 >>> 0 ? I9 + 1 | 0 : I9, B6 = nA(r4, c5, 36), f4 = w4, B6 = nA(r4, c5, 30) ^ B6, u6 = w4 ^ f4, k6 = nA(r4, c5, 25) ^ B6, B6 = ((n5 | D5) & c5 | n5 & D5) + (w4 ^ u6) | 0, B6 = ((f4 = k6 + ((i6 | e5) & r4 | i6 & e5) | 0) >>> 0 < k6 >>> 0 ? B6 + 1 | 0 : B6) + I9 | 0, u6 = B6 = (k6 = f4) >>> 0 > (f4 = Q6 + f4 | 0) >>> 0 ? B6 + 1 | 0 : B6, o4[C6 + 32 >> 2] = f4, o4[C6 + 36 >> 2] = B6, I9 = I9 + l5 | 0, l5 = I9 = (h5 = Q6 + h5 | 0) >>> 0 < Q6 >>> 0 ? I9 + 1 | 0 : I9, o4[C6 >> 2] = h5, o4[C6 + 4 >> 2] = I9, Q6 = o4[(B6 = v6 = (I9 = 32 | M6) + g8 | 0) >> 2], B6 = y6 + o4[B6 + 4 >> 2] | 0, B6 = (Q6 = Q6 + t5 | 0) >>> 0 < t5 >>> 0 ? B6 + 1 | 0 : B6, Q6 = (t5 = o4[(I9 = I9 + 34e3 | 0) >> 2]) + Q6 | 0, I9 = o4[I9 + 4 >> 2] + B6 | 0, I9 = (p6 ^ (p6 ^ F6) & l5) + (I9 = Q6 >>> 0 < t5 >>> 0 ? I9 + 1 | 0 : I9) | 0, I9 = (B6 = (B6 = Q6) + (Q6 = E6 ^ (E6 ^ s5) & h5) | 0) >>> 0 < Q6 >>> 0 ? I9 + 1 | 0 : I9, Q6 = nA(h5, l5, 50), t5 = w4, Q6 = nA(h5, l5, 46) ^ Q6, t5 ^= w4, Q6 = (y6 = nA(h5, l5, 23) ^ Q6) + B6 | 0, B6 = (w4 ^ t5) + I9 | 0, k6 = B6 = Q6 >>> 0 < y6 >>> 0 ? B6 + 1 | 0 : B6, I9 = B6, B6 = nA(f4, u6, 36), t5 = w4, B6 = nA(f4, u6, 30) ^ B6, y6 = w4 ^ t5, S6 = nA(f4, u6, 25) ^ B6, B6 = ((c5 | D5) & u6 | c5 & D5) + (w4 ^ y6) | 0, I9 = ((t5 = S6 + ((i6 | r4) & f4 | i6 & r4) | 0) >>> 0 < S6 >>> 0 ? B6 + 1 | 0 : B6) + I9 | 0, t5 = I9 = (y6 = Q6 + t5 | 0) >>> 0 < t5 >>> 0 ? I9 + 1 | 0 : I9, o4[C6 + 24 >> 2] = y6, o4[C6 + 28 >> 2] = I9, B6 = n5 + k6 | 0, k6 = B6 = (n5 = Q6 + e5 | 0) >>> 0 < Q6 >>> 0 ? B6 + 1 | 0 : B6, o4[C6 + 56 >> 2] = n5, o4[C6 + 60 >> 2] = B6, Q6 = o4[(I9 = b6 = (B6 = 40 | M6) + g8 | 0) >> 2], I9 = p6 + o4[I9 + 4 >> 2] | 0, I9 = (Q6 = Q6 + E6 | 0) >>> 0 < E6 >>> 0 ? I9 + 1 | 0 : I9, Q6 = (e5 = o4[(B6 = B6 + 34e3 | 0) >> 2]) + Q6 | 0, B6 = o4[B6 + 4 >> 2] + I9 | 0, B6 = (F6 ^ (F6 ^ l5) & k6) + (B6 = Q6 >>> 0 < e5 >>> 0 ? B6 + 1 | 0 : B6) | 0, B6 = (I9 = (I9 = Q6) + (Q6 = s5 ^ (h5 ^ s5) & n5) | 0) >>> 0 < Q6 >>> 0 ? B6 + 1 | 0 : B6, Q6 = nA(n5, k6, 50), e5 = w4, Q6 = nA(n5, k6, 46) ^ Q6, e5 ^= w4, Q6 = (E6 = nA(n5, k6, 23) ^ Q6) + I9 | 0, I9 = (w4 ^ e5) + B6 | 0, I9 = Q6 >>> 0 < E6 >>> 0 ? I9 + 1 | 0 : I9, B6 = nA(y6, t5, 36), e5 = w4, B6 = nA(y6, t5, 30) ^ B6, E6 = w4 ^ e5, p6 = nA(y6, t5, 25) ^ B6, B6 = ((c5 | u6) & t5 | c5 & u6) + (w4 ^ E6) | 0, B6 = ((e5 = p6 + ((r4 | f4) & y6 | r4 & f4) | 0) >>> 0 < p6 >>> 0 ? B6 + 1 | 0 : B6) + I9 | 0, e5 = B6 = (E6 = Q6 + e5 | 0) >>> 0 < e5 >>> 0 ? B6 + 1 | 0 : B6, o4[C6 + 16 >> 2] = E6, o4[C6 + 20 >> 2] = B6, I9 = I9 + D5 | 0, p6 = I9 = (D5 = Q6 + i6 | 0) >>> 0 < i6 >>> 0 ? I9 + 1 | 0 : I9, o4[C6 + 48 >> 2] = D5, o4[C6 + 52 >> 2] = I9, Q6 = o4[(B6 = _6 = (I9 = 48 | M6) + g8 | 0) >> 2], B6 = F6 + o4[B6 + 4 >> 2] | 0, B6 = (Q6 = Q6 + s5 | 0) >>> 0 < s5 >>> 0 ? B6 + 1 | 0 : B6, Q6 = (i6 = o4[(I9 = I9 + 34e3 | 0) >> 2]) + Q6 | 0, I9 = o4[I9 + 4 >> 2] + B6 | 0, I9 = (l5 ^ (k6 ^ l5) & p6) + (I9 = Q6 >>> 0 < i6 >>> 0 ? I9 + 1 | 0 : I9) | 0, I9 = (B6 = (B6 = Q6) + (Q6 = h5 ^ (n5 ^ h5) & D5) | 0) >>> 0 < Q6 >>> 0 ? I9 + 1 | 0 : I9, Q6 = nA(D5, p6, 50), i6 = w4, Q6 = nA(D5, p6, 46) ^ Q6, i6 ^= w4, Q6 = (s5 = nA(D5, p6, 23) ^ Q6) + B6 | 0, B6 = (w4 ^ i6) + I9 | 0, F6 = B6 = Q6 >>> 0 < s5 >>> 0 ? B6 + 1 | 0 : B6, I9 = B6, B6 = nA(E6, e5, 36), i6 = w4, B6 = nA(E6, e5, 30) ^ B6, s5 = w4 ^ i6, S6 = nA(E6, e5, 25) ^ B6, B6 = ((t5 | u6) & e5 | t5 & u6) + (w4 ^ s5) | 0, I9 = ((i6 = S6 + ((f4 | y6) & E6 | f4 & y6) | 0) >>> 0 < S6 >>> 0 ? B6 + 1 | 0 : B6) + I9 | 0, s5 = I9 = (B6 = i6) >>> 0 > (i6 = Q6 + i6 | 0) >>> 0 ? I9 + 1 | 0 : I9, o4[C6 + 8 >> 2] = i6, o4[C6 + 12 >> 2] = I9, B6 = c5 + F6 | 0, F6 = B6 = (S6 = Q6 + r4 | 0) >>> 0 < r4 >>> 0 ? B6 + 1 | 0 : B6, o4[C6 + 40 >> 2] = S6, o4[C6 + 44 >> 2] = B6, Q6 = o4[(I9 = Y5 = (B6 = 56 | M6) + g8 | 0) >> 2], I9 = l5 + o4[I9 + 4 >> 2] | 0, I9 = (Q6 = Q6 + h5 | 0) >>> 0 < h5 >>> 0 ? I9 + 1 | 0 : I9, Q6 = (r4 = o4[(B6 = B6 + 34e3 | 0) >> 2]) + Q6 | 0, B6 = o4[B6 + 4 >> 2] + I9 | 0, B6 = (k6 ^ (p6 ^ k6) & F6) + (B6 = Q6 >>> 0 < r4 >>> 0 ? B6 + 1 | 0 : B6) | 0, B6 = (I9 = (I9 = Q6) + (Q6 = n5 ^ (n5 ^ D5) & S6) | 0) >>> 0 < Q6 >>> 0 ? B6 + 1 | 0 : B6, Q6 = nA(S6, F6, 50), r4 = w4, Q6 = nA(S6, F6, 46) ^ Q6, r4 ^= w4, Q6 = (c5 = nA(S6, F6, 23) ^ Q6) + I9 | 0, I9 = (w4 ^ r4) + B6 | 0, I9 = Q6 >>> 0 < c5 >>> 0 ? I9 + 1 | 0 : I9, B6 = nA(i6, s5, 36), r4 = w4, B6 = nA(i6, s5, 30) ^ B6, c5 = w4 ^ r4, h5 = nA(i6, s5, 25) ^ B6, B6 = ((t5 | e5) & s5 | t5 & e5) + (w4 ^ c5) | 0, B6 = ((r4 = h5 + ((E6 | y6) & i6 | E6 & y6) | 0) >>> 0 < h5 >>> 0 ? B6 + 1 | 0 : B6) + I9 | 0, c5 = B6 = (c5 = r4) >>> 0 > (r4 = Q6 + r4 | 0) >>> 0 ? B6 + 1 | 0 : B6, o4[C6 >> 2] = r4, o4[C6 + 4 >> 2] = B6, I9 = I9 + u6 | 0, l5 = I9 = (B6 = f4) >>> 0 > (f4 = Q6 + f4 | 0) >>> 0 ? I9 + 1 | 0 : I9, o4[C6 + 32 >> 2] = f4, o4[C6 + 36 >> 2] = I9, Q6 = o4[(B6 = m5 = (I9 = 64 | M6) + g8 | 0) >> 2], B6 = k6 + o4[B6 + 4 >> 2] | 0, B6 = (Q6 = Q6 + n5 | 0) >>> 0 < n5 >>> 0 ? B6 + 1 | 0 : B6, Q6 = (n5 = o4[(I9 = I9 + 34e3 | 0) >> 2]) + Q6 | 0, I9 = o4[I9 + 4 >> 2] + B6 | 0, I9 = (p6 ^ (p6 ^ F6) & l5) + (I9 = Q6 >>> 0 < n5 >>> 0 ? I9 + 1 | 0 : I9) | 0, I9 = (B6 = (B6 = Q6) + (Q6 = D5 ^ (D5 ^ S6) & f4) | 0) >>> 0 < Q6 >>> 0 ? I9 + 1 | 0 : I9, Q6 = nA(f4, l5, 50), n5 = w4, Q6 = nA(f4, l5, 46) ^ Q6, n5 ^= w4, Q6 = (u6 = nA(f4, l5, 23) ^ Q6) + B6 | 0, B6 = (w4 ^ n5) + I9 | 0, h5 = B6 = Q6 >>> 0 < u6 >>> 0 ? B6 + 1 | 0 : B6, I9 = B6, B6 = nA(r4, c5, 36), n5 = w4, B6 = nA(r4, c5, 30) ^ B6, u6 = w4 ^ n5, k6 = nA(r4, c5, 25) ^ B6, B6 = ((e5 | s5) & c5 | e5 & s5) + (w4 ^ u6) | 0, I9 = ((n5 = k6 + ((i6 | E6) & r4 | i6 & E6) | 0) >>> 0 < k6 >>> 0 ? B6 + 1 | 0 : B6) + I9 | 0, n5 = I9 = (u6 = Q6 + n5 | 0) >>> 0 < n5 >>> 0 ? I9 + 1 | 0 : I9, o4[C6 + 56 >> 2] = u6, o4[C6 + 60 >> 2] = I9, B6 = t5 + h5 | 0, k6 = B6 = (t5 = Q6 + y6 | 0) >>> 0 < Q6 >>> 0 ? B6 + 1 | 0 : B6, o4[C6 + 24 >> 2] = t5, o4[C6 + 28 >> 2] = B6, Q6 = o4[(I9 = G6 = (B6 = 72 | M6) + g8 | 0) >> 2], I9 = p6 + o4[I9 + 4 >> 2] | 0, I9 = (Q6 = Q6 + D5 | 0) >>> 0 < D5 >>> 0 ? I9 + 1 | 0 : I9, Q6 = (D5 = o4[(B6 = B6 + 34e3 | 0) >> 2]) + Q6 | 0, B6 = o4[B6 + 4 >> 2] + I9 | 0, B6 = (F6 ^ (F6 ^ l5) & k6) + (B6 = Q6 >>> 0 < D5 >>> 0 ? B6 + 1 | 0 : B6) | 0, B6 = (I9 = (I9 = Q6) + (Q6 = S6 ^ (f4 ^ S6) & t5) | 0) >>> 0 < Q6 >>> 0 ? B6 + 1 | 0 : B6, Q6 = nA(t5, k6, 50), D5 = w4, Q6 = nA(t5, k6, 46) ^ Q6, D5 ^= w4, Q6 = (h5 = nA(t5, k6, 23) ^ Q6) + I9 | 0, I9 = (w4 ^ D5) + B6 | 0, I9 = Q6 >>> 0 < h5 >>> 0 ? I9 + 1 | 0 : I9, B6 = nA(u6, n5, 36), D5 = w4, B6 = nA(u6, n5, 30) ^ B6, h5 = w4 ^ D5, y6 = nA(u6, n5, 25) ^ B6, B6 = ((c5 | s5) & n5 | c5 & s5) + (w4 ^ h5) | 0, B6 = ((D5 = y6 + ((i6 | r4) & u6 | i6 & r4) | 0) >>> 0 < y6 >>> 0 ? B6 + 1 | 0 : B6) + I9 | 0, D5 = B6 = (h5 = Q6 + D5 | 0) >>> 0 < D5 >>> 0 ? B6 + 1 | 0 : B6, o4[C6 + 48 >> 2] = h5, o4[C6 + 52 >> 2] = B6, I9 = I9 + e5 | 0, p6 = I9 = (e5 = Q6 + E6 | 0) >>> 0 < Q6 >>> 0 ? I9 + 1 | 0 : I9, o4[C6 + 16 >> 2] = e5, o4[C6 + 20 >> 2] = I9, I9 = (E6 = o4[(B6 = J6 = (Q6 = 80 | M6) + g8 | 0) >> 2]) + S6 | 0, B6 = o4[B6 + 4 >> 2] + F6 | 0, B6 = I9 >>> 0 < E6 >>> 0 ? B6 + 1 | 0 : B6, Q6 = (y6 = I9) + (E6 = o4[(I9 = Q6 + 34e3 | 0) >> 2]) | 0, I9 = o4[I9 + 4 >> 2] + B6 | 0, I9 = (l5 ^ (k6 ^ l5) & p6) + (I9 = Q6 >>> 0 < E6 >>> 0 ? I9 + 1 | 0 : I9) | 0, I9 = (B6 = (B6 = Q6) + (Q6 = f4 ^ (t5 ^ f4) & e5) | 0) >>> 0 < Q6 >>> 0 ? I9 + 1 | 0 : I9, Q6 = nA(e5, p6, 50), E6 = w4, Q6 = nA(e5, p6, 46) ^ Q6, E6 ^= w4, Q6 = (y6 = nA(e5, p6, 23) ^ Q6) + B6 | 0, B6 = (w4 ^ E6) + I9 | 0, F6 = B6 = Q6 >>> 0 < y6 >>> 0 ? B6 + 1 | 0 : B6, I9 = B6, B6 = nA(h5, D5, 36), E6 = w4, B6 = nA(h5, D5, 30) ^ B6, y6 = w4 ^ E6, S6 = nA(h5, D5, 25) ^ B6, B6 = ((n5 | c5) & D5 | n5 & c5) + (w4 ^ y6) | 0, I9 = ((E6 = S6 + ((r4 | u6) & h5 | r4 & u6) | 0) >>> 0 < S6 >>> 0 ? B6 + 1 | 0 : B6) + I9 | 0, E6 = I9 = (y6 = Q6 + E6 | 0) >>> 0 < E6 >>> 0 ? I9 + 1 | 0 : I9, o4[C6 + 40 >> 2] = y6, o4[C6 + 44 >> 2] = I9, B6 = s5 + F6 | 0, F6 = B6 = (s5 = Q6 + i6 | 0) >>> 0 < i6 >>> 0 ? B6 + 1 | 0 : B6, o4[C6 + 8 >> 2] = s5, o4[C6 + 12 >> 2] = B6, B6 = 34e3 + (I9 = 88 | M6) | 0, i6 = o4[(I9 = U6 = I9 + g8 | 0) >> 2], Q6 = o4[B6 >> 2] + i6 | 0, I9 = o4[B6 + 4 >> 2] + o4[I9 + 4 >> 2] | 0, B6 = l5 + (Q6 >>> 0 < i6 >>> 0 ? I9 + 1 | 0 : I9) | 0, B6 = (k6 ^ (p6 ^ k6) & F6) + (B6 = (I9 = Q6 + f4 | 0) >>> 0 < f4 >>> 0 ? B6 + 1 | 0 : B6) | 0, B6 = (I9 = (Q6 = t5 ^ (t5 ^ e5) & s5) + I9 | 0) >>> 0 < Q6 >>> 0 ? B6 + 1 | 0 : B6, Q6 = nA(s5, F6, 50), i6 = w4, Q6 = nA(s5, F6, 46) ^ Q6, i6 ^= w4, Q6 = (f4 = nA(s5, F6, 23) ^ Q6) + I9 | 0, I9 = (w4 ^ i6) + B6 | 0, I9 = Q6 >>> 0 < f4 >>> 0 ? I9 + 1 | 0 : I9, B6 = nA(y6, E6, 36), i6 = w4, B6 = nA(y6, E6, 30) ^ B6, f4 = w4 ^ i6, l5 = nA(y6, E6, 25) ^ B6, B6 = ((n5 | D5) & E6 | n5 & D5) + (w4 ^ f4) | 0, B6 = ((i6 = l5 + ((h5 | u6) & y6 | h5 & u6) | 0) >>> 0 < l5 >>> 0 ? B6 + 1 | 0 : B6) + I9 | 0, f4 = B6 = (f4 = i6) >>> 0 > (i6 = Q6 + i6 | 0) >>> 0 ? B6 + 1 | 0 : B6, o4[C6 + 32 >> 2] = i6, o4[C6 + 36 >> 2] = B6, I9 = I9 + c5 | 0, c5 = I9 = (B6 = r4) >>> 0 > (r4 = Q6 + r4 | 0) >>> 0 ? I9 + 1 | 0 : I9, o4[C6 >> 2] = r4, o4[C6 + 4 >> 2] = I9, B6 = 34e3 + (I9 = 96 | M6) | 0, l5 = o4[(I9 = d4 = I9 + g8 | 0) >> 2], Q6 = o4[B6 >> 2] + l5 | 0, B6 = o4[B6 + 4 >> 2] + o4[I9 + 4 >> 2] | 0, I9 = k6 + (Q6 >>> 0 < l5 >>> 0 ? B6 + 1 | 0 : B6) | 0, I9 = (B6 = Q6 + t5 | 0) >>> 0 < t5 >>> 0 ? I9 + 1 | 0 : I9, Q6 = (t5 = e5 ^ (e5 ^ s5) & r4) + B6 | 0, B6 = (p6 ^ (p6 ^ F6) & c5) + I9 | 0, B6 = Q6 >>> 0 < t5 >>> 0 ? B6 + 1 | 0 : B6, I9 = nA(r4, c5, 50), t5 = w4, I9 = nA(r4, c5, 46) ^ I9, t5 ^= w4, k6 = Q6, Q6 = nA(r4, c5, 23) ^ I9, B6 = (w4 ^ t5) + B6 | 0, k6 = B6 = (I9 = k6 + Q6 | 0) >>> 0 < Q6 >>> 0 ? B6 + 1 | 0 : B6, Q6 = I9, I9 = nA(i6, f4, 36), t5 = w4, I9 = nA(i6, f4, 30) ^ I9, l5 = w4 ^ t5, S6 = nA(i6, f4, 25) ^ I9, I9 = ((E6 | D5) & f4 | E6 & D5) + (w4 ^ l5) | 0, B6 = ((t5 = S6 + ((h5 | y6) & i6 | h5 & y6) | 0) >>> 0 < S6 >>> 0 ? I9 + 1 | 0 : I9) + B6 | 0, t5 = B6 = (l5 = Q6 + t5 | 0) >>> 0 < t5 >>> 0 ? B6 + 1 | 0 : B6, o4[C6 + 24 >> 2] = l5, o4[C6 + 28 >> 2] = B6, B6 = n5 + k6 | 0, n5 = B6 = (u6 = Q6 + u6 | 0) >>> 0 < Q6 >>> 0 ? B6 + 1 | 0 : B6, o4[C6 + 56 >> 2] = u6, o4[C6 + 60 >> 2] = B6, B6 = 34e3 + (I9 = 104 | M6) | 0, k6 = o4[(I9 = R6 = I9 + g8 | 0) >> 2], Q6 = o4[B6 >> 2] + k6 | 0, I9 = o4[B6 + 4 >> 2] + o4[I9 + 4 >> 2] | 0, B6 = p6 + (Q6 >>> 0 < k6 >>> 0 ? I9 + 1 | 0 : I9) | 0, B6 = (I9 = Q6 + e5 | 0) >>> 0 < e5 >>> 0 ? B6 + 1 | 0 : B6, Q6 = (e5 = s5 ^ (r4 ^ s5) & u6) + I9 | 0, I9 = (F6 ^ (c5 ^ F6) & n5) + B6 | 0, I9 = Q6 >>> 0 < e5 >>> 0 ? I9 + 1 | 0 : I9, B6 = nA(u6, n5, 50), e5 = w4, B6 = nA(u6, n5, 46) ^ B6, e5 ^= w4, p6 = nA(u6, n5, 23) ^ B6, B6 = (w4 ^ e5) + I9 | 0, k6 = B6 = (Q6 = p6 + Q6 | 0) >>> 0 < p6 >>> 0 ? B6 + 1 | 0 : B6, I9 = B6, B6 = nA(l5, t5, 36), e5 = w4, B6 = nA(l5, t5, 30) ^ B6, p6 = w4 ^ e5, S6 = nA(l5, t5, 25) ^ B6, B6 = ((E6 | f4) & t5 | E6 & f4) + (w4 ^ p6) | 0, I9 = ((e5 = S6 + ((i6 | y6) & l5 | i6 & y6) | 0) >>> 0 < S6 >>> 0 ? B6 + 1 | 0 : B6) + I9 | 0, e5 = I9 = (p6 = Q6 + e5 | 0) >>> 0 < e5 >>> 0 ? I9 + 1 | 0 : I9, o4[C6 + 16 >> 2] = p6, o4[C6 + 20 >> 2] = I9, I9 = D5 + k6 | 0, D5 = I9 = (h5 = Q6 + h5 | 0) >>> 0 < Q6 >>> 0 ? I9 + 1 | 0 : I9, o4[C6 + 48 >> 2] = h5, o4[C6 + 52 >> 2] = I9, B6 = 34e3 + (I9 = 112 | M6) | 0, k6 = o4[(Q6 = S6 = I9 + g8 | 0) >> 2], I9 = o4[B6 >> 2] + k6 | 0, B6 = o4[B6 + 4 >> 2] + o4[Q6 + 4 >> 2] | 0, B6 = F6 + (I9 >>> 0 < k6 >>> 0 ? B6 + 1 | 0 : B6) | 0, B6 = (c5 ^ (n5 ^ c5) & D5) + (B6 = (I9 = I9 + s5 | 0) >>> 0 < s5 >>> 0 ? B6 + 1 | 0 : B6) | 0, B6 = (I9 = (Q6 = r4 ^ (r4 ^ u6) & h5) + I9 | 0) >>> 0 < Q6 >>> 0 ? B6 + 1 | 0 : B6, Q6 = nA(h5, D5, 50), s5 = w4, Q6 = nA(h5, D5, 46) ^ Q6, s5 ^= w4, Q6 = (F6 = nA(h5, D5, 23) ^ Q6) + I9 | 0, I9 = (w4 ^ s5) + B6 | 0, k6 = I9 = Q6 >>> 0 < F6 >>> 0 ? I9 + 1 | 0 : I9, B6 = I9, I9 = nA(p6, e5, 36), s5 = w4, I9 = nA(p6, e5, 30) ^ I9, F6 = w4 ^ s5, L6 = nA(p6, e5, 25) ^ I9, I9 = ((t5 | f4) & e5 | t5 & f4) + (w4 ^ F6) | 0, B6 = ((s5 = L6 + ((i6 | l5) & p6 | i6 & l5) | 0) >>> 0 < L6 >>> 0 ? I9 + 1 | 0 : I9) + B6 | 0, s5 = B6 = (F6 = Q6 + s5 | 0) >>> 0 < s5 >>> 0 ? B6 + 1 | 0 : B6, o4[C6 + 8 >> 2] = F6, o4[C6 + 12 >> 2] = B6, B6 = E6 + k6 | 0, Q6 = B6 = (E6 = Q6 + y6 | 0) >>> 0 < Q6 >>> 0 ? B6 + 1 | 0 : B6, o4[C6 + 40 >> 2] = E6, o4[C6 + 44 >> 2] = B6, B6 = 34e3 + (I9 = 120 | M6) | 0, M6 = o4[(I9 = y6 = I9 + g8 | 0) >> 2], k6 = o4[B6 >> 2] + M6 | 0, B6 = o4[B6 + 4 >> 2] + o4[I9 + 4 >> 2] | 0, I9 = c5 + (k6 >>> 0 < M6 >>> 0 ? B6 + 1 | 0 : B6) | 0, I9 = (n5 ^ (n5 ^ D5) & Q6) + (I9 = (B6 = r4 + k6 | 0) >>> 0 < r4 >>> 0 ? I9 + 1 | 0 : I9) | 0, I9 = (B6 = (r4 = u6 ^ (h5 ^ u6) & E6) + B6 | 0) >>> 0 < r4 >>> 0 ? I9 + 1 | 0 : I9, r4 = nA(E6, Q6, 50), n5 = w4, r4 = nA(E6, Q6, 46) ^ r4, n5 ^= w4, Q6 = (r4 = nA(E6, Q6, 23) ^ r4) + B6 | 0, B6 = (w4 ^ n5) + I9 | 0, B6 = Q6 >>> 0 < r4 >>> 0 ? B6 + 1 | 0 : B6, r4 = Q6, n5 = B6, I9 = B6, B6 = nA(F6, s5, 36), E6 = w4, B6 = nA(F6, s5, 30) ^ B6, D5 = w4 ^ E6, c5 = nA(F6, s5, 25) ^ B6, B6 = ((t5 | e5) & s5 | t5 & e5) + (w4 ^ D5) | 0, I9 = ((E6 = c5 + ((p6 | l5) & F6 | p6 & l5) | 0) >>> 0 < c5 >>> 0 ? B6 + 1 | 0 : B6) + I9 | 0, I9 = (Q6 = Q6 + E6 | 0) >>> 0 < E6 >>> 0 ? I9 + 1 | 0 : I9, o4[C6 >> 2] = Q6, o4[C6 + 4 >> 2] = I9, B6 = n5 + f4 | 0, B6 = (f4 = i6) >>> 0 > (i6 = i6 + r4 | 0) >>> 0 ? B6 + 1 | 0 : B6, o4[C6 + 32 >> 2] = i6, o4[C6 + 36 >> 2] = B6, 64 != (0 | x6); )
                        n5 = ((x6 = x6 + 16 | 0) << 3) + g8 | 0, r4 = o4[H6 >> 2], f4 = o4[H6 + 4 >> 2], L6 = o4[G6 >> 2], t5 = I9 = o4[G6 + 4 >> 2], B6 = I9, Q6 = I9 = o4[S6 + 4 >> 2], I9 = nA(F6 = o4[S6 >> 2], I9, 45), i6 = w4, E6 = ((63 & Q6) << 26 | F6 >>> 6) ^ (I9 = nA(F6, Q6, 3) ^ I9), I9 = (Q6 >>> 6 ^ (e5 = w4 ^ i6)) + B6 | 0, B6 = ((i6 = E6 + L6 | 0) >>> 0 < E6 >>> 0 ? I9 + 1 | 0 : I9) + f4 | 0, B6 = (I9 = i6 + r4 | 0) >>> 0 < i6 >>> 0 ? B6 + 1 | 0 : B6, r4 = i6 = o4[P6 + 4 >> 2], i6 = nA(f4 = o4[P6 >> 2], i6, 63), e5 = w4, i6 = ((127 & r4) << 25 | f4 >>> 7) ^ nA(f4, r4, 56) ^ i6, B6 = (w4 ^ e5 ^ r4 >>> 7) + B6 | 0, i6 = B6 = i6 >>> 0 > (l5 = i6 + I9 | 0) >>> 0 ? B6 + 1 | 0 : B6, o4[n5 >> 2] = l5, o4[n5 + 4 >> 2] = B6, f4 = (S6 = o4[J6 >> 2]) + f4 | 0, I9 = (n5 = o4[J6 + 4 >> 2]) + r4 | 0, B6 = f4 >>> 0 < S6 >>> 0 ? I9 + 1 | 0 : I9, r4 = I9 = o4[y6 + 4 >> 2], I9 = nA(k6 = o4[y6 >> 2], I9, 45), e5 = w4, E6 = f4, f4 = ((63 & r4) << 26 | k6 >>> 6) ^ nA(k6, r4, 3) ^ I9, B6 = (w4 ^ e5 ^ r4 >>> 6) + B6 | 0, f4 = (E6 = E6 + f4 | 0) >>> 0 < f4 >>> 0 ? B6 + 1 | 0 : B6, B6 = nA(e5 = o4[K6 >> 2], I9 = o4[K6 + 4 >> 2], 63), D5 = w4, y6 = E6, E6 = ((127 & I9) << 25 | e5 >>> 7) ^ nA(e5, I9, 56) ^ B6, B6 = (w4 ^ D5 ^ I9 >>> 7) + f4 | 0, f4 = B6 = E6 >>> 0 > (p6 = y6 + E6 | 0) >>> 0 ? B6 + 1 | 0 : B6, o4[H6 + 136 >> 2] = p6, o4[H6 + 140 >> 2] = B6, B6 = (M6 = o4[U6 >> 2]) + e5 | 0, I9 = (e5 = o4[U6 + 4 >> 2]) + I9 | 0, E6 = nA(l5, i6, 45), D5 = w4, E6 = (c5 = ((63 & i6) << 26 | l5 >>> 6) ^ nA(l5, i6, 3) ^ E6) + B6 | 0, B6 = (w4 ^ D5 ^ i6 >>> 6) + (B6 >>> 0 < M6 >>> 0 ? I9 + 1 | 0 : I9) | 0, B6 = E6 >>> 0 < c5 >>> 0 ? B6 + 1 | 0 : B6, D5 = I9 = o4[N6 + 4 >> 2], I9 = nA(c5 = o4[N6 >> 2], I9, 63), s5 = w4, y6 = E6, E6 = ((127 & D5) << 25 | c5 >>> 7) ^ nA(c5, D5, 56) ^ I9, B6 = (w4 ^ s5 ^ D5 >>> 7) + B6 | 0, E6 = B6 = E6 >>> 0 > (P6 = y6 + E6 | 0) >>> 0 ? B6 + 1 | 0 : B6, o4[H6 + 144 >> 2] = P6, o4[H6 + 148 >> 2] = B6, c5 = (K6 = o4[d4 >> 2]) + c5 | 0, I9 = (I9 = D5) + (D5 = o4[d4 + 4 >> 2]) | 0, B6 = c5 >>> 0 < K6 >>> 0 ? I9 + 1 | 0 : I9, I9 = nA(p6, f4, 45), s5 = w4, u6 = ((63 & f4) << 26 | p6 >>> 6) ^ nA(p6, f4, 3) ^ I9, B6 = (w4 ^ s5 ^ f4 >>> 6) + B6 | 0, B6 = (c5 = u6 + c5 | 0) >>> 0 < u6 >>> 0 ? B6 + 1 | 0 : B6, s5 = I9 = o4[v6 + 4 >> 2], I9 = nA(u6 = o4[v6 >> 2], I9, 63), h5 = w4, y6 = c5, c5 = ((127 & s5) << 25 | u6 >>> 7) ^ nA(u6, s5, 56) ^ I9, B6 = (w4 ^ h5 ^ s5 >>> 7) + B6 | 0, c5 = B6 = c5 >>> 0 > (N6 = y6 + c5 | 0) >>> 0 ? B6 + 1 | 0 : B6, o4[H6 + 152 >> 2] = N6, o4[H6 + 156 >> 2] = B6, I9 = (v6 = o4[R6 >> 2]) + u6 | 0, B6 = (B6 = s5) + (s5 = o4[R6 + 4 >> 2]) | 0, u6 = nA(P6, E6, 45), h5 = w4, u6 = ((63 & E6) << 26 | P6 >>> 6) ^ nA(P6, E6, 3) ^ u6, B6 = (w4 ^ h5 ^ E6 >>> 6) + (I9 >>> 0 < v6 >>> 0 ? B6 + 1 | 0 : B6) | 0, u6 = (y6 = u6 + I9 | 0) >>> 0 < u6 >>> 0 ? B6 + 1 | 0 : B6, B6 = nA(h5 = o4[b6 >> 2], I9 = o4[b6 + 4 >> 2], 63), b6 = w4, U6 = y6, y6 = ((127 & I9) << 25 | h5 >>> 7) ^ (B6 = nA(h5, I9, 56) ^ B6), B6 = (I9 >>> 7 ^ (G6 = w4 ^ b6)) + u6 | 0, u6 = B6 = y6 >>> 0 > (b6 = U6 + y6 | 0) >>> 0 ? B6 + 1 | 0 : B6, o4[H6 + 160 >> 2] = b6, o4[H6 + 164 >> 2] = B6, I9 = I9 + Q6 | 0, I9 = (B6 = h5 + F6 | 0) >>> 0 < h5 >>> 0 ? I9 + 1 | 0 : I9, h5 = nA(N6, c5, 45), y6 = w4, h5 = (G6 = ((63 & c5) << 26 | N6 >>> 6) ^ nA(N6, c5, 3) ^ h5) + B6 | 0, B6 = (w4 ^ y6 ^ c5 >>> 6) + I9 | 0, B6 = h5 >>> 0 < G6 >>> 0 ? B6 + 1 | 0 : B6, G6 = I9 = o4[_6 + 4 >> 2], I9 = nA(y6 = o4[_6 >> 2], I9, 63), _6 = w4, I9 = nA(y6, G6, 56) ^ I9, U6 = h5, B6 = (G6 >>> 7 ^ (J6 = w4 ^ _6)) + B6 | 0, h5 = B6 = (h5 = ((127 & G6) << 25 | y6 >>> 7) ^ I9) >>> 0 > (_6 = U6 + h5 | 0) >>> 0 ? B6 + 1 | 0 : B6, o4[H6 + 168 >> 2] = _6, o4[H6 + 172 >> 2] = B6, I9 = r4 + G6 | 0, I9 = (B6 = y6 + k6 | 0) >>> 0 < y6 >>> 0 ? I9 + 1 | 0 : I9, U6 = y6 = o4[Y5 + 4 >> 2], y6 = nA(J6 = o4[Y5 >> 2], y6, 63), G6 = w4, y6 = (Y5 = ((127 & U6) << 25 | J6 >>> 7) ^ nA(J6, U6, 56) ^ y6) + B6 | 0, B6 = (w4 ^ G6 ^ U6 >>> 7) + I9 | 0, I9 = y6 >>> 0 < Y5 >>> 0 ? B6 + 1 | 0 : B6, B6 = nA(b6, u6, 45), G6 = w4, B6 = nA(b6, u6, 3) ^ B6, Y5 = w4 ^ G6, G6 = y6, I9 = (u6 >>> 6 ^ Y5) + I9 | 0, y6 = I9 = (y6 = ((63 & u6) << 26 | b6 >>> 6) ^ B6) >>> 0 > (G6 = G6 + y6 | 0) >>> 0 ? I9 + 1 | 0 : I9, o4[H6 + 176 >> 2] = G6, o4[H6 + 180 >> 2] = I9, d4 = o4[m5 >> 2], m5 = I9 = o4[m5 + 4 >> 2], Y5 = I9, I9 = nA(L6, t5, 63), B6 = w4, R6 = ((127 & t5) << 25 | L6 >>> 7) ^ nA(L6, t5, 56) ^ I9, I9 = (w4 ^ B6 ^ t5 >>> 7) + f4 | 0, B6 = ((p6 = R6 + p6 | 0) >>> 0 < R6 >>> 0 ? I9 + 1 | 0 : I9) + Y5 | 0, B6 = (I9 = p6 + d4 | 0) >>> 0 < p6 >>> 0 ? B6 + 1 | 0 : B6, f4 = nA(G6, y6, 45), p6 = w4, Y5 = (f4 = ((63 & y6) << 26 | G6 >>> 6) ^ nA(G6, y6, 3) ^ f4) + I9 | 0, I9 = (w4 ^ p6 ^ y6 >>> 6) + B6 | 0, f4 = I9 = f4 >>> 0 > Y5 >>> 0 ? I9 + 1 | 0 : I9, o4[H6 + 192 >> 2] = Y5, o4[H6 + 196 >> 2] = I9, B6 = i6 + U6 | 0, B6 = (I9 = l5 + J6 | 0) >>> 0 < J6 >>> 0 ? B6 + 1 | 0 : B6, p6 = nA(d4, m5, 63), J6 = w4, U6 = ((127 & m5) << 25 | d4 >>> 7) ^ nA(d4, m5, 56) ^ p6, B6 = (w4 ^ J6 ^ m5 >>> 7) + B6 | 0, I9 = (p6 = U6 + I9 | 0) >>> 0 < U6 >>> 0 ? B6 + 1 | 0 : B6, B6 = nA(_6, h5, 45), J6 = w4, B6 = nA(_6, h5, 3) ^ B6, m5 = p6, I9 = (h5 >>> 6 ^ (U6 = w4 ^ J6)) + I9 | 0, p6 = I9 = (p6 = ((63 & h5) << 26 | _6 >>> 6) ^ B6) >>> 0 > (J6 = m5 + p6 | 0) >>> 0 ? I9 + 1 | 0 : I9, o4[H6 + 184 >> 2] = J6, o4[H6 + 188 >> 2] = I9, I9 = nA(M6, e5, 63), B6 = w4, I9 = ((127 & e5) << 25 | M6 >>> 7) ^ nA(M6, e5, 56) ^ I9, B6 = (w4 ^ B6 ^ e5 >>> 7) + n5 | 0, I9 = c5 + (I9 >>> 0 > (U6 = I9 + S6 | 0) >>> 0 ? B6 + 1 | 0 : B6) | 0, I9 = (B6 = N6 + U6 | 0) >>> 0 < N6 >>> 0 ? I9 + 1 | 0 : I9, c5 = nA(Y5, f4, 45), N6 = w4, c5 = nA(Y5, f4, 3) ^ c5, U6 = w4 ^ N6, N6 = (c5 ^= (63 & f4) << 26 | Y5 >>> 6) + B6 | 0, B6 = (f4 >>> 6 ^ U6) + I9 | 0, c5 = B6 = c5 >>> 0 > N6 >>> 0 ? B6 + 1 | 0 : B6, o4[H6 + 208 >> 2] = N6, o4[H6 + 212 >> 2] = B6, I9 = nA(S6, n5, 63), B6 = w4, U6 = nA(S6, n5, 56) ^ I9, B6 = ((I9 = n5 >>> 7 | 0) ^ w4 ^ B6) + t5 | 0, I9 = E6 + ((n5 = (S6 = U6 ^ ((127 & n5) << 25 | S6 >>> 7)) + L6 | 0) >>> 0 < S6 >>> 0 ? B6 + 1 | 0 : B6) | 0, I9 = (B6 = n5 + P6 | 0) >>> 0 < P6 >>> 0 ? I9 + 1 | 0 : I9, t5 = nA(J6, p6, 45), n5 = w4, E6 = (t5 = ((63 & p6) << 26 | J6 >>> 6) ^ nA(J6, p6, 3) ^ t5) + B6 | 0, B6 = (w4 ^ n5 ^ p6 >>> 6) + I9 | 0, t5 = B6 = t5 >>> 0 > E6 >>> 0 ? B6 + 1 | 0 : B6, o4[H6 + 200 >> 2] = E6, o4[H6 + 204 >> 2] = B6, I9 = nA(v6, s5, 63), B6 = w4, S6 = ((127 & s5) << 25 | v6 >>> 7) ^ nA(v6, s5, 56) ^ I9, I9 = (w4 ^ B6 ^ s5 >>> 7) + D5 | 0, B6 = h5 + ((n5 = S6 + K6 | 0) >>> 0 < S6 >>> 0 ? I9 + 1 | 0 : I9) | 0, B6 = (I9 = n5 + _6 | 0) >>> 0 < _6 >>> 0 ? B6 + 1 | 0 : B6, n5 = nA(N6, c5, 45), h5 = w4, U6 = I9, I9 = c5 >>> 6 | 0, n5 = ((63 & c5) << 26 | N6 >>> 6) ^ nA(N6, c5, 3) ^ n5, B6 = (I9 ^ w4 ^ h5) + B6 | 0, n5 = B6 = n5 >>> 0 > (c5 = U6 + n5 | 0) >>> 0 ? B6 + 1 | 0 : B6, o4[H6 + 224 >> 2] = c5, o4[H6 + 228 >> 2] = B6, I9 = nA(K6, D5, 63), B6 = w4, I9 = nA(K6, D5, 56) ^ I9, h5 = w4 ^ B6, S6 = ((127 & D5) << 25 | K6 >>> 7) ^ I9, I9 = ((B6 = D5 >>> 7 | 0) ^ h5) + e5 | 0, B6 = u6 + ((D5 = S6 + M6 | 0) >>> 0 < S6 >>> 0 ? I9 + 1 | 0 : I9) | 0, B6 = (I9 = D5 + b6 | 0) >>> 0 < b6 >>> 0 ? B6 + 1 | 0 : B6, e5 = nA(E6, t5, 45), D5 = w4, h5 = I9, I9 = t5 >>> 6 | 0, t5 = ((63 & t5) << 26 | E6 >>> 6) ^ nA(E6, t5, 3) ^ e5, I9 = (I9 ^ w4 ^ D5) + B6 | 0, t5 = I9 = t5 >>> 0 > (e5 = h5 + t5 | 0) >>> 0 ? I9 + 1 | 0 : I9, o4[H6 + 216 >> 2] = e5, o4[H6 + 220 >> 2] = I9, I9 = nA(k6, r4, 63), B6 = w4, D5 = ((127 & r4) << 25 | k6 >>> 7) ^ nA(k6, r4, 56) ^ I9, B6 = (w4 ^ B6 ^ r4 >>> 7) + Q6 | 0, B6 = p6 + ((I9 = D5 + F6 | 0) >>> 0 < D5 >>> 0 ? B6 + 1 | 0 : B6) | 0, I9 = (E6 = I9 + J6 | 0) >>> 0 < J6 >>> 0 ? B6 + 1 | 0 : B6, B6 = nA(c5, n5, 45), D5 = w4, p6 = E6, E6 = nA(c5, n5, 3) ^ B6, B6 = n5 >>> 6 | 0, n5 = p6 + (E6 ^= (63 & n5) << 26 | c5 >>> 6) | 0, I9 = (B6 ^ w4 ^ D5) + I9 | 0, o4[H6 + 240 >> 2] = n5, o4[H6 + 244 >> 2] = n5 >>> 0 < E6 >>> 0 ? I9 + 1 | 0 : I9, I9 = nA(F6, Q6, 63), B6 = w4, I9 = nA(F6, Q6, 56) ^ I9, n5 = w4 ^ B6, B6 = ((B6 = Q6 >>> 7 | 0) ^ n5) + s5 | 0, I9 = y6 + ((I9 ^= (127 & Q6) << 25 | F6 >>> 7) >>> 0 > (Q6 = I9 + v6 | 0) >>> 0 ? B6 + 1 | 0 : B6) | 0, I9 = (B6 = Q6 + G6 | 0) >>> 0 < G6 >>> 0 ? I9 + 1 | 0 : I9, Q6 = nA(e5, t5, 45), n5 = w4, E6 = B6, B6 = t5 >>> 6 | 0, Q6 = ((63 & t5) << 26 | e5 >>> 6) ^ nA(e5, t5, 3) ^ Q6, B6 = (B6 ^ w4 ^ n5) + I9 | 0, Q6 = B6 = Q6 >>> 0 > (t5 = E6 + Q6 | 0) >>> 0 ? B6 + 1 | 0 : B6, o4[H6 + 232 >> 2] = t5, o4[H6 + 236 >> 2] = B6, I9 = nA(l5, i6, 63), B6 = w4, E6 = nA(l5, i6, 56) ^ I9, B6 = ((I9 = i6 >>> 7 | 0) ^ w4 ^ B6) + r4 | 0, I9 = f4 + ((i6 = (n5 = E6 ^ ((127 & i6) << 25 | l5 >>> 7)) + k6 | 0) >>> 0 < n5 >>> 0 ? B6 + 1 | 0 : B6) | 0, I9 = (B6 = i6 + Y5 | 0) >>> 0 < Y5 >>> 0 ? I9 + 1 | 0 : I9, i6 = nA(t5, Q6, 45), r4 = w4, f4 = B6, B6 = Q6 >>> 6 | 0, Q6 = f4 + (i6 = ((63 & Q6) << 26 | t5 >>> 6) ^ nA(t5, Q6, 3) ^ i6) | 0, B6 = (B6 ^ w4 ^ r4) + I9 | 0, o4[H6 + 248 >> 2] = Q6, o4[H6 + 252 >> 2] = Q6 >>> 0 < i6 >>> 0 ? B6 + 1 | 0 : B6;
                      I9 = I9 + o4[A10 + 4 >> 2] | 0, I9 = (g8 = Q6 + o4[A10 >> 2] | 0) >>> 0 < Q6 >>> 0 ? I9 + 1 | 0 : I9, o4[A10 >> 2] = g8, o4[A10 + 4 >> 2] = I9, B6 = o4[A10 + 12 >> 2] + o4[C6 + 12 >> 2] | 0, I9 = (g8 = o4[C6 + 8 >> 2]) + o4[A10 + 8 >> 2] | 0, o4[A10 + 8 >> 2] = I9, o4[A10 + 12 >> 2] = I9 >>> 0 < g8 >>> 0 ? B6 + 1 | 0 : B6, B6 = o4[A10 + 20 >> 2] + o4[C6 + 20 >> 2] | 0, I9 = (g8 = o4[C6 + 16 >> 2]) + o4[A10 + 16 >> 2] | 0, o4[A10 + 16 >> 2] = I9, o4[A10 + 20 >> 2] = I9 >>> 0 < g8 >>> 0 ? B6 + 1 | 0 : B6, I9 = o4[A10 + 28 >> 2] + o4[C6 + 28 >> 2] | 0, g8 = (B6 = o4[C6 + 24 >> 2]) + o4[A10 + 24 >> 2] | 0, o4[A10 + 24 >> 2] = g8, o4[A10 + 28 >> 2] = g8 >>> 0 < B6 >>> 0 ? I9 + 1 | 0 : I9, B6 = o4[A10 + 36 >> 2] + o4[C6 + 36 >> 2] | 0, I9 = (g8 = o4[C6 + 32 >> 2]) + o4[A10 + 32 >> 2] | 0, o4[A10 + 32 >> 2] = I9, o4[A10 + 36 >> 2] = I9 >>> 0 < g8 >>> 0 ? B6 + 1 | 0 : B6, I9 = o4[A10 + 44 >> 2] + o4[C6 + 44 >> 2] | 0, g8 = (B6 = o4[C6 + 40 >> 2]) + o4[A10 + 40 >> 2] | 0, o4[A10 + 40 >> 2] = g8, o4[A10 + 44 >> 2] = g8 >>> 0 < B6 >>> 0 ? I9 + 1 | 0 : I9, B6 = o4[A10 + 52 >> 2] + o4[C6 + 52 >> 2] | 0, I9 = (g8 = o4[C6 + 48 >> 2]) + o4[A10 + 48 >> 2] | 0, o4[A10 + 48 >> 2] = I9, o4[A10 + 52 >> 2] = I9 >>> 0 < g8 >>> 0 ? B6 + 1 | 0 : B6, B6 = o4[A10 + 60 >> 2] + o4[C6 + 60 >> 2] | 0, I9 = (g8 = o4[C6 + 56 >> 2]) + o4[A10 + 56 >> 2] | 0, o4[A10 + 56 >> 2] = I9, o4[A10 + 60 >> 2] = I9 >>> 0 < g8 >>> 0 ? B6 + 1 | 0 : B6;
                    }
                    function u5(A10) {
                      var I9, g8, C6, B6, Q6, i6, o5, n5, r4, f4, t5 = 0, e5 = 0, c5 = 0, y6 = 0, D5 = 0, h5 = 0, s5 = 0, p6 = 0, u6 = 0, k6 = 0, F6 = 0, l5 = 0, S6 = 0, H6 = 0, M6 = 0, G6 = 0, U6 = 0, J6 = 0, N6 = 0, Y5 = 0, b6 = 0, _6 = 0, K6 = 0, P6 = 0, v6 = 0, m5 = 0, d4 = 0, L6 = 0, R6 = 0, x6 = 0, j5 = 0, X6 = 0, q5 = 0, z6 = 0, V6 = 0, O6 = 0, T6 = 0, W6 = 0;
                      y6 = (l5 = a4[A10 + 44 | 0] | a4[A10 + 45 | 0] << 8 | a4[A10 + 46 | 0] << 16 | a4[A10 + 47 | 0] << 24) >>> 5 & 2097151, c5 = DA(_6 = (a4[A10 + 60 | 0] | a4[A10 + 61 | 0] << 8 | a4[A10 + 62 | 0] << 16 | a4[A10 + 63 | 0] << 24) >>> 3 | 0, 0, -683901, -1), e5 = (t5 = a4[A10 + 44 | 0]) << 16 & 2031616 | a4[A10 + 42 | 0] | a4[A10 + 43 | 0] << 8, t5 = w4, p6 = t5 = e5 >>> 0 > (u6 = c5 + e5 | 0) >>> 0 ? t5 + 1 | 0 : t5, G6 = t5 = t5 - ((u6 >>> 0 < 4293918720) - 1 | 0) | 0, c5 = t5 >> 21, t5 = (e5 = y6) + (y6 = (2097151 & t5) << 11 | (h5 = u6 - -1048576 | 0) >>> 21) | 0, e5 = c5, x6 = e5 = t5 >>> 0 < y6 >>> 0 ? e5 + 1 | 0 : e5, j5 = t5, N6 = DA(t5, e5, -683901, -1), k6 = w4, s5 = DA(I9 = (a4[A10 + 49 | 0] | a4[A10 + 50 | 0] << 8 | a4[A10 + 51 | 0] << 16 | a4[A10 + 52 | 0] << 24) >>> 7 & 2097151, 0, -997805, -1), c5 = (t5 = a4[A10 + 27 | 0]) >>> 24 | 0, y6 = t5 << 8 | (S6 = a4[A10 + 23 | 0] | a4[A10 + 24 | 0] << 8 | a4[A10 + 25 | 0] << 16 | a4[A10 + 26 | 0] << 24) >>> 24, e5 = (t5 = a4[A10 + 28 | 0]) >>> 16 | 0, e5 = 2097151 & ((3 & (e5 |= c5)) << 30 | (t5 = y6 | t5 << 16) >>> 2), t5 = w4, t5 = e5 >>> 0 > (c5 = e5 + s5 | 0) >>> 0 ? t5 + 1 | 0 : t5, e5 = DA(d4 = (H6 = a4[A10 + 52 | 0] | a4[A10 + 53 | 0] << 8 | a4[A10 + 54 | 0] << 16 | a4[A10 + 55 | 0] << 24) >>> 4 & 2097151, 0, 654183, 0), t5 = w4 + t5 | 0, s5 = c5 = e5 + c5 | 0, c5 = e5 >>> 0 > c5 >>> 0 ? t5 + 1 | 0 : t5, D5 = (e5 = a4[A10 + 48 | 0]) << 8 | l5 >>> 24, e5 = t5 = e5 >>> 24 | 0, t5 = DA(g8 = 2097151 & ((3 & (l5 = (t5 = (y6 = a4[A10 + 49 | 0]) >>> 16 | 0) | e5)) << 30 | (e5 = (y6 <<= 16) | D5) >>> 2), 0, 136657, 0), c5 = w4 + c5 | 0, c5 = t5 >>> 0 > (e5 = t5 + s5 | 0) >>> 0 ? c5 + 1 | 0 : c5, y6 = (t5 = DA(C6 = (a4[A10 + 57 | 0] | a4[A10 + 58 | 0] << 8 | a4[A10 + 59 | 0] << 16 | a4[A10 + 60 | 0] << 24) >>> 6 & 2097151, 0, 666643, 0)) + e5 | 0, e5 = w4 + c5 | 0, s5 = y6, c5 = t5 >>> 0 > y6 >>> 0 ? e5 + 1 | 0 : e5, e5 = (t5 = a4[A10 + 56 | 0]) >>> 24 | 0, D5 = t5 << 8 | H6 >>> 24, e5 = DA(B6 = 2097151 & ((1 & (H6 = (t5 = (y6 = a4[A10 + 57 | 0]) >>> 16 | 0) | e5)) << 31 | (e5 = (y6 <<= 16) | D5) >>> 1), 0, 470296, 0), t5 = w4 + c5 | 0, e5 = (t5 = (c5 = y6 = e5 + s5 | 0) >>> 0 < e5 >>> 0 ? t5 + 1 | 0 : t5) + k6 | 0, e5 = c5 >>> 0 > (y6 = c5 + N6 | 0) >>> 0 ? e5 + 1 | 0 : e5, U6 = c5 - -1048576 | 0, J6 = c5 = t5 - ((c5 >>> 0 < 4293918720) - 1 | 0) | 0, k6 = y6 - (t5 = -2097152 & U6) | 0, N6 = e5 - ((t5 >>> 0 > y6 >>> 0) + c5 | 0) | 0, e5 = DA(I9, 0, 654183, 0), t5 = w4, t5 = e5 >>> 0 > (c5 = e5 + (S6 >>> 5 & 2097151) | 0) >>> 0 ? t5 + 1 | 0 : t5, y6 = (e5 = c5) + (c5 = DA(d4, 0, 470296, 0)) | 0, e5 = w4 + t5 | 0, e5 = c5 >>> 0 > y6 >>> 0 ? e5 + 1 | 0 : e5, t5 = DA(g8, q5, -997805, -1), e5 = w4 + e5 | 0, e5 = t5 >>> 0 > (c5 = t5 + y6 | 0) >>> 0 ? e5 + 1 | 0 : e5, y6 = (t5 = c5) + (c5 = DA(B6, z6, 666643, 0)) | 0, t5 = w4 + e5 | 0, D5 = y6, y6 = c5 >>> 0 > y6 >>> 0 ? t5 + 1 | 0 : t5, s5 = (c5 = DA(I9, 0, 470296, 0)) + (t5 = (t5 = a4[A10 + 23 | 0]) << 16 & 2031616 | a4[A10 + 21 | 0] | a4[A10 + 22 | 0] << 8) | 0, c5 = w4, c5 = t5 >>> 0 > s5 >>> 0 ? c5 + 1 | 0 : c5, s5 = (e5 = DA(d4, 0, 666643, 0)) + s5 | 0, t5 = w4 + c5 | 0, c5 = DA(g8, q5, 654183, 0), e5 = w4 + (e5 >>> 0 > s5 >>> 0 ? t5 + 1 | 0 : t5) | 0, H6 = e5 = c5 >>> 0 > (S6 = c5 + s5 | 0) >>> 0 ? e5 + 1 | 0 : e5, m5 = e5 = e5 - ((S6 >>> 0 < 4293918720) - 1 | 0) | 0, t5 = (t5 = e5 >>> 21 | 0) + y6 | 0, c5 = t5 = (e5 = (2097151 & e5) << 11 | (s5 = S6 - -1048576 | 0) >>> 21) >>> 0 > (D5 = e5 + D5 | 0) >>> 0 ? t5 + 1 | 0 : t5, F6 = e5 = t5 - ((D5 >>> 0 < 4293918720) - 1 | 0) | 0, t5 = k6, k6 = (2097151 & e5) << 11 | (y6 = D5 - -1048576 | 0) >>> 21, e5 = (e5 >> 21) + N6 | 0, l5 = k6 = (e5 = k6 >>> 0 > (M6 = t5 + k6 | 0) >>> 0 ? e5 + 1 | 0 : e5) - ((M6 >>> 0 < 4293918720) - 1 | 0) | 0, L6 = M6 - (t5 = -2097152 & (N6 = M6 - -1048576 | 0)) | 0, V6 = e5 - ((t5 >>> 0 > M6 >>> 0) + k6 | 0) | 0, t5 = DA(j5, x6, 136657, 0), c5 = w4 + c5 | 0, c5 = t5 >>> 0 > (e5 = t5 + D5 | 0) >>> 0 ? c5 + 1 | 0 : c5, b6 = e5 - (t5 = -2097152 & y6) | 0, R6 = c5 - ((t5 >>> 0 > e5 >>> 0) + F6 | 0) | 0, M6 = u6 - (t5 = -2097152 & h5) | 0, G6 = p6 - ((t5 >>> 0 > u6 >>> 0) + G6 | 0) | 0, p6 = DA(_6, 0, 136657, 0), e5 = (t5 = a4[A10 + 40 | 0]) >>> 24 | 0, y6 = t5 << 8 | (h5 = a4[A10 + 36 | 0] | a4[A10 + 37 | 0] << 8 | a4[A10 + 38 | 0] << 16 | a4[A10 + 39 | 0] << 24) >>> 24, c5 = (t5 = a4[A10 + 41 | 0]) >>> 16 | 0, e5 = (c5 |= e5) >>> 3 | 0, c5 = (7 & c5) << 29 | (t5 = y6 | t5 << 16) >>> 3, t5 = e5 + w4 | 0, t5 = c5 >>> 0 > (y6 = c5 + p6 | 0) >>> 0 ? t5 + 1 | 0 : t5, e5 = DA(C6, 0, -683901, -1), t5 = w4 + t5 | 0, t5 = e5 >>> 0 > (c5 = e5 + y6 | 0) >>> 0 ? t5 + 1 | 0 : t5, D5 = c5, e5 = DA(_6, 0, -997805, -1), c5 = w4, c5 = e5 >>> 0 > (y6 = e5 + (h5 >>> 6 & 2097151) | 0) >>> 0 ? c5 + 1 | 0 : c5, h5 = (e5 = y6) + (y6 = DA(C6, 0, 136657, 0)) | 0, e5 = w4 + c5 | 0, c5 = DA(B6, z6, -683901, -1), e5 = w4 + (y6 >>> 0 > h5 >>> 0 ? e5 + 1 | 0 : e5) | 0, k6 = e5 = c5 >>> 0 > (K6 = c5 + h5 | 0) >>> 0 ? e5 + 1 | 0 : e5, O6 = c5 = e5 - ((K6 >>> 0 < 4293918720) - 1 | 0) | 0, t5 = t5 + (e5 = c5 >> 21) | 0, h5 = t5 = (c5 = (2097151 & c5) << 11 | (u6 = K6 - -1048576 | 0) >>> 21) >>> 0 > (F6 = c5 + D5 | 0) >>> 0 ? t5 + 1 | 0 : t5, P6 = t5 = t5 - ((F6 >>> 0 < 4293918720) - 1 | 0) | 0, e5 = (e5 = t5 >> 21) + G6 | 0, X6 = e5 = (t5 = (c5 = (2097151 & t5) << 11 | (D5 = F6 - -1048576 | 0) >>> 21) + M6 | 0) >>> 0 < c5 >>> 0 ? e5 + 1 | 0 : e5, v6 = t5, e5 = DA(t5, e5, -683901, -1), t5 = w4 + R6 | 0, Y5 = c5 = e5 + b6 | 0, y6 = e5 >>> 0 > c5 >>> 0 ? t5 + 1 | 0 : t5, R6 = S6 - (t5 = -2097152 & s5) | 0, G6 = H6 - ((4095 & m5) + (t5 >>> 0 > S6 >>> 0) | 0) | 0, S6 = DA(I9, 0, 666643, 0), t5 = (e5 = a4[A10 + 19 | 0]) >>> 24 | 0, s5 = e5 << 8 | (H6 = a4[A10 + 15 | 0] | a4[A10 + 16 | 0] << 8 | a4[A10 + 17 | 0] << 16 | a4[A10 + 18 | 0] << 24) >>> 24, c5 = t5, e5 = (7 & (c5 |= e5 = (t5 = a4[A10 + 20 | 0]) >>> 16 | 0)) << 29 | (e5 = (t5 <<= 16) | s5) >>> 3, c5 = w4 + (c5 >>> 3 | 0) | 0, c5 = e5 >>> 0 > (s5 = e5 + S6 | 0) >>> 0 ? c5 + 1 | 0 : c5, t5 = DA(g8, q5, 470296, 0), e5 = w4 + c5 | 0, t5 = t5 >>> 0 > (s5 = t5 + s5 | 0) >>> 0 ? e5 + 1 | 0 : e5, c5 = DA(g8, q5, 666643, 0), e5 = w4, S6 = e5 = c5 >>> 0 > (b6 = c5 + (H6 >>> 6 & 2097151) | 0) >>> 0 ? e5 + 1 | 0 : e5, T6 = c5 = e5 - ((b6 >>> 0 < 4293918720) - 1 | 0) | 0, t5 = t5 + (e5 = c5 >>> 21 | 0) | 0, H6 = t5 = (c5 = (2097151 & c5) << 11 | (p6 = b6 - -1048576 | 0) >>> 21) >>> 0 > (M6 = c5 + s5 | 0) >>> 0 ? t5 + 1 | 0 : t5, W6 = t5 = t5 - ((M6 >>> 0 < 4293918720) - 1 | 0) | 0, e5 = (e5 = t5 >>> 21 | 0) + G6 | 0, e5 = (t5 = (2097151 & t5) << 11 | (s5 = M6 - -1048576 | 0) >>> 21) >>> 0 > (c5 = t5 + R6 | 0) >>> 0 ? e5 + 1 | 0 : e5, G6 = (t5 = c5) + (c5 = DA(j5, x6, -997805, -1)) | 0, t5 = w4 + e5 | 0, t5 = c5 >>> 0 > G6 >>> 0 ? t5 + 1 | 0 : t5, m5 = e5 = F6 - (c5 = -2097152 & D5) | 0, Q6 = D5 = h5 - ((c5 >>> 0 > F6 >>> 0) + P6 | 0) | 0, c5 = DA(v6, X6, 136657, 0), t5 = w4 + t5 | 0, t5 = c5 >>> 0 > (h5 = c5 + G6 | 0) >>> 0 ? t5 + 1 | 0 : t5, c5 = DA(e5, D5, -683901, -1), e5 = w4 + t5 | 0, h5 = e5 = c5 >>> 0 > (G6 = c5 + h5 | 0) >>> 0 ? e5 + 1 | 0 : e5, P6 = t5 = e5 - ((G6 >>> 0 < 4293918720) - 1 | 0) | 0, e5 = (2097151 & t5) << 11 | (D5 = G6 - -1048576 | 0) >>> 21, t5 = (t5 >> 21) + y6 | 0, Y5 = e5 = (t5 = e5 >>> 0 > (F6 = e5 + Y5 | 0) >>> 0 ? t5 + 1 | 0 : t5) - ((F6 >>> 0 < 4293918720) - 1 | 0) | 0, R6 = (2097151 & e5) << 11 | (y6 = F6 - -1048576 | 0) >>> 21, e5 = (e5 >> 21) + V6 | 0, o5 = L6 = R6 + L6 | 0, R6 = L6 >>> 0 < R6 >>> 0 ? e5 + 1 | 0 : e5, n5 = F6 - (e5 = -2097152 & y6) | 0, r4 = t5 - ((e5 >>> 0 > F6 >>> 0) + Y5 | 0) | 0, L6 = G6 - (t5 = -2097152 & D5) | 0, V6 = h5 - ((t5 >>> 0 > G6 >>> 0) + P6 | 0) | 0, c5 = (t5 = DA(j5, x6, 654183, 0)) + (M6 - (e5 = -2097152 & s5) | 0) | 0, e5 = w4 + (H6 - ((e5 >>> 0 > M6 >>> 0) + W6 | 0) | 0) | 0, e5 = t5 >>> 0 > c5 >>> 0 ? e5 + 1 | 0 : e5, t5 = DA(v6, X6, -997805, -1), e5 = w4 + e5 | 0, e5 = t5 >>> 0 > (c5 = t5 + c5 | 0) >>> 0 ? e5 + 1 | 0 : e5, y6 = (t5 = c5) + (c5 = DA(m5, Q6, 136657, 0)) | 0, t5 = w4 + e5 | 0, Y5 = y6, h5 = c5 >>> 0 > y6 >>> 0 ? t5 + 1 | 0 : t5, M6 = K6 - (t5 = -2097152 & u6) | 0, F6 = k6 - ((t5 >>> 0 > K6 >>> 0) + O6 | 0) | 0, H6 = DA(d4, 0, -683901, -1), t5 = (e5 = a4[A10 + 35 | 0]) >>> 24 | 0, y6 = e5 << 8 | (s5 = a4[A10 + 31 | 0] | a4[A10 + 32 | 0] << 8 | a4[A10 + 33 | 0] << 16 | a4[A10 + 34 | 0] << 24) >>> 24, c5 = t5, e5 = (t5 = a4[A10 + 36 | 0]) >>> 16 | 0, e5 |= c5, c5 = w4, c5 = (t5 = 2097151 & ((1 & e5) << 31 | (t5 = t5 << 16 | y6) >>> 1)) >>> 0 > (e5 = t5 + H6 | 0) >>> 0 ? c5 + 1 | 0 : c5, y6 = (t5 = DA(_6, 0, 654183, 0)) + e5 | 0, e5 = w4 + c5 | 0, e5 = t5 >>> 0 > y6 >>> 0 ? e5 + 1 | 0 : e5, c5 = DA(C6, 0, -997805, -1), t5 = w4 + e5 | 0, t5 = c5 >>> 0 > (y6 = c5 + y6 | 0) >>> 0 ? t5 + 1 | 0 : t5, e5 = DA(B6, z6, 136657, 0), t5 = w4 + t5 | 0, D5 = c5 = e5 + y6 | 0, y6 = e5 >>> 0 > c5 >>> 0 ? t5 + 1 | 0 : t5, t5 = DA(I9, 0, -683901, -1), e5 = w4, e5 = t5 >>> 0 > (c5 = t5 + (s5 >>> 4 & 2097151) | 0) >>> 0 ? e5 + 1 | 0 : e5, s5 = (t5 = DA(d4, 0, 136657, 0)) + c5 | 0, c5 = w4 + e5 | 0, c5 = t5 >>> 0 > s5 >>> 0 ? c5 + 1 | 0 : c5, t5 = DA(_6, 0, 470296, 0), e5 = w4 + c5 | 0, e5 = t5 >>> 0 > (s5 = t5 + s5 | 0) >>> 0 ? e5 + 1 | 0 : e5, s5 = (c5 = DA(C6, 0, 654183, 0)) + s5 | 0, t5 = w4 + e5 | 0, e5 = DA(B6, z6, -997805, -1), t5 = w4 + (c5 >>> 0 > s5 >>> 0 ? t5 + 1 | 0 : t5) | 0, H6 = t5 = e5 >>> 0 > (k6 = e5 + s5 | 0) >>> 0 ? t5 + 1 | 0 : t5, f4 = e5 = t5 - ((k6 >>> 0 < 4293918720) - 1 | 0) | 0, c5 = (t5 = e5 >> 21) + y6 | 0, G6 = e5 = (c5 = (e5 = (2097151 & e5) << 11 | (s5 = k6 - -1048576 | 0) >>> 21) >>> 0 > (u6 = e5 + D5 | 0) >>> 0 ? c5 + 1 | 0 : c5) - ((u6 >>> 0 < 4293918720) - 1 | 0) | 0, t5 = (t5 = e5 >> 21) + F6 | 0, P6 = t5 = (e5 = (y6 = (2097151 & e5) << 11 | (D5 = u6 - -1048576 | 0) >>> 21) + M6 | 0) >>> 0 < y6 >>> 0 ? t5 + 1 | 0 : t5, y6 = Y5, Y5 = e5, t5 = DA(e5, t5, -683901, -1), e5 = w4 + h5 | 0, F6 = y6 = y6 + t5 | 0, y6 = t5 >>> 0 > y6 >>> 0 ? e5 + 1 | 0 : e5, h5 = (t5 = DA(j5, x6, 470296, 0)) + (b6 - (e5 = -2097152 & p6) | 0) | 0, e5 = w4 + (S6 - ((2047 & T6) + (e5 >>> 0 > b6 >>> 0) | 0) | 0) | 0, e5 = t5 >>> 0 > h5 >>> 0 ? e5 + 1 | 0 : e5, p6 = (t5 = h5) + (h5 = DA(v6, X6, 654183, 0)) | 0, t5 = w4 + e5 | 0, t5 = h5 >>> 0 > p6 >>> 0 ? t5 + 1 | 0 : t5, h5 = DA(m5, Q6, -997805, -1), e5 = w4 + t5 | 0, e5 = h5 >>> 0 > (p6 = h5 + p6 | 0) >>> 0 ? e5 + 1 | 0 : e5, K6 = D5 = u6 - (t5 = -2097152 & D5) | 0, i6 = h5 = c5 - ((t5 >>> 0 > u6 >>> 0) + G6 | 0) | 0, c5 = DA(Y5, P6, 136657, 0), t5 = w4 + e5 | 0, t5 = c5 >>> 0 > (p6 = c5 + p6 | 0) >>> 0 ? t5 + 1 | 0 : t5, c5 = DA(D5, h5, -683901, -1), e5 = w4 + t5 | 0, h5 = e5 = c5 >>> 0 > (S6 = c5 + p6 | 0) >>> 0 ? e5 + 1 | 0 : e5, G6 = t5 = e5 - ((S6 >>> 0 < 4293918720) - 1 | 0) | 0, e5 = (2097151 & t5) << 11 | (D5 = S6 - -1048576 | 0) >>> 21, t5 = (t5 >> 21) + y6 | 0, F6 = e5 = (t5 = e5 >>> 0 > (p6 = e5 + F6 | 0) >>> 0 ? t5 + 1 | 0 : t5) - ((p6 >>> 0 < 4293918720) - 1 | 0) | 0, u6 = (2097151 & e5) << 11 | (y6 = p6 - -1048576 | 0) >>> 21, e5 = (e5 >> 21) + V6 | 0, O6 = M6 = u6 + L6 | 0, M6 = u6 >>> 0 > M6 >>> 0 ? e5 + 1 | 0 : e5, T6 = p6 - (e5 = -2097152 & y6) | 0, W6 = t5 - ((e5 >>> 0 > p6 >>> 0) + F6 | 0) | 0, L6 = S6 - (t5 = -2097152 & D5) | 0, V6 = h5 - ((t5 >>> 0 > S6 >>> 0) + G6 | 0) | 0, h5 = DA(j5, x6, 666643, 0), t5 = (e5 = a4[A10 + 14 | 0]) >>> 24 | 0, y6 = e5 << 8 | (G6 = a4[A10 + 10 | 0] | a4[A10 + 11 | 0] << 8 | a4[A10 + 12 | 0] << 16 | a4[A10 + 13 | 0] << 24) >>> 24, c5 = t5, e5 = (t5 = a4[A10 + 15 | 0]) >>> 16 | 0, e5 |= c5, c5 = w4, c5 = (t5 = 2097151 & ((1 & e5) << 31 | (t5 = t5 << 16 | y6) >>> 1)) >>> 0 > (e5 = t5 + h5 | 0) >>> 0 ? c5 + 1 | 0 : c5, y6 = (t5 = e5) + (e5 = DA(v6, X6, 470296, 0)) | 0, t5 = w4 + c5 | 0, t5 = e5 >>> 0 > y6 >>> 0 ? t5 + 1 | 0 : t5, e5 = DA(m5, Q6, 654183, 0), t5 = w4 + t5 | 0, t5 = e5 >>> 0 > (c5 = e5 + y6 | 0) >>> 0 ? t5 + 1 | 0 : t5, y6 = (e5 = c5) + (c5 = DA(Y5, P6, -997805, -1)) | 0, e5 = w4 + t5 | 0, e5 = c5 >>> 0 > y6 >>> 0 ? e5 + 1 | 0 : e5, t5 = DA(K6, i6, 136657, 0), e5 = w4 + e5 | 0, S6 = c5 = t5 + y6 | 0, y6 = t5 >>> 0 > c5 >>> 0 ? e5 + 1 | 0 : e5, s5 = k6 - (t5 = -2097152 & s5) | 0, h5 = H6 - ((t5 >>> 0 > k6 >>> 0) + f4 | 0) | 0, c5 = DA(I9, 0, 136657, 0), t5 = w4, t5 = (e5 = (a4[A10 + 28 | 0] | a4[A10 + 29 | 0] << 8 | a4[A10 + 30 | 0] << 16 | a4[A10 + 31 | 0] << 24) >>> 7 & 2097151) >>> 0 > (c5 = e5 + c5 | 0) >>> 0 ? t5 + 1 | 0 : t5, D5 = (e5 = c5) + (c5 = DA(d4, 0, -997805, -1)) | 0, e5 = w4 + t5 | 0, e5 = c5 >>> 0 > D5 >>> 0 ? e5 + 1 | 0 : e5, t5 = DA(g8, q5, -683901, -1), e5 = w4 + e5 | 0, e5 = t5 >>> 0 > (c5 = t5 + D5 | 0) >>> 0 ? e5 + 1 | 0 : e5, D5 = (t5 = DA(_6, 0, 666643, 0)) + c5 | 0, c5 = w4 + e5 | 0, c5 = t5 >>> 0 > D5 >>> 0 ? c5 + 1 | 0 : c5, e5 = DA(C6, 0, 470296, 0), t5 = w4 + c5 | 0, t5 = e5 >>> 0 > (D5 = e5 + D5 | 0) >>> 0 ? t5 + 1 | 0 : t5, e5 = DA(B6, z6, 654183, 0), t5 = w4 + t5 | 0, e5 = (J6 >> 21) + (e5 >>> 0 > (c5 = e5 + D5 | 0) >>> 0 ? t5 + 1 | 0 : t5) | 0, u6 = e5 = (D5 = (2097151 & J6) << 11 | U6 >>> 21) >>> 0 > (U6 = D5 + c5 | 0) >>> 0 ? e5 + 1 | 0 : e5, F6 = t5 = e5 - ((U6 >>> 0 < 4293918720) - 1 | 0) | 0, D5 = (2097151 & t5) << 11 | (p6 = U6 - -1048576 | 0) >>> 21, t5 = (t5 >> 21) + h5 | 0, b6 = t5 = (e5 = D5 + s5 | 0) >>> 0 < D5 >>> 0 ? t5 + 1 | 0 : t5, J6 = e5, e5 = DA(e5, t5, -683901, -1), t5 = w4 + y6 | 0, D5 = c5 = e5 + S6 | 0, y6 = e5 >>> 0 > c5 >>> 0 ? t5 + 1 | 0 : t5, t5 = DA(v6, X6, 666643, 0), e5 = w4, e5 = t5 >>> 0 > (c5 = t5 + (G6 >>> 4 & 2097151) | 0) >>> 0 ? e5 + 1 | 0 : e5, t5 = DA(m5, Q6, 470296, 0), e5 = w4 + e5 | 0, e5 = t5 >>> 0 > (c5 = t5 + c5 | 0) >>> 0 ? e5 + 1 | 0 : e5, h5 = (t5 = DA(Y5, P6, 654183, 0)) + c5 | 0, c5 = w4 + e5 | 0, c5 = t5 >>> 0 > h5 >>> 0 ? c5 + 1 | 0 : c5, e5 = DA(K6, i6, -997805, -1), t5 = w4 + c5 | 0, t5 = e5 >>> 0 > (h5 = e5 + h5 | 0) >>> 0 ? t5 + 1 | 0 : t5, e5 = DA(J6, b6, 136657, 0), t5 = w4 + t5 | 0, H6 = t5 = e5 >>> 0 > (k6 = e5 + h5 | 0) >>> 0 ? t5 + 1 | 0 : t5, x6 = e5 = t5 - ((k6 >>> 0 < 4293918720) - 1 | 0) | 0, t5 = D5, D5 = (2097151 & e5) << 11 | (s5 = k6 - -1048576 | 0) >>> 21, e5 = (e5 >> 21) + y6 | 0, v6 = y6 = (e5 = (c5 = t5 + D5 | 0) >>> 0 < D5 >>> 0 ? e5 + 1 | 0 : e5) - ((c5 >>> 0 < 4293918720) - 1 | 0) | 0, t5 = (t5 = y6 >> 21) + V6 | 0, j5 = D5 = (y6 = (2097151 & y6) << 11 | (h5 = c5 - -1048576 | 0) >>> 21) + L6 | 0, S6 = y6 >>> 0 > D5 >>> 0 ? t5 + 1 | 0 : t5, D5 = c5, c5 = e5, y6 = (U6 - (e5 = -2097152 & p6) | 0) + (p6 = (2097151 & l5) << 11 | N6 >>> 21) | 0, e5 = (u6 - ((e5 >>> 0 > U6 >>> 0) + F6 | 0) | 0) + (l5 >> 21) | 0, G6 = e5 = y6 >>> 0 < p6 >>> 0 ? e5 + 1 | 0 : e5, d4 = e5 = e5 - ((y6 >>> 0 < 4293918720) - 1 | 0) | 0, N6 = t5 = e5 >> 21, t5 = DA(_6 = (2097151 & e5) << 11 | (F6 = y6 - -1048576 | 0) >>> 21, t5, -683901, -1), c5 = w4 + c5 | 0, c5 = t5 >>> 0 > (e5 = t5 + D5 | 0) >>> 0 ? c5 + 1 | 0 : c5, q5 = e5 - (t5 = -2097152 & h5) | 0, z6 = c5 - ((t5 >>> 0 > e5 >>> 0) + v6 | 0) | 0, t5 = DA(_6, N6, 136657, 0), e5 = H6 + w4 | 0, X6 = (c5 = t5 + k6 | 0) - (t5 = -2097152 & s5) | 0, v6 = (e5 = c5 >>> 0 < k6 >>> 0 ? e5 + 1 | 0 : e5) - ((t5 >>> 0 > c5 >>> 0) + x6 | 0) | 0, e5 = DA(m5, Q6, 666643, 0), c5 = w4, c5 = (t5 = (a4[A10 + 7 | 0] | a4[A10 + 8 | 0] << 8 | a4[A10 + 9 | 0] << 16 | a4[A10 + 10 | 0] << 24) >>> 7 & 2097151) >>> 0 > (e5 = t5 + e5 | 0) >>> 0 ? c5 + 1 | 0 : c5, D5 = (t5 = DA(Y5, P6, 470296, 0)) + e5 | 0, e5 = w4 + c5 | 0, e5 = t5 >>> 0 > D5 >>> 0 ? e5 + 1 | 0 : e5, t5 = DA(K6, i6, 654183, 0), e5 = w4 + e5 | 0, e5 = t5 >>> 0 > (c5 = t5 + D5 | 0) >>> 0 ? e5 + 1 | 0 : e5, D5 = (t5 = c5) + (c5 = DA(J6, b6, -997805, -1)) | 0, t5 = w4 + e5 | 0, p6 = D5, D5 = c5 >>> 0 > D5 >>> 0 ? t5 + 1 | 0 : t5, H6 = DA(Y5, P6, 666643, 0), t5 = (e5 = a4[A10 + 6 | 0]) >>> 24 | 0, h5 = e5 << 8 | (U6 = a4[A10 + 2 | 0] | a4[A10 + 3 | 0] << 8 | a4[A10 + 4 | 0] << 16 | a4[A10 + 5 | 0] << 24) >>> 24, c5 = t5, e5 = (t5 = a4[A10 + 7 | 0]) >>> 16 | 0, e5 = 2097151 & ((3 & (e5 |= c5)) << 30 | (t5 = t5 << 16 | h5) >>> 2), t5 = w4, t5 = e5 >>> 0 > (c5 = e5 + H6 | 0) >>> 0 ? t5 + 1 | 0 : t5, h5 = (e5 = DA(K6, i6, 470296, 0)) + c5 | 0, c5 = w4 + t5 | 0, c5 = e5 >>> 0 > h5 >>> 0 ? c5 + 1 | 0 : c5, e5 = DA(J6, b6, 654183, 0), t5 = w4 + c5 | 0, H6 = t5 = e5 >>> 0 > (u6 = e5 + h5 | 0) >>> 0 ? t5 + 1 | 0 : t5, l5 = t5 = t5 - ((u6 >>> 0 < 4293918720) - 1 | 0) | 0, e5 = (c5 = t5 >> 21) + D5 | 0, k6 = t5 = (e5 = (t5 = (2097151 & t5) << 11 | (s5 = u6 - -1048576 | 0) >>> 21) >>> 0 > (h5 = t5 + p6 | 0) >>> 0 ? e5 + 1 | 0 : e5) - ((h5 >>> 0 < 4293918720) - 1 | 0) | 0, p6 = (2097151 & t5) << 11 | (D5 = h5 - -1048576 | 0) >>> 21, t5 = (t5 >> 21) + v6 | 0, v6 = Y5 = p6 + X6 | 0, p6 = p6 >>> 0 > Y5 >>> 0 ? t5 + 1 | 0 : t5, t5 = DA(_6, N6, -997805, -1), e5 = w4 + e5 | 0, e5 = t5 >>> 0 > (c5 = t5 + h5 | 0) >>> 0 ? e5 + 1 | 0 : e5, m5 = c5 - (t5 = -2097152 & D5) | 0, P6 = e5 - ((t5 >>> 0 > c5 >>> 0) + k6 | 0) | 0, e5 = DA(_6, N6, 654183, 0), t5 = H6 + w4 | 0, Y5 = (c5 = e5 + u6 | 0) - (e5 = -2097152 & s5) | 0, l5 = (t5 = c5 >>> 0 < u6 >>> 0 ? t5 + 1 | 0 : t5) - ((e5 >>> 0 > c5 >>> 0) + l5 | 0) | 0, t5 = DA(K6, i6, 666643, 0), e5 = w4, e5 = t5 >>> 0 > (c5 = t5 + (U6 >>> 5 & 2097151) | 0) >>> 0 ? e5 + 1 | 0 : e5, t5 = DA(J6, b6, 470296, 0), e5 = w4 + e5 | 0, h5 = c5 = t5 + c5 | 0, c5 = t5 >>> 0 > c5 >>> 0 ? e5 + 1 | 0 : e5, D5 = DA(J6, b6, 666643, 0), e5 = (t5 = a4[A10 + 2 | 0]) << 16 & 2031616 | a4[0 | A10] | a4[A10 + 1 | 0] << 8, t5 = w4, H6 = t5 = e5 >>> 0 > (k6 = D5 + e5 | 0) >>> 0 ? t5 + 1 | 0 : t5, b6 = t5 = t5 - ((k6 >>> 0 < 4293918720) - 1 | 0) | 0, D5 = (2097151 & t5) << 11 | (s5 = k6 - -1048576 | 0) >>> 21, t5 = (t5 >> 21) + c5 | 0, c5 = t5 = D5 >>> 0 > (u6 = D5 + h5 | 0) >>> 0 ? t5 + 1 | 0 : t5, U6 = t5 = t5 - ((u6 >>> 0 < 4293918720) - 1 | 0) | 0, D5 = (2097151 & t5) << 11 | (h5 = u6 - -1048576 | 0) >>> 21, t5 = (t5 >> 21) + l5 | 0, D5 = D5 >>> 0 > (l5 = J6 = D5 + Y5 | 0) >>> 0 ? t5 + 1 | 0 : t5, t5 = DA(_6, N6, 470296, 0), c5 = c5 + w4 | 0, c5 = (e5 = t5 + u6 | 0) >>> 0 < u6 >>> 0 ? c5 + 1 | 0 : c5, u6 = e5 - (t5 = -2097152 & h5) | 0, h5 = c5 - ((t5 >>> 0 > e5 >>> 0) + U6 | 0) | 0, e5 = DA(_6, N6, 666643, 0), t5 = w4 + (H6 - (((c5 = -2097152 & s5) >>> 0 > k6 >>> 0) + b6 | 0) | 0) | 0, e5 = (c5 = (t5 = e5 >>> 0 > (J6 = e5 + (k6 - c5 | 0) | 0) >>> 0 ? t5 + 1 | 0 : t5) >> 21) + h5 | 0, t5 = (t5 = (e5 = (t5 = (2097151 & t5) << 11 | J6 >>> 21) >>> 0 > (U6 = t5 + u6 | 0) >>> 0 ? e5 + 1 | 0 : e5) >> 21) + D5 | 0, e5 = (e5 = (t5 = (e5 = (2097151 & e5) << 11 | U6 >>> 21) >>> 0 > (l5 = e5 + l5 | 0) >>> 0 ? t5 + 1 | 0 : t5) >> 21) + P6 | 0, c5 = (t5 = (e5 = (t5 = (2097151 & t5) << 11 | l5 >>> 21) >>> 0 > (D5 = t5 + m5 | 0) >>> 0 ? e5 + 1 | 0 : e5) >> 21) + p6 | 0, t5 = (e5 = (c5 = (e5 = (2097151 & e5) << 11 | D5 >>> 21) >>> 0 > (N6 = e5 + v6 | 0) >>> 0 ? c5 + 1 | 0 : c5) >> 21) + z6 | 0, e5 = (c5 = (t5 = (c5 = (2097151 & c5) << 11 | N6 >>> 21) >>> 0 > (k6 = c5 + q5 | 0) >>> 0 ? t5 + 1 | 0 : t5) >> 21) + S6 | 0, t5 = (t5 = (e5 = (t5 = (2097151 & t5) << 11 | k6 >>> 21) >>> 0 > (u6 = t5 + j5 | 0) >>> 0 ? e5 + 1 | 0 : e5) >> 21) + W6 | 0, e5 = (e5 = (t5 = (e5 = (2097151 & e5) << 11 | u6 >>> 21) >>> 0 > (S6 = e5 + T6 | 0) >>> 0 ? t5 + 1 | 0 : t5) >> 21) + M6 | 0, c5 = (t5 = (e5 = (t5 = (2097151 & t5) << 11 | S6 >>> 21) >>> 0 > (p6 = t5 + O6 | 0) >>> 0 ? e5 + 1 | 0 : e5) >> 21) + r4 | 0, t5 = (e5 = (c5 = (e5 = (2097151 & e5) << 11 | p6 >>> 21) >>> 0 > (H6 = e5 + n5 | 0) >>> 0 ? c5 + 1 | 0 : c5) >> 21) + R6 | 0, h5 = (F6 = y6 - (e5 = -2097152 & F6) | 0) + ((2097151 & (t5 = (c5 = (2097151 & c5) << 11 | H6 >>> 21) >>> 0 > (s5 = c5 + o5 | 0) >>> 0 ? t5 + 1 | 0 : t5)) << 11 | s5 >>> 21) | 0, t5 = (G6 - ((e5 >>> 0 > y6 >>> 0) + d4 | 0) | 0) + (t5 >> 21) | 0, F6 = e5 = (t5 = h5 >>> 0 < F6 >>> 0 ? t5 + 1 | 0 : t5) >> 21, J6 = (t5 = DA(M6 = (2097151 & t5) << 11 | h5 >>> 21, e5, 666643, 0)) + (e5 = 2097151 & J6) | 0, t5 = w4, y6 = t5 = e5 >>> 0 > J6 >>> 0 ? t5 + 1 | 0 : t5, E5[0 | A10] = J6, E5[A10 + 1 | 0] = (255 & t5) << 24 | J6 >>> 8, t5 = 2097151 & U6, e5 = DA(M6, F6, 470296, 0) + t5 | 0, c5 = w4, t5 = (y6 >> 21) + (t5 >>> 0 > e5 >>> 0 ? c5 + 1 | 0 : c5) | 0, t5 = (G6 = (2097151 & y6) << 11 | J6 >>> 21) >>> 0 > (U6 = G6 + e5 | 0) >>> 0 ? t5 + 1 | 0 : t5, E5[A10 + 4 | 0] = (2047 & t5) << 21 | U6 >>> 11, e5 = t5, c5 = U6, E5[A10 + 3 | 0] = (7 & t5) << 29 | c5 >>> 3, E5[A10 + 2 | 0] = 31 & ((65535 & y6) << 16 | J6 >>> 16) | c5 << 5, y6 = 2097151 & l5, l5 = DA(M6, F6, 654183, 0) + y6 | 0, t5 = w4, U6 = (2097151 & e5) << 11 | c5 >>> 21, e5 = (e5 >> 21) + (y6 = y6 >>> 0 > l5 >>> 0 ? t5 + 1 | 0 : t5) | 0, t5 = e5 = (l5 = U6 + l5 | 0) >>> 0 < U6 >>> 0 ? e5 + 1 | 0 : e5, E5[A10 + 6 | 0] = (63 & t5) << 26 | l5 >>> 6, y6 = l5, l5 = 0, E5[A10 + 5 | 0] = l5 << 13 | (1572864 & c5) >>> 19 | y6 << 2, c5 = 2097151 & D5, D5 = DA(M6, F6, -997805, -1) + c5 | 0, e5 = w4, e5 = c5 >>> 0 > D5 >>> 0 ? e5 + 1 | 0 : e5, l5 = (2097151 & (c5 = t5)) << 11 | y6 >>> 21, c5 = (t5 >>= 21) + e5 | 0, c5 = (D5 = l5 + D5 | 0) >>> 0 < l5 >>> 0 ? c5 + 1 | 0 : c5, E5[A10 + 9 | 0] = (511 & c5) << 23 | D5 >>> 9, E5[A10 + 8 | 0] = (1 & c5) << 31 | D5 >>> 1, e5 = 0, E5[A10 + 7 | 0] = e5 << 18 | (2080768 & y6) >>> 14 | D5 << 7, e5 = 2097151 & N6, y6 = DA(M6, F6, 136657, 0) + e5 | 0, t5 = w4, t5 = e5 >>> 0 > y6 >>> 0 ? t5 + 1 | 0 : t5, N6 = (2097151 & (e5 = c5)) << 11 | D5 >>> 21, e5 = t5 + (c5 = e5 >> 21) | 0, e5 = (y6 = N6 + y6 | 0) >>> 0 < N6 >>> 0 ? e5 + 1 | 0 : e5, E5[A10 + 12 | 0] = (4095 & e5) << 20 | y6 >>> 12, c5 = y6, E5[A10 + 11 | 0] = (15 & e5) << 28 | c5 >>> 4, y6 = 0, E5[A10 + 10 | 0] = y6 << 15 | (1966080 & D5) >>> 17 | c5 << 4, y6 = 2097151 & k6, D5 = DA(M6, F6, -683901, -1) + y6 | 0, t5 = w4, t5 = y6 >>> 0 > D5 >>> 0 ? t5 + 1 | 0 : t5, y6 = e5, e5 = t5 + (e5 >>= 21) | 0, e5 = (y6 = (Y5 = D5) + (D5 = (2097151 & y6) << 11 | c5 >>> 21) | 0) >>> 0 < D5 >>> 0 ? e5 + 1 | 0 : e5, E5[A10 + 14 | 0] = (127 & e5) << 25 | y6 >>> 7, D5 = 0, E5[A10 + 13 | 0] = D5 << 12 | (1048576 & c5) >>> 20 | y6 << 1, t5 = e5 >> 21, c5 = (e5 = (2097151 & e5) << 11 | y6 >>> 21) >>> 0 > (D5 = e5 + (2097151 & u6) | 0) >>> 0 ? t5 + 1 | 0 : t5, E5[A10 + 17 | 0] = (1023 & c5) << 22 | D5 >>> 10, E5[A10 + 16 | 0] = (3 & c5) << 30 | D5 >>> 2, e5 = 0, E5[A10 + 15 | 0] = e5 << 17 | (2064384 & y6) >>> 15 | D5 << 6, t5 = c5 >> 21, t5 = (e5 = (2097151 & c5) << 11 | D5 >>> 21) >>> 0 > (c5 = e5 + (2097151 & S6) | 0) >>> 0 ? t5 + 1 | 0 : t5, E5[A10 + 20 | 0] = (8191 & t5) << 19 | c5 >>> 13, E5[A10 + 19 | 0] = (31 & t5) << 27 | c5 >>> 5, y6 = (e5 = 2097151 & p6) + (p6 = (2097151 & t5) << 11 | c5 >>> 21) | 0, e5 = t5 >> 21, e5 = y6 >>> 0 < p6 >>> 0 ? e5 + 1 | 0 : e5, p6 = y6, E5[A10 + 21 | 0] = y6, S6 = 0, E5[A10 + 18 | 0] = S6 << 14 | (1835008 & D5) >>> 18 | c5 << 3, E5[A10 + 22 | 0] = (255 & e5) << 24 | y6 >>> 8, c5 = e5 >> 21, c5 = (y6 = (D5 = (2097151 & e5) << 11 | y6 >>> 21) + (2097151 & H6) | 0) >>> 0 < D5 >>> 0 ? c5 + 1 | 0 : c5, E5[A10 + 25 | 0] = (2047 & c5) << 21 | y6 >>> 11, E5[A10 + 24 | 0] = (7 & c5) << 29 | y6 >>> 3, E5[A10 + 23 | 0] = 31 & ((65535 & e5) << 16 | p6 >>> 16) | y6 << 5, t5 = c5 >> 21, t5 = (e5 = (2097151 & c5) << 11 | y6 >>> 21) >>> 0 > (c5 = e5 + (2097151 & s5) | 0) >>> 0 ? t5 + 1 | 0 : t5, E5[A10 + 27 | 0] = (63 & t5) << 26 | c5 >>> 6, D5 = 0, E5[A10 + 26 | 0] = D5 << 13 | (1572864 & y6) >>> 19 | c5 << 2, e5 = t5 >> 21, e5 = (t5 = (y6 = (2097151 & t5) << 11 | c5 >>> 21) + (2097151 & h5) | 0) >>> 0 < y6 >>> 0 ? e5 + 1 | 0 : e5, E5[A10 + 31 | 0] = (131071 & e5) << 15 | t5 >>> 17, E5[A10 + 30 | 0] = (511 & e5) << 23 | t5 >>> 9, E5[A10 + 29 | 0] = (1 & e5) << 31 | t5 >>> 1, y6 = 0, E5[A10 + 28 | 0] = y6 << 18 | (2080768 & c5) >>> 14 | t5 << 7;
                    }
                    function k5(A10, I9, g8, C6, B6, Q6) {
                      var i6, n5 = 0, f4 = 0, t5 = 0, e5 = 0, c5 = 0, y6 = 0, w5 = 0, h5 = 0, s5 = 0, p6 = 0, k6 = 0, S6 = 0, H6 = 0, G6 = 0, J6 = 0, N6 = 0, Y5 = 0, P6 = 0, v6 = 0, d4 = 0, L6 = 0, R6 = 0, x6 = 0, j5 = 0, X6 = 0, q5 = 0, z6 = 0, O6 = 0, T6 = 0, W6 = 0, Z5 = 0, $5 = 0, AA2 = 0, IA2 = 0, gA2 = 0, CA2 = 0, BA2 = 0, QA2 = 0;
                      for (D4 = i6 = D4 - 592 | 0, S6 = -1, H6 = A10 + 32 | 0, k6 = 32, G6 = 1; p6 = a4[2672 + (f4 = k6 - 1 | 0) | 0], t5 = (f4 = ((e5 = a4[f4 + H6 | 0]) ^ p6) - 1 >> 8 & G6) & (y6 = a4[H6 + (k6 = k6 - 2 | 0) | 0]) - (c5 = a4[k6 + 2672 | 0]) >> 8 | 255 & (e5 - p6 >>> 8 & G6 | t5), G6 = f4 & (c5 ^ y6) - 1 >> 8, k6; )
                        ;
                      if (255 & t5 && !(aA(A10) | !(((127 & (-1 ^ a4[B6 + 31 | 0]) | a4[B6 + 1 | 0] & a4[B6 + 2 | 0] & a4[B6 + 3 | 0] & a4[B6 + 4 | 0] & a4[B6 + 5 | 0] & a4[B6 + 6 | 0] & a4[B6 + 7 | 0] & a4[B6 + 8 | 0] & a4[B6 + 9 | 0] & a4[B6 + 10 | 0] & a4[B6 + 11 | 0] & a4[B6 + 12 | 0] & a4[B6 + 13 | 0] & a4[B6 + 14 | 0] & a4[B6 + 15 | 0] & a4[B6 + 16 | 0] & a4[B6 + 17 | 0] & a4[B6 + 18 | 0] & a4[B6 + 19 | 0] & a4[B6 + 20 | 0] & a4[B6 + 21 | 0] & a4[B6 + 22 | 0] & a4[B6 + 23 | 0] & a4[B6 + 24 | 0] & a4[B6 + 25 | 0] & a4[B6 + 26 | 0] & a4[B6 + 27 | 0] & a4[B6 + 28 | 0] & a4[B6 + 30 | 0] & a4[B6 + 29 | 0] ^ 255) - 1 & 236 - a4[0 | B6] ^ -1) >>> 8 & 1) || aA(B6) || U5(i6 + 128 | 0, B6))) {
                        for (EA(f4 = i6 + 384 | 0), Q6 && m4(f4, 34768, 34, 0), m4(f4, A10, 32, 0), m4(f4, B6, 32, 0), m4(f4, I9, g8, C6), M5(f4, g8 = i6 + 320 | 0), u5(g8), Q6 = i6 + 8 | 0, C6 = i6 + 128 | 0, B6 = 0, I9 = 0, D4 = n5 = D4 - 2272 | 0; e5 = g8 + (B6 >>> 3 | 0) | 0, E5[(f4 = n5 + 2016 | 0) + B6 | 0] = a4[0 | e5] >>> (6 & B6) & 1, E5[(t5 = f4) + (f4 = 1 | B6) | 0] = a4[0 | e5] >>> (7 & f4) & 1, 256 != (0 | (B6 = B6 + 2 | 0)); )
                          ;
                        for (; ; ) {
                          I9 = (g8 = I9) + 1 | 0;
                          A:
                            if (!(!a4[0 | (t5 = g8 + (n5 + 2016 | 0) | 0)] | g8 >>> 0 > 254)) {
                              I:
                                if (B6 = E5[0 | (c5 = (n5 + 2016 | 0) + I9 | 0)])
                                  if ((0 | (B6 = (e5 = B6 << 1) + (f4 = E5[0 | t5]) | 0)) <= 15)
                                    E5[0 | t5] = B6, E5[0 | c5] = 0;
                                  else {
                                    if ((0 | (B6 = f4 - e5 | 0)) < -15)
                                      break A;
                                    for (E5[0 | t5] = B6, B6 = I9; ; ) {
                                      if (!a4[0 | (f4 = (n5 + 2016 | 0) + B6 | 0)]) {
                                        E5[0 | f4] = 1;
                                        break I;
                                      }
                                      if (E5[0 | f4] = 0, f4 = B6 >>> 0 < 255, B6 = B6 + 1 | 0, !f4)
                                        break;
                                    }
                                  }
                              if (!(g8 >>> 0 > 253)) {
                                I:
                                  if (f4 = E5[0 | (y6 = (B6 = g8 + 2 | 0) + (n5 + 2016 | 0) | 0)])
                                    if ((0 | (f4 = (c5 = f4 << 2) + (e5 = E5[0 | t5]) | 0)) >= 16) {
                                      if ((0 | (f4 = e5 - c5 | 0)) < -15)
                                        break A;
                                      for (E5[0 | t5] = f4; ; ) {
                                        if (a4[0 | (f4 = (n5 + 2016 | 0) + B6 | 0)]) {
                                          if (E5[0 | f4] = 0, f4 = B6 >>> 0 < 255, B6 = B6 + 1 | 0, f4)
                                            continue;
                                          break I;
                                        }
                                        break;
                                      }
                                      E5[0 | f4] = 1;
                                    } else
                                      E5[0 | t5] = f4, E5[0 | y6] = 0;
                                if (!(g8 >>> 0 > 252)) {
                                  I:
                                    if (f4 = E5[0 | (y6 = (B6 = g8 + 3 | 0) + (n5 + 2016 | 0) | 0)])
                                      if ((0 | (f4 = (c5 = f4 << 3) + (e5 = E5[0 | t5]) | 0)) >= 16) {
                                        if ((0 | (f4 = e5 - c5 | 0)) < -15)
                                          break A;
                                        for (E5[0 | t5] = f4; ; ) {
                                          if (a4[0 | (f4 = (n5 + 2016 | 0) + B6 | 0)]) {
                                            if (E5[0 | f4] = 0, f4 = B6 >>> 0 < 255, B6 = B6 + 1 | 0, f4)
                                              continue;
                                            break I;
                                          }
                                          break;
                                        }
                                        E5[0 | f4] = 1;
                                      } else
                                        E5[0 | t5] = f4, E5[0 | y6] = 0;
                                  if (!(g8 >>> 0 > 251)) {
                                    I:
                                      if (f4 = E5[0 | (y6 = (B6 = g8 + 4 | 0) + (n5 + 2016 | 0) | 0)])
                                        if ((0 | (f4 = (c5 = f4 << 4) + (e5 = E5[0 | t5]) | 0)) >= 16) {
                                          if ((0 | (f4 = e5 - c5 | 0)) < -15)
                                            break A;
                                          for (E5[0 | t5] = f4; ; ) {
                                            if (a4[0 | (f4 = (n5 + 2016 | 0) + B6 | 0)]) {
                                              if (E5[0 | f4] = 0, f4 = B6 >>> 0 < 255, B6 = B6 + 1 | 0, f4)
                                                continue;
                                              break I;
                                            }
                                            break;
                                          }
                                          E5[0 | f4] = 1;
                                        } else
                                          E5[0 | t5] = f4, E5[0 | y6] = 0;
                                    if (!(g8 >>> 0 > 250)) {
                                      I:
                                        if (f4 = E5[0 | (y6 = (B6 = g8 + 5 | 0) + (n5 + 2016 | 0) | 0)])
                                          if ((0 | (f4 = (c5 = f4 << 5) + (e5 = E5[0 | t5]) | 0)) >= 16) {
                                            if ((0 | (f4 = e5 - c5 | 0)) < -15)
                                              break A;
                                            for (E5[0 | t5] = f4; ; ) {
                                              if (a4[0 | (f4 = (n5 + 2016 | 0) + B6 | 0)]) {
                                                if (E5[0 | f4] = 0, f4 = B6 >>> 0 < 255, B6 = B6 + 1 | 0, f4)
                                                  continue;
                                                break I;
                                              }
                                              break;
                                            }
                                            E5[0 | f4] = 1;
                                          } else
                                            E5[0 | t5] = f4, E5[0 | y6] = 0;
                                      if (!(g8 >>> 0 > 249) && (g8 = E5[0 | (c5 = (B6 = g8 + 6 | 0) + (n5 + 2016 | 0) | 0)]))
                                        if ((0 | (g8 = (e5 = g8 << 6) + (f4 = E5[0 | t5]) | 0)) >= 16) {
                                          if ((0 | (g8 = f4 - e5 | 0)) < -15)
                                            break A;
                                          for (E5[0 | t5] = g8; ; ) {
                                            if (a4[0 | (g8 = (n5 + 2016 | 0) + B6 | 0)]) {
                                              if (E5[0 | g8] = 0, g8 = B6 >>> 0 < 255, B6 = B6 + 1 | 0, g8)
                                                continue;
                                              break A;
                                            }
                                            break;
                                          }
                                          E5[0 | g8] = 1;
                                        } else
                                          E5[0 | t5] = g8, E5[0 | c5] = 0;
                                    }
                                  }
                                }
                              }
                            }
                          if (256 == (0 | I9))
                            break;
                        }
                        for (B6 = 0; g8 = H6 + (B6 >>> 3 | 0) | 0, E5[(I9 = n5 + 1760 | 0) + B6 | 0] = a4[0 | g8] >>> (6 & B6) & 1, E5[(f4 = I9) + (I9 = 1 | B6) | 0] = a4[0 | g8] >>> (7 & I9) & 1, 256 != (0 | (B6 = B6 + 2 | 0)); )
                          ;
                        for (I9 = 0; ; ) {
                          I9 = (g8 = I9) + 1 | 0;
                          A:
                            if (!(!a4[0 | (t5 = g8 + (n5 + 1760 | 0) | 0)] | g8 >>> 0 > 254)) {
                              I:
                                if (B6 = E5[0 | (c5 = (n5 + 1760 | 0) + I9 | 0)])
                                  if ((0 | (B6 = (e5 = B6 << 1) + (f4 = E5[0 | t5]) | 0)) <= 15)
                                    E5[0 | t5] = B6, E5[0 | c5] = 0;
                                  else {
                                    if ((0 | (B6 = f4 - e5 | 0)) < -15)
                                      break A;
                                    for (E5[0 | t5] = B6, B6 = I9; ; ) {
                                      if (!a4[0 | (f4 = (n5 + 1760 | 0) + B6 | 0)]) {
                                        E5[0 | f4] = 1;
                                        break I;
                                      }
                                      if (E5[0 | f4] = 0, f4 = B6 >>> 0 < 255, B6 = B6 + 1 | 0, !f4)
                                        break;
                                    }
                                  }
                              if (!(g8 >>> 0 > 253)) {
                                I:
                                  if (f4 = E5[0 | (y6 = (B6 = g8 + 2 | 0) + (n5 + 1760 | 0) | 0)])
                                    if ((0 | (f4 = (c5 = f4 << 2) + (e5 = E5[0 | t5]) | 0)) >= 16) {
                                      if ((0 | (f4 = e5 - c5 | 0)) < -15)
                                        break A;
                                      for (E5[0 | t5] = f4; ; ) {
                                        if (a4[0 | (f4 = (n5 + 1760 | 0) + B6 | 0)]) {
                                          if (E5[0 | f4] = 0, f4 = B6 >>> 0 < 255, B6 = B6 + 1 | 0, f4)
                                            continue;
                                          break I;
                                        }
                                        break;
                                      }
                                      E5[0 | f4] = 1;
                                    } else
                                      E5[0 | t5] = f4, E5[0 | y6] = 0;
                                if (!(g8 >>> 0 > 252)) {
                                  I:
                                    if (f4 = E5[0 | (y6 = (B6 = g8 + 3 | 0) + (n5 + 1760 | 0) | 0)])
                                      if ((0 | (f4 = (c5 = f4 << 3) + (e5 = E5[0 | t5]) | 0)) >= 16) {
                                        if ((0 | (f4 = e5 - c5 | 0)) < -15)
                                          break A;
                                        for (E5[0 | t5] = f4; ; ) {
                                          if (a4[0 | (f4 = (n5 + 1760 | 0) + B6 | 0)]) {
                                            if (E5[0 | f4] = 0, f4 = B6 >>> 0 < 255, B6 = B6 + 1 | 0, f4)
                                              continue;
                                            break I;
                                          }
                                          break;
                                        }
                                        E5[0 | f4] = 1;
                                      } else
                                        E5[0 | t5] = f4, E5[0 | y6] = 0;
                                  if (!(g8 >>> 0 > 251)) {
                                    I:
                                      if (f4 = E5[0 | (y6 = (B6 = g8 + 4 | 0) + (n5 + 1760 | 0) | 0)])
                                        if ((0 | (f4 = (c5 = f4 << 4) + (e5 = E5[0 | t5]) | 0)) >= 16) {
                                          if ((0 | (f4 = e5 - c5 | 0)) < -15)
                                            break A;
                                          for (E5[0 | t5] = f4; ; ) {
                                            if (a4[0 | (f4 = (n5 + 1760 | 0) + B6 | 0)]) {
                                              if (E5[0 | f4] = 0, f4 = B6 >>> 0 < 255, B6 = B6 + 1 | 0, f4)
                                                continue;
                                              break I;
                                            }
                                            break;
                                          }
                                          E5[0 | f4] = 1;
                                        } else
                                          E5[0 | t5] = f4, E5[0 | y6] = 0;
                                    if (!(g8 >>> 0 > 250)) {
                                      I:
                                        if (f4 = E5[0 | (y6 = (B6 = g8 + 5 | 0) + (n5 + 1760 | 0) | 0)])
                                          if ((0 | (f4 = (c5 = f4 << 5) + (e5 = E5[0 | t5]) | 0)) >= 16) {
                                            if ((0 | (f4 = e5 - c5 | 0)) < -15)
                                              break A;
                                            for (E5[0 | t5] = f4; ; ) {
                                              if (a4[0 | (f4 = (n5 + 1760 | 0) + B6 | 0)]) {
                                                if (E5[0 | f4] = 0, f4 = B6 >>> 0 < 255, B6 = B6 + 1 | 0, f4)
                                                  continue;
                                                break I;
                                              }
                                              break;
                                            }
                                            E5[0 | f4] = 1;
                                          } else
                                            E5[0 | t5] = f4, E5[0 | y6] = 0;
                                      if (!(g8 >>> 0 > 249) && (g8 = E5[0 | (c5 = (B6 = g8 + 6 | 0) + (n5 + 1760 | 0) | 0)]))
                                        if ((0 | (g8 = (e5 = g8 << 6) + (f4 = E5[0 | t5]) | 0)) >= 16) {
                                          if ((0 | (g8 = f4 - e5 | 0)) < -15)
                                            break A;
                                          for (E5[0 | t5] = g8; ; ) {
                                            if (a4[0 | (g8 = (n5 + 1760 | 0) + B6 | 0)]) {
                                              if (E5[0 | g8] = 0, g8 = B6 >>> 0 < 255, B6 = B6 + 1 | 0, g8)
                                                continue;
                                              break A;
                                            }
                                            break;
                                          }
                                          E5[0 | g8] = 1;
                                        } else
                                          E5[0 | t5] = g8, E5[0 | c5] = 0;
                                    }
                                  }
                                }
                              }
                            }
                          if (256 == (0 | I9))
                            break;
                        }
                        for (V5(S6 = n5 + 480 | 0, C6), p6 = o4[C6 + 8 >> 2], t5 = o4[C6 + 12 >> 2], y6 = o4[C6 + 16 >> 2], c5 = o4[C6 + 20 >> 2], e5 = o4[C6 + 24 >> 2], f4 = o4[C6 + 28 >> 2], B6 = o4[C6 >> 2], g8 = o4[C6 + 4 >> 2], I9 = o4[C6 + 36 >> 2], o4[n5 + 192 >> 2] = o4[C6 + 32 >> 2], o4[n5 + 196 >> 2] = I9, o4[n5 + 184 >> 2] = e5, o4[n5 + 188 >> 2] = f4, o4[n5 + 176 >> 2] = y6, o4[n5 + 180 >> 2] = c5, o4[n5 + 168 >> 2] = p6, o4[n5 + 172 >> 2] = t5, o4[n5 + 160 >> 2] = B6, o4[n5 + 164 >> 2] = g8, p6 = o4[C6 + 40 >> 2], t5 = o4[C6 + 44 >> 2], y6 = o4[C6 + 48 >> 2], c5 = o4[C6 + 52 >> 2], e5 = o4[C6 + 56 >> 2], f4 = o4[C6 + 60 >> 2], B6 = o4[(I9 = C6 - -64 | 0) >> 2], g8 = o4[I9 + 4 >> 2], I9 = o4[C6 + 76 >> 2], o4[n5 + 232 >> 2] = o4[C6 + 72 >> 2], o4[n5 + 236 >> 2] = I9, o4[n5 + 224 >> 2] = B6, o4[n5 + 228 >> 2] = g8, o4[n5 + 216 >> 2] = e5, o4[n5 + 220 >> 2] = f4, o4[n5 + 208 >> 2] = y6, o4[n5 + 212 >> 2] = c5, o4[n5 + 200 >> 2] = p6, o4[n5 + 204 >> 2] = t5, p6 = o4[C6 + 80 >> 2], t5 = o4[C6 + 84 >> 2], y6 = o4[C6 + 88 >> 2], c5 = o4[C6 + 92 >> 2], e5 = o4[C6 + 96 >> 2], f4 = o4[C6 + 100 >> 2], B6 = o4[C6 + 104 >> 2], g8 = o4[C6 + 108 >> 2], I9 = o4[C6 + 116 >> 2], o4[n5 + 272 >> 2] = o4[C6 + 112 >> 2], o4[n5 + 276 >> 2] = I9, o4[n5 + 264 >> 2] = B6, o4[n5 + 268 >> 2] = g8, o4[n5 + 256 >> 2] = e5, o4[n5 + 260 >> 2] = f4, o4[n5 + 248 >> 2] = y6, o4[n5 + 252 >> 2] = c5, o4[n5 + 240 >> 2] = p6, o4[n5 + 244 >> 2] = t5, l4(C6 = n5 + 320 | 0, g8 = n5 + 160 | 0), F5(n5, C6, w5 = n5 + 440 | 0), F5(n5 + 40 | 0, h5 = n5 + 360 | 0, s5 = n5 + 400 | 0), F5(n5 + 80 | 0, s5, w5), F5(n5 + 120 | 0, C6, h5), _5(C6, n5, S6), F5(g8, C6, w5), F5(N6 = n5 + 200 | 0, h5, s5), F5(Y5 = n5 + 240 | 0, s5, w5), F5(J6 = n5 + 280 | 0, C6, h5), V5(I9 = n5 + 640 | 0, g8), _5(C6, n5, I9), F5(g8, C6, w5), F5(N6, h5, s5), F5(Y5, s5, w5), F5(J6, C6, h5), V5(I9 = n5 + 800 | 0, g8), _5(C6, n5, I9), F5(g8, C6, w5), F5(N6, h5, s5), F5(Y5, s5, w5), F5(J6, C6, h5), V5(I9 = n5 + 960 | 0, g8), _5(C6, n5, I9), F5(g8, C6, w5), F5(N6, h5, s5), F5(Y5, s5, w5), F5(J6, C6, h5), V5(I9 = n5 + 1120 | 0, g8), _5(C6, n5, I9), F5(g8, C6, w5), F5(N6, h5, s5), F5(Y5, s5, w5), F5(J6, C6, h5), V5(I9 = n5 + 1280 | 0, g8), _5(C6, n5, I9), F5(g8, C6, w5), F5(N6, h5, s5), F5(Y5, s5, w5), F5(J6, C6, h5), V5(I9 = n5 + 1440 | 0, g8), _5(C6, n5, I9), F5(g8, C6, w5), F5(N6, h5, s5), F5(Y5, s5, w5), F5(J6, C6, h5), V5(n5 + 1600 | 0, g8), o4[Q6 + 32 >> 2] = 0, o4[Q6 + 36 >> 2] = 0, o4[Q6 + 24 >> 2] = 0, o4[Q6 + 28 >> 2] = 0, o4[Q6 + 16 >> 2] = 0, o4[Q6 + 20 >> 2] = 0, o4[Q6 + 8 >> 2] = 0, o4[Q6 + 12 >> 2] = 0, o4[Q6 >> 2] = 0, o4[Q6 + 4 >> 2] = 0, o4[Q6 + 44 >> 2] = 0, o4[Q6 + 48 >> 2] = 0, o4[(z6 = Q6 + 40 | 0) >> 2] = 1, o4[Q6 + 52 >> 2] = 0, o4[Q6 + 56 >> 2] = 0, o4[Q6 + 60 >> 2] = 0, o4[Q6 + 64 >> 2] = 0, o4[Q6 + 68 >> 2] = 0, o4[Q6 + 72 >> 2] = 0, o4[Q6 + 84 >> 2] = 0, o4[Q6 + 88 >> 2] = 0, o4[Q6 + 76 >> 2] = 0, o4[Q6 + 80 >> 2] = 1, o4[Q6 + 92 >> 2] = 0, o4[Q6 + 96 >> 2] = 0, o4[Q6 + 100 >> 2] = 0, o4[Q6 + 104 >> 2] = 0, o4[Q6 + 108 >> 2] = 0, o4[Q6 + 112 >> 2] = 0, o4[Q6 + 116 >> 2] = 0, IA2 = Q6 + 80 | 0, I9 = 255; ; ) {
                          A: {
                            I: {
                              if (!(a4[(n5 + 2016 | 0) + I9 | 0] | a4[(n5 + 1760 | 0) + I9 | 0])) {
                                if (!(a4[(g8 = I9 - 1 | 0) + (n5 + 2016 | 0) | 0] | a4[g8 + (n5 + 1760 | 0) | 0]))
                                  break I;
                                I9 = g8;
                              }
                              if ((0 | I9) < 0)
                                break A;
                              for (; l4(n5 + 320 | 0, Q6), (0 | (B6 = E5[(g8 = I9) + (n5 + 2016 | 0) | 0])) > 0 ? (F5(I9 = n5 + 160 | 0, C6 = n5 + 320 | 0, w5), F5(N6, h5, s5), F5(Y5, s5, w5), F5(J6, C6, h5), _5(C6, I9, (n5 + 480 | 0) + r3((254 & B6) >>> 1 | 0, 160) | 0)) : (0 | B6) >= 0 || (F5(I9 = n5 + 160 | 0, C6 = n5 + 320 | 0, w5), F5(N6, h5, s5), F5(Y5, s5, w5), F5(J6, C6, h5), b5(C6, I9, (n5 + 480 | 0) + r3((0 - B6 & 254) >>> 1 | 0, 160) | 0)), (0 | (X6 = E5[g8 + (n5 + 1760 | 0) | 0])) > 0 ? (F5(I9 = n5 + 160 | 0, C6 = n5 + 320 | 0, w5), F5(N6, h5, s5), F5(Y5, s5, w5), F5(J6, C6, h5), K5(C6, I9, r3((254 & X6) >>> 1 | 0, 120) + 1488 | 0)) : (0 | X6) >= 0 || (F5(n5 + 160 | 0, q5 = n5 + 320 | 0, w5), F5(N6, h5, s5), F5(Y5, s5, w5), F5(J6, q5, h5), P6 = o4[n5 + 160 >> 2], v6 = o4[n5 + 200 >> 2], d4 = o4[n5 + 164 >> 2], L6 = o4[n5 + 204 >> 2], R6 = o4[n5 + 168 >> 2], x6 = o4[n5 + 208 >> 2], j5 = o4[n5 + 172 >> 2], k6 = o4[n5 + 212 >> 2], H6 = o4[n5 + 176 >> 2], G6 = o4[n5 + 216 >> 2], S6 = o4[n5 + 180 >> 2], p6 = o4[n5 + 220 >> 2], t5 = o4[n5 + 184 >> 2], y6 = o4[n5 + 224 >> 2], c5 = o4[n5 + 188 >> 2], e5 = o4[n5 + 228 >> 2], f4 = o4[n5 + 192 >> 2], B6 = o4[n5 + 232 >> 2], C6 = o4[n5 + 236 >> 2], I9 = o4[n5 + 196 >> 2], o4[n5 + 396 >> 2] = C6 - I9, o4[n5 + 392 >> 2] = B6 - f4, o4[n5 + 388 >> 2] = e5 - c5, o4[n5 + 384 >> 2] = y6 - t5, o4[n5 + 380 >> 2] = p6 - S6, o4[n5 + 376 >> 2] = G6 - H6, o4[n5 + 372 >> 2] = k6 - j5, o4[n5 + 368 >> 2] = x6 - R6, o4[n5 + 364 >> 2] = L6 - d4, o4[n5 + 360 >> 2] = v6 - P6, o4[n5 + 356 >> 2] = I9 + C6, o4[n5 + 352 >> 2] = B6 + f4, o4[n5 + 348 >> 2] = e5 + c5, o4[n5 + 344 >> 2] = t5 + y6, o4[n5 + 340 >> 2] = p6 + S6, o4[n5 + 336 >> 2] = H6 + G6, o4[n5 + 332 >> 2] = k6 + j5, o4[n5 + 328 >> 2] = R6 + x6, o4[n5 + 324 >> 2] = d4 + L6, o4[n5 + 320 >> 2] = P6 + v6, F5(s5, q5, 40 + (I9 = r3((0 - X6 & 254) >>> 1 | 0, 120) + 1488 | 0) | 0), F5(h5, h5, I9), F5(w5, I9 + 80 | 0, J6), gA2 = o4[n5 + 276 >> 2], CA2 = o4[n5 + 272 >> 2], X6 = o4[n5 + 268 >> 2], q5 = o4[n5 + 264 >> 2], t5 = o4[n5 + 260 >> 2], y6 = o4[n5 + 256 >> 2], c5 = o4[n5 + 252 >> 2], e5 = o4[n5 + 248 >> 2], f4 = o4[n5 + 244 >> 2], B6 = o4[n5 + 240 >> 2], O6 = o4[n5 + 360 >> 2], T6 = o4[n5 + 400 >> 2], W6 = o4[n5 + 364 >> 2], Z5 = o4[n5 + 404 >> 2], $5 = o4[n5 + 368 >> 2], AA2 = o4[n5 + 408 >> 2], P6 = o4[n5 + 372 >> 2], v6 = o4[n5 + 412 >> 2], d4 = o4[n5 + 376 >> 2], L6 = o4[n5 + 416 >> 2], R6 = o4[n5 + 380 >> 2], x6 = o4[n5 + 420 >> 2], j5 = o4[n5 + 384 >> 2], k6 = o4[n5 + 424 >> 2], H6 = o4[n5 + 388 >> 2], G6 = o4[n5 + 428 >> 2], S6 = o4[n5 + 392 >> 2], p6 = o4[n5 + 432 >> 2], C6 = o4[n5 + 396 >> 2], I9 = o4[n5 + 436 >> 2], o4[n5 + 396 >> 2] = C6 + I9, o4[n5 + 392 >> 2] = p6 + S6, o4[n5 + 388 >> 2] = H6 + G6, o4[n5 + 384 >> 2] = k6 + j5, o4[n5 + 380 >> 2] = R6 + x6, o4[n5 + 376 >> 2] = d4 + L6, o4[n5 + 372 >> 2] = P6 + v6, o4[n5 + 368 >> 2] = $5 + AA2, o4[n5 + 364 >> 2] = W6 + Z5, o4[n5 + 360 >> 2] = O6 + T6, o4[n5 + 356 >> 2] = I9 - C6, o4[n5 + 352 >> 2] = p6 - S6, o4[n5 + 348 >> 2] = G6 - H6, o4[n5 + 344 >> 2] = k6 - j5, o4[n5 + 340 >> 2] = x6 - R6, o4[n5 + 336 >> 2] = L6 - d4, o4[n5 + 332 >> 2] = v6 - P6, o4[n5 + 328 >> 2] = AA2 - $5, o4[n5 + 324 >> 2] = Z5 - W6, o4[n5 + 320 >> 2] = T6 - O6, P6 = B6 << 1, v6 = o4[n5 + 440 >> 2], o4[n5 + 400 >> 2] = P6 - v6, d4 = f4 << 1, L6 = o4[n5 + 444 >> 2], o4[n5 + 404 >> 2] = d4 - L6, R6 = e5 << 1, x6 = o4[n5 + 448 >> 2], o4[n5 + 408 >> 2] = R6 - x6, j5 = c5 << 1, k6 = o4[n5 + 452 >> 2], o4[n5 + 412 >> 2] = j5 - k6, H6 = y6 << 1, G6 = o4[n5 + 456 >> 2], o4[n5 + 416 >> 2] = H6 - G6, S6 = t5 << 1, p6 = o4[n5 + 460 >> 2], o4[n5 + 420 >> 2] = S6 - p6, t5 = q5 << 1, y6 = o4[n5 + 464 >> 2], o4[n5 + 424 >> 2] = t5 - y6, c5 = X6 << 1, e5 = o4[n5 + 468 >> 2], o4[n5 + 428 >> 2] = c5 - e5, f4 = CA2 << 1, B6 = o4[n5 + 472 >> 2], o4[n5 + 432 >> 2] = f4 - B6, C6 = gA2 << 1, I9 = o4[n5 + 476 >> 2], o4[n5 + 436 >> 2] = C6 - I9, o4[n5 + 440 >> 2] = P6 + v6, o4[n5 + 444 >> 2] = d4 + L6, o4[n5 + 448 >> 2] = R6 + x6, o4[n5 + 452 >> 2] = k6 + j5, o4[n5 + 456 >> 2] = H6 + G6, o4[n5 + 460 >> 2] = p6 + S6, o4[n5 + 464 >> 2] = t5 + y6, o4[n5 + 468 >> 2] = e5 + c5, o4[n5 + 472 >> 2] = B6 + f4, o4[n5 + 476 >> 2] = I9 + C6), F5(Q6, n5 + 320 | 0, w5), F5(z6, h5, s5), F5(IA2, s5, w5), I9 = g8 - 1 | 0, (0 | g8) > 0; )
                                ;
                              break A;
                            }
                            if (I9 = I9 - 2 | 0, g8)
                              continue;
                          }
                          break;
                        }
                        D4 = n5 + 2272 | 0, uA(I9 = i6 + 288 | 0, Q6), BA2 = -1, QA2 = cA(I9, A10), S6 = ((0 | A10) == (0 | I9) ? BA2 : QA2) | oA(A10, I9, 32);
                      }
                      return D4 = i6 + 592 | 0, S6;
                    }
                    function F5(A10, I9, g8) {
                      var C6, B6, Q6, i6, E6, a5, n5, f4, t5, e5, c5, y6, D5, h5, s5, p6, u6, k6, F6, l5, S6, H6, M6, G6, U6, J6, N6, Y5, b6, _6, K6, P6, v6, m5, d4, L6, R6, x6, j5, X6, q5, z6, V6, O6, T6, W6, Z5, $5, AA2, IA2, gA2, CA2, BA2, QA2, iA2 = 0, EA2 = 0, oA2 = 0, aA2 = 0, nA2 = 0, rA2 = 0, fA2 = 0, tA2 = 0, eA2 = 0, cA2 = 0, yA2 = 0, wA2 = 0, hA2 = 0, sA2 = 0, pA2 = 0, uA2 = 0, kA2 = 0, FA2 = 0, lA2 = 0, SA2 = 0, HA2 = 0, MA2 = 0, GA2 = 0, UA2 = 0;
                      iA2 = DA(C6 = o4[g8 + 4 >> 2], e5 = C6 >> 31, kA2 = (p6 = o4[I9 + 20 >> 2]) << 1, K6 = kA2 >> 31), oA2 = w4, EA2 = (hA2 = DA(pA2 = o4[g8 >> 2], Q6 = pA2 >> 31, B6 = o4[I9 + 24 >> 2], i6 = B6 >> 31)) + iA2 | 0, iA2 = w4 + oA2 | 0, iA2 = EA2 >>> 0 < hA2 >>> 0 ? iA2 + 1 | 0 : iA2, eA2 = DA(E6 = o4[g8 + 8 >> 2], D5 = E6 >> 31, hA2 = o4[I9 + 16 >> 2], a5 = hA2 >> 31), oA2 = w4 + iA2 | 0, oA2 = (EA2 = eA2 + EA2 | 0) >>> 0 < eA2 >>> 0 ? oA2 + 1 | 0 : oA2, iA2 = (eA2 = DA(c5 = o4[g8 + 12 >> 2], u6 = c5 >> 31, G6 = (k6 = o4[I9 + 12 >> 2]) << 1, P6 = G6 >> 31)) + EA2 | 0, EA2 = w4 + oA2 | 0, EA2 = iA2 >>> 0 < eA2 >>> 0 ? EA2 + 1 | 0 : EA2, oA2 = (sA2 = DA(h5 = o4[g8 + 16 >> 2], U6 = h5 >> 31, eA2 = o4[I9 + 8 >> 2], n5 = eA2 >> 31)) + iA2 | 0, iA2 = w4 + EA2 | 0, iA2 = oA2 >>> 0 < sA2 >>> 0 ? iA2 + 1 | 0 : iA2, EA2 = oA2, oA2 = DA(F6 = o4[g8 + 20 >> 2], v6 = F6 >> 31, J6 = (l5 = o4[I9 + 4 >> 2]) << 1, m5 = J6 >> 31), iA2 = w4 + iA2 | 0, iA2 = (EA2 = EA2 + oA2 | 0) >>> 0 < oA2 >>> 0 ? iA2 + 1 | 0 : iA2, W6 = tA2 = o4[g8 + 24 >> 2], oA2 = (cA2 = DA(tA2, O6 = tA2 >> 31, sA2 = o4[I9 >> 2], f4 = sA2 >> 31)) + EA2 | 0, EA2 = w4 + iA2 | 0, EA2 = oA2 >>> 0 < cA2 >>> 0 ? EA2 + 1 | 0 : EA2, d4 = o4[g8 + 28 >> 2], iA2 = (cA2 = DA(wA2 = r3(d4, 19), S6 = wA2 >> 31, N6 = (H6 = o4[I9 + 36 >> 2]) << 1, L6 = N6 >> 31)) + oA2 | 0, oA2 = w4 + EA2 | 0, oA2 = iA2 >>> 0 < cA2 >>> 0 ? oA2 + 1 | 0 : oA2, $5 = o4[g8 + 32 >> 2], EA2 = (fA2 = DA(aA2 = r3($5, 19), s5 = aA2 >> 31, cA2 = o4[I9 + 32 >> 2], t5 = cA2 >> 31)) + iA2 | 0, iA2 = w4 + oA2 | 0, iA2 = EA2 >>> 0 < fA2 >>> 0 ? iA2 + 1 | 0 : iA2, Z5 = o4[g8 + 36 >> 2], g8 = DA(fA2 = r3(Z5, 19), y6 = fA2 >> 31, Y5 = (M6 = o4[I9 + 28 >> 2]) << 1, R6 = Y5 >> 31), iA2 = w4 + iA2 | 0, nA2 = I9 = g8 + EA2 | 0, g8 = I9 >>> 0 < g8 >>> 0 ? iA2 + 1 | 0 : iA2, I9 = DA(hA2, a5, C6, e5), iA2 = w4, EA2 = DA(pA2, Q6, p6, x6 = p6 >> 31), oA2 = w4 + iA2 | 0, oA2 = (I9 = EA2 + I9 | 0) >>> 0 < EA2 >>> 0 ? oA2 + 1 | 0 : oA2, iA2 = DA(E6, D5, k6, j5 = k6 >> 31), EA2 = w4 + oA2 | 0, EA2 = (I9 = iA2 + I9 | 0) >>> 0 < iA2 >>> 0 ? EA2 + 1 | 0 : EA2, oA2 = DA(eA2, n5, c5, u6), iA2 = w4 + EA2 | 0, iA2 = (I9 = oA2 + I9 | 0) >>> 0 < oA2 >>> 0 ? iA2 + 1 | 0 : iA2, EA2 = DA(h5, U6, l5, X6 = l5 >> 31), iA2 = w4 + iA2 | 0, iA2 = (I9 = EA2 + I9 | 0) >>> 0 < EA2 >>> 0 ? iA2 + 1 | 0 : iA2, EA2 = DA(sA2, f4, F6, v6), iA2 = w4 + iA2 | 0, iA2 = (I9 = EA2 + I9 | 0) >>> 0 < EA2 >>> 0 ? iA2 + 1 | 0 : iA2, EA2 = DA(tA2 = r3(tA2, 19), b6 = tA2 >> 31, H6, q5 = H6 >> 31), oA2 = w4 + iA2 | 0, oA2 = (I9 = EA2 + I9 | 0) >>> 0 < EA2 >>> 0 ? oA2 + 1 | 0 : oA2, iA2 = DA(cA2, t5, wA2, S6), EA2 = w4 + oA2 | 0, EA2 = (I9 = iA2 + I9 | 0) >>> 0 < iA2 >>> 0 ? EA2 + 1 | 0 : EA2, oA2 = DA(aA2, s5, M6, z6 = M6 >> 31), iA2 = w4 + EA2 | 0, iA2 = (I9 = oA2 + I9 | 0) >>> 0 < oA2 >>> 0 ? iA2 + 1 | 0 : iA2, EA2 = DA(fA2, y6, B6, i6), iA2 = w4 + iA2 | 0, MA2 = I9 = EA2 + I9 | 0, lA2 = I9 >>> 0 < EA2 >>> 0 ? iA2 + 1 | 0 : iA2, I9 = DA(C6, e5, G6, P6), iA2 = w4, EA2 = DA(pA2, Q6, hA2, a5), iA2 = w4 + iA2 | 0, iA2 = (I9 = EA2 + I9 | 0) >>> 0 < EA2 >>> 0 ? iA2 + 1 | 0 : iA2, EA2 = DA(eA2, n5, E6, D5), oA2 = w4 + iA2 | 0, oA2 = (I9 = EA2 + I9 | 0) >>> 0 < EA2 >>> 0 ? oA2 + 1 | 0 : oA2, iA2 = DA(c5, u6, J6, m5), EA2 = w4 + oA2 | 0, EA2 = (I9 = iA2 + I9 | 0) >>> 0 < iA2 >>> 0 ? EA2 + 1 | 0 : EA2, oA2 = DA(sA2, f4, h5, U6), iA2 = w4 + EA2 | 0, iA2 = (I9 = oA2 + I9 | 0) >>> 0 < oA2 >>> 0 ? iA2 + 1 | 0 : iA2, EA2 = DA(_6 = r3(F6, 19), V6 = _6 >> 31, N6, L6), iA2 = w4 + iA2 | 0, iA2 = (I9 = EA2 + I9 | 0) >>> 0 < EA2 >>> 0 ? iA2 + 1 | 0 : iA2, EA2 = DA(cA2, t5, tA2, b6), iA2 = w4 + iA2 | 0, iA2 = (I9 = EA2 + I9 | 0) >>> 0 < EA2 >>> 0 ? iA2 + 1 | 0 : iA2, EA2 = DA(wA2, S6, Y5, R6), oA2 = w4 + iA2 | 0, oA2 = (I9 = EA2 + I9 | 0) >>> 0 < EA2 >>> 0 ? oA2 + 1 | 0 : oA2, iA2 = DA(aA2, s5, B6, i6), EA2 = w4 + oA2 | 0, EA2 = (I9 = iA2 + I9 | 0) >>> 0 < iA2 >>> 0 ? EA2 + 1 | 0 : EA2, oA2 = DA(fA2, y6, kA2, K6), iA2 = w4 + EA2 | 0, AA2 = I9 = oA2 + I9 | 0, IA2 = iA2 = I9 >>> 0 < oA2 >>> 0 ? iA2 + 1 | 0 : iA2, gA2 = I9 = I9 + 33554432 | 0, CA2 = iA2 = I9 >>> 0 < 33554432 ? iA2 + 1 | 0 : iA2, oA2 = (67108863 & iA2) << 6 | I9 >>> 26, iA2 = (iA2 >> 26) + lA2 | 0, MA2 = I9 = oA2 + MA2 | 0, iA2 = I9 >>> 0 < oA2 >>> 0 ? iA2 + 1 | 0 : iA2, BA2 = I9 = I9 + 16777216 | 0, iA2 = g8 + (EA2 = (oA2 = I9 >>> 0 < 16777216 ? iA2 + 1 | 0 : iA2) >> 25) | 0, iA2 = (I9 = (oA2 = (33554431 & oA2) << 7 | I9 >>> 25) + nA2 | 0) >>> 0 < oA2 >>> 0 ? iA2 + 1 | 0 : iA2, FA2 = g8 = (EA2 = I9) + 33554432 | 0, I9 = iA2 = g8 >>> 0 < 33554432 ? iA2 + 1 | 0 : iA2, o4[A10 + 24 >> 2] = EA2 - (-67108864 & g8), g8 = DA(C6, e5, J6, m5), iA2 = w4, EA2 = DA(pA2, Q6, eA2, n5), oA2 = w4 + iA2 | 0, oA2 = (g8 = EA2 + g8 | 0) >>> 0 < EA2 >>> 0 ? oA2 + 1 | 0 : oA2, EA2 = (iA2 = g8) + (g8 = DA(sA2, f4, E6, D5)) | 0, iA2 = w4 + oA2 | 0, iA2 = g8 >>> 0 > EA2 >>> 0 ? iA2 + 1 | 0 : iA2, oA2 = DA(g8 = r3(c5, 19), SA2 = g8 >> 31, N6, L6), iA2 = w4 + iA2 | 0, iA2 = (EA2 = oA2 + EA2 | 0) >>> 0 < oA2 >>> 0 ? iA2 + 1 | 0 : iA2, oA2 = (nA2 = DA(cA2, t5, lA2 = r3(h5, 19), T6 = lA2 >> 31)) + EA2 | 0, EA2 = w4 + iA2 | 0, EA2 = oA2 >>> 0 < nA2 >>> 0 ? EA2 + 1 | 0 : EA2, nA2 = DA(Y5, R6, _6, V6), iA2 = w4 + EA2 | 0, iA2 = (oA2 = nA2 + oA2 | 0) >>> 0 < nA2 >>> 0 ? iA2 + 1 | 0 : iA2, EA2 = (nA2 = DA(B6, i6, tA2, b6)) + oA2 | 0, oA2 = w4 + iA2 | 0, oA2 = EA2 >>> 0 < nA2 >>> 0 ? oA2 + 1 | 0 : oA2, nA2 = DA(wA2, S6, kA2, K6), iA2 = w4 + oA2 | 0, iA2 = (EA2 = nA2 + EA2 | 0) >>> 0 < nA2 >>> 0 ? iA2 + 1 | 0 : iA2, oA2 = DA(aA2, s5, hA2, a5), iA2 = w4 + iA2 | 0, iA2 = (EA2 = oA2 + EA2 | 0) >>> 0 < oA2 >>> 0 ? iA2 + 1 | 0 : iA2, oA2 = (nA2 = DA(fA2, y6, G6, P6)) + EA2 | 0, EA2 = w4 + iA2 | 0, yA2 = oA2, GA2 = oA2 >>> 0 < nA2 >>> 0 ? EA2 + 1 | 0 : EA2, iA2 = DA(sA2, f4, C6, e5), EA2 = w4, oA2 = (nA2 = DA(pA2, Q6, l5, X6)) + iA2 | 0, iA2 = w4 + EA2 | 0, iA2 = oA2 >>> 0 < nA2 >>> 0 ? iA2 + 1 | 0 : iA2, nA2 = EA2 = r3(E6, 19), EA2 = (rA2 = DA(EA2, HA2 = EA2 >> 31, H6, q5)) + oA2 | 0, oA2 = w4 + iA2 | 0, oA2 = EA2 >>> 0 < rA2 >>> 0 ? oA2 + 1 | 0 : oA2, rA2 = DA(cA2, t5, g8, SA2), iA2 = w4 + oA2 | 0, iA2 = (EA2 = rA2 + EA2 | 0) >>> 0 < rA2 >>> 0 ? iA2 + 1 | 0 : iA2, oA2 = DA(lA2, T6, M6, z6), iA2 = w4 + iA2 | 0, iA2 = (EA2 = oA2 + EA2 | 0) >>> 0 < oA2 >>> 0 ? iA2 + 1 | 0 : iA2, oA2 = (rA2 = DA(B6, i6, _6, V6)) + EA2 | 0, EA2 = w4 + iA2 | 0, EA2 = oA2 >>> 0 < rA2 >>> 0 ? EA2 + 1 | 0 : EA2, rA2 = DA(tA2, b6, p6, x6), iA2 = w4 + EA2 | 0, iA2 = (oA2 = rA2 + oA2 | 0) >>> 0 < rA2 >>> 0 ? iA2 + 1 | 0 : iA2, EA2 = (rA2 = DA(hA2, a5, wA2, S6)) + oA2 | 0, oA2 = w4 + iA2 | 0, oA2 = EA2 >>> 0 < rA2 >>> 0 ? oA2 + 1 | 0 : oA2, rA2 = DA(aA2, s5, k6, j5), iA2 = w4 + oA2 | 0, iA2 = (EA2 = rA2 + EA2 | 0) >>> 0 < rA2 >>> 0 ? iA2 + 1 | 0 : iA2, oA2 = DA(fA2, y6, eA2, n5), iA2 = w4 + iA2 | 0, UA2 = EA2 = oA2 + EA2 | 0, rA2 = EA2 >>> 0 < oA2 >>> 0 ? iA2 + 1 | 0 : iA2, iA2 = DA(iA2 = r3(C6, 19), iA2 >> 31, N6, L6), EA2 = w4, oA2 = DA(pA2, Q6, sA2, f4), EA2 = w4 + EA2 | 0, EA2 = (iA2 = oA2 + iA2 | 0) >>> 0 < oA2 >>> 0 ? EA2 + 1 | 0 : EA2, oA2 = (nA2 = DA(cA2, t5, nA2, HA2)) + iA2 | 0, iA2 = w4 + EA2 | 0, g8 = (EA2 = DA(g8, SA2, Y5, R6)) + oA2 | 0, oA2 = w4 + (oA2 >>> 0 < nA2 >>> 0 ? iA2 + 1 | 0 : iA2) | 0, oA2 = g8 >>> 0 < EA2 >>> 0 ? oA2 + 1 | 0 : oA2, EA2 = DA(B6, i6, lA2, T6), iA2 = w4 + oA2 | 0, iA2 = (g8 = EA2 + g8 | 0) >>> 0 < EA2 >>> 0 ? iA2 + 1 | 0 : iA2, EA2 = DA(kA2, K6, _6, V6), iA2 = w4 + iA2 | 0, iA2 = (g8 = EA2 + g8 | 0) >>> 0 < EA2 >>> 0 ? iA2 + 1 | 0 : iA2, oA2 = DA(hA2, a5, tA2, b6), EA2 = w4 + iA2 | 0, EA2 = (g8 = oA2 + g8 | 0) >>> 0 < oA2 >>> 0 ? EA2 + 1 | 0 : EA2, oA2 = DA(wA2, S6, G6, P6), iA2 = w4 + EA2 | 0, iA2 = (g8 = oA2 + g8 | 0) >>> 0 < oA2 >>> 0 ? iA2 + 1 | 0 : iA2, EA2 = DA(aA2, s5, eA2, n5), oA2 = w4 + iA2 | 0, oA2 = (g8 = EA2 + g8 | 0) >>> 0 < EA2 >>> 0 ? oA2 + 1 | 0 : oA2, EA2 = DA(fA2, y6, J6, m5), iA2 = w4 + oA2 | 0, nA2 = g8 = EA2 + g8 | 0, SA2 = iA2 = g8 >>> 0 < EA2 >>> 0 ? iA2 + 1 | 0 : iA2, HA2 = g8 = g8 + 33554432 | 0, QA2 = iA2 = g8 >>> 0 < 33554432 ? iA2 + 1 | 0 : iA2, EA2 = (oA2 = iA2 >> 26) + rA2 | 0, rA2 = g8 = (iA2 = (67108863 & iA2) << 6 | g8 >>> 26) + UA2 | 0, iA2 = EA2 = g8 >>> 0 < iA2 >>> 0 ? EA2 + 1 | 0 : EA2, UA2 = g8 = g8 + 16777216 | 0, EA2 = (33554431 & (iA2 = g8 >>> 0 < 16777216 ? iA2 + 1 | 0 : iA2)) << 7 | g8 >>> 25, iA2 = (iA2 >> 25) + GA2 | 0, iA2 = (g8 = EA2 + yA2 | 0) >>> 0 < EA2 >>> 0 ? iA2 + 1 | 0 : iA2, GA2 = EA2 = (oA2 = g8) + 33554432 | 0, g8 = iA2 = EA2 >>> 0 < 33554432 ? iA2 + 1 | 0 : iA2, o4[A10 + 8 >> 2] = oA2 - (-67108864 & EA2), iA2 = DA(B6, i6, C6, e5), oA2 = w4, EA2 = (yA2 = DA(pA2, Q6, M6, z6)) + iA2 | 0, iA2 = w4 + oA2 | 0, iA2 = EA2 >>> 0 < yA2 >>> 0 ? iA2 + 1 | 0 : iA2, oA2 = DA(E6, D5, p6, x6), iA2 = w4 + iA2 | 0, iA2 = (EA2 = oA2 + EA2 | 0) >>> 0 < oA2 >>> 0 ? iA2 + 1 | 0 : iA2, oA2 = DA(hA2, a5, c5, u6), iA2 = w4 + iA2 | 0, iA2 = (EA2 = oA2 + EA2 | 0) >>> 0 < oA2 >>> 0 ? iA2 + 1 | 0 : iA2, yA2 = DA(h5, U6, k6, j5), oA2 = w4 + iA2 | 0, oA2 = (EA2 = yA2 + EA2 | 0) >>> 0 < yA2 >>> 0 ? oA2 + 1 | 0 : oA2, iA2 = (yA2 = DA(eA2, n5, F6, v6)) + EA2 | 0, EA2 = w4 + oA2 | 0, EA2 = iA2 >>> 0 < yA2 >>> 0 ? EA2 + 1 | 0 : EA2, oA2 = (yA2 = DA(l5, X6, W6, O6)) + iA2 | 0, iA2 = w4 + EA2 | 0, iA2 = oA2 >>> 0 < yA2 >>> 0 ? iA2 + 1 | 0 : iA2, EA2 = oA2, oA2 = DA(sA2, f4, d4, yA2 = d4 >> 31), iA2 = w4 + iA2 | 0, iA2 = (EA2 = EA2 + oA2 | 0) >>> 0 < oA2 >>> 0 ? iA2 + 1 | 0 : iA2, oA2 = DA(aA2, s5, H6, q5), iA2 = w4 + iA2 | 0, iA2 = (EA2 = oA2 + EA2 | 0) >>> 0 < oA2 >>> 0 ? iA2 + 1 | 0 : iA2, uA2 = DA(fA2, y6, cA2, t5), oA2 = w4 + iA2 | 0, iA2 = I9 >> 26, I9 = (FA2 = (67108863 & I9) << 6 | FA2 >>> 26) + (EA2 = uA2 + EA2 | 0) | 0, EA2 = iA2 + (EA2 >>> 0 < uA2 >>> 0 ? oA2 + 1 | 0 : oA2) | 0, iA2 = (oA2 = I9) >>> 0 < FA2 >>> 0 ? EA2 + 1 | 0 : EA2, FA2 = EA2 = oA2 + 16777216 | 0, I9 = iA2 = EA2 >>> 0 < 16777216 ? iA2 + 1 | 0 : iA2, o4[A10 + 28 >> 2] = oA2 - (-33554432 & EA2), iA2 = DA(eA2, n5, C6, e5), EA2 = w4, uA2 = DA(pA2, Q6, k6, j5), oA2 = w4 + EA2 | 0, oA2 = (iA2 = uA2 + iA2 | 0) >>> 0 < uA2 >>> 0 ? oA2 + 1 | 0 : oA2, uA2 = DA(E6, D5, l5, X6), EA2 = w4 + oA2 | 0, EA2 = (iA2 = uA2 + iA2 | 0) >>> 0 < uA2 >>> 0 ? EA2 + 1 | 0 : EA2, oA2 = (uA2 = DA(sA2, f4, c5, u6)) + iA2 | 0, iA2 = w4 + EA2 | 0, iA2 = oA2 >>> 0 < uA2 >>> 0 ? iA2 + 1 | 0 : iA2, EA2 = oA2, oA2 = DA(lA2, T6, H6, q5), iA2 = w4 + iA2 | 0, iA2 = (EA2 = EA2 + oA2 | 0) >>> 0 < oA2 >>> 0 ? iA2 + 1 | 0 : iA2, oA2 = DA(cA2, t5, _6, V6), iA2 = w4 + iA2 | 0, iA2 = (EA2 = oA2 + EA2 | 0) >>> 0 < oA2 >>> 0 ? iA2 + 1 | 0 : iA2, EA2 = (tA2 = DA(tA2, b6, M6, z6)) + EA2 | 0, oA2 = w4 + iA2 | 0, iA2 = (wA2 = DA(B6, i6, wA2, S6)) + EA2 | 0, EA2 = w4 + (EA2 >>> 0 < tA2 >>> 0 ? oA2 + 1 | 0 : oA2) | 0, oA2 = (aA2 = DA(aA2, s5, p6, x6)) + iA2 | 0, iA2 = w4 + (iA2 >>> 0 < wA2 >>> 0 ? EA2 + 1 | 0 : EA2) | 0, iA2 = oA2 >>> 0 < aA2 >>> 0 ? iA2 + 1 | 0 : iA2, EA2 = oA2, oA2 = DA(fA2, y6, hA2, a5), iA2 = w4 + iA2 | 0, aA2 = EA2 = EA2 + oA2 | 0, iA2 = (iA2 = EA2 >>> 0 < oA2 >>> 0 ? iA2 + 1 | 0 : iA2) + (EA2 = g8 >> 26) | 0, oA2 = (EA2 = g8 = aA2 + (oA2 = (67108863 & g8) << 6 | GA2 >>> 26) | 0) >>> 0 < oA2 >>> 0 ? iA2 + 1 | 0 : iA2, wA2 = iA2 = EA2 + 16777216 | 0, g8 = oA2 = iA2 >>> 0 < 16777216 ? oA2 + 1 | 0 : oA2, o4[A10 + 12 >> 2] = EA2 - (-33554432 & iA2), iA2 = DA(C6, e5, Y5, R6), oA2 = w4, EA2 = (aA2 = DA(pA2, Q6, cA2, t5)) + iA2 | 0, iA2 = w4 + oA2 | 0, iA2 = EA2 >>> 0 < aA2 >>> 0 ? iA2 + 1 | 0 : iA2, oA2 = DA(B6, i6, E6, D5), iA2 = w4 + iA2 | 0, iA2 = (EA2 = oA2 + EA2 | 0) >>> 0 < oA2 >>> 0 ? iA2 + 1 | 0 : iA2, aA2 = DA(c5, u6, kA2, K6), oA2 = w4 + iA2 | 0, oA2 = (EA2 = aA2 + EA2 | 0) >>> 0 < aA2 >>> 0 ? oA2 + 1 | 0 : oA2, iA2 = (aA2 = DA(hA2, a5, h5, U6)) + EA2 | 0, EA2 = w4 + oA2 | 0, EA2 = iA2 >>> 0 < aA2 >>> 0 ? EA2 + 1 | 0 : EA2, oA2 = (aA2 = DA(G6, P6, F6, v6)) + iA2 | 0, iA2 = w4 + EA2 | 0, iA2 = oA2 >>> 0 < aA2 >>> 0 ? iA2 + 1 | 0 : iA2, EA2 = oA2, oA2 = DA(eA2, n5, W6, O6), iA2 = w4 + iA2 | 0, iA2 = (EA2 = EA2 + oA2 | 0) >>> 0 < oA2 >>> 0 ? iA2 + 1 | 0 : iA2, oA2 = DA(d4, yA2, J6, m5), iA2 = w4 + iA2 | 0, iA2 = (EA2 = oA2 + EA2 | 0) >>> 0 < oA2 >>> 0 ? iA2 + 1 | 0 : iA2, EA2 = (kA2 = DA(sA2, f4, aA2 = $5, tA2 = aA2 >> 31)) + EA2 | 0, oA2 = w4 + iA2 | 0, iA2 = (fA2 = DA(fA2, y6, N6, L6)) + EA2 | 0, EA2 = w4 + (EA2 >>> 0 < kA2 >>> 0 ? oA2 + 1 | 0 : oA2) | 0, EA2 = iA2 >>> 0 < fA2 >>> 0 ? EA2 + 1 | 0 : EA2, fA2 = iA2, iA2 = (iA2 = I9 >> 25) + EA2 | 0, iA2 = (I9 = fA2 + (oA2 = (33554431 & I9) << 7 | FA2 >>> 25) | 0) >>> 0 < oA2 >>> 0 ? iA2 + 1 | 0 : iA2, fA2 = EA2 = (oA2 = I9) + 33554432 | 0, I9 = iA2 = EA2 >>> 0 < 33554432 ? iA2 + 1 | 0 : iA2, o4[A10 + 32 >> 2] = oA2 - (-67108864 & EA2), EA2 = g8 >> 25, g8 = (wA2 = (33554431 & g8) << 7 | wA2 >>> 25) + (AA2 - (iA2 = -67108864 & gA2) | 0) | 0, iA2 = EA2 + (IA2 - ((iA2 >>> 0 > AA2 >>> 0) + CA2 | 0) | 0) | 0, iA2 = g8 >>> 0 < wA2 >>> 0 ? iA2 + 1 | 0 : iA2, FA2 = iA2 = (67108863 & (iA2 = (g8 = (EA2 = g8) + 33554432 | 0) >>> 0 < 33554432 ? iA2 + 1 | 0 : iA2)) << 6 | g8 >>> 26, iA2 = iA2 + (oA2 = MA2 - (-33554432 & BA2) | 0) | 0, o4[A10 + 20 >> 2] = iA2, o4[A10 + 16 >> 2] = EA2 - (-67108864 & g8), g8 = DA(cA2, t5, C6, e5), iA2 = w4, EA2 = DA(pA2, Q6, H6, q5), iA2 = w4 + iA2 | 0, iA2 = (g8 = EA2 + g8 | 0) >>> 0 < EA2 >>> 0 ? iA2 + 1 | 0 : iA2, oA2 = DA(E6, D5, M6, z6), EA2 = w4 + iA2 | 0, EA2 = (g8 = oA2 + g8 | 0) >>> 0 < oA2 >>> 0 ? EA2 + 1 | 0 : EA2, iA2 = DA(B6, i6, c5, u6), oA2 = w4 + EA2 | 0, oA2 = (g8 = iA2 + g8 | 0) >>> 0 < iA2 >>> 0 ? oA2 + 1 | 0 : oA2, EA2 = DA(h5, U6, p6, x6), iA2 = w4 + oA2 | 0, iA2 = (g8 = EA2 + g8 | 0) >>> 0 < EA2 >>> 0 ? iA2 + 1 | 0 : iA2, EA2 = DA(hA2, a5, F6, v6), iA2 = w4 + iA2 | 0, iA2 = (g8 = EA2 + g8 | 0) >>> 0 < EA2 >>> 0 ? iA2 + 1 | 0 : iA2, EA2 = DA(k6, j5, W6, O6), iA2 = w4 + iA2 | 0, iA2 = (g8 = EA2 + g8 | 0) >>> 0 < EA2 >>> 0 ? iA2 + 1 | 0 : iA2, oA2 = DA(eA2, n5, d4, yA2), EA2 = w4 + iA2 | 0, EA2 = (g8 = oA2 + g8 | 0) >>> 0 < oA2 >>> 0 ? EA2 + 1 | 0 : EA2, iA2 = DA(aA2, tA2, l5, X6), oA2 = w4 + EA2 | 0, oA2 = (g8 = iA2 + g8 | 0) >>> 0 < iA2 >>> 0 ? oA2 + 1 | 0 : oA2, EA2 = DA(sA2, f4, Z5, Z5 >> 31), iA2 = w4 + oA2 | 0, iA2 = (iA2 = (g8 = EA2 + g8 | 0) >>> 0 < EA2 >>> 0 ? iA2 + 1 | 0 : iA2) + (EA2 = I9 >> 26) | 0, iA2 = (I9 = (oA2 = g8) + (g8 = (67108863 & I9) << 6 | fA2 >>> 26) | 0) >>> 0 < g8 >>> 0 ? iA2 + 1 | 0 : iA2, iA2 = (I9 = (g8 = I9) + 16777216 | 0) >>> 0 < 16777216 ? iA2 + 1 | 0 : iA2, o4[A10 + 36 >> 2] = g8 - (-33554432 & I9), oA2 = rA2 - (-33554432 & UA2) | 0, EA2 = nA2 - (g8 = -67108864 & HA2) | 0, pA2 = SA2 - ((g8 >>> 0 > nA2 >>> 0) + QA2 | 0) | 0, I9 = (g8 = DA((33554431 & (g8 = iA2)) << 7 | I9 >>> 25, iA2 >>= 25, 19, 0)) + EA2 | 0, EA2 = w4 + pA2 | 0, iA2 = I9 >>> 0 < g8 >>> 0 ? EA2 + 1 | 0 : EA2, EA2 = iA2 = (67108863 & (iA2 = (I9 = (g8 = I9) + 33554432 | 0) >>> 0 < 33554432 ? iA2 + 1 | 0 : iA2)) << 6 | I9 >>> 26, iA2 = iA2 + oA2 | 0, o4[A10 + 4 >> 2] = iA2, o4[A10 >> 2] = g8 - (-67108864 & I9);
                    }
                    function l4(A10, I9) {
                      var g8, C6, B6, Q6, i6, E6, a5, n5, f4, t5, e5, c5, y6, h5, s5, p6, u6, k6, F6, l5, H6, M6, G6, U6, J6 = 0, N6 = 0, Y5 = 0, b6 = 0, _6 = 0, K6 = 0, P6 = 0, v6 = 0, m5 = 0, d4 = 0, L6 = 0, R6 = 0, x6 = 0, j5 = 0, X6 = 0, q5 = 0, z6 = 0, V6 = 0, O6 = 0, T6 = 0, W6 = 0, Z5 = 0, $5 = 0, AA2 = 0, IA2 = 0, gA2 = 0, CA2 = 0, BA2 = 0, QA2 = 0, iA2 = 0, EA2 = 0, oA2 = 0, aA2 = 0, nA2 = 0, rA2 = 0;
                      D4 = g8 = D4 - 48 | 0, S5(A10, I9), S5(A10 + 80 | 0, I9 + 40 | 0), J6 = DA(x6 = (W6 = o4[I9 + 92 >> 2]) << 1, i6 = x6 >> 31, R6 = (b6 = o4[I9 + 84 >> 2]) << 1, C6 = R6 >> 31), Y5 = w4, BA2 = j5 = o4[I9 + 88 >> 2], N6 = (L6 = DA(j5, q5 = j5 >> 31, j5, q5)) + J6 | 0, J6 = w4 + Y5 | 0, J6 = N6 >>> 0 < L6 >>> 0 ? J6 + 1 | 0 : J6, Y5 = (m5 = DA(P6 = o4[I9 + 96 >> 2], E6 = P6 >> 31, L6 = (_6 = o4[I9 + 80 >> 2]) << 1, B6 = L6 >> 31)) + N6 | 0, N6 = w4 + J6 | 0, N6 = Y5 >>> 0 < m5 >>> 0 ? N6 + 1 | 0 : N6, IA2 = o4[I9 + 108 >> 2], m5 = DA(d4 = r3(IA2, 38), e5 = d4 >> 31, IA2, h5 = IA2 >> 31), J6 = w4 + N6 | 0, J6 = (Y5 = m5 + Y5 | 0) >>> 0 < m5 >>> 0 ? J6 + 1 | 0 : J6, v6 = Y5, Z5 = o4[I9 + 112 >> 2], Y5 = DA(K6 = r3(Z5, 19), a5 = K6 >> 31, N6 = (z6 = o4[I9 + 104 >> 2]) << 1, N6 >> 31), J6 = w4 + J6 | 0, J6 = (N6 = v6 + Y5 | 0) >>> 0 < Y5 >>> 0 ? J6 + 1 | 0 : J6, iA2 = o4[I9 + 116 >> 2], Y5 = ($5 = DA(m5 = r3(iA2, 38), Q6 = m5 >> 31, X6 = (V6 = o4[I9 + 100 >> 2]) << 1, f4 = X6 >> 31)) + N6 | 0, N6 = w4 + J6 | 0, EA2 = J6 = (Y5 >>> 0 < $5 >>> 0 ? N6 + 1 | 0 : N6) << 1 | Y5 >>> 31, oA2 = Y5 = 33554432 + (s5 = Y5 << 1) | 0, aA2 = J6 = Y5 >>> 0 < 33554432 ? J6 + 1 | 0 : J6, gA2 = (67108863 & J6) << 6 | Y5 >>> 26, O6 = J6 >> 26, J6 = DA(R6, C6, P6, E6), N6 = w4, Y5 = DA(j5 <<= 1, t5 = j5 >> 31, W6, p6 = W6 >> 31), N6 = w4 + N6 | 0, N6 = (J6 = Y5 + J6 | 0) >>> 0 < Y5 >>> 0 ? N6 + 1 | 0 : N6, Y5 = ($5 = DA(V6, c5 = V6 >> 31, L6, B6)) + J6 | 0, J6 = w4 + N6 | 0, J6 = Y5 >>> 0 < $5 >>> 0 ? J6 + 1 | 0 : J6, N6 = Y5, Y5 = DA(K6, a5, $5 = IA2 << 1, u6 = $5 >> 31), J6 = w4 + J6 | 0, J6 = (N6 = N6 + Y5 | 0) >>> 0 < Y5 >>> 0 ? J6 + 1 | 0 : J6, Y5 = DA(m5, Q6, z6, n5 = z6 >> 31), J6 = w4 + J6 | 0, J6 = (N6 = Y5 + N6 | 0) >>> 0 < Y5 >>> 0 ? J6 + 1 | 0 : J6, Y5 = gA2, gA2 = N6 << 1, N6 = (J6 << 1 | N6 >>> 31) + O6 | 0, N6 = (Y5 = Y5 + gA2 | 0) >>> 0 < gA2 >>> 0 ? N6 + 1 | 0 : N6, gA2 = Y5, nA2 = Y5 = Y5 + 16777216 | 0, v6 = (33554431 & (N6 = Y5 >>> 0 < 16777216 ? N6 + 1 | 0 : N6)) << 7 | Y5 >>> 25, O6 = N6 >> 25, J6 = DA(x6, i6, W6, p6), Y5 = w4, N6 = (T6 = DA(P6, E6, j5, t5)) + J6 | 0, J6 = w4 + Y5 | 0, J6 = N6 >>> 0 < T6 >>> 0 ? J6 + 1 | 0 : J6, Y5 = DA(R6, C6, X6, f4), J6 = w4 + J6 | 0, J6 = (N6 = Y5 + N6 | 0) >>> 0 < Y5 >>> 0 ? J6 + 1 | 0 : J6, Y5 = (T6 = DA(L6, B6, z6, n5)) + N6 | 0, N6 = w4 + J6 | 0, N6 = Y5 >>> 0 < T6 >>> 0 ? N6 + 1 | 0 : N6, J6 = Y5, Y5 = DA(K6, a5, Z5, y6 = Z5 >> 31), N6 = w4 + N6 | 0, N6 = (J6 = J6 + Y5 | 0) >>> 0 < Y5 >>> 0 ? N6 + 1 | 0 : N6, Y5 = (T6 = DA(m5, Q6, $5, u6)) + J6 | 0, J6 = w4 + N6 | 0, N6 = (Y5 >>> 0 < T6 >>> 0 ? J6 + 1 | 0 : J6) << 1 | Y5 >>> 31, Y5 = (J6 = v6) + (v6 = Y5 << 1) | 0, J6 = N6 + O6 | 0, J6 = Y5 >>> 0 < v6 >>> 0 ? J6 + 1 | 0 : J6, O6 = Y5, T6 = N6 = Y5 + 33554432 | 0, Y5 = J6 = N6 >>> 0 < 33554432 ? J6 + 1 | 0 : J6, o4[A10 + 144 >> 2] = O6 - (-67108864 & N6), O6 = DA(J6 = r3(V6, 38), J6 >> 31, V6, c5), v6 = w4, _6 = DA(J6 = _6, N6 = J6 >> 31, J6, N6), J6 = w4 + v6 | 0, J6 = (N6 = _6 + O6 | 0) >>> 0 < _6 >>> 0 ? J6 + 1 | 0 : J6, v6 = DA(_6 = r3(z6, 19), k6 = _6 >> 31, O6 = P6 << 1, F6 = O6 >> 31), J6 = w4 + J6 | 0, J6 = (N6 = v6 + N6 | 0) >>> 0 < v6 >>> 0 ? J6 + 1 | 0 : J6, v6 = DA(x6, i6, d4, e5), J6 = w4 + J6 | 0, J6 = (N6 = v6 + N6 | 0) >>> 0 < v6 >>> 0 ? J6 + 1 | 0 : J6, v6 = (rA2 = DA(K6, a5, j5, t5)) + N6 | 0, N6 = w4 + J6 | 0, N6 = v6 >>> 0 < rA2 >>> 0 ? N6 + 1 | 0 : N6, J6 = v6, v6 = DA(R6, C6, m5, Q6), N6 = w4 + N6 | 0, N6 = ((J6 = J6 + v6 | 0) >>> 0 < v6 >>> 0 ? N6 + 1 | 0 : N6) << 1, v6 = J6, rA2 = J6 = N6 | J6 >>> 31, M6 = v6 = 33554432 + (l5 = v6 << 1) | 0, G6 = J6 = v6 >>> 0 < 33554432 ? J6 + 1 | 0 : J6, AA2 = (67108863 & J6) << 6 | v6 >>> 26, v6 = J6 >> 26, J6 = DA(_6, k6, X6, f4), CA2 = w4, QA2 = b6, N6 = (b6 = DA(L6, B6, b6, H6 = b6 >> 31)) + J6 | 0, J6 = w4 + CA2 | 0, J6 = N6 >>> 0 < b6 >>> 0 ? J6 + 1 | 0 : J6, b6 = (CA2 = DA(P6, E6, d4, e5)) + N6 | 0, N6 = w4 + J6 | 0, N6 = b6 >>> 0 < CA2 >>> 0 ? N6 + 1 | 0 : N6, CA2 = DA(K6, a5, x6, i6), J6 = w4 + N6 | 0, J6 = (b6 = CA2 + b6 | 0) >>> 0 < CA2 >>> 0 ? J6 + 1 | 0 : J6, N6 = b6, b6 = DA(m5, Q6, BA2, q5), J6 = w4 + J6 | 0, J6 = ((N6 = N6 + b6 | 0) >>> 0 < b6 >>> 0 ? J6 + 1 | 0 : J6) << 1, b6 = N6, N6 = (N6 = J6 | N6 >>> 31) + v6 | 0, v6 = b6 = (J6 = b6 << 1) + AA2 | 0, J6 = N6 = J6 >>> 0 > b6 >>> 0 ? N6 + 1 | 0 : N6, CA2 = b6 = b6 + 16777216 | 0, U6 = (33554431 & (J6 = b6 >>> 0 < 16777216 ? J6 + 1 | 0 : J6)) << 7 | b6 >>> 25, AA2 = J6 >> 25, J6 = DA(L6, B6, BA2, q5), b6 = w4, N6 = (QA2 = DA(R6, C6, QA2, H6)) + J6 | 0, J6 = w4 + b6 | 0, J6 = N6 >>> 0 < QA2 >>> 0 ? J6 + 1 | 0 : J6, b6 = DA(_6, k6, z6, n5), J6 = w4 + J6 | 0, J6 = (N6 = b6 + N6 | 0) >>> 0 < b6 >>> 0 ? J6 + 1 | 0 : J6, b6 = (_6 = DA(X6, f4, d4, e5)) + N6 | 0, N6 = w4 + J6 | 0, N6 = b6 >>> 0 < _6 >>> 0 ? N6 + 1 | 0 : N6, _6 = DA(K6, a5, O6, F6), J6 = w4 + N6 | 0, J6 = (b6 = _6 + b6 | 0) >>> 0 < _6 >>> 0 ? J6 + 1 | 0 : J6, _6 = DA(m5, Q6, x6, i6), N6 = w4 + J6 | 0, J6 = (N6 = ((b6 = _6 + b6 | 0) >>> 0 < _6 >>> 0 ? N6 + 1 | 0 : N6) << 1 | b6 >>> 31) + AA2 | 0, J6 = (b6 = (_6 = b6 << 1) + U6 | 0) >>> 0 < _6 >>> 0 ? J6 + 1 | 0 : J6, _6 = b6, QA2 = N6 = b6 + 33554432 | 0, b6 = J6 = N6 >>> 0 < 33554432 ? J6 + 1 | 0 : J6, o4[A10 + 128 >> 2] = _6 - (-67108864 & N6), J6 = DA(j5, t5, V6, c5), N6 = w4, _6 = DA(P6, E6, x6, i6), N6 = w4 + N6 | 0, N6 = (J6 = _6 + J6 | 0) >>> 0 < _6 >>> 0 ? N6 + 1 | 0 : N6, _6 = (AA2 = DA(R6, C6, z6, n5)) + J6 | 0, J6 = w4 + N6 | 0, J6 = _6 >>> 0 < AA2 >>> 0 ? J6 + 1 | 0 : J6, N6 = _6, _6 = DA(L6, B6, IA2, h5), J6 = w4 + J6 | 0, J6 = (N6 = N6 + _6 | 0) >>> 0 < _6 >>> 0 ? J6 + 1 | 0 : J6, _6 = (AA2 = DA(m5, Q6, Z5, y6)) + N6 | 0, N6 = w4 + J6 | 0, N6 = J6 = (_6 >>> 0 < AA2 >>> 0 ? N6 + 1 | 0 : N6) << 1 | _6 >>> 31, J6 = (J6 = Y5 >> 26) + N6 | 0, J6 = (Y5 = (AA2 = _6 <<= 1) + (_6 = (67108863 & Y5) << 6 | T6 >>> 26) | 0) >>> 0 < _6 >>> 0 ? J6 + 1 | 0 : J6, _6 = Y5, N6 = J6, T6 = J6 = Y5 + 16777216 | 0, Y5 = N6 = J6 >>> 0 < 16777216 ? N6 + 1 | 0 : N6, o4[A10 + 148 >> 2] = _6 - (-33554432 & J6), J6 = DA(L6, B6, W6, p6), W6 = w4, N6 = (q5 = DA(R6, C6, BA2, q5)) + J6 | 0, J6 = w4 + W6 | 0, J6 = N6 >>> 0 < q5 >>> 0 ? J6 + 1 | 0 : J6, d4 = DA(z6, n5, d4, e5), J6 = w4 + J6 | 0, J6 = (N6 = d4 + N6 | 0) >>> 0 < d4 >>> 0 ? J6 + 1 | 0 : J6, K6 = (d4 = DA(K6, a5, X6, f4)) + N6 | 0, N6 = w4 + J6 | 0, N6 = K6 >>> 0 < d4 >>> 0 ? N6 + 1 | 0 : N6, d4 = DA(m5, Q6, P6, E6), J6 = w4 + N6 | 0, N6 = (J6 = ((K6 = d4 + K6 | 0) >>> 0 < d4 >>> 0 ? J6 + 1 | 0 : J6) << 1 | K6 >>> 31) + (N6 = b6 >> 26) | 0, N6 = (b6 = (_6 = K6 << 1) + (K6 = (67108863 & b6) << 6 | QA2 >>> 26) | 0) >>> 0 < K6 >>> 0 ? N6 + 1 | 0 : N6, K6 = b6, J6 = N6, d4 = N6 = b6 + 16777216 | 0, b6 = J6 = N6 >>> 0 < 16777216 ? J6 + 1 | 0 : J6, o4[A10 + 132 >> 2] = K6 - (-33554432 & N6), J6 = DA(z6, n5, j5, t5), K6 = w4, N6 = (P6 = DA(P6, E6, P6, E6)) + J6 | 0, J6 = w4 + K6 | 0, J6 = N6 >>> 0 < P6 >>> 0 ? J6 + 1 | 0 : J6, P6 = (K6 = DA(x6, i6, X6, f4)) + N6 | 0, N6 = w4 + J6 | 0, N6 = P6 >>> 0 < K6 >>> 0 ? N6 + 1 | 0 : N6, K6 = DA(R6, C6, $5, u6), J6 = w4 + N6 | 0, J6 = (P6 = K6 + P6 | 0) >>> 0 < K6 >>> 0 ? J6 + 1 | 0 : J6, K6 = DA(L6, B6, Z5, y6), N6 = w4 + J6 | 0, N6 = (P6 = K6 + P6 | 0) >>> 0 < K6 >>> 0 ? N6 + 1 | 0 : N6, K6 = DA(J6 = m5, Q6, m5 = iA2, X6 = m5 >> 31), J6 = w4 + N6 | 0, J6 = (J6 = ((P6 = K6 + P6 | 0) >>> 0 < K6 >>> 0 ? J6 + 1 | 0 : J6) << 1 | P6 >>> 31) + (N6 = Y5 >> 25) | 0, J6 = (Y5 = (_6 = P6 << 1) + (P6 = (33554431 & Y5) << 7 | T6 >>> 25) | 0) >>> 0 < P6 >>> 0 ? J6 + 1 | 0 : J6, P6 = Y5, N6 = J6, K6 = J6 = Y5 + 33554432 | 0, Y5 = N6 = J6 >>> 0 < 33554432 ? N6 + 1 | 0 : N6, o4[A10 + 152 >> 2] = P6 - (-67108864 & J6), N6 = s5 - (J6 = -67108864 & oA2) | 0, q5 = EA2 - ((J6 >>> 0 > s5 >>> 0) + aA2 | 0) | 0, J6 = b6 >> 25, b6 = (d4 = (33554431 & b6) << 7 | d4 >>> 25) + N6 | 0, N6 = J6 + q5 | 0, N6 = b6 >>> 0 < d4 >>> 0 ? N6 + 1 | 0 : N6, _6 = N6 = (67108863 & (N6 = (J6 = b6 + 33554432 | 0) >>> 0 < 33554432 ? N6 + 1 | 0 : N6)) << 6 | J6 >>> 26, N6 = N6 + (P6 = gA2 - (-33554432 & nA2) | 0) | 0, o4[A10 + 140 >> 2] = N6, o4[A10 + 136 >> 2] = b6 - (-67108864 & J6), J6 = DA(x6, i6, z6, n5), N6 = w4, b6 = DA(V6, c5, O6, F6), N6 = w4 + N6 | 0, N6 = (J6 = b6 + J6 | 0) >>> 0 < b6 >>> 0 ? N6 + 1 | 0 : N6, b6 = (x6 = DA(j5, t5, IA2, h5)) + J6 | 0, J6 = w4 + N6 | 0, J6 = b6 >>> 0 < x6 >>> 0 ? J6 + 1 | 0 : J6, N6 = b6, b6 = DA(R6, C6, Z5, y6), J6 = w4 + J6 | 0, J6 = (N6 = N6 + b6 | 0) >>> 0 < b6 >>> 0 ? J6 + 1 | 0 : J6, b6 = (R6 = DA(L6, B6, m5, X6)) + N6 | 0, N6 = w4 + J6 | 0, N6 = J6 = (b6 >>> 0 < R6 >>> 0 ? N6 + 1 | 0 : N6) << 1 | b6 >>> 31, J6 = (J6 = Y5 >> 26) + N6 | 0, N6 = (Y5 = (_6 = b6 <<= 1) + (b6 = (67108863 & Y5) << 6 | K6 >>> 26) | 0) >>> 0 < b6 >>> 0 ? J6 + 1 | 0 : J6, N6 = (J6 = Y5 + 16777216 | 0) >>> 0 < 16777216 ? N6 + 1 | 0 : N6, o4[A10 + 156 >> 2] = Y5 - (-33554432 & J6), b6 = v6 - (-33554432 & CA2) | 0, R6 = l5 - (Y5 = -67108864 & M6) | 0, L6 = rA2 - ((Y5 >>> 0 > l5 >>> 0) + G6 | 0) | 0, N6 = DA((33554431 & N6) << 7 | J6 >>> 25, N6 >> 25, 19, 0), J6 = w4 + L6 | 0, N6 = N6 >>> 0 > (Y5 = N6 + R6 | 0) >>> 0 ? J6 + 1 | 0 : J6, _6 = N6 = (67108863 & (N6 = (J6 = Y5 + 33554432 | 0) >>> 0 < 33554432 ? N6 + 1 | 0 : N6)) << 6 | J6 >>> 26, N6 = N6 + b6 | 0, o4[A10 + 124 >> 2] = N6, o4[A10 + 120 >> 2] = Y5 - (-67108864 & J6), J6 = o4[I9 + 40 >> 2], N6 = o4[I9 + 44 >> 2], Y5 = o4[I9 + 4 >> 2], b6 = o4[I9 + 48 >> 2], R6 = o4[I9 + 8 >> 2], L6 = o4[I9 + 52 >> 2], m5 = o4[I9 + 12 >> 2], x6 = o4[I9 + 56 >> 2], P6 = o4[I9 + 16 >> 2], K6 = o4[I9 + 60 >> 2], z6 = o4[I9 + 20 >> 2], X6 = o4[I9 - -64 >> 2], j5 = o4[I9 + 24 >> 2], d4 = o4[I9 + 68 >> 2], q5 = o4[I9 + 28 >> 2], V6 = o4[I9 + 72 >> 2], Z5 = o4[I9 + 32 >> 2], BA2 = o4[I9 >> 2], o4[A10 + 76 >> 2] = o4[I9 + 76 >> 2] + o4[I9 + 36 >> 2], o4[A10 + 72 >> 2] = V6 + Z5, o4[A10 + 68 >> 2] = d4 + q5, o4[(IA2 = A10 - -64 | 0) >> 2] = j5 + X6, o4[A10 + 60 >> 2] = K6 + z6, o4[A10 + 56 >> 2] = P6 + x6, o4[A10 + 52 >> 2] = m5 + L6, o4[A10 + 48 >> 2] = b6 + R6, o4[A10 + 44 >> 2] = N6 + Y5, o4[(I9 = A10 + 40 | 0) >> 2] = J6 + BA2, S5(g8, I9), J6 = o4[A10 + 80 >> 2], N6 = o4[A10 + 4 >> 2], Y5 = o4[A10 + 84 >> 2], b6 = o4[A10 + 8 >> 2], R6 = o4[A10 + 88 >> 2], L6 = o4[A10 + 12 >> 2], m5 = o4[A10 + 92 >> 2], x6 = o4[A10 + 16 >> 2], P6 = o4[A10 + 96 >> 2], K6 = o4[A10 + 20 >> 2], z6 = o4[A10 + 100 >> 2], X6 = o4[A10 + 24 >> 2], j5 = o4[A10 + 104 >> 2], d4 = o4[A10 + 28 >> 2], q5 = o4[A10 + 108 >> 2], V6 = o4[A10 + 32 >> 2], Z5 = o4[A10 + 112 >> 2], BA2 = o4[A10 >> 2], _6 = (W6 = o4[A10 + 116 >> 2]) - ($5 = o4[A10 + 36 >> 2]) | 0, o4[A10 + 116 >> 2] = _6, O6 = Z5 - V6 | 0, o4[A10 + 112 >> 2] = O6, gA2 = q5 - d4 | 0, o4[A10 + 108 >> 2] = gA2, v6 = j5 - X6 | 0, o4[A10 + 104 >> 2] = v6, iA2 = z6 - K6 | 0, o4[A10 + 100 >> 2] = iA2, EA2 = P6 - x6 | 0, o4[A10 + 96 >> 2] = EA2, oA2 = m5 - L6 | 0, o4[A10 + 92 >> 2] = oA2, aA2 = R6 - b6 | 0, o4[A10 + 88 >> 2] = aA2, T6 = Y5 - N6 | 0, o4[A10 + 84 >> 2] = T6, nA2 = J6 - BA2 | 0, o4[A10 + 80 >> 2] = nA2, W6 = W6 + $5 | 0, o4[A10 + 76 >> 2] = W6, V6 = V6 + Z5 | 0, o4[A10 + 72 >> 2] = V6, d4 = d4 + q5 | 0, o4[A10 + 68 >> 2] = d4, X6 = j5 + X6 | 0, o4[IA2 >> 2] = X6, K6 = K6 + z6 | 0, o4[A10 + 60 >> 2] = K6, x6 = P6 + x6 | 0, o4[A10 + 56 >> 2] = x6, L6 = m5 + L6 | 0, o4[A10 + 52 >> 2] = L6, b6 = b6 + R6 | 0, o4[A10 + 48 >> 2] = b6, N6 = N6 + Y5 | 0, o4[A10 + 44 >> 2] = N6, Y5 = I9, I9 = J6 + BA2 | 0, o4[Y5 >> 2] = I9, J6 = o4[g8 >> 2], Y5 = o4[g8 + 4 >> 2], R6 = o4[g8 + 8 >> 2], m5 = o4[g8 + 12 >> 2], P6 = o4[g8 + 16 >> 2], z6 = o4[g8 + 20 >> 2], j5 = o4[g8 + 24 >> 2], q5 = o4[g8 + 28 >> 2], Z5 = o4[g8 + 32 >> 2], o4[A10 + 36 >> 2] = o4[g8 + 36 >> 2] - W6, o4[A10 + 32 >> 2] = Z5 - V6, o4[A10 + 28 >> 2] = q5 - d4, o4[A10 + 24 >> 2] = j5 - X6, o4[A10 + 20 >> 2] = z6 - K6, o4[A10 + 16 >> 2] = P6 - x6, o4[A10 + 12 >> 2] = m5 - L6, o4[A10 + 8 >> 2] = R6 - b6, o4[A10 + 4 >> 2] = Y5 - N6, o4[A10 >> 2] = J6 - I9, I9 = o4[A10 + 120 >> 2], J6 = o4[A10 + 124 >> 2], N6 = o4[A10 + 128 >> 2], Y5 = o4[A10 + 132 >> 2], b6 = o4[A10 + 136 >> 2], R6 = o4[A10 + 140 >> 2], L6 = o4[A10 + 144 >> 2], m5 = o4[A10 + 148 >> 2], x6 = o4[A10 + 152 >> 2], o4[A10 + 156 >> 2] = o4[A10 + 156 >> 2] - _6, o4[A10 + 152 >> 2] = x6 - O6, o4[A10 + 148 >> 2] = m5 - gA2, o4[A10 + 144 >> 2] = L6 - v6, o4[A10 + 140 >> 2] = R6 - iA2, o4[A10 + 136 >> 2] = b6 - EA2, o4[A10 + 132 >> 2] = Y5 - oA2, o4[A10 + 128 >> 2] = N6 - aA2, o4[A10 + 124 >> 2] = J6 - T6, o4[A10 + 120 >> 2] = I9 - nA2, D4 = g8 + 48 | 0;
                    }
                    function S5(A10, I9) {
                      var g8, C6, B6, Q6, i6, E6, a5, n5, f4, t5, e5, c5, y6, D5, h5, s5, p6, u6, k6, F6, l5, S6, H6, M6, G6, U6, J6, N6, Y5, b6, _6, K6, P6, v6 = 0, m5 = 0, d4 = 0, L6 = 0, R6 = 0, x6 = 0, j5 = 0, X6 = 0, q5 = 0, z6 = 0, V6 = 0, O6 = 0, T6 = 0, W6 = 0, Z5 = 0, $5 = 0, AA2 = 0, IA2 = 0, gA2 = 0, CA2 = 0, BA2 = 0, QA2 = 0;
                      v6 = DA(C6 = (s5 = o4[I9 + 12 >> 2]) << 1, E6 = C6 >> 31, s5, l5 = s5 >> 31), d4 = w4, m5 = (q5 = DA(R6 = o4[I9 + 16 >> 2], a5 = R6 >> 31, n5 = (L6 = o4[I9 + 8 >> 2]) << 1, c5 = n5 >> 31)) + v6 | 0, v6 = w4 + d4 | 0, v6 = m5 >>> 0 < q5 >>> 0 ? v6 + 1 | 0 : v6, d4 = (z6 = DA(T6 = (f4 = o4[I9 + 20 >> 2]) << 1, y6 = T6 >> 31, q5 = (x6 = o4[I9 + 4 >> 2]) << 1, B6 = q5 >> 31)) + m5 | 0, m5 = w4 + v6 | 0, m5 = d4 >>> 0 < z6 >>> 0 ? m5 + 1 | 0 : m5, j5 = DA(g8 = o4[I9 + 24 >> 2], t5 = g8 >> 31, z6 = ($5 = o4[I9 >> 2]) << 1, Q6 = z6 >> 31), v6 = w4 + m5 | 0, v6 = (d4 = j5 + d4 | 0) >>> 0 < j5 >>> 0 ? v6 + 1 | 0 : v6, m5 = d4, D5 = o4[I9 + 32 >> 2], d4 = DA(V6 = r3(D5, 19), e5 = V6 >> 31, D5, u6 = D5 >> 31), v6 = w4 + v6 | 0, v6 = (m5 = m5 + d4 | 0) >>> 0 < d4 >>> 0 ? v6 + 1 | 0 : v6, U6 = o4[I9 + 36 >> 2], d4 = DA(j5 = r3(U6, 38), i6 = j5 >> 31, k6 = (h5 = o4[I9 + 28 >> 2]) << 1, S6 = k6 >> 31), I9 = w4 + v6 | 0, Z5 = m5 = d4 + m5 | 0, d4 = m5 >>> 0 < d4 >>> 0 ? I9 + 1 | 0 : I9, I9 = DA(q5, B6, R6, a5), v6 = w4, m5 = DA(n5, c5, s5, l5), v6 = w4 + v6 | 0, v6 = (I9 = m5 + I9 | 0) >>> 0 < m5 >>> 0 ? v6 + 1 | 0 : v6, X6 = DA(f4, F6 = f4 >> 31, z6, Q6), m5 = w4 + v6 | 0, m5 = (I9 = X6 + I9 | 0) >>> 0 < X6 >>> 0 ? m5 + 1 | 0 : m5, X6 = DA(V6, e5, k6, S6), v6 = w4 + m5 | 0, v6 = (I9 = X6 + I9 | 0) >>> 0 < X6 >>> 0 ? v6 + 1 | 0 : v6, m5 = DA(j5, i6, g8, t5), v6 = w4 + v6 | 0, BA2 = I9 = m5 + I9 | 0, O6 = I9 >>> 0 < m5 >>> 0 ? v6 + 1 | 0 : v6, v6 = DA(q5, B6, C6, E6), m5 = w4, H6 = I9 = L6, L6 = DA(I9, W6 = I9 >> 31, I9, W6), I9 = w4 + m5 | 0, I9 = (v6 = L6 + v6 | 0) >>> 0 < L6 >>> 0 ? I9 + 1 | 0 : I9, m5 = (L6 = DA(z6, Q6, R6, a5)) + v6 | 0, v6 = w4 + I9 | 0, v6 = m5 >>> 0 < L6 >>> 0 ? v6 + 1 | 0 : v6, I9 = (L6 = DA(X6 = r3(h5, 38), p6 = X6 >> 31, h5, M6 = h5 >> 31)) + m5 | 0, m5 = w4 + v6 | 0, m5 = I9 >>> 0 < L6 >>> 0 ? m5 + 1 | 0 : m5, I9 = (v6 = I9) + (L6 = DA(V6, e5, I9 = g8 << 1, I9 >> 31)) | 0, v6 = w4 + m5 | 0, v6 = I9 >>> 0 < L6 >>> 0 ? v6 + 1 | 0 : v6, m5 = I9, I9 = DA(j5, i6, T6, y6), v6 = w4 + v6 | 0, J6 = m5 = m5 + I9 | 0, N6 = v6 = I9 >>> 0 > m5 >>> 0 ? v6 + 1 | 0 : v6, I9 = v6, Y5 = m5 = m5 + 33554432 | 0, b6 = I9 = m5 >>> 0 < 33554432 ? I9 + 1 | 0 : I9, v6 = (v6 = I9 >> 26) + O6 | 0, BA2 = I9 = (m5 = (67108863 & I9) << 6 | m5 >>> 26) + BA2 | 0, v6 = I9 >>> 0 < m5 >>> 0 ? v6 + 1 | 0 : v6, _6 = I9 = I9 + 16777216 | 0, v6 = (v6 = (m5 = I9 >>> 0 < 16777216 ? v6 + 1 | 0 : v6) >> 25) + d4 | 0, I9 = (I9 = (33554431 & m5) << 7 | I9 >>> 25) >>> 0 > (m5 = I9 + Z5 | 0) >>> 0 ? v6 + 1 | 0 : v6, Z5 = v6 = m5 + 33554432 | 0, L6 = I9 = v6 >>> 0 < 33554432 ? I9 + 1 | 0 : I9, o4[A10 + 24 >> 2] = m5 - (-67108864 & v6), I9 = DA(z6, Q6, H6, W6), v6 = w4, d4 = DA(q5, B6, x6, CA2 = x6 >> 31), m5 = w4 + v6 | 0, m5 = (I9 = d4 + I9 | 0) >>> 0 < d4 >>> 0 ? m5 + 1 | 0 : m5, O6 = DA(d4 = r3(g8, 19), gA2 = d4 >> 31, g8, t5), v6 = w4 + m5 | 0, v6 = (I9 = O6 + I9 | 0) >>> 0 < O6 >>> 0 ? v6 + 1 | 0 : v6, m5 = (O6 = DA(T6, y6, X6, p6)) + I9 | 0, I9 = w4 + v6 | 0, I9 = m5 >>> 0 < O6 >>> 0 ? I9 + 1 | 0 : I9, AA2 = DA(V6, e5, O6 = R6 << 1, G6 = O6 >> 31), v6 = w4 + I9 | 0, v6 = (m5 = AA2 + m5 | 0) >>> 0 < AA2 >>> 0 ? v6 + 1 | 0 : v6, I9 = m5, m5 = DA(j5, i6, C6, E6), v6 = w4 + v6 | 0, IA2 = I9 = I9 + m5 | 0, AA2 = I9 >>> 0 < m5 >>> 0 ? v6 + 1 | 0 : v6, I9 = DA(T6, y6, d4, gA2), v6 = w4, x6 = DA(z6, Q6, x6, CA2), m5 = w4 + v6 | 0, m5 = (I9 = x6 + I9 | 0) >>> 0 < x6 >>> 0 ? m5 + 1 | 0 : m5, x6 = DA(R6, a5, X6, p6), v6 = w4 + m5 | 0, v6 = (I9 = x6 + I9 | 0) >>> 0 < x6 >>> 0 ? v6 + 1 | 0 : v6, m5 = (x6 = DA(V6, e5, C6, E6)) + I9 | 0, I9 = w4 + v6 | 0, I9 = m5 >>> 0 < x6 >>> 0 ? I9 + 1 | 0 : I9, x6 = DA(j5, i6, H6, W6), v6 = w4 + I9 | 0, QA2 = m5 = x6 + m5 | 0, CA2 = m5 >>> 0 < x6 >>> 0 ? v6 + 1 | 0 : v6, m5 = DA(I9 = r3(f4, 38), I9 >> 31, f4, F6), x6 = w4, I9 = $5, $5 = m5, m5 = DA(I9, v6 = I9 >> 31, I9, v6), v6 = w4 + x6 | 0, v6 = (I9 = $5 + m5 | 0) >>> 0 < m5 >>> 0 ? v6 + 1 | 0 : v6, d4 = DA(d4, gA2, O6, G6), m5 = w4 + v6 | 0, m5 = (I9 = d4 + I9 | 0) >>> 0 < d4 >>> 0 ? m5 + 1 | 0 : m5, d4 = DA(C6, E6, X6, p6), v6 = w4 + m5 | 0, v6 = (I9 = d4 + I9 | 0) >>> 0 < d4 >>> 0 ? v6 + 1 | 0 : v6, m5 = (d4 = DA(V6, e5, n5, c5)) + I9 | 0, I9 = w4 + v6 | 0, I9 = m5 >>> 0 < d4 >>> 0 ? I9 + 1 | 0 : I9, d4 = DA(q5, B6, j5, i6), v6 = w4 + I9 | 0, x6 = m5 = d4 + m5 | 0, gA2 = v6 = m5 >>> 0 < d4 >>> 0 ? v6 + 1 | 0 : v6, K6 = m5 = m5 + 33554432 | 0, P6 = v6 = m5 >>> 0 < 33554432 ? v6 + 1 | 0 : v6, I9 = v6 >> 26, v6 = (67108863 & v6) << 6 | m5 >>> 26, m5 = I9 + CA2 | 0, $5 = d4 = v6 + QA2 | 0, v6 = m5 = v6 >>> 0 > d4 >>> 0 ? m5 + 1 | 0 : m5, QA2 = m5 = d4 + 16777216 | 0, d4 = (33554431 & (v6 = m5 >>> 0 < 16777216 ? v6 + 1 | 0 : v6)) << 7 | m5 >>> 25, v6 = (v6 >> 25) + AA2 | 0, v6 = (m5 = d4 + IA2 | 0) >>> 0 < d4 >>> 0 ? v6 + 1 | 0 : v6, AA2 = I9 = m5 + 33554432 | 0, d4 = v6 = I9 >>> 0 < 33554432 ? v6 + 1 | 0 : v6, o4[A10 + 8 >> 2] = m5 - (-67108864 & I9), I9 = DA(n5, c5, f4, F6), v6 = w4, m5 = DA(R6, a5, C6, E6), v6 = w4 + v6 | 0, v6 = (I9 = m5 + I9 | 0) >>> 0 < m5 >>> 0 ? v6 + 1 | 0 : v6, m5 = DA(q5, B6, g8, t5), v6 = w4 + v6 | 0, v6 = (I9 = m5 + I9 | 0) >>> 0 < m5 >>> 0 ? v6 + 1 | 0 : v6, m5 = DA(z6, Q6, h5, M6), v6 = w4 + v6 | 0, v6 = (I9 = m5 + I9 | 0) >>> 0 < m5 >>> 0 ? v6 + 1 | 0 : v6, IA2 = (m5 = DA(j5, i6, D5, u6)) + I9 | 0, I9 = w4 + v6 | 0, m5 = (v6 = L6 >> 26) + (m5 = m5 >>> 0 > IA2 >>> 0 ? I9 + 1 | 0 : I9) | 0, Z5 = I9 = (L6 = (67108863 & L6) << 6 | Z5 >>> 26) + IA2 | 0, v6 = I9 >>> 0 < L6 >>> 0 ? m5 + 1 | 0 : m5, IA2 = I9 = I9 + 16777216 | 0, L6 = v6 = I9 >>> 0 < 16777216 ? v6 + 1 | 0 : v6, o4[A10 + 28 >> 2] = Z5 - (-33554432 & I9), I9 = DA(z6, Q6, s5, l5), m5 = w4, v6 = (W6 = DA(q5, B6, H6, W6)) + I9 | 0, I9 = w4 + m5 | 0, I9 = v6 >>> 0 < W6 >>> 0 ? I9 + 1 | 0 : I9, v6 = (X6 = DA(g8, t5, X6, p6)) + v6 | 0, m5 = w4 + I9 | 0, I9 = (V6 = DA(V6, e5, T6, y6)) + v6 | 0, v6 = w4 + (v6 >>> 0 < X6 >>> 0 ? m5 + 1 | 0 : m5) | 0, v6 = I9 >>> 0 < V6 >>> 0 ? v6 + 1 | 0 : v6, m5 = DA(j5, i6, R6, a5), v6 = w4 + v6 | 0, v6 = (v6 = (I9 = m5 + I9 | 0) >>> 0 < m5 >>> 0 ? v6 + 1 | 0 : v6) + (m5 = d4 >> 26) | 0, I9 = (m5 = d4 = (Z5 = I9) + (I9 = (67108863 & d4) << 6 | AA2 >>> 26) | 0) >>> 0 < I9 >>> 0 ? v6 + 1 | 0 : v6, V6 = v6 = m5 + 16777216 | 0, d4 = I9 = v6 >>> 0 < 16777216 ? I9 + 1 | 0 : I9, o4[A10 + 12 >> 2] = m5 - (-33554432 & v6), I9 = DA(g8, t5, n5, c5), v6 = w4, m5 = DA(R6, a5, R6, a5), v6 = w4 + v6 | 0, v6 = (I9 = m5 + I9 | 0) >>> 0 < m5 >>> 0 ? v6 + 1 | 0 : v6, m5 = DA(C6, E6, T6, y6), v6 = w4 + v6 | 0, v6 = (I9 = m5 + I9 | 0) >>> 0 < m5 >>> 0 ? v6 + 1 | 0 : v6, m5 = (R6 = DA(q5, B6, k6, S6)) + I9 | 0, I9 = w4 + v6 | 0, I9 = m5 >>> 0 < R6 >>> 0 ? I9 + 1 | 0 : I9, v6 = (R6 = DA(z6, Q6, D5, u6)) + m5 | 0, m5 = w4 + I9 | 0, m5 = v6 >>> 0 < R6 >>> 0 ? m5 + 1 | 0 : m5, I9 = (R6 = DA(I9 = j5, i6, j5 = U6, T6 = j5 >> 31)) + v6 | 0, v6 = w4 + m5 | 0, v6 = I9 >>> 0 < R6 >>> 0 ? v6 + 1 | 0 : v6, m5 = I9, v6 = (I9 = L6 >> 25) + v6 | 0, v6 = (m5 = m5 + (L6 = (33554431 & L6) << 7 | IA2 >>> 25) | 0) >>> 0 < L6 >>> 0 ? v6 + 1 | 0 : v6, R6 = I9 = m5 + 33554432 | 0, L6 = v6 = I9 >>> 0 < 33554432 ? v6 + 1 | 0 : v6, o4[A10 + 32 >> 2] = m5 - (-67108864 & I9), v6 = d4 >> 25, m5 = (d4 = (33554431 & d4) << 7 | V6 >>> 25) + (J6 - (I9 = -67108864 & Y5) | 0) | 0, I9 = v6 + (N6 - ((I9 >>> 0 > J6 >>> 0) + b6 | 0) | 0) | 0, v6 = m5 >>> 0 < d4 >>> 0 ? I9 + 1 | 0 : I9, d4 = v6 = (67108863 & (v6 = (I9 = m5 + 33554432 | 0) >>> 0 < 33554432 ? v6 + 1 | 0 : v6)) << 6 | I9 >>> 26, v6 = v6 + (X6 = BA2 - (-33554432 & _6) | 0) | 0, o4[A10 + 20 >> 2] = v6, o4[A10 + 16 >> 2] = m5 - (-67108864 & I9), I9 = DA(C6, E6, g8, t5), m5 = w4, v6 = (d4 = DA(f4, F6, O6, G6)) + I9 | 0, I9 = w4 + m5 | 0, I9 = v6 >>> 0 < d4 >>> 0 ? I9 + 1 | 0 : I9, m5 = (d4 = DA(n5, c5, h5, M6)) + v6 | 0, v6 = w4 + I9 | 0, v6 = m5 >>> 0 < d4 >>> 0 ? v6 + 1 | 0 : v6, I9 = (d4 = DA(q5, B6, D5, u6)) + m5 | 0, m5 = w4 + v6 | 0, m5 = I9 >>> 0 < d4 >>> 0 ? m5 + 1 | 0 : m5, d4 = (v6 = I9) + (I9 = DA(z6, Q6, j5, T6)) | 0, v6 = w4 + m5 | 0, v6 = (I9 = I9 >>> 0 > d4 >>> 0 ? v6 + 1 | 0 : v6) + (v6 = L6 >> 26) | 0, I9 = (m5 = (L6 = (67108863 & L6) << 6 | R6 >>> 26) + d4 | 0) >>> 0 < L6 >>> 0 ? v6 + 1 | 0 : v6, I9 = (v6 = m5 + 16777216 | 0) >>> 0 < 16777216 ? I9 + 1 | 0 : I9, o4[A10 + 36 >> 2] = m5 - (-33554432 & v6), L6 = $5 - (-33554432 & QA2) | 0, d4 = x6 - (m5 = -67108864 & K6) | 0, q5 = gA2 - ((m5 >>> 0 > x6 >>> 0) + P6 | 0) | 0, I9 = DA((33554431 & I9) << 7 | v6 >>> 25, I9 >> 25, 19, 0), v6 = w4 + q5 | 0, I9 = I9 >>> 0 > (m5 = I9 + d4 | 0) >>> 0 ? v6 + 1 | 0 : v6, d4 = I9 = (67108863 & (I9 = (v6 = m5 + 33554432 | 0) >>> 0 < 33554432 ? I9 + 1 | 0 : I9)) << 6 | v6 >>> 26, I9 = I9 + L6 | 0, o4[A10 + 4 >> 2] = I9, o4[A10 >> 2] = m5 - (-67108864 & v6);
                    }
                    function H5(A10, I9, g8, C6, B6) {
                      var Q6, i6, n5, r4, f4, t5, e5, c5, y6, w5, h5, s5, p6, u6, k6, F6 = 0, l5 = 0, S6 = 0, H6 = 0, M6 = 0, G6 = 0, U6 = 0, J6 = 0, N6 = 0, Y5 = 0, b6 = 0, _6 = 0, K6 = 0, P6 = 0, v6 = 0, m5 = 0, d4 = 0, L6 = 0, R6 = 0, x6 = 0, j5 = 0, X6 = 0, q5 = 0, z6 = 0, V6 = 0, O6 = 0, T6 = 0, W6 = 0, Z5 = 0, $5 = 0, AA2 = 0, IA2 = 0, gA2 = 0, CA2 = 0;
                      for (Q6 = D4 + -64 | 0, i6 = o4[A10 + 60 >> 2], n5 = o4[A10 + 56 >> 2], x6 = o4[A10 + 52 >> 2], R6 = o4[A10 + 48 >> 2], r4 = o4[A10 + 44 >> 2], f4 = o4[A10 + 40 >> 2], t5 = o4[A10 + 36 >> 2], e5 = o4[A10 + 32 >> 2], c5 = o4[A10 + 28 >> 2], y6 = o4[A10 + 24 >> 2], w5 = o4[A10 + 20 >> 2], h5 = o4[A10 + 16 >> 2], s5 = o4[A10 + 12 >> 2], p6 = o4[A10 + 8 >> 2], u6 = o4[A10 + 4 >> 2], k6 = o4[A10 >> 2]; ; ) {
                        if (!B6 & C6 >>> 0 > 63 | B6)
                          F6 = g8;
                        else {
                          if (o4[Q6 + 56 >> 2] = 0, o4[Q6 + 60 >> 2] = 0, o4[Q6 + 48 >> 2] = 0, o4[Q6 + 52 >> 2] = 0, o4[Q6 + 40 >> 2] = 0, o4[Q6 + 44 >> 2] = 0, o4[Q6 + 32 >> 2] = 0, o4[Q6 + 36 >> 2] = 0, o4[Q6 + 24 >> 2] = 0, o4[Q6 + 28 >> 2] = 0, o4[Q6 + 16 >> 2] = 0, o4[Q6 + 20 >> 2] = 0, o4[Q6 + 8 >> 2] = 0, o4[Q6 + 12 >> 2] = 0, o4[Q6 >> 2] = 0, o4[Q6 + 4 >> 2] = 0, S6 = 0, C6 | B6)
                            for (; E5[S6 + Q6 | 0] = a4[I9 + S6 | 0], !B6 & (S6 = S6 + 1 | 0) >>> 0 < C6 >>> 0 | B6; )
                              ;
                          I9 = F6 = Q6, V6 = g8;
                        }
                        for (j5 = 20, l5 = k6, Y5 = u6, b6 = p6, P6 = s5, S6 = h5, g8 = w5, M6 = y6, G6 = c5, U6 = e5, m5 = t5, _6 = f4, H6 = i6, d4 = n5, v6 = x6, K6 = R6, J6 = r4; N6 = S6, l5 = YA((S6 = l5 + S6 | 0) ^ K6, 16), N6 = K6 = YA(N6 ^ (U6 = l5 + U6 | 0), 12), K6 = YA((L6 = S6 + K6 | 0) ^ l5, 8), S6 = YA(N6 ^ (U6 = K6 + U6 | 0), 7), H6 = YA((l5 = G6 + P6 | 0) ^ H6, 16), G6 = YA((J6 = H6 + J6 | 0) ^ G6, 12), P6 = YA((b6 = M6 + b6 | 0) ^ d4, 16), M6 = YA((_6 = P6 + _6 | 0) ^ M6, 12), d4 = (X6 = l5 + G6 | 0) + S6 | 0, q5 = YA((b6 = M6 + b6 | 0) ^ P6, 8), l5 = YA(d4 ^ q5, 16), P6 = YA((Y5 = g8 + Y5 | 0) ^ v6, 16), g8 = YA((m5 = P6 + m5 | 0) ^ g8, 12), N6 = S6, v6 = YA((Y5 = g8 + Y5 | 0) ^ P6, 8), N6 = YA(N6 ^ (S6 = (z6 = v6 + m5 | 0) + l5 | 0), 12), d4 = YA(l5 ^ (P6 = N6 + d4 | 0), 8), S6 = YA((m5 = d4 + S6 | 0) ^ N6, 7), N6 = U6, U6 = b6, l5 = YA(H6 ^ X6, 8), b6 = YA((H6 = l5 + J6 | 0) ^ G6, 7), v6 = YA((U6 = U6 + b6 | 0) ^ v6, 16), J6 = YA((G6 = N6 + v6 | 0) ^ b6, 12), v6 = YA(v6 ^ (b6 = J6 + U6 | 0), 8), G6 = YA((U6 = G6 + v6 | 0) ^ J6, 7), J6 = H6, H6 = Y5, Y5 = YA((_6 = _6 + q5 | 0) ^ M6, 7), M6 = J6 + (K6 = YA((H6 = H6 + Y5 | 0) ^ K6, 16)) | 0, J6 = H6, H6 = YA(M6 ^ Y5, 12), K6 = YA(K6 ^ (Y5 = J6 + H6 | 0), 8), M6 = YA((J6 = M6 + K6 | 0) ^ H6, 7), N6 = _6, H6 = l5, l5 = YA(g8 ^ z6, 7), H6 = YA(H6 ^ (_6 = l5 + L6 | 0), 16), L6 = YA((g8 = N6 + H6 | 0) ^ l5, 12), H6 = YA(H6 ^ (l5 = L6 + _6 | 0), 8), g8 = YA((_6 = g8 + H6 | 0) ^ L6, 7), j5 = j5 - 2 | 0; )
                          ;
                        if (j5 = a4[I9 + 4 | 0] | a4[I9 + 5 | 0] << 8 | a4[I9 + 6 | 0] << 16 | a4[I9 + 7 | 0] << 24, L6 = a4[I9 + 8 | 0] | a4[I9 + 9 | 0] << 8 | a4[I9 + 10 | 0] << 16 | a4[I9 + 11 | 0] << 24, X6 = a4[I9 + 12 | 0] | a4[I9 + 13 | 0] << 8 | a4[I9 + 14 | 0] << 16 | a4[I9 + 15 | 0] << 24, q5 = a4[I9 + 16 | 0] | a4[I9 + 17 | 0] << 8 | a4[I9 + 18 | 0] << 16 | a4[I9 + 19 | 0] << 24, z6 = a4[I9 + 20 | 0] | a4[I9 + 21 | 0] << 8 | a4[I9 + 22 | 0] << 16 | a4[I9 + 23 | 0] << 24, N6 = a4[I9 + 24 | 0] | a4[I9 + 25 | 0] << 8 | a4[I9 + 26 | 0] << 16 | a4[I9 + 27 | 0] << 24, O6 = a4[I9 + 28 | 0] | a4[I9 + 29 | 0] << 8 | a4[I9 + 30 | 0] << 16 | a4[I9 + 31 | 0] << 24, T6 = a4[I9 + 32 | 0] | a4[I9 + 33 | 0] << 8 | a4[I9 + 34 | 0] << 16 | a4[I9 + 35 | 0] << 24, W6 = a4[I9 + 36 | 0] | a4[I9 + 37 | 0] << 8 | a4[I9 + 38 | 0] << 16 | a4[I9 + 39 | 0] << 24, Z5 = a4[I9 + 40 | 0] | a4[I9 + 41 | 0] << 8 | a4[I9 + 42 | 0] << 16 | a4[I9 + 43 | 0] << 24, $5 = a4[I9 + 44 | 0] | a4[I9 + 45 | 0] << 8 | a4[I9 + 46 | 0] << 16 | a4[I9 + 47 | 0] << 24, AA2 = a4[I9 + 48 | 0] | a4[I9 + 49 | 0] << 8 | a4[I9 + 50 | 0] << 16 | a4[I9 + 51 | 0] << 24, IA2 = a4[I9 + 52 | 0] | a4[I9 + 53 | 0] << 8 | a4[I9 + 54 | 0] << 16 | a4[I9 + 55 | 0] << 24, gA2 = a4[I9 + 56 | 0] | a4[I9 + 57 | 0] << 8 | a4[I9 + 58 | 0] << 16 | a4[I9 + 59 | 0] << 24, CA2 = a4[I9 + 60 | 0] | a4[I9 + 61 | 0] << 8 | a4[I9 + 62 | 0] << 16 | a4[I9 + 63 | 0] << 24, l5 = l5 + k6 ^ (a4[0 | I9] | a4[I9 + 1 | 0] << 8 | a4[I9 + 2 | 0] << 16 | a4[I9 + 3 | 0] << 24), E5[0 | F6] = l5, E5[F6 + 1 | 0] = l5 >>> 8, E5[F6 + 2 | 0] = l5 >>> 16, E5[F6 + 3 | 0] = l5 >>> 24, l5 = H6 + i6 ^ CA2, E5[F6 + 60 | 0] = l5, E5[F6 + 61 | 0] = l5 >>> 8, E5[F6 + 62 | 0] = l5 >>> 16, E5[F6 + 63 | 0] = l5 >>> 24, l5 = d4 + n5 ^ gA2, E5[F6 + 56 | 0] = l5, E5[F6 + 57 | 0] = l5 >>> 8, E5[F6 + 58 | 0] = l5 >>> 16, E5[F6 + 59 | 0] = l5 >>> 24, l5 = v6 + x6 ^ IA2, E5[F6 + 52 | 0] = l5, E5[F6 + 53 | 0] = l5 >>> 8, E5[F6 + 54 | 0] = l5 >>> 16, E5[F6 + 55 | 0] = l5 >>> 24, l5 = K6 + R6 ^ AA2, E5[F6 + 48 | 0] = l5, E5[F6 + 49 | 0] = l5 >>> 8, E5[F6 + 50 | 0] = l5 >>> 16, E5[F6 + 51 | 0] = l5 >>> 24, l5 = J6 + r4 ^ $5, E5[F6 + 44 | 0] = l5, E5[F6 + 45 | 0] = l5 >>> 8, E5[F6 + 46 | 0] = l5 >>> 16, E5[F6 + 47 | 0] = l5 >>> 24, l5 = _6 + f4 ^ Z5, E5[F6 + 40 | 0] = l5, E5[F6 + 41 | 0] = l5 >>> 8, E5[F6 + 42 | 0] = l5 >>> 16, E5[F6 + 43 | 0] = l5 >>> 24, l5 = m5 + t5 ^ W6, E5[F6 + 36 | 0] = l5, E5[F6 + 37 | 0] = l5 >>> 8, E5[F6 + 38 | 0] = l5 >>> 16, E5[F6 + 39 | 0] = l5 >>> 24, l5 = U6 + e5 ^ T6, E5[F6 + 32 | 0] = l5, E5[F6 + 33 | 0] = l5 >>> 8, E5[F6 + 34 | 0] = l5 >>> 16, E5[F6 + 35 | 0] = l5 >>> 24, G6 = G6 + c5 ^ O6, E5[F6 + 28 | 0] = G6, E5[F6 + 29 | 0] = G6 >>> 8, E5[F6 + 30 | 0] = G6 >>> 16, E5[F6 + 31 | 0] = G6 >>> 24, M6 = N6 ^ M6 + y6, E5[F6 + 24 | 0] = M6, E5[F6 + 25 | 0] = M6 >>> 8, E5[F6 + 26 | 0] = M6 >>> 16, E5[F6 + 27 | 0] = M6 >>> 24, g8 = z6 ^ g8 + w5, E5[F6 + 20 | 0] = g8, E5[F6 + 21 | 0] = g8 >>> 8, E5[F6 + 22 | 0] = g8 >>> 16, E5[F6 + 23 | 0] = g8 >>> 24, g8 = q5 ^ S6 + h5, E5[F6 + 16 | 0] = g8, E5[F6 + 17 | 0] = g8 >>> 8, E5[F6 + 18 | 0] = g8 >>> 16, E5[F6 + 19 | 0] = g8 >>> 24, g8 = X6 ^ P6 + s5, E5[F6 + 12 | 0] = g8, E5[F6 + 13 | 0] = g8 >>> 8, E5[F6 + 14 | 0] = g8 >>> 16, E5[F6 + 15 | 0] = g8 >>> 24, g8 = L6 ^ b6 + p6, E5[F6 + 8 | 0] = g8, E5[F6 + 9 | 0] = g8 >>> 8, E5[F6 + 10 | 0] = g8 >>> 16, E5[F6 + 11 | 0] = g8 >>> 24, g8 = j5 ^ Y5 + u6, E5[F6 + 4 | 0] = g8, E5[F6 + 5 | 0] = g8 >>> 8, E5[F6 + 6 | 0] = g8 >>> 16, E5[F6 + 7 | 0] = g8 >>> 24, x6 = !(R6 = R6 + 1 | 0) + x6 | 0, !B6 & C6 >>> 0 <= 64) {
                          if (!(!C6 | !B6 & C6 >>> 0 > 63 | 0 != (0 | B6)))
                            for (S6 = 0; E5[S6 + V6 | 0] = a4[F6 + S6 | 0], C6 >>> 0 > (S6 = S6 + 1 | 0) >>> 0; )
                              ;
                          o4[A10 + 52 >> 2] = x6, o4[A10 + 48 >> 2] = R6;
                          break;
                        }
                        I9 = I9 - -64 | 0, g8 = F6 - -64 | 0, B6 = B6 - 1 | 0, B6 = (C6 = C6 + -64 | 0) >>> 0 < 4294967232 ? B6 + 1 | 0 : B6;
                      }
                    }
                    function M5(A10, I9) {
                      var g8, C6 = 0, B6 = 0, Q6 = 0, i6 = 0, a5 = 0, n5 = 0, r4 = 0;
                      D4 = g8 = D4 - 704 | 0, C6 = 80 + ((B6 = o4[A10 + 72 >> 2] >>> 3 & 127) + A10 | 0) | 0, B6 >>> 0 <= 111 ? HA(C6, 34640, 112 - B6 | 0) : (HA(C6, 34640, 128 - B6 | 0), p5(A10, B6 = A10 + 80 | 0, g8, g8 + 640 | 0), MA(B6, 0, 112)), n5 = (Q6 = o4[A10 + 64 >> 2]) << 24 | (65280 & Q6) << 8, B6 = (i6 = 16711680 & Q6) >>> 8 | 0, r4 = i6 << 24, i6 = (a5 = -16777216 & Q6) >>> 24 | 0, C6 = r4 | a5 << 8 | -16777216 & ((255 & (C6 = o4[A10 + 68 >> 2])) << 24 | Q6 >>> 8) | 16711680 & ((16777215 & C6) << 8 | Q6 >>> 24) | C6 >>> 8 & 65280 | C6 >>> 24, E5[A10 + 192 | 0] = C6, E5[A10 + 193 | 0] = C6 >>> 8, E5[A10 + 194 | 0] = C6 >>> 16, E5[A10 + 195 | 0] = C6 >>> 24, B6 = (C6 = B6 | i6 | n5) | (B6 = 0) | B6 | 0, E5[A10 + 196 | 0] = B6, E5[A10 + 197 | 0] = B6 >>> 8, E5[A10 + 198 | 0] = B6 >>> 16, E5[A10 + 199 | 0] = B6 >>> 24, n5 = (Q6 = o4[A10 + 72 >> 2]) << 24 | (65280 & Q6) << 8, B6 = (i6 = 16711680 & Q6) >>> 8 | 0, r4 = i6 << 24, i6 = (a5 = -16777216 & Q6) >>> 24 | 0, C6 = r4 | a5 << 8 | -16777216 & ((255 & (C6 = o4[A10 + 76 >> 2])) << 24 | Q6 >>> 8) | 16711680 & ((16777215 & C6) << 8 | Q6 >>> 24) | C6 >>> 8 & 65280 | C6 >>> 24, E5[A10 + 200 | 0] = C6, E5[A10 + 201 | 0] = C6 >>> 8, E5[A10 + 202 | 0] = C6 >>> 16, E5[A10 + 203 | 0] = C6 >>> 24, B6 = (C6 = B6 | i6 | n5) | (B6 = 0) | B6 | 0, E5[A10 + 204 | 0] = B6, E5[A10 + 205 | 0] = B6 >>> 8, E5[A10 + 206 | 0] = B6 >>> 16, E5[A10 + 207 | 0] = B6 >>> 24, p5(A10, A10 + 80 | 0, g8, g8 + 640 | 0), n5 = (Q6 = o4[A10 >> 2]) << 24 | (65280 & Q6) << 8, B6 = (i6 = 16711680 & Q6) >>> 8 | 0, r4 = i6 << 24, i6 = (a5 = -16777216 & Q6) >>> 24 | 0, C6 = r4 | a5 << 8 | -16777216 & ((255 & (C6 = o4[A10 + 4 >> 2])) << 24 | Q6 >>> 8) | 16711680 & ((16777215 & C6) << 8 | Q6 >>> 24) | C6 >>> 8 & 65280 | C6 >>> 24, E5[0 | I9] = C6, E5[I9 + 1 | 0] = C6 >>> 8, E5[I9 + 2 | 0] = C6 >>> 16, E5[I9 + 3 | 0] = C6 >>> 24, B6 = (C6 = B6 | i6 | n5) | (B6 = 0) | B6 | 0, E5[I9 + 4 | 0] = B6, E5[I9 + 5 | 0] = B6 >>> 8, E5[I9 + 6 | 0] = B6 >>> 16, E5[I9 + 7 | 0] = B6 >>> 24, n5 = (Q6 = o4[A10 + 8 >> 2]) << 24 | (65280 & Q6) << 8, B6 = (i6 = 16711680 & Q6) >>> 8 | 0, r4 = i6 << 24, i6 = (a5 = -16777216 & Q6) >>> 24 | 0, C6 = r4 | a5 << 8 | -16777216 & ((255 & (C6 = o4[A10 + 12 >> 2])) << 24 | Q6 >>> 8) | 16711680 & ((16777215 & C6) << 8 | Q6 >>> 24) | C6 >>> 8 & 65280 | C6 >>> 24, E5[I9 + 8 | 0] = C6, E5[I9 + 9 | 0] = C6 >>> 8, E5[I9 + 10 | 0] = C6 >>> 16, E5[I9 + 11 | 0] = C6 >>> 24, B6 = (C6 = B6 | i6 | n5) | (B6 = 0) | B6 | 0, E5[I9 + 12 | 0] = B6, E5[I9 + 13 | 0] = B6 >>> 8, E5[I9 + 14 | 0] = B6 >>> 16, E5[I9 + 15 | 0] = B6 >>> 24, n5 = (Q6 = o4[A10 + 16 >> 2]) << 24 | (65280 & Q6) << 8, B6 = (i6 = 16711680 & Q6) >>> 8 | 0, r4 = i6 << 24, i6 = (a5 = -16777216 & Q6) >>> 24 | 0, C6 = r4 | a5 << 8 | -16777216 & ((255 & (C6 = o4[A10 + 20 >> 2])) << 24 | Q6 >>> 8) | 16711680 & ((16777215 & C6) << 8 | Q6 >>> 24) | C6 >>> 8 & 65280 | C6 >>> 24, E5[I9 + 16 | 0] = C6, E5[I9 + 17 | 0] = C6 >>> 8, E5[I9 + 18 | 0] = C6 >>> 16, E5[I9 + 19 | 0] = C6 >>> 24, B6 = (C6 = B6 | i6 | n5) | (B6 = 0) | B6 | 0, E5[I9 + 20 | 0] = B6, E5[I9 + 21 | 0] = B6 >>> 8, E5[I9 + 22 | 0] = B6 >>> 16, E5[I9 + 23 | 0] = B6 >>> 24, n5 = (Q6 = o4[A10 + 24 >> 2]) << 24 | (65280 & Q6) << 8, B6 = (i6 = 16711680 & Q6) >>> 8 | 0, r4 = i6 << 24, i6 = (a5 = -16777216 & Q6) >>> 24 | 0, C6 = r4 | a5 << 8 | -16777216 & ((255 & (C6 = o4[A10 + 28 >> 2])) << 24 | Q6 >>> 8) | 16711680 & ((16777215 & C6) << 8 | Q6 >>> 24) | C6 >>> 8 & 65280 | C6 >>> 24, E5[I9 + 24 | 0] = C6, E5[I9 + 25 | 0] = C6 >>> 8, E5[I9 + 26 | 0] = C6 >>> 16, E5[I9 + 27 | 0] = C6 >>> 24, B6 = (C6 = B6 | i6 | n5) | (B6 = 0) | B6 | 0, E5[I9 + 28 | 0] = B6, E5[I9 + 29 | 0] = B6 >>> 8, E5[I9 + 30 | 0] = B6 >>> 16, E5[I9 + 31 | 0] = B6 >>> 24, n5 = (Q6 = o4[A10 + 32 >> 2]) << 24 | (65280 & Q6) << 8, B6 = (i6 = 16711680 & Q6) >>> 8 | 0, r4 = i6 << 24, i6 = (a5 = -16777216 & Q6) >>> 24 | 0, C6 = r4 | a5 << 8 | -16777216 & ((255 & (C6 = o4[A10 + 36 >> 2])) << 24 | Q6 >>> 8) | 16711680 & ((16777215 & C6) << 8 | Q6 >>> 24) | C6 >>> 8 & 65280 | C6 >>> 24, E5[I9 + 32 | 0] = C6, E5[I9 + 33 | 0] = C6 >>> 8, E5[I9 + 34 | 0] = C6 >>> 16, E5[I9 + 35 | 0] = C6 >>> 24, B6 = (C6 = B6 | i6 | n5) | (B6 = 0) | B6 | 0, E5[I9 + 36 | 0] = B6, E5[I9 + 37 | 0] = B6 >>> 8, E5[I9 + 38 | 0] = B6 >>> 16, E5[I9 + 39 | 0] = B6 >>> 24, n5 = (Q6 = o4[A10 + 40 >> 2]) << 24 | (65280 & Q6) << 8, B6 = (i6 = 16711680 & Q6) >>> 8 | 0, r4 = i6 << 24, i6 = (a5 = -16777216 & Q6) >>> 24 | 0, C6 = r4 | a5 << 8 | -16777216 & ((255 & (C6 = o4[A10 + 44 >> 2])) << 24 | Q6 >>> 8) | 16711680 & ((16777215 & C6) << 8 | Q6 >>> 24) | C6 >>> 8 & 65280 | C6 >>> 24, E5[I9 + 40 | 0] = C6, E5[I9 + 41 | 0] = C6 >>> 8, E5[I9 + 42 | 0] = C6 >>> 16, E5[I9 + 43 | 0] = C6 >>> 24, B6 = (C6 = B6 | i6 | n5) | (B6 = 0) | B6 | 0, E5[I9 + 44 | 0] = B6, E5[I9 + 45 | 0] = B6 >>> 8, E5[I9 + 46 | 0] = B6 >>> 16, E5[I9 + 47 | 0] = B6 >>> 24, n5 = (Q6 = o4[A10 + 48 >> 2]) << 24 | (65280 & Q6) << 8, B6 = (i6 = 16711680 & Q6) >>> 8 | 0, r4 = i6 << 24, i6 = (a5 = -16777216 & Q6) >>> 24 | 0, C6 = r4 | a5 << 8 | -16777216 & ((255 & (C6 = o4[A10 + 52 >> 2])) << 24 | Q6 >>> 8) | 16711680 & ((16777215 & C6) << 8 | Q6 >>> 24) | C6 >>> 8 & 65280 | C6 >>> 24, E5[I9 + 48 | 0] = C6, E5[I9 + 49 | 0] = C6 >>> 8, E5[I9 + 50 | 0] = C6 >>> 16, E5[I9 + 51 | 0] = C6 >>> 24, B6 = (C6 = B6 | i6 | n5) | (B6 = 0) | B6 | 0, E5[I9 + 52 | 0] = B6, E5[I9 + 53 | 0] = B6 >>> 8, E5[I9 + 54 | 0] = B6 >>> 16, E5[I9 + 55 | 0] = B6 >>> 24, n5 = (Q6 = o4[A10 + 56 >> 2]) << 24 | (65280 & Q6) << 8, B6 = (i6 = 16711680 & Q6) >>> 8 | 0, C6 = I9, r4 = i6 << 24, i6 = (a5 = -16777216 & Q6) >>> 24 | 0, I9 = r4 | a5 << 8 | -16777216 & ((255 & (I9 = o4[A10 + 60 >> 2])) << 24 | Q6 >>> 8) | 16711680 & ((16777215 & I9) << 8 | Q6 >>> 24) | I9 >>> 8 & 65280 | I9 >>> 24, E5[C6 + 56 | 0] = I9, E5[C6 + 57 | 0] = I9 >>> 8, E5[C6 + 58 | 0] = I9 >>> 16, E5[C6 + 59 | 0] = I9 >>> 24, I9 = (I9 = B6 | i6 | n5) | (B6 = 0) | B6 | 0, E5[C6 + 60 | 0] = I9, E5[C6 + 61 | 0] = I9 >>> 8, E5[C6 + 62 | 0] = I9 >>> 16, E5[C6 + 63 | 0] = I9 >>> 24, $A(g8, 704), $A(A10, 208), D4 = g8 + 704 | 0;
                    }
                    function G5(A10, I9, g8) {
                      var C6, B6 = 0, i6 = 0, n5 = 0, r4 = 0, f4 = 0, t5 = 0;
                      D4 = C6 = D4 + -64 | 0;
                      A: {
                        if ((g8 - 65 & 255) >>> 0 > 191) {
                          if (B6 = -1, !(a4[A10 + 80 | 0] | a4[A10 + 81 | 0] << 8 | a4[A10 + 82 | 0] << 16 | a4[A10 + 83 | 0] << 24 | a4[A10 + 84 | 0] | a4[A10 + 85 | 0] << 8 | a4[A10 + 86 | 0] << 16 | a4[A10 + 87 | 0] << 24)) {
                            if ((r4 = a4[A10 + 352 | 0] | a4[A10 + 353 | 0] << 8 | a4[A10 + 354 | 0] << 16 | a4[A10 + 355 | 0] << 24) >>> 0 >= 129) {
                              if (n5 = a4[0 | (B6 = A10 - -64 | 0)] | a4[B6 + 1 | 0] << 8 | a4[B6 + 2 | 0] << 16 | a4[B6 + 3 | 0] << 24, f4 = i6 = a4[B6 + 4 | 0] | a4[B6 + 5 | 0] << 8 | a4[B6 + 6 | 0] << 16 | a4[B6 + 7 | 0] << 24, i6 = (r4 = n5 + 128 | 0) >>> 0 < 128 ? i6 + 1 | 0 : i6, E5[0 | B6] = r4, E5[B6 + 1 | 0] = r4 >>> 8, E5[B6 + 2 | 0] = r4 >>> 16, E5[B6 + 3 | 0] = r4 >>> 24, E5[B6 + 4 | 0] = i6, E5[B6 + 5 | 0] = i6 >>> 8, E5[B6 + 6 | 0] = i6 >>> 16, E5[B6 + 7 | 0] = i6 >>> 24, i6 = a4[A10 + 76 | 0] | a4[A10 + 77 | 0] << 8 | a4[A10 + 78 | 0] << 16 | a4[A10 + 79 | 0] << 24, i6 = (B6 = -1 == (0 | f4) & n5 >>> 0 > 4294967167) >>> 0 > (n5 = B6 + (a4[A10 + 72 | 0] | a4[A10 + 73 | 0] << 8 | a4[A10 + 74 | 0] << 16 | a4[A10 + 75 | 0] << 24) | 0) >>> 0 ? i6 + 1 | 0 : i6, E5[A10 + 72 | 0] = n5, E5[A10 + 73 | 0] = n5 >>> 8, E5[A10 + 74 | 0] = n5 >>> 16, E5[A10 + 75 | 0] = n5 >>> 24, E5[A10 + 76 | 0] = i6, E5[A10 + 77 | 0] = i6 >>> 8, E5[A10 + 78 | 0] = i6 >>> 16, E5[A10 + 79 | 0] = i6 >>> 24, h4(A10, i6 = A10 + 96 | 0), B6 = (a4[A10 + 352 | 0] | a4[A10 + 353 | 0] << 8 | a4[A10 + 354 | 0] << 16 | a4[A10 + 355 | 0] << 24) - 128 | 0, E5[A10 + 352 | 0] = B6, E5[A10 + 353 | 0] = B6 >>> 8, E5[A10 + 354 | 0] = B6 >>> 16, E5[A10 + 355 | 0] = B6 >>> 24, B6 >>> 0 >= 129)
                                break A;
                              HA(i6, A10 + 224 | 0, B6), r4 = a4[A10 + 352 | 0] | a4[A10 + 353 | 0] << 8 | a4[A10 + 354 | 0] << 16 | a4[A10 + 355 | 0] << 24;
                            }
                            i6 = a4[0 | (B6 = A10 - -64 | 0)] | a4[B6 + 1 | 0] << 8 | a4[B6 + 2 | 0] << 16 | a4[B6 + 3 | 0] << 24, n5 = t5 = a4[B6 + 4 | 0] | a4[B6 + 5 | 0] << 8 | a4[B6 + 6 | 0] << 16 | a4[B6 + 7 | 0] << 24, n5 = (f4 = i6 + r4 | 0) >>> 0 < r4 >>> 0 ? n5 + 1 | 0 : n5, E5[0 | B6] = f4, E5[B6 + 1 | 0] = f4 >>> 8, E5[B6 + 2 | 0] = f4 >>> 16, E5[B6 + 3 | 0] = f4 >>> 24, E5[B6 + 4 | 0] = n5, E5[B6 + 5 | 0] = n5 >>> 8, E5[B6 + 6 | 0] = n5 >>> 16, E5[B6 + 7 | 0] = n5 >>> 24, B6 = (0 | n5) == (0 | t5) & i6 >>> 0 > f4 >>> 0 | n5 >>> 0 < t5 >>> 0, i6 = a4[A10 + 76 | 0] | a4[A10 + 77 | 0] << 8 | a4[A10 + 78 | 0] << 16 | a4[A10 + 79 | 0] << 24, i6 = (n5 = B6 + (a4[A10 + 72 | 0] | a4[A10 + 73 | 0] << 8 | a4[A10 + 74 | 0] << 16 | a4[A10 + 75 | 0] << 24) | 0) >>> 0 < B6 >>> 0 ? i6 + 1 | 0 : i6, E5[A10 + 72 | 0] = n5, E5[A10 + 73 | 0] = n5 >>> 8, E5[A10 + 74 | 0] = n5 >>> 16, E5[A10 + 75 | 0] = n5 >>> 24, E5[A10 + 76 | 0] = i6, E5[A10 + 77 | 0] = i6 >>> 8, E5[A10 + 78 | 0] = i6 >>> 16, E5[A10 + 79 | 0] = i6 >>> 24, a4[A10 + 356 | 0] && (E5[A10 + 88 | 0] = 255, E5[A10 + 89 | 0] = 255, E5[A10 + 90 | 0] = 255, E5[A10 + 91 | 0] = 255, E5[A10 + 92 | 0] = 255, E5[A10 + 93 | 0] = 255, E5[A10 + 94 | 0] = 255, E5[A10 + 95 | 0] = 255), E5[A10 + 80 | 0] = 255, E5[A10 + 81 | 0] = 255, E5[A10 + 82 | 0] = 255, E5[A10 + 83 | 0] = 255, E5[A10 + 84 | 0] = 255, E5[A10 + 85 | 0] = 255, E5[A10 + 86 | 0] = 255, E5[A10 + 87 | 0] = 255, MA((B6 = A10 + 96 | 0) + r4 | 0, 0, 256 - r4 | 0), h4(A10, B6), i6 = a4[A10 + 4 | 0] | a4[A10 + 5 | 0] << 8 | a4[A10 + 6 | 0] << 16 | a4[A10 + 7 | 0] << 24, o4[C6 >> 2] = a4[0 | A10] | a4[A10 + 1 | 0] << 8 | a4[A10 + 2 | 0] << 16 | a4[A10 + 3 | 0] << 24, o4[C6 + 4 >> 2] = i6, i6 = a4[A10 + 12 | 0] | a4[A10 + 13 | 0] << 8 | a4[A10 + 14 | 0] << 16 | a4[A10 + 15 | 0] << 24, o4[C6 + 8 >> 2] = a4[A10 + 8 | 0] | a4[A10 + 9 | 0] << 8 | a4[A10 + 10 | 0] << 16 | a4[A10 + 11 | 0] << 24, o4[C6 + 12 >> 2] = i6, i6 = a4[A10 + 20 | 0] | a4[A10 + 21 | 0] << 8 | a4[A10 + 22 | 0] << 16 | a4[A10 + 23 | 0] << 24, o4[C6 + 16 >> 2] = a4[A10 + 16 | 0] | a4[A10 + 17 | 0] << 8 | a4[A10 + 18 | 0] << 16 | a4[A10 + 19 | 0] << 24, o4[C6 + 20 >> 2] = i6, i6 = a4[A10 + 28 | 0] | a4[A10 + 29 | 0] << 8 | a4[A10 + 30 | 0] << 16 | a4[A10 + 31 | 0] << 24, o4[C6 + 24 >> 2] = a4[A10 + 24 | 0] | a4[A10 + 25 | 0] << 8 | a4[A10 + 26 | 0] << 16 | a4[A10 + 27 | 0] << 24, o4[C6 + 28 >> 2] = i6, i6 = a4[A10 + 36 | 0] | a4[A10 + 37 | 0] << 8 | a4[A10 + 38 | 0] << 16 | a4[A10 + 39 | 0] << 24, o4[C6 + 32 >> 2] = a4[A10 + 32 | 0] | a4[A10 + 33 | 0] << 8 | a4[A10 + 34 | 0] << 16 | a4[A10 + 35 | 0] << 24, o4[C6 + 36 >> 2] = i6, i6 = a4[A10 + 44 | 0] | a4[A10 + 45 | 0] << 8 | a4[A10 + 46 | 0] << 16 | a4[A10 + 47 | 0] << 24, o4[C6 + 40 >> 2] = a4[A10 + 40 | 0] | a4[A10 + 41 | 0] << 8 | a4[A10 + 42 | 0] << 16 | a4[A10 + 43 | 0] << 24, o4[C6 + 44 >> 2] = i6, i6 = a4[A10 + 52 | 0] | a4[A10 + 53 | 0] << 8 | a4[A10 + 54 | 0] << 16 | a4[A10 + 55 | 0] << 24, o4[C6 + 48 >> 2] = a4[A10 + 48 | 0] | a4[A10 + 49 | 0] << 8 | a4[A10 + 50 | 0] << 16 | a4[A10 + 51 | 0] << 24, o4[C6 + 52 >> 2] = i6, i6 = a4[A10 + 60 | 0] | a4[A10 + 61 | 0] << 8 | a4[A10 + 62 | 0] << 16 | a4[A10 + 63 | 0] << 24, o4[C6 + 56 >> 2] = a4[A10 + 56 | 0] | a4[A10 + 57 | 0] << 8 | a4[A10 + 58 | 0] << 16 | a4[A10 + 59 | 0] << 24, o4[C6 + 60 >> 2] = i6, HA(I9, C6, g8), $A(A10, 64), $A(B6, 256), B6 = 0;
                          }
                          return D4 = C6 - -64 | 0, B6;
                        }
                        mA(), Q5();
                      }
                      e4(1280, 1142, 306, 1086), Q5();
                    }
                    function U5(A10, I9) {
                      var g8, C6, B6, Q6, i6, n5, r4, f4, t5, e5, c5, y6, w5, h5, s5, p6, u6 = 0, k6 = 0, l5 = 0, H6 = 0, M6 = 0, G6 = 0, U6 = 0;
                      for (D4 = g8 = D4 - 320 | 0, P5(C6 = A10 + 40 | 0, I9), o4[A10 + 84 >> 2] = 0, o4[A10 + 88 >> 2] = 0, o4[A10 + 80 >> 2] = 1, o4[A10 + 92 >> 2] = 0, o4[A10 + 96 >> 2] = 0, o4[A10 + 100 >> 2] = 0, o4[A10 + 104 >> 2] = 0, o4[A10 + 108 >> 2] = 0, o4[A10 + 112 >> 2] = 0, o4[A10 + 116 >> 2] = 0, S5(G6 = g8 + 240 | 0, C6), F5(H6 = g8 + 192 | 0, G6, 1344), U6 = -1, B6 = o4[g8 + 240 >> 2] - 1 | 0, o4[g8 + 240 >> 2] = B6, o4[g8 + 192 >> 2] = o4[g8 + 192 >> 2] + 1, Q6 = o4[g8 + 244 >> 2], i6 = o4[g8 + 248 >> 2], n5 = o4[g8 + 252 >> 2], r4 = o4[g8 + 256 >> 2], f4 = o4[g8 + 260 >> 2], t5 = o4[g8 + 264 >> 2], e5 = o4[g8 + 268 >> 2], c5 = o4[g8 + 272 >> 2], y6 = o4[g8 + 276 >> 2], S5(M6 = g8 + 144 | 0, H6), F5(M6, M6, H6), S5(A10, M6), F5(A10, A10, H6), F5(A10, A10, G6), D4 = k6 = D4 - 144 | 0, S5(l5 = k6 + 96 | 0, A10), S5(u6 = k6 + 48 | 0, l5), S5(u6, u6), F5(u6, A10, u6), F5(l5, l5, u6), S5(l5, l5), F5(l5, u6, l5), S5(u6, l5), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), F5(l5, u6, l5), S5(u6, l5), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), F5(u6, u6, l5), S5(k6, u6), S5(k6, k6), S5(k6, k6), S5(k6, k6), S5(k6, k6), S5(k6, k6), S5(k6, k6), S5(k6, k6), S5(k6, k6), S5(k6, k6), S5(k6, k6), S5(k6, k6), S5(k6, k6), S5(k6, k6), S5(k6, k6), S5(k6, k6), S5(k6, k6), S5(k6, k6), S5(k6, k6), S5(k6, k6), F5(u6, k6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), F5(l5, u6, l5), S5(u6, l5), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), F5(u6, u6, l5), S5(k6, u6), u6 = 1; S5(k6, k6), 100 != (0 | (u6 = u6 + 1 | 0)); )
                        ;
                      F5(u6 = k6 + 48 | 0, k6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), S5(u6, u6), F5(l5 = k6 + 96 | 0, u6, l5), S5(l5, l5), S5(l5, l5), F5(A10, l5, A10), D4 = k6 + 144 | 0, F5(A10, A10, M6), F5(A10, A10, G6), S5(u6 = g8 + 96 | 0, A10), F5(u6, u6, H6), u6 = o4[g8 + 132 >> 2], o4[g8 + 84 >> 2] = u6 - y6, k6 = o4[g8 + 128 >> 2], o4[g8 + 80 >> 2] = k6 - c5, l5 = o4[g8 + 124 >> 2], o4[g8 + 76 >> 2] = l5 - e5, H6 = o4[g8 + 120 >> 2], o4[g8 + 72 >> 2] = H6 - t5, M6 = o4[g8 + 116 >> 2], o4[g8 + 68 >> 2] = M6 - f4, G6 = o4[g8 + 112 >> 2], o4[g8 + 64 >> 2] = G6 - r4, w5 = o4[g8 + 108 >> 2], o4[g8 + 60 >> 2] = w5 - n5, h5 = o4[g8 + 104 >> 2], o4[g8 + 56 >> 2] = h5 - i6, s5 = o4[g8 + 100 >> 2], o4[g8 + 52 >> 2] = s5 - Q6, p6 = o4[g8 + 96 >> 2], o4[g8 + 48 >> 2] = p6 - B6, W5(g8, g8 + 48 | 0);
                      A: {
                        if (!iA(g8, 32)) {
                          if (o4[g8 + 36 >> 2] = u6 + y6, o4[g8 + 32 >> 2] = k6 + c5, o4[g8 + 28 >> 2] = l5 + e5, o4[g8 + 24 >> 2] = H6 + t5, o4[g8 + 20 >> 2] = M6 + f4, o4[g8 + 16 >> 2] = G6 + r4, o4[g8 + 12 >> 2] = n5 + w5, o4[g8 + 8 >> 2] = i6 + h5, o4[g8 + 4 >> 2] = Q6 + s5, o4[g8 >> 2] = B6 + p6, W5(u6 = g8 + 288 | 0, g8), !iA(u6, 32))
                            break A;
                          F5(A10, A10, 1392);
                        }
                        W5(g8 + 288 | 0, A10), (1 & E5[g8 + 288 | 0]) == (a4[I9 + 31 | 0] >>> 7 | 0) && (o4[A10 >> 2] = 0 - o4[A10 >> 2], o4[A10 + 36 >> 2] = 0 - o4[A10 + 36 >> 2], o4[A10 + 32 >> 2] = 0 - o4[A10 + 32 >> 2], o4[A10 + 28 >> 2] = 0 - o4[A10 + 28 >> 2], o4[A10 + 24 >> 2] = 0 - o4[A10 + 24 >> 2], o4[A10 + 20 >> 2] = 0 - o4[A10 + 20 >> 2], o4[A10 + 16 >> 2] = 0 - o4[A10 + 16 >> 2], o4[A10 + 12 >> 2] = 0 - o4[A10 + 12 >> 2], o4[A10 + 8 >> 2] = 0 - o4[A10 + 8 >> 2], o4[A10 + 4 >> 2] = 0 - o4[A10 + 4 >> 2]), F5(A10 + 120 | 0, A10, C6), U6 = 0;
                      }
                      return D4 = g8 + 320 | 0, U6;
                    }
                    function J5(A10, I9, g8) {
                      var C6, B6, Q6, i6, o5, n5, r4, f4, t5, e5, c5, y6, D5 = 0, w5 = 0, h5 = 0, s5 = 0, p6 = 0, u6 = 0, k6 = 0, F6 = 0, l5 = 0, S6 = 0, H6 = 0, M6 = 0, G6 = 0, U6 = 0, J6 = 0, N6 = 0, Y5 = 0, b6 = 0, _6 = 0, K6 = 0;
                      for (p6 = 1634760805, w5 = C6 = a4[0 | g8] | a4[g8 + 1 | 0] << 8 | a4[g8 + 2 | 0] << 16 | a4[g8 + 3 | 0] << 24, u6 = B6 = a4[g8 + 4 | 0] | a4[g8 + 5 | 0] << 8 | a4[g8 + 6 | 0] << 16 | a4[g8 + 7 | 0] << 24, k6 = Q6 = a4[g8 + 8 | 0] | a4[g8 + 9 | 0] << 8 | a4[g8 + 10 | 0] << 16 | a4[g8 + 11 | 0] << 24, F6 = i6 = a4[g8 + 12 | 0] | a4[g8 + 13 | 0] << 8 | a4[g8 + 14 | 0] << 16 | a4[g8 + 15 | 0] << 24, M6 = 857760878, l5 = o5 = a4[0 | I9] | a4[I9 + 1 | 0] << 8 | a4[I9 + 2 | 0] << 16 | a4[I9 + 3 | 0] << 24, h5 = n5 = a4[I9 + 4 | 0] | a4[I9 + 5 | 0] << 8 | a4[I9 + 6 | 0] << 16 | a4[I9 + 7 | 0] << 24, H6 = r4 = a4[I9 + 8 | 0] | a4[I9 + 9 | 0] << 8 | a4[I9 + 10 | 0] << 16 | a4[I9 + 11 | 0] << 24, U6 = f4 = a4[I9 + 12 | 0] | a4[I9 + 13 | 0] << 8 | a4[I9 + 14 | 0] << 16 | a4[I9 + 15 | 0] << 24, I9 = 2036477234, s5 = t5 = a4[g8 + 16 | 0] | a4[g8 + 17 | 0] << 8 | a4[g8 + 18 | 0] << 16 | a4[g8 + 19 | 0] << 24, D5 = 1797285236, J6 = e5 = a4[g8 + 28 | 0] | a4[g8 + 29 | 0] << 8 | a4[g8 + 30 | 0] << 16 | a4[g8 + 31 | 0] << 24, G6 = c5 = a4[g8 + 24 | 0] | a4[g8 + 25 | 0] << 8 | a4[g8 + 26 | 0] << 16 | a4[g8 + 27 | 0] << 24, g8 = y6 = a4[g8 + 20 | 0] | a4[g8 + 21 | 0] << 8 | a4[g8 + 22 | 0] << 16 | a4[g8 + 23 | 0] << 24; S6 = YA(w5 + M6 | 0, 7) ^ U6, N6 = YA(S6 + M6 | 0, 9) ^ G6, F6 = YA(g8 + p6 | 0, 7) ^ F6, Y5 = YA(F6 + p6 | 0, 9) ^ H6, _6 = YA(Y5 + F6 | 0, 13) ^ g8, k6 = YA(D5 + s5 | 0, 7) ^ k6, b6 = YA(k6 + D5 | 0, 9) ^ h5, H6 = YA(k6 + b6 | 0, 13) ^ s5, s5 = YA(b6 + H6 | 0, 18) ^ D5, h5 = YA(I9 + l5 | 0, 7) ^ J6, g8 = _6 ^ YA(s5 + h5 | 0, 7), G6 = N6 ^ YA(g8 + s5 | 0, 9), J6 = YA(g8 + G6 | 0, 13) ^ h5, D5 = YA(G6 + J6 | 0, 18) ^ s5, u6 = YA(I9 + h5 | 0, 9) ^ u6, l5 = YA(u6 + h5 | 0, 13) ^ l5, I9 = YA(l5 + u6 | 0, 18) ^ I9, s5 = YA(I9 + S6 | 0, 7) ^ H6, H6 = YA(s5 + I9 | 0, 9) ^ Y5, U6 = YA(s5 + H6 | 0, 13) ^ S6, I9 = YA(H6 + U6 | 0, 18) ^ I9, S6 = YA(S6 + N6 | 0, 13) ^ w5, w5 = YA(S6 + N6 | 0, 18) ^ M6, l5 = YA(w5 + F6 | 0, 7) ^ l5, h5 = YA(l5 + w5 | 0, 9) ^ b6, F6 = YA(h5 + l5 | 0, 13) ^ F6, M6 = YA(h5 + F6 | 0, 18) ^ w5, p6 = YA(Y5 + _6 | 0, 18) ^ p6, w5 = YA(p6 + k6 | 0, 7) ^ S6, u6 = YA(w5 + p6 | 0, 9) ^ u6, k6 = YA(w5 + u6 | 0, 13) ^ k6, p6 = YA(u6 + k6 | 0, 18) ^ p6, S6 = K6 >>> 0 < 18, K6 = K6 + 2 | 0, S6; )
                        ;
                      D5 = D5 + 1797285236 | 0, E5[A10 + 60 | 0] = D5, E5[A10 + 61 | 0] = D5 >>> 8, E5[A10 + 62 | 0] = D5 >>> 16, E5[A10 + 63 | 0] = D5 >>> 24, D5 = J6 + e5 | 0, E5[A10 + 56 | 0] = D5, E5[A10 + 57 | 0] = D5 >>> 8, E5[A10 + 58 | 0] = D5 >>> 16, E5[A10 + 59 | 0] = D5 >>> 24, D5 = G6 + c5 | 0, E5[A10 + 52 | 0] = D5, E5[A10 + 53 | 0] = D5 >>> 8, E5[A10 + 54 | 0] = D5 >>> 16, E5[A10 + 55 | 0] = D5 >>> 24, g8 = g8 + y6 | 0, E5[A10 + 48 | 0] = g8, E5[A10 + 49 | 0] = g8 >>> 8, E5[A10 + 50 | 0] = g8 >>> 16, E5[A10 + 51 | 0] = g8 >>> 24, g8 = s5 + t5 | 0, E5[A10 + 44 | 0] = g8, E5[A10 + 45 | 0] = g8 >>> 8, E5[A10 + 46 | 0] = g8 >>> 16, E5[A10 + 47 | 0] = g8 >>> 24, I9 = I9 + 2036477234 | 0, E5[A10 + 40 | 0] = I9, E5[A10 + 41 | 0] = I9 >>> 8, E5[A10 + 42 | 0] = I9 >>> 16, E5[A10 + 43 | 0] = I9 >>> 24, I9 = U6 + f4 | 0, E5[A10 + 36 | 0] = I9, E5[A10 + 37 | 0] = I9 >>> 8, E5[A10 + 38 | 0] = I9 >>> 16, E5[A10 + 39 | 0] = I9 >>> 24, I9 = H6 + r4 | 0, E5[A10 + 32 | 0] = I9, E5[A10 + 33 | 0] = I9 >>> 8, E5[A10 + 34 | 0] = I9 >>> 16, E5[A10 + 35 | 0] = I9 >>> 24, I9 = h5 + n5 | 0, E5[A10 + 28 | 0] = I9, E5[A10 + 29 | 0] = I9 >>> 8, E5[A10 + 30 | 0] = I9 >>> 16, E5[A10 + 31 | 0] = I9 >>> 24, I9 = l5 + o5 | 0, E5[A10 + 24 | 0] = I9, E5[A10 + 25 | 0] = I9 >>> 8, E5[A10 + 26 | 0] = I9 >>> 16, E5[A10 + 27 | 0] = I9 >>> 24, I9 = M6 + 857760878 | 0, E5[A10 + 20 | 0] = I9, E5[A10 + 21 | 0] = I9 >>> 8, E5[A10 + 22 | 0] = I9 >>> 16, E5[A10 + 23 | 0] = I9 >>> 24, I9 = F6 + i6 | 0, E5[A10 + 16 | 0] = I9, E5[A10 + 17 | 0] = I9 >>> 8, E5[A10 + 18 | 0] = I9 >>> 16, E5[A10 + 19 | 0] = I9 >>> 24, I9 = k6 + Q6 | 0, E5[A10 + 12 | 0] = I9, E5[A10 + 13 | 0] = I9 >>> 8, E5[A10 + 14 | 0] = I9 >>> 16, E5[A10 + 15 | 0] = I9 >>> 24, I9 = u6 + B6 | 0, E5[A10 + 8 | 0] = I9, E5[A10 + 9 | 0] = I9 >>> 8, E5[A10 + 10 | 0] = I9 >>> 16, E5[A10 + 11 | 0] = I9 >>> 24, I9 = w5 + C6 | 0, E5[A10 + 4 | 0] = I9, E5[A10 + 5 | 0] = I9 >>> 8, E5[A10 + 6 | 0] = I9 >>> 16, E5[A10 + 7 | 0] = I9 >>> 24, I9 = p6 + 1634760805 | 0, E5[0 | A10] = I9, E5[A10 + 1 | 0] = I9 >>> 8, E5[A10 + 2 | 0] = I9 >>> 16, E5[A10 + 3 | 0] = I9 >>> 24;
                    }
                    function N5(A10, I9, g8, C6) {
                      var B6 = 0, Q6 = 0, i6 = 0, E6 = 0, n5 = 0, f4 = 0, t5 = 0, e5 = 0, c5 = 0, y6 = 0, D5 = 0, h5 = 0, s5 = 0, p6 = 0, u6 = 0, k6 = 0, F6 = 0, l5 = 0, S6 = 0, H6 = 0, M6 = 0, G6 = 0, U6 = 0, J6 = 0, N6 = 0;
                      if (D5 = o4[A10 + 36 >> 2], c5 = o4[A10 + 32 >> 2], y6 = o4[A10 + 28 >> 2], t5 = o4[A10 + 24 >> 2], e5 = o4[A10 + 20 >> 2], !C6 & g8 >>> 0 >= 16 | C6)
                        for (M6 = !a4[A10 + 80 | 0] << 24, s5 = o4[A10 + 4 >> 2], G6 = r3(s5, 5), u6 = o4[A10 + 8 >> 2], S6 = r3(u6, 5), F6 = o4[A10 + 12 >> 2], l5 = r3(F6, 5), H6 = o4[A10 + 16 >> 2], k6 = r3(H6, 5), p6 = o4[A10 >> 2]; B6 = DA(i6 = ((a4[I9 + 3 | 0] | a4[I9 + 4 | 0] << 8 | a4[I9 + 5 | 0] << 16 | a4[I9 + 6 | 0] << 24) >>> 2 & 67108863) + t5 | 0, 0, F6, 0), n5 = w4, e5 = (E6 = DA(t5 = (67108863 & (a4[0 | I9] | a4[I9 + 1 | 0] << 8 | a4[I9 + 2 | 0] << 16 | a4[I9 + 3 | 0] << 24)) + e5 | 0, 0, H6, 0)) + B6 | 0, B6 = w4 + n5 | 0, B6 = E6 >>> 0 > e5 >>> 0 ? B6 + 1 | 0 : B6, n5 = DA(y6 = ((a4[I9 + 6 | 0] | a4[I9 + 7 | 0] << 8 | a4[I9 + 8 | 0] << 16 | a4[I9 + 9 | 0] << 24) >>> 4 & 67108863) + y6 | 0, 0, u6, 0), B6 = w4 + B6 | 0, B6 = n5 >>> 0 > (e5 = n5 + e5 | 0) >>> 0 ? B6 + 1 | 0 : B6, n5 = DA(c5 = ((a4[I9 + 9 | 0] | a4[I9 + 10 | 0] << 8 | a4[I9 + 11 | 0] << 16 | a4[I9 + 12 | 0] << 24) >>> 6 | 0) + c5 | 0, 0, s5, 0), B6 = w4 + B6 | 0, B6 = n5 >>> 0 > (e5 = n5 + e5 | 0) >>> 0 ? B6 + 1 | 0 : B6, n5 = DA(D5 = D5 + M6 + ((a4[I9 + 12 | 0] | a4[I9 + 13 | 0] << 8 | a4[I9 + 14 | 0] << 16 | a4[I9 + 15 | 0] << 24) >>> 8) | 0, 0, p6, 0), B6 = w4 + B6 | 0, U6 = e5 = n5 + e5 | 0, e5 = n5 >>> 0 > e5 >>> 0 ? B6 + 1 | 0 : B6, B6 = DA(i6, 0, u6, 0), n5 = w4, E6 = DA(t5, 0, F6, 0), Q6 = w4 + n5 | 0, Q6 = (B6 = E6 + B6 | 0) >>> 0 < E6 >>> 0 ? Q6 + 1 | 0 : Q6, n5 = (E6 = DA(y6, 0, s5, 0)) + B6 | 0, B6 = w4 + Q6 | 0, B6 = E6 >>> 0 > n5 >>> 0 ? B6 + 1 | 0 : B6, E6 = DA(c5, 0, p6, 0), B6 = w4 + B6 | 0, B6 = E6 >>> 0 > (n5 = E6 + n5 | 0) >>> 0 ? B6 + 1 | 0 : B6, E6 = DA(D5, 0, k6, 0), B6 = w4 + B6 | 0, J6 = n5 = E6 + n5 | 0, n5 = E6 >>> 0 > n5 >>> 0 ? B6 + 1 | 0 : B6, B6 = DA(i6, 0, s5, 0), f4 = w4, E6 = (Q6 = DA(t5, 0, u6, 0)) + B6 | 0, B6 = w4 + f4 | 0, B6 = Q6 >>> 0 > E6 >>> 0 ? B6 + 1 | 0 : B6, f4 = DA(y6, 0, p6, 0), Q6 = w4 + B6 | 0, Q6 = (E6 = f4 + E6 | 0) >>> 0 < f4 >>> 0 ? Q6 + 1 | 0 : Q6, f4 = DA(c5, 0, k6, 0), B6 = w4 + Q6 | 0, B6 = (E6 = f4 + E6 | 0) >>> 0 < f4 >>> 0 ? B6 + 1 | 0 : B6, f4 = DA(D5, 0, l5, 0), B6 = w4 + B6 | 0, N6 = E6 = f4 + E6 | 0, E6 = E6 >>> 0 < f4 >>> 0 ? B6 + 1 | 0 : B6, B6 = DA(i6, 0, p6, 0), Q6 = w4, f4 = (h5 = DA(t5, 0, s5, 0)) + B6 | 0, B6 = w4 + Q6 | 0, B6 = f4 >>> 0 < h5 >>> 0 ? B6 + 1 | 0 : B6, Q6 = DA(y6, 0, k6, 0), B6 = w4 + B6 | 0, B6 = Q6 >>> 0 > (f4 = Q6 + f4 | 0) >>> 0 ? B6 + 1 | 0 : B6, h5 = DA(c5, 0, l5, 0), Q6 = w4 + B6 | 0, Q6 = (f4 = h5 + f4 | 0) >>> 0 < h5 >>> 0 ? Q6 + 1 | 0 : Q6, h5 = DA(D5, 0, S6, 0), B6 = w4 + Q6 | 0, B6 = (f4 = h5 + f4 | 0) >>> 0 < h5 >>> 0 ? B6 + 1 | 0 : B6, h5 = f4, f4 = B6, B6 = DA(i6, 0, k6, 0), Q6 = w4, i6 = (t5 = DA(t5, 0, p6, 0)) + B6 | 0, B6 = w4 + Q6 | 0, B6 = i6 >>> 0 < t5 >>> 0 ? B6 + 1 | 0 : B6, t5 = DA(y6, 0, l5, 0), B6 = w4 + B6 | 0, B6 = (i6 = t5 + i6 | 0) >>> 0 < t5 >>> 0 ? B6 + 1 | 0 : B6, t5 = DA(c5, 0, S6, 0), B6 = w4 + B6 | 0, B6 = (i6 = t5 + i6 | 0) >>> 0 < t5 >>> 0 ? B6 + 1 | 0 : B6, t5 = DA(D5, 0, G6, 0), Q6 = w4 + B6 | 0, Q6 = (i6 = t5 + i6 | 0) >>> 0 < t5 >>> 0 ? Q6 + 1 | 0 : Q6, t5 = i6, B6 = f4, B6 = (i6 = (y6 = (67108863 & Q6) << 6 | i6 >>> 26) + h5 | 0) >>> 0 < y6 >>> 0 ? B6 + 1 | 0 : B6, y6 = i6, c5 = (67108863 & B6) << 6 | i6 >>> 26, B6 = E6, B6 = (i6 = c5 + N6 | 0) >>> 0 < c5 >>> 0 ? B6 + 1 | 0 : B6, c5 = i6, Q6 = n5, D5 = B6 = (i6 = (67108863 & B6) << 6 | i6 >>> 26) + J6 | 0, n5 = (67108863 & (Q6 = B6 >>> 0 < i6 >>> 0 ? Q6 + 1 | 0 : Q6)) << 6 | B6 >>> 26, B6 = e5, t5 = (67108863 & y6) + ((B6 = r3((67108863 & ((i6 = n5 + U6 | 0) >>> 0 < n5 >>> 0 ? B6 + 1 | 0 : B6)) << 6 | i6 >>> 26, 5) + (67108863 & t5) | 0) >>> 26 | 0) | 0, y6 = 67108863 & c5, c5 = 67108863 & D5, D5 = 67108863 & i6, e5 = 67108863 & B6, I9 = I9 + 16 | 0, !(C6 = C6 - (g8 >>> 0 < 16) | 0) & (g8 = g8 - 16 | 0) >>> 0 > 15 | C6; )
                          ;
                      o4[A10 + 20 >> 2] = e5, o4[A10 + 36 >> 2] = D5, o4[A10 + 32 >> 2] = c5, o4[A10 + 28 >> 2] = y6, o4[A10 + 24 >> 2] = t5;
                    }
                    function Y4(A10, I9, g8, C6) {
                      A10 |= 0, I9 |= 0;
                      var B6 = 0;
                      return B6 = -1, (C6 |= 0) - 65 >>> 0 < 4294967232 | (g8 |= 0) >>> 0 > 64 || (g8 && I9 ? (D4 = B6 = D4 - 128 | 0, !I9 | ((C6 &= 255) - 65 & 255) >>> 0 <= 191 | ((g8 &= 255) - 65 & 255) >>> 0 <= 191 ? (mA(), Q5()) : (MA(A10 - -64 | 0, 0, 293), E5[A10 + 56 | 0] = 121, E5[A10 + 57 | 0] = 33, E5[A10 + 58 | 0] = 126, E5[A10 + 59 | 0] = 19, E5[A10 + 60 | 0] = 25, E5[A10 + 61 | 0] = 205, E5[A10 + 62 | 0] = 224, E5[A10 + 63 | 0] = 91, E5[A10 + 48 | 0] = 107, E5[A10 + 49 | 0] = 189, E5[A10 + 50 | 0] = 65, E5[A10 + 51 | 0] = 251, E5[A10 + 52 | 0] = 171, E5[A10 + 53 | 0] = 217, E5[A10 + 54 | 0] = 131, E5[A10 + 55 | 0] = 31, E5[A10 + 40 | 0] = 31, E5[A10 + 41 | 0] = 108, E5[A10 + 42 | 0] = 62, E5[A10 + 43 | 0] = 43, E5[A10 + 44 | 0] = 140, E5[A10 + 45 | 0] = 104, E5[A10 + 46 | 0] = 5, E5[A10 + 47 | 0] = 155, E5[A10 + 32 | 0] = 209, E5[A10 + 33 | 0] = 130, E5[A10 + 34 | 0] = 230, E5[A10 + 35 | 0] = 173, E5[A10 + 36 | 0] = 127, E5[A10 + 37 | 0] = 82, E5[A10 + 38 | 0] = 14, E5[A10 + 39 | 0] = 81, E5[A10 + 24 | 0] = 241, E5[A10 + 25 | 0] = 54, E5[A10 + 26 | 0] = 29, E5[A10 + 27 | 0] = 95, E5[A10 + 28 | 0] = 58, E5[A10 + 29 | 0] = 245, E5[A10 + 30 | 0] = 79, E5[A10 + 31 | 0] = 165, E5[A10 + 16 | 0] = 43, E5[A10 + 17 | 0] = 248, E5[A10 + 18 | 0] = 148, E5[A10 + 19 | 0] = 254, E5[A10 + 20 | 0] = 114, E5[A10 + 21 | 0] = 243, E5[A10 + 22 | 0] = 110, E5[A10 + 23 | 0] = 60, E5[A10 + 8 | 0] = 59, E5[A10 + 9 | 0] = 167, E5[A10 + 10 | 0] = 202, E5[A10 + 11 | 0] = 132, E5[A10 + 12 | 0] = 133, E5[A10 + 13 | 0] = 174, E5[A10 + 14 | 0] = 103, E5[A10 + 15 | 0] = 187, C6 = -222443256 ^ (g8 << 8 | C6), E5[0 | A10] = C6, E5[A10 + 1 | 0] = C6 >>> 8, E5[A10 + 2 | 0] = C6 >>> 16, E5[A10 + 3 | 0] = C6 >>> 24, C6 = g8 >>> 24 ^ 1779033703, E5[A10 + 4 | 0] = C6, E5[A10 + 5 | 0] = C6 >>> 8, E5[A10 + 6 | 0] = C6 >>> 16, E5[A10 + 7 | 0] = C6 >>> 24, MA(g8 + B6 | 0, 0, g8 << 24 >> 24 >= 0 ? 128 - g8 | 0 : 0), g8 = HA(B6, I9, g8), HA(A10 + 96 | 0, g8, 128), I9 = 128 + (a4[A10 + 352 | 0] | a4[A10 + 353 | 0] << 8 | a4[A10 + 354 | 0] << 16 | a4[A10 + 355 | 0] << 24) | 0, E5[A10 + 352 | 0] = I9, E5[A10 + 353 | 0] = I9 >>> 8, E5[A10 + 354 | 0] = I9 >>> 16, E5[A10 + 355 | 0] = I9 >>> 24, $A(g8, 128), D4 = g8 + 128 | 0)) : (((I9 = 255 & C6) - 65 & 255) >>> 0 <= 191 && (mA(), Q5()), MA(A10 - -64 | 0, 0, 293), E5[A10 + 56 | 0] = 121, E5[A10 + 57 | 0] = 33, E5[A10 + 58 | 0] = 126, E5[A10 + 59 | 0] = 19, E5[A10 + 60 | 0] = 25, E5[A10 + 61 | 0] = 205, E5[A10 + 62 | 0] = 224, E5[A10 + 63 | 0] = 91, E5[A10 + 48 | 0] = 107, E5[A10 + 49 | 0] = 189, E5[A10 + 50 | 0] = 65, E5[A10 + 51 | 0] = 251, E5[A10 + 52 | 0] = 171, E5[A10 + 53 | 0] = 217, E5[A10 + 54 | 0] = 131, E5[A10 + 55 | 0] = 31, E5[A10 + 40 | 0] = 31, E5[A10 + 41 | 0] = 108, E5[A10 + 42 | 0] = 62, E5[A10 + 43 | 0] = 43, E5[A10 + 44 | 0] = 140, E5[A10 + 45 | 0] = 104, E5[A10 + 46 | 0] = 5, E5[A10 + 47 | 0] = 155, E5[A10 + 32 | 0] = 209, E5[A10 + 33 | 0] = 130, E5[A10 + 34 | 0] = 230, E5[A10 + 35 | 0] = 173, E5[A10 + 36 | 0] = 127, E5[A10 + 37 | 0] = 82, E5[A10 + 38 | 0] = 14, E5[A10 + 39 | 0] = 81, E5[A10 + 24 | 0] = 241, E5[A10 + 25 | 0] = 54, E5[A10 + 26 | 0] = 29, E5[A10 + 27 | 0] = 95, E5[A10 + 28 | 0] = 58, E5[A10 + 29 | 0] = 245, E5[A10 + 30 | 0] = 79, E5[A10 + 31 | 0] = 165, E5[A10 + 16 | 0] = 43, E5[A10 + 17 | 0] = 248, E5[A10 + 18 | 0] = 148, E5[A10 + 19 | 0] = 254, E5[A10 + 20 | 0] = 114, E5[A10 + 21 | 0] = 243, E5[A10 + 22 | 0] = 110, E5[A10 + 23 | 0] = 60, E5[A10 + 8 | 0] = 59, E5[A10 + 9 | 0] = 167, E5[A10 + 10 | 0] = 202, E5[A10 + 11 | 0] = 132, E5[A10 + 12 | 0] = 133, E5[A10 + 13 | 0] = 174, E5[A10 + 14 | 0] = 103, E5[A10 + 15 | 0] = 187, I9 ^= -222443256, E5[0 | A10] = I9, E5[A10 + 1 | 0] = I9 >>> 8, E5[A10 + 2 | 0] = I9 >>> 16, E5[A10 + 3 | 0] = I9 >>> 24, E5[A10 + 4 | 0] = 103, E5[A10 + 5 | 0] = 230, E5[A10 + 6 | 0] = 9, E5[A10 + 7 | 0] = 106), B6 = 0), 0 | B6;
                    }
                    function b5(A10, I9, g8) {
                      var C6, B6, Q6, i6, E6, a5, n5, r4, f4, t5, e5, c5 = 0, y6 = 0, D5 = 0, w5 = 0, h5 = 0, s5 = 0, p6 = 0, u6 = 0, k6 = 0, l5 = 0, S6 = 0, H6 = 0, M6 = 0, G6 = 0, U6 = 0, J6 = 0, N6 = 0, Y5 = 0, b6 = 0;
                      c5 = o4[I9 + 40 >> 2], y6 = o4[I9 + 4 >> 2], w5 = o4[I9 + 44 >> 2], h5 = o4[I9 + 8 >> 2], s5 = o4[I9 + 48 >> 2], p6 = o4[I9 + 12 >> 2], u6 = o4[I9 + 52 >> 2], k6 = o4[I9 + 16 >> 2], l5 = o4[I9 + 56 >> 2], S6 = o4[I9 + 20 >> 2], H6 = o4[I9 + 60 >> 2], M6 = o4[I9 + 24 >> 2], G6 = o4[(D5 = I9 - -64 | 0) >> 2], U6 = o4[I9 + 28 >> 2], J6 = o4[I9 + 68 >> 2], N6 = o4[I9 + 32 >> 2], Y5 = o4[I9 + 72 >> 2], b6 = o4[I9 >> 2], o4[A10 + 36 >> 2] = o4[I9 + 36 >> 2] + o4[I9 + 76 >> 2], o4[A10 + 32 >> 2] = N6 + Y5, o4[A10 + 28 >> 2] = U6 + J6, o4[A10 + 24 >> 2] = M6 + G6, o4[A10 + 20 >> 2] = S6 + H6, o4[A10 + 16 >> 2] = k6 + l5, o4[A10 + 12 >> 2] = p6 + u6, o4[A10 + 8 >> 2] = h5 + s5, o4[A10 + 4 >> 2] = y6 + w5, o4[A10 >> 2] = c5 + b6, w5 = o4[I9 + 40 >> 2], c5 = o4[I9 + 4 >> 2], h5 = o4[I9 + 44 >> 2], s5 = o4[I9 + 8 >> 2], p6 = o4[I9 + 48 >> 2], u6 = o4[I9 + 12 >> 2], k6 = o4[I9 + 52 >> 2], l5 = o4[I9 + 16 >> 2], S6 = o4[I9 + 56 >> 2], H6 = o4[I9 + 20 >> 2], M6 = o4[I9 + 60 >> 2], G6 = o4[I9 + 24 >> 2], D5 = o4[D5 >> 2], y6 = o4[I9 + 28 >> 2], U6 = o4[I9 + 68 >> 2], J6 = o4[I9 + 32 >> 2], N6 = o4[I9 + 72 >> 2], Y5 = o4[I9 >> 2], o4[A10 + 76 >> 2] = o4[I9 + 76 >> 2] - o4[I9 + 36 >> 2], o4[A10 + 72 >> 2] = N6 - J6, o4[A10 + 68 >> 2] = U6 - y6, o4[(y6 = A10 - -64 | 0) >> 2] = D5 - G6, o4[A10 + 60 >> 2] = M6 - H6, o4[A10 + 56 >> 2] = S6 - l5, o4[A10 + 52 >> 2] = k6 - u6, o4[A10 + 48 >> 2] = p6 - s5, o4[A10 + 44 >> 2] = h5 - c5, o4[(c5 = A10 + 40 | 0) >> 2] = w5 - Y5, F5(A10 + 80 | 0, A10, g8 + 40 | 0), F5(c5, c5, g8), F5(A10 + 120 | 0, g8 + 120 | 0, I9 + 120 | 0), F5(A10, I9 + 80 | 0, g8 + 80 | 0), b6 = o4[A10 + 4 >> 2], Q6 = o4[A10 + 8 >> 2], i6 = o4[A10 + 12 >> 2], E6 = o4[A10 + 16 >> 2], a5 = o4[A10 + 20 >> 2], n5 = o4[A10 + 24 >> 2], r4 = o4[A10 + 28 >> 2], f4 = o4[A10 + 32 >> 2], t5 = o4[A10 + 36 >> 2], I9 = o4[c5 >> 2], g8 = o4[A10 + 80 >> 2], w5 = o4[A10 + 44 >> 2], h5 = o4[A10 + 84 >> 2], s5 = o4[A10 + 48 >> 2], p6 = o4[A10 + 88 >> 2], u6 = o4[A10 + 52 >> 2], k6 = o4[A10 + 92 >> 2], l5 = o4[A10 + 56 >> 2], S6 = o4[A10 + 96 >> 2], H6 = o4[A10 + 60 >> 2], M6 = o4[A10 + 100 >> 2], D5 = o4[y6 >> 2], G6 = o4[A10 + 104 >> 2], U6 = o4[A10 + 68 >> 2], J6 = o4[A10 + 108 >> 2], N6 = o4[A10 + 72 >> 2], Y5 = o4[A10 + 112 >> 2], e5 = o4[A10 >> 2], C6 = o4[A10 + 76 >> 2], B6 = o4[A10 + 116 >> 2], o4[A10 + 76 >> 2] = C6 + B6, o4[A10 + 72 >> 2] = N6 + Y5, o4[A10 + 68 >> 2] = U6 + J6, o4[y6 >> 2] = D5 + G6, o4[A10 + 60 >> 2] = H6 + M6, o4[A10 + 56 >> 2] = l5 + S6, o4[A10 + 52 >> 2] = u6 + k6, o4[A10 + 48 >> 2] = s5 + p6, o4[A10 + 44 >> 2] = w5 + h5, o4[c5 >> 2] = I9 + g8, o4[A10 + 36 >> 2] = B6 - C6, o4[A10 + 32 >> 2] = Y5 - N6, o4[A10 + 28 >> 2] = J6 - U6, o4[A10 + 24 >> 2] = G6 - D5, o4[A10 + 20 >> 2] = M6 - H6, o4[A10 + 16 >> 2] = S6 - l5, o4[A10 + 12 >> 2] = k6 - u6, o4[A10 + 8 >> 2] = p6 - s5, o4[A10 + 4 >> 2] = h5 - w5, o4[A10 >> 2] = g8 - I9, I9 = o4[A10 + 156 >> 2], g8 = t5 << 1, o4[A10 + 156 >> 2] = I9 + g8, c5 = o4[A10 + 152 >> 2], y6 = f4 << 1, o4[A10 + 152 >> 2] = c5 + y6, w5 = o4[A10 + 148 >> 2], h5 = r4 << 1, o4[A10 + 148 >> 2] = w5 + h5, s5 = o4[A10 + 144 >> 2], p6 = n5 << 1, o4[A10 + 144 >> 2] = s5 + p6, u6 = o4[A10 + 140 >> 2], k6 = a5 << 1, o4[A10 + 140 >> 2] = u6 + k6, l5 = o4[A10 + 136 >> 2], S6 = E6 << 1, o4[A10 + 136 >> 2] = l5 + S6, H6 = o4[A10 + 132 >> 2], M6 = i6 << 1, o4[A10 + 132 >> 2] = H6 + M6, D5 = o4[A10 + 128 >> 2], G6 = Q6 << 1, o4[A10 + 128 >> 2] = D5 + G6, U6 = o4[A10 + 124 >> 2], J6 = b6 << 1, o4[A10 + 124 >> 2] = U6 + J6, N6 = o4[A10 + 120 >> 2], Y5 = e5 << 1, o4[A10 + 120 >> 2] = N6 + Y5, o4[A10 + 112 >> 2] = y6 - c5, o4[A10 + 108 >> 2] = h5 - w5, o4[A10 + 104 >> 2] = p6 - s5, o4[A10 + 100 >> 2] = k6 - u6, o4[A10 + 96 >> 2] = S6 - l5, o4[A10 + 92 >> 2] = M6 - H6, o4[A10 + 88 >> 2] = G6 - D5, o4[A10 + 84 >> 2] = J6 - U6, o4[A10 + 80 >> 2] = Y5 - N6, o4[A10 + 116 >> 2] = g8 - I9;
                    }
                    function _5(A10, I9, g8) {
                      var C6, B6, Q6, i6, E6, a5, n5, r4, f4, t5, e5, c5 = 0, y6 = 0, D5 = 0, w5 = 0, h5 = 0, s5 = 0, p6 = 0, u6 = 0, k6 = 0, l5 = 0, S6 = 0, H6 = 0, M6 = 0, G6 = 0, U6 = 0, J6 = 0, N6 = 0, Y5 = 0, b6 = 0;
                      c5 = o4[I9 + 40 >> 2], y6 = o4[I9 + 4 >> 2], w5 = o4[I9 + 44 >> 2], h5 = o4[I9 + 8 >> 2], s5 = o4[I9 + 48 >> 2], p6 = o4[I9 + 12 >> 2], u6 = o4[I9 + 52 >> 2], k6 = o4[I9 + 16 >> 2], l5 = o4[I9 + 56 >> 2], S6 = o4[I9 + 20 >> 2], H6 = o4[I9 + 60 >> 2], M6 = o4[I9 + 24 >> 2], G6 = o4[(D5 = I9 - -64 | 0) >> 2], U6 = o4[I9 + 28 >> 2], J6 = o4[I9 + 68 >> 2], N6 = o4[I9 + 32 >> 2], Y5 = o4[I9 + 72 >> 2], b6 = o4[I9 >> 2], o4[A10 + 36 >> 2] = o4[I9 + 36 >> 2] + o4[I9 + 76 >> 2], o4[A10 + 32 >> 2] = N6 + Y5, o4[A10 + 28 >> 2] = U6 + J6, o4[A10 + 24 >> 2] = M6 + G6, o4[A10 + 20 >> 2] = S6 + H6, o4[A10 + 16 >> 2] = k6 + l5, o4[A10 + 12 >> 2] = p6 + u6, o4[A10 + 8 >> 2] = h5 + s5, o4[A10 + 4 >> 2] = y6 + w5, o4[A10 >> 2] = c5 + b6, w5 = o4[I9 + 40 >> 2], c5 = o4[I9 + 4 >> 2], h5 = o4[I9 + 44 >> 2], s5 = o4[I9 + 8 >> 2], p6 = o4[I9 + 48 >> 2], u6 = o4[I9 + 12 >> 2], k6 = o4[I9 + 52 >> 2], l5 = o4[I9 + 16 >> 2], S6 = o4[I9 + 56 >> 2], H6 = o4[I9 + 20 >> 2], M6 = o4[I9 + 60 >> 2], G6 = o4[I9 + 24 >> 2], D5 = o4[D5 >> 2], y6 = o4[I9 + 28 >> 2], U6 = o4[I9 + 68 >> 2], J6 = o4[I9 + 32 >> 2], N6 = o4[I9 + 72 >> 2], Y5 = o4[I9 >> 2], o4[A10 + 76 >> 2] = o4[I9 + 76 >> 2] - o4[I9 + 36 >> 2], o4[A10 + 72 >> 2] = N6 - J6, o4[A10 + 68 >> 2] = U6 - y6, o4[(y6 = A10 - -64 | 0) >> 2] = D5 - G6, o4[A10 + 60 >> 2] = M6 - H6, o4[A10 + 56 >> 2] = S6 - l5, o4[A10 + 52 >> 2] = k6 - u6, o4[A10 + 48 >> 2] = p6 - s5, o4[A10 + 44 >> 2] = h5 - c5, o4[(c5 = A10 + 40 | 0) >> 2] = w5 - Y5, F5(A10 + 80 | 0, A10, g8), F5(c5, c5, g8 + 40 | 0), F5(A10 + 120 | 0, g8 + 120 | 0, I9 + 120 | 0), F5(A10, I9 + 80 | 0, g8 + 80 | 0), b6 = o4[A10 + 4 >> 2], Q6 = o4[A10 + 8 >> 2], i6 = o4[A10 + 12 >> 2], E6 = o4[A10 + 16 >> 2], a5 = o4[A10 + 20 >> 2], n5 = o4[A10 + 24 >> 2], r4 = o4[A10 + 28 >> 2], f4 = o4[A10 + 32 >> 2], t5 = o4[A10 + 36 >> 2], I9 = o4[c5 >> 2], g8 = o4[A10 + 80 >> 2], w5 = o4[A10 + 44 >> 2], h5 = o4[A10 + 84 >> 2], s5 = o4[A10 + 48 >> 2], p6 = o4[A10 + 88 >> 2], u6 = o4[A10 + 52 >> 2], k6 = o4[A10 + 92 >> 2], l5 = o4[A10 + 56 >> 2], S6 = o4[A10 + 96 >> 2], H6 = o4[A10 + 60 >> 2], M6 = o4[A10 + 100 >> 2], D5 = o4[y6 >> 2], G6 = o4[A10 + 104 >> 2], U6 = o4[A10 + 68 >> 2], J6 = o4[A10 + 108 >> 2], N6 = o4[A10 + 72 >> 2], Y5 = o4[A10 + 112 >> 2], e5 = o4[A10 >> 2], C6 = o4[A10 + 76 >> 2], B6 = o4[A10 + 116 >> 2], o4[A10 + 76 >> 2] = C6 + B6, o4[A10 + 72 >> 2] = N6 + Y5, o4[A10 + 68 >> 2] = U6 + J6, o4[y6 >> 2] = D5 + G6, o4[A10 + 60 >> 2] = H6 + M6, o4[A10 + 56 >> 2] = l5 + S6, o4[A10 + 52 >> 2] = u6 + k6, o4[A10 + 48 >> 2] = s5 + p6, o4[A10 + 44 >> 2] = w5 + h5, o4[c5 >> 2] = I9 + g8, o4[A10 + 36 >> 2] = B6 - C6, o4[A10 + 32 >> 2] = Y5 - N6, o4[A10 + 28 >> 2] = J6 - U6, o4[A10 + 24 >> 2] = G6 - D5, o4[A10 + 20 >> 2] = M6 - H6, o4[A10 + 16 >> 2] = S6 - l5, o4[A10 + 12 >> 2] = k6 - u6, o4[A10 + 8 >> 2] = p6 - s5, o4[A10 + 4 >> 2] = h5 - w5, o4[A10 >> 2] = g8 - I9, I9 = t5 << 1, g8 = o4[A10 + 156 >> 2], o4[A10 + 156 >> 2] = I9 - g8, c5 = f4 << 1, y6 = o4[A10 + 152 >> 2], o4[A10 + 152 >> 2] = c5 - y6, w5 = r4 << 1, h5 = o4[A10 + 148 >> 2], o4[A10 + 148 >> 2] = w5 - h5, s5 = n5 << 1, p6 = o4[A10 + 144 >> 2], o4[A10 + 144 >> 2] = s5 - p6, u6 = a5 << 1, k6 = o4[A10 + 140 >> 2], o4[A10 + 140 >> 2] = u6 - k6, l5 = E6 << 1, S6 = o4[A10 + 136 >> 2], o4[A10 + 136 >> 2] = l5 - S6, H6 = i6 << 1, M6 = o4[A10 + 132 >> 2], o4[A10 + 132 >> 2] = H6 - M6, D5 = Q6 << 1, G6 = o4[A10 + 128 >> 2], o4[A10 + 128 >> 2] = D5 - G6, U6 = b6 << 1, J6 = o4[A10 + 124 >> 2], o4[A10 + 124 >> 2] = U6 - J6, N6 = e5 << 1, Y5 = o4[A10 + 120 >> 2], o4[A10 + 120 >> 2] = N6 - Y5, o4[A10 + 112 >> 2] = c5 + y6, o4[A10 + 108 >> 2] = w5 + h5, o4[A10 + 104 >> 2] = s5 + p6, o4[A10 + 100 >> 2] = u6 + k6, o4[A10 + 96 >> 2] = l5 + S6, o4[A10 + 92 >> 2] = H6 + M6, o4[A10 + 88 >> 2] = D5 + G6, o4[A10 + 84 >> 2] = U6 + J6, o4[A10 + 80 >> 2] = N6 + Y5, o4[A10 + 116 >> 2] = I9 + g8;
                    }
                    function K5(A10, I9, g8) {
                      var C6, B6, Q6, i6, E6, a5, n5, r4, f4, t5, e5, c5 = 0, y6 = 0, D5 = 0, w5 = 0, h5 = 0, s5 = 0, p6 = 0, u6 = 0, k6 = 0, l5 = 0, S6 = 0, H6 = 0, M6 = 0, G6 = 0, U6 = 0, J6 = 0, N6 = 0, Y5 = 0, b6 = 0;
                      c5 = o4[I9 + 40 >> 2], y6 = o4[I9 + 4 >> 2], w5 = o4[I9 + 44 >> 2], h5 = o4[I9 + 8 >> 2], s5 = o4[I9 + 48 >> 2], p6 = o4[I9 + 12 >> 2], u6 = o4[I9 + 52 >> 2], k6 = o4[I9 + 16 >> 2], l5 = o4[I9 + 56 >> 2], S6 = o4[I9 + 20 >> 2], H6 = o4[I9 + 60 >> 2], M6 = o4[I9 + 24 >> 2], G6 = o4[(D5 = I9 - -64 | 0) >> 2], U6 = o4[I9 + 28 >> 2], J6 = o4[I9 + 68 >> 2], N6 = o4[I9 + 32 >> 2], Y5 = o4[I9 + 72 >> 2], b6 = o4[I9 >> 2], o4[A10 + 36 >> 2] = o4[I9 + 36 >> 2] + o4[I9 + 76 >> 2], o4[A10 + 32 >> 2] = N6 + Y5, o4[A10 + 28 >> 2] = U6 + J6, o4[A10 + 24 >> 2] = M6 + G6, o4[A10 + 20 >> 2] = S6 + H6, o4[A10 + 16 >> 2] = k6 + l5, o4[A10 + 12 >> 2] = p6 + u6, o4[A10 + 8 >> 2] = h5 + s5, o4[A10 + 4 >> 2] = y6 + w5, o4[A10 >> 2] = c5 + b6, w5 = o4[I9 + 40 >> 2], c5 = o4[I9 + 4 >> 2], h5 = o4[I9 + 44 >> 2], s5 = o4[I9 + 8 >> 2], p6 = o4[I9 + 48 >> 2], u6 = o4[I9 + 12 >> 2], k6 = o4[I9 + 52 >> 2], l5 = o4[I9 + 16 >> 2], S6 = o4[I9 + 56 >> 2], H6 = o4[I9 + 20 >> 2], M6 = o4[I9 + 60 >> 2], G6 = o4[I9 + 24 >> 2], D5 = o4[D5 >> 2], y6 = o4[I9 + 28 >> 2], U6 = o4[I9 + 68 >> 2], J6 = o4[I9 + 32 >> 2], N6 = o4[I9 + 72 >> 2], Y5 = o4[I9 >> 2], o4[A10 + 76 >> 2] = o4[I9 + 76 >> 2] - o4[I9 + 36 >> 2], o4[A10 + 72 >> 2] = N6 - J6, o4[A10 + 68 >> 2] = U6 - y6, o4[(y6 = A10 - -64 | 0) >> 2] = D5 - G6, o4[A10 + 60 >> 2] = M6 - H6, o4[A10 + 56 >> 2] = S6 - l5, o4[A10 + 52 >> 2] = k6 - u6, o4[A10 + 48 >> 2] = p6 - s5, o4[A10 + 44 >> 2] = h5 - c5, o4[(c5 = A10 + 40 | 0) >> 2] = w5 - Y5, F5(A10 + 80 | 0, A10, g8), F5(c5, c5, g8 + 40 | 0), F5(A10 + 120 | 0, g8 + 80 | 0, I9 + 120 | 0), b6 = o4[I9 + 80 >> 2], Q6 = o4[I9 + 84 >> 2], i6 = o4[I9 + 88 >> 2], E6 = o4[I9 + 92 >> 2], a5 = o4[I9 + 96 >> 2], n5 = o4[I9 + 100 >> 2], r4 = o4[I9 + 104 >> 2], f4 = o4[I9 + 108 >> 2], t5 = o4[I9 + 112 >> 2], e5 = o4[I9 + 116 >> 2], I9 = o4[c5 >> 2], g8 = o4[A10 + 80 >> 2], w5 = o4[A10 + 44 >> 2], h5 = o4[A10 + 84 >> 2], s5 = o4[A10 + 48 >> 2], p6 = o4[A10 + 88 >> 2], u6 = o4[A10 + 52 >> 2], k6 = o4[A10 + 92 >> 2], l5 = o4[A10 + 56 >> 2], S6 = o4[A10 + 96 >> 2], H6 = o4[A10 + 60 >> 2], M6 = o4[A10 + 100 >> 2], D5 = o4[y6 >> 2], G6 = o4[A10 + 104 >> 2], U6 = o4[A10 + 68 >> 2], J6 = o4[A10 + 108 >> 2], N6 = o4[A10 + 72 >> 2], Y5 = o4[A10 + 112 >> 2], C6 = o4[A10 + 76 >> 2], B6 = o4[A10 + 116 >> 2], o4[A10 + 76 >> 2] = C6 + B6, o4[A10 + 72 >> 2] = N6 + Y5, o4[A10 + 68 >> 2] = U6 + J6, o4[y6 >> 2] = D5 + G6, o4[A10 + 60 >> 2] = H6 + M6, o4[A10 + 56 >> 2] = l5 + S6, o4[A10 + 52 >> 2] = u6 + k6, o4[A10 + 48 >> 2] = s5 + p6, o4[A10 + 44 >> 2] = w5 + h5, o4[c5 >> 2] = I9 + g8, o4[A10 + 36 >> 2] = B6 - C6, o4[A10 + 32 >> 2] = Y5 - N6, o4[A10 + 28 >> 2] = J6 - U6, o4[A10 + 24 >> 2] = G6 - D5, o4[A10 + 20 >> 2] = M6 - H6, o4[A10 + 16 >> 2] = S6 - l5, o4[A10 + 12 >> 2] = k6 - u6, o4[A10 + 8 >> 2] = p6 - s5, o4[A10 + 4 >> 2] = h5 - w5, o4[A10 >> 2] = g8 - I9, I9 = e5 << 1, g8 = o4[A10 + 156 >> 2], o4[A10 + 156 >> 2] = I9 - g8, c5 = t5 << 1, y6 = o4[A10 + 152 >> 2], o4[A10 + 152 >> 2] = c5 - y6, w5 = f4 << 1, h5 = o4[A10 + 148 >> 2], o4[A10 + 148 >> 2] = w5 - h5, s5 = r4 << 1, p6 = o4[A10 + 144 >> 2], o4[A10 + 144 >> 2] = s5 - p6, u6 = n5 << 1, k6 = o4[A10 + 140 >> 2], o4[A10 + 140 >> 2] = u6 - k6, l5 = a5 << 1, S6 = o4[A10 + 136 >> 2], o4[A10 + 136 >> 2] = l5 - S6, H6 = E6 << 1, M6 = o4[A10 + 132 >> 2], o4[A10 + 132 >> 2] = H6 - M6, D5 = i6 << 1, G6 = o4[A10 + 128 >> 2], o4[A10 + 128 >> 2] = D5 - G6, U6 = Q6 << 1, J6 = o4[A10 + 124 >> 2], o4[A10 + 124 >> 2] = U6 - J6, N6 = b6 << 1, Y5 = o4[A10 + 120 >> 2], o4[A10 + 120 >> 2] = N6 - Y5, o4[A10 + 112 >> 2] = c5 + y6, o4[A10 + 108 >> 2] = w5 + h5, o4[A10 + 104 >> 2] = s5 + p6, o4[A10 + 100 >> 2] = u6 + k6, o4[A10 + 96 >> 2] = l5 + S6, o4[A10 + 92 >> 2] = H6 + M6, o4[A10 + 88 >> 2] = D5 + G6, o4[A10 + 84 >> 2] = U6 + J6, o4[A10 + 80 >> 2] = N6 + Y5, o4[A10 + 116 >> 2] = I9 + g8;
                    }
                    function P5(A10, I9) {
                      var g8, C6, B6, Q6, i6, E6, n5, r4, f4, t5, e5, c5, y6, D5 = 0, h5 = 0, s5 = 0, p6 = 0, u6 = 0, k6 = 0, F6 = 0, l5 = 0, S6 = 0, H6 = 0, M6 = 0, G6 = 0, U6 = 0, J6 = 0;
                      c5 = a4[I9 + 31 | 0], g8 = a4[I9 + 30 | 0], C6 = a4[I9 + 29 | 0], B6 = a4[I9 + 6 | 0], Q6 = a4[I9 + 5 | 0], i6 = a4[I9 + 4 | 0], E6 = a4[I9 + 9 | 0], n5 = a4[I9 + 8 | 0], r4 = a4[I9 + 7 | 0], H6 = a4[I9 + 12 | 0], M6 = a4[I9 + 11 | 0], f4 = a4[I9 + 10 | 0], t5 = a4[I9 + 15 | 0], G6 = a4[I9 + 14 | 0], e5 = a4[I9 + 13 | 0], F6 = a4[I9 + 28 | 0], S6 = a4[I9 + 27 | 0], l5 = a4[I9 + 26 | 0], k6 = a4[I9 + 25 | 0], p6 = a4[I9 + 24 | 0], s5 = a4[I9 + 23 | 0], y6 = a4[0 | I9] | a4[I9 + 1 | 0] << 8 | a4[I9 + 2 | 0] << 16 | a4[I9 + 3 | 0] << 24, u6 = (D5 = a4[I9 + 21 | 0]) << 15, D5 = h5 = D5 >>> 17 | 0, J6 = u6, h5 = (u6 = a4[I9 + 20 | 0]) >>> 25 | 0, u6 = J6 | u6 << 7, U6 = D5 | h5, D5 = (h5 = a4[I9 + 22 | 0]) >>> 9 | 0, u6 |= h5 << 23, D5 |= U6, h5 = a4[I9 + 16 | 0] | a4[I9 + 17 | 0] << 8 | a4[I9 + 18 | 0] << 16 | a4[I9 + 19 | 0] << 24, I9 = 0, J6 = h5, h5 = (33554431 & (I9 = (U6 = h5 + 16777216 | 0) >>> 0 < 16777216 ? 1 : I9)) << 7 | U6 >>> 25, I9 = (I9 >>> 25 | 0) + D5 | 0, h5 = (D5 = u6 = h5 + u6 | 0) >>> 0 < h5 >>> 0 ? I9 + 1 | 0 : I9, I9 = (u6 = D5 + 33554432 | 0) >>> 0 < 33554432 ? h5 + 1 | 0 : h5, o4[A10 + 24 >> 2] = D5 - (-67108864 & u6), h5 = (D5 = s5 >>> 27 | 0) | p6 >>> 19 | k6 >>> 11, D5 = s5 = (p6 = k6 << 21 | (s5 = p6 << 13 | s5 << 5)) + (D5 = (67108863 & (D5 = I9)) << 6 | u6 >>> 26) | 0, I9 = h5, h5 = (s5 = p6 + 16777216 | 0) >>> 0 < 16777216 ? I9 + 1 | 0 : I9, o4[A10 + 28 >> 2] = D5 - (1040187392 & s5), D5 = (D5 = S6 >>> 20 | l5 >>> 28 | F6 >>> 12) + (h5 = (I9 = h5) >>> 25 | 0) | 0, I9 = (h5 = s5 = (I9 = (33554431 & I9) << 7 | s5 >>> 25) + (S6 << 12 | l5 << 4 | F6 << 20) | 0) >>> 0 < I9 >>> 0 ? D5 + 1 | 0 : D5, s5 = (F6 = h5 + 33554432 | 0) >>> 0 < 33554432 ? I9 + 1 | 0 : I9, o4[A10 + 32 >> 2] = h5 - (-67108864 & F6), D5 = (I9 = H6 >>> 13 | 0) | (h5 = M6 >>> 21 | f4 >>> 29), I9 = (D5 = (S6 = 16777216 + (H6 = M6 << 11 | f4 << 3 | H6 << 19) | 0) >>> 0 < 16777216 ? D5 + 1 | 0 : D5) >>> 25 | 0, D5 = (h5 = p6 = G6 << 10 | e5 << 2 | t5 << 18) + (p6 = (33554431 & D5) << 7 | S6 >>> 25) | 0, h5 = I9 + (k6 = G6 >>> 22 | e5 >>> 30 | t5 >>> 14) | 0, I9 = D5 >>> 0 < p6 >>> 0 ? h5 + 1 | 0 : h5, p6 = I9 = (67108863 & (I9 = (h5 = D5 + 33554432 | 0) >>> 0 < 33554432 ? I9 + 1 | 0 : I9)) << 6 | h5 >>> 26, I9 = I9 + (l5 = J6 - (-33554432 & U6) | 0) | 0, o4[A10 + 20 >> 2] = I9, o4[A10 + 16 >> 2] = D5 - (-67108864 & h5), h5 = Q6 >>> 18 | i6 >>> 26 | B6 >>> 10, D5 = (h5 = (l5 = 16777216 + (M6 = Q6 << 14 | i6 << 6 | B6 << 22) | 0) >>> 0 < 16777216 ? h5 + 1 | 0 : h5) >>> 25 | 0, h5 = (I9 = p6 = n5 << 13 | r4 << 5 | E6 << 21) + (p6 = (33554431 & h5) << 7 | l5 >>> 25) | 0, I9 = D5 + (k6 = n5 >>> 19 | r4 >>> 27 | E6 >>> 11) | 0, I9 = h5 >>> 0 < p6 >>> 0 ? I9 + 1 | 0 : I9, D5 = (k6 = h5 + 33554432 | 0) >>> 0 < 33554432 ? I9 + 1 | 0 : I9, o4[A10 + 8 >> 2] = h5 - (-67108864 & k6), F6 = (s5 = (67108863 & s5) << 6 | F6 >>> 26) + (G6 = c5 << 18 & 33292288 | g8 << 10 | C6 << 2) | 0, I9 = h5 = g8 >>> 22 | C6 >>> 30, h5 = (s5 = G6 + 16777216 | 0) >>> 0 < 16777216 ? I9 + 1 | 0 : I9, o4[A10 + 36 >> 2] = F6 - (33554432 & s5), D5 = H6 + ((67108863 & D5) << 6 | k6 >>> 26) | 0, o4[A10 + 12 >> 2] = D5 - (234881024 & S6), p6 = M6 - (2113929216 & l5) | 0, D5 = DA((33554431 & (I9 = h5)) << 7 | s5 >>> 25, h5 = I9 >>> 25 | 0, 19, 0), I9 = w4, D5 = D5 >>> 0 > (h5 = D5 + y6 | 0) >>> 0 ? I9 + 1 | 0 : I9, s5 = D5 = (67108863 & (D5 = (I9 = h5 + 33554432 | 0) >>> 0 < 33554432 ? D5 + 1 | 0 : D5)) << 6 | I9 >>> 26, D5 = D5 + p6 | 0, o4[A10 + 4 >> 2] = D5, o4[A10 >> 2] = h5 - (-67108864 & I9);
                    }
                    function v5(A10, I9) {
                      var g8, C6, B6, Q6 = 0, i6 = 0, n5 = 0, r4 = 0, f4 = 0, t5 = 0, e5 = 0, c5 = 0, y6 = 0, w5 = 0, h5 = 0, s5 = 0;
                      for (D4 = g8 = D4 - 480 | 0; i6 = (n5 = g8 + 288 | 0) + (Q6 << 1) | 0, c5 = a4[I9 + Q6 | 0], E5[i6 + 1 | 0] = c5 >>> 4, E5[0 | i6] = 15 & c5, n5 = n5 + ((i6 = 1 | Q6) << 1) | 0, i6 = a4[I9 + i6 | 0], E5[n5 + 1 | 0] = i6 >>> 4, E5[0 | n5] = 15 & i6, 32 != (0 | (Q6 = Q6 + 2 | 0)); )
                        ;
                      for (I9 = 0; Q6 = 8 + (n5 = (Q6 = I9) + a4[0 | (I9 = (g8 + 288 | 0) + r4 | 0)] | 0) | 0, E5[0 | I9] = n5 - (240 & Q6), Q6 = 8 + (n5 = a4[I9 + 1 | 0] + (Q6 << 24 >> 24 >> 4) | 0) | 0, E5[I9 + 1 | 0] = n5 - (240 & Q6), Q6 = 8 + (n5 = a4[I9 + 2 | 0] + (Q6 << 24 >> 24 >> 4) | 0) | 0, E5[I9 + 2 | 0] = n5 - (240 & Q6), I9 = Q6 << 24 >> 24 >> 4, 63 != (0 | (r4 = r4 + 3 | 0)); )
                        ;
                      for (E5[g8 + 351 | 0] = a4[g8 + 351 | 0] + I9, o4[A10 + 32 >> 2] = 0, o4[A10 + 36 >> 2] = 0, o4[A10 + 24 >> 2] = 0, o4[A10 + 28 >> 2] = 0, o4[A10 + 16 >> 2] = 0, o4[A10 + 20 >> 2] = 0, o4[A10 + 8 >> 2] = 0, o4[A10 + 12 >> 2] = 0, o4[A10 >> 2] = 0, o4[A10 + 4 >> 2] = 0, o4[A10 + 44 >> 2] = 0, o4[A10 + 48 >> 2] = 0, o4[(c5 = A10 + 40 | 0) >> 2] = 1, o4[A10 + 52 >> 2] = 0, o4[A10 + 56 >> 2] = 0, o4[A10 + 60 >> 2] = 0, o4[A10 + 64 >> 2] = 0, o4[A10 + 68 >> 2] = 0, o4[A10 + 72 >> 2] = 0, o4[A10 + 76 >> 2] = 0, o4[A10 + 80 >> 2] = 1, MA(A10 + 84 | 0, 0, 76), C6 = A10 + 120 | 0, B6 = A10 + 80 | 0, I9 = g8 + 208 | 0, n5 = g8 + 168 | 0, r4 = g8 + 248 | 0, Q6 = 1; q4(f4 = g8 + 8 | 0, Q6 >>> 1 | 0, E5[(g8 + 288 | 0) + Q6 | 0]), K5(i6 = g8 + 128 | 0, A10, f4), F5(A10, i6, r4), F5(c5, n5, I9), F5(B6, I9, r4), F5(C6, i6, n5), i6 = Q6 >>> 0 < 62, Q6 = Q6 + 2 | 0, i6; )
                        ;
                      for (Q6 = o4[A10 + 8 >> 2], i6 = o4[A10 + 12 >> 2], f4 = o4[A10 + 16 >> 2], t5 = o4[A10 + 20 >> 2], y6 = o4[A10 + 24 >> 2], w5 = o4[A10 + 28 >> 2], e5 = o4[A10 >> 2], h5 = o4[A10 + 4 >> 2], s5 = o4[A10 + 36 >> 2], o4[g8 + 392 >> 2] = o4[A10 + 32 >> 2], o4[g8 + 396 >> 2] = s5, o4[g8 + 384 >> 2] = y6, o4[g8 + 388 >> 2] = w5, o4[g8 + 376 >> 2] = f4, o4[g8 + 380 >> 2] = t5, o4[g8 + 368 >> 2] = Q6, o4[g8 + 372 >> 2] = i6, o4[g8 + 360 >> 2] = e5, o4[g8 + 364 >> 2] = h5, Q6 = o4[A10 + 40 >> 2], i6 = o4[A10 + 44 >> 2], f4 = o4[A10 + 48 >> 2], t5 = o4[A10 + 52 >> 2], y6 = o4[A10 + 56 >> 2], w5 = o4[A10 + 60 >> 2], h5 = o4[(e5 = A10 - -64 | 0) >> 2], e5 = o4[e5 + 4 >> 2], s5 = o4[A10 + 76 >> 2], o4[g8 + 432 >> 2] = o4[A10 + 72 >> 2], o4[g8 + 436 >> 2] = s5, o4[g8 + 424 >> 2] = h5, o4[g8 + 428 >> 2] = e5, o4[g8 + 416 >> 2] = y6, o4[g8 + 420 >> 2] = w5, o4[g8 + 408 >> 2] = f4, o4[g8 + 412 >> 2] = t5, o4[g8 + 400 >> 2] = Q6, o4[g8 + 404 >> 2] = i6, Q6 = o4[A10 + 80 >> 2], i6 = o4[A10 + 84 >> 2], f4 = o4[A10 + 88 >> 2], t5 = o4[A10 + 92 >> 2], y6 = o4[A10 + 96 >> 2], w5 = o4[A10 + 100 >> 2], e5 = o4[A10 + 104 >> 2], h5 = o4[A10 + 108 >> 2], s5 = o4[A10 + 116 >> 2], o4[g8 + 472 >> 2] = o4[A10 + 112 >> 2], o4[g8 + 476 >> 2] = s5, o4[g8 + 464 >> 2] = e5, o4[g8 + 468 >> 2] = h5, o4[g8 + 456 >> 2] = y6, o4[g8 + 460 >> 2] = w5, o4[g8 + 448 >> 2] = f4, o4[g8 + 452 >> 2] = t5, o4[g8 + 440 >> 2] = Q6, o4[g8 + 444 >> 2] = i6, l4(Q6 = g8 + 128 | 0, i6 = g8 + 360 | 0), F5(i6, Q6, r4), F5(f4 = g8 + 400 | 0, n5, I9), F5(t5 = g8 + 440 | 0, I9, r4), l4(Q6, i6), F5(i6, Q6, r4), F5(f4, n5, I9), F5(t5, I9, r4), l4(Q6, i6), F5(i6, Q6, r4), F5(f4, n5, I9), F5(t5, I9, r4), l4(Q6, i6), F5(A10, Q6, r4), F5(c5, n5, I9), F5(B6, I9, r4), F5(C6, Q6, n5), Q6 = 0; q4(f4 = g8 + 8 | 0, Q6 >>> 1 | 0, E5[(g8 + 288 | 0) + Q6 | 0]), K5(i6 = g8 + 128 | 0, A10, f4), F5(A10, i6, r4), F5(c5, n5, I9), F5(B6, I9, r4), F5(C6, i6, n5), i6 = Q6 >>> 0 < 62, Q6 = Q6 + 2 | 0, i6; )
                        ;
                      D4 = g8 + 480 | 0;
                    }
                    function m4(A10, I9, g8, C6) {
                      var B6, Q6 = 0, i6 = 0, n5 = 0, r4 = 0, f4 = 0, t5 = 0, e5 = 0, c5 = 0, y6 = 0, w5 = 0, h5 = 0, s5 = 0;
                      if (D4 = B6 = D4 - 704 | 0, g8 | C6)
                        if (Q6 = (C6 << 3 | g8 >>> 29) + (i6 = n5 = o4[A10 + 76 >> 2]) | 0, f4 = (t5 = o4[A10 + 72 >> 2]) + (r4 = g8 << 3) | 0, o4[A10 + 72 >> 2] = f4, Q6 = r4 >>> 0 > f4 >>> 0 ? Q6 + 1 | 0 : Q6, o4[A10 + 76 >> 2] = Q6, n5 = o4[4 + (r4 = A10 - -64 | 0) >> 2], n5 = (e5 = Q6 = (0 | Q6) == (0 | i6) & f4 >>> 0 < t5 >>> 0 | Q6 >>> 0 < i6 >>> 0) >>> 0 > (Q6 = Q6 + o4[r4 >> 2] | 0) >>> 0 ? n5 + 1 | 0 : n5, f4 = (e5 = C6 >>> 29 | 0) + Q6 | 0, Q6 = n5, o4[r4 >> 2] = f4, o4[r4 + 4 >> 2] = f4 >>> 0 < e5 >>> 0 ? Q6 + 1 | 0 : Q6, (0 | (n5 = e5 = 0 - ((Q6 = 0) + ((r4 = 127 & ((7 & i6) << 29 | t5 >>> 3)) >>> 0 > 128) | 0) | 0)) == (0 | C6) & g8 >>> 0 >= (f4 = 128 - r4 | 0) >>> 0 | C6 >>> 0 > n5 >>> 0) {
                          if (i6 = 0, n5 = 0, !Q6 & (127 ^ r4) >>> 0 >= 3 | Q6)
                            for (s5 = 252 & f4, t5 = A10 + 80 | 0; E5[(Q6 = i6 + r4 | 0) + t5 | 0] = a4[I9 + i6 | 0], E5[t5 + (r4 + (Q6 = 1 | i6) | 0) | 0] = a4[I9 + Q6 | 0], E5[t5 + (r4 + (Q6 = 2 | i6) | 0) | 0] = a4[I9 + Q6 | 0], E5[t5 + (r4 + (Q6 = 3 | i6) | 0) | 0] = a4[I9 + Q6 | 0], Q6 = n5, n5 = (i6 = i6 + 4 | 0) >>> 0 < 4 ? Q6 + 1 | 0 : Q6, Q6 = y6, y6 = Q6 = (w5 = w5 + 4 | 0) >>> 0 < 4 ? Q6 + 1 | 0 : Q6, (0 | w5) != (0 | s5) | (0 | h5) != (0 | Q6); )
                              ;
                          if (t5 = Q6 = 0, Q6 | (y6 = 3 & f4))
                            for (; E5[80 + (A10 + (Q6 = i6 + r4 | 0) | 0) | 0] = a4[I9 + i6 | 0], Q6 = n5, n5 = (i6 = i6 + 1 | 0) ? Q6 : Q6 + 1 | 0, Q6 = h5, h5 = Q6 = (c5 = c5 + 1 | 0) ? Q6 : Q6 + 1 | 0, (0 | y6) != (0 | c5) | (0 | t5) != (0 | Q6); )
                              ;
                          if (p5(A10, A10 + 80 | 0, B6, i6 = B6 + 640 | 0), I9 = I9 + f4 | 0, !(C6 = C6 - ((g8 >>> 0 < f4 >>> 0) + e5 | 0) | 0) & (g8 = g8 - f4 | 0) >>> 0 > 127 | C6)
                            for (; p5(A10, I9, B6, i6), I9 = I9 + 128 | 0, !(C6 = C6 - (g8 >>> 0 < 128) | 0) & (g8 = g8 - 128 | 0) >>> 0 > 127 | C6; )
                              ;
                          if (g8 | C6) {
                            if (w5 = 3 & g8, f4 = 0, c5 = 0, h5 = 0, i6 = 0, n5 = 0, !C6 & g8 >>> 0 >= 4 | C6)
                              for (r4 = -4 & g8, t5 = C6, y6 = A10 + 80 | 0, g8 = 0, C6 = 0; E5[i6 + y6 | 0] = a4[I9 + i6 | 0], E5[(Q6 = 1 | i6) + y6 | 0] = a4[I9 + Q6 | 0], E5[(Q6 = 2 | i6) + y6 | 0] = a4[I9 + Q6 | 0], E5[(Q6 = 3 | i6) + y6 | 0] = a4[I9 + Q6 | 0], Q6 = n5, n5 = (i6 = i6 + 4 | 0) >>> 0 < 4 ? Q6 + 1 | 0 : Q6, Q6 = C6, C6 = Q6 = (g8 = g8 + 4 | 0) >>> 0 < 4 ? Q6 + 1 | 0 : Q6, (0 | g8) != (0 | r4) | (0 | t5) != (0 | Q6); )
                                ;
                            if (f4 | w5)
                              for (; E5[80 + (A10 + i6 | 0) | 0] = a4[I9 + i6 | 0], n5 = (i6 = i6 + 1 | 0) ? n5 : n5 + 1 | 0, Q6 = h5, h5 = Q6 = (c5 = c5 + 1 | 0) ? Q6 : Q6 + 1 | 0, (0 | c5) != (0 | w5) | (0 | f4) != (0 | Q6); )
                                ;
                          }
                          $A(B6, 704);
                        } else {
                          if (i6 = 0, n5 = 0, !C6 & g8 >>> 0 >= 4 | C6)
                            for (f4 = -4 & g8, t5 = C6, C6 = A10 + 80 | 0; E5[C6 + (Q6 = i6 + r4 | 0) | 0] = a4[I9 + i6 | 0], E5[C6 + (e5 = r4 + (Q6 = 1 | i6) | 0) | 0] = a4[I9 + Q6 | 0], E5[C6 + (e5 = r4 + (Q6 = 2 | i6) | 0) | 0] = a4[I9 + Q6 | 0], E5[C6 + (e5 = r4 + (Q6 = 3 | i6) | 0) | 0] = a4[I9 + Q6 | 0], Q6 = n5, n5 = (i6 = i6 + 4 | 0) >>> 0 < 4 ? Q6 + 1 | 0 : Q6, Q6 = y6, y6 = Q6 = (w5 = w5 + 4 | 0) >>> 0 < 4 ? Q6 + 1 | 0 : Q6, (0 | f4) != (0 | w5) | (0 | t5) != (0 | Q6); )
                              ;
                          if ((g8 &= 3) | (C6 = 0))
                            for (; E5[80 + (A10 + (Q6 = i6 + r4 | 0) | 0) | 0] = a4[I9 + i6 | 0], n5 = (i6 = i6 + 1 | 0) ? n5 : n5 + 1 | 0, Q6 = h5, h5 = Q6 = (c5 = c5 + 1 | 0) ? Q6 : Q6 + 1 | 0, (0 | g8) != (0 | c5) | (0 | C6) != (0 | Q6); )
                              ;
                        }
                      return D4 = B6 + 704 | 0, 0;
                    }
                    function d3(A10, I9, g8) {
                      var C6 = 0, B6 = 0, Q6 = 0, i6 = 0, o5 = 0, n5 = 0, r4 = 0, f4 = 0, t5 = 0, e5 = 0, c5 = 0, y6 = 0, D5 = 0, w5 = 0, h5 = 0, s5 = 0, p6 = 0, u6 = 0, k6 = 0, F6 = 0;
                      for (B6 = 2036477234, i6 = 857760878, C6 = 1634760805, n5 = 1797285236, Q6 = a4[I9 + 12 | 0] | a4[I9 + 13 | 0] << 8 | a4[I9 + 14 | 0] << 16 | a4[I9 + 15 | 0] << 24, t5 = a4[I9 + 8 | 0] | a4[I9 + 9 | 0] << 8 | a4[I9 + 10 | 0] << 16 | a4[I9 + 11 | 0] << 24, o5 = a4[I9 + 4 | 0] | a4[I9 + 5 | 0] << 8 | a4[I9 + 6 | 0] << 16 | a4[I9 + 7 | 0] << 24, e5 = a4[g8 + 28 | 0] | a4[g8 + 29 | 0] << 8 | a4[g8 + 30 | 0] << 16 | a4[g8 + 31 | 0] << 24, r4 = a4[g8 + 24 | 0] | a4[g8 + 25 | 0] << 8 | a4[g8 + 26 | 0] << 16 | a4[g8 + 27 | 0] << 24, p6 = a4[g8 + 20 | 0] | a4[g8 + 21 | 0] << 8 | a4[g8 + 22 | 0] << 16 | a4[g8 + 23 | 0] << 24, c5 = a4[g8 + 16 | 0] | a4[g8 + 17 | 0] << 8 | a4[g8 + 18 | 0] << 16 | a4[g8 + 19 | 0] << 24, y6 = a4[g8 + 12 | 0] | a4[g8 + 13 | 0] << 8 | a4[g8 + 14 | 0] << 16 | a4[g8 + 15 | 0] << 24, D5 = a4[g8 + 8 | 0] | a4[g8 + 9 | 0] << 8 | a4[g8 + 10 | 0] << 16 | a4[g8 + 11 | 0] << 24, w5 = a4[g8 + 4 | 0] | a4[g8 + 5 | 0] << 8 | a4[g8 + 6 | 0] << 16 | a4[g8 + 7 | 0] << 24, I9 = a4[0 | I9] | a4[I9 + 1 | 0] << 8 | a4[I9 + 2 | 0] << 16 | a4[I9 + 3 | 0] << 24, g8 = a4[0 | g8] | a4[g8 + 1 | 0] << 8 | a4[g8 + 2 | 0] << 16 | a4[g8 + 3 | 0] << 24; f4 = g8, g8 = YA((h5 = I9) ^ (I9 = g8 + C6 | 0), 16), f4 = c5 = YA(f4 ^ (C6 = g8 + c5 | 0), 12), u6 = YA((h5 = I9 + c5 | 0) ^ g8, 8), I9 = YA(f4 ^ (c5 = u6 + C6 | 0), 7), C6 = y6, y6 = YA((g8 = n5 + y6 | 0) ^ Q6, 16), C6 = YA(C6 ^ (e5 = y6 + e5 | 0), 12), Q6 = D5, n5 = YA((B6 = B6 + D5 | 0) ^ t5, 16), Q6 = YA(Q6 ^ (D5 = n5 + r4 | 0), 12), r4 = YA((B6 = Q6 + B6 | 0) ^ n5, 8), g8 = YA(r4 ^ (n5 = I9 + (s5 = g8 + C6 | 0) | 0), 16), t5 = YA((i6 = i6 + w5 | 0) ^ o5, 16), w5 = YA((o5 = t5 + p6 | 0) ^ w5, 12), f4 = I9, I9 = YA((i6 = i6 + w5 | 0) ^ t5, 8), f4 = YA(f4 ^ (o5 = g8 + (k6 = I9 + o5 | 0) | 0), 12), t5 = YA(g8 ^ (n5 = f4 + n5 | 0), 8), g8 = YA((p6 = t5 + o5 | 0) ^ f4, 7), f4 = B6, B6 = C6, s5 = YA(y6 ^ s5, 8), B6 = YA(B6 ^ (C6 = s5 + e5 | 0), 7), y6 = YA((o5 = f4 + B6 | 0) ^ I9, 16), e5 = YA((I9 = y6 + c5 | 0) ^ B6, 12), o5 = YA(y6 ^ (B6 = e5 + o5 | 0), 8), y6 = YA((c5 = I9 + o5 | 0) ^ e5, 7), I9 = YA((I9 = Q6) ^ (Q6 = r4 + D5 | 0), 7), D5 = YA((i6 = I9 + i6 | 0) ^ u6, 16), r4 = YA(I9 ^ (C6 = D5 + C6 | 0), 12), I9 = YA(D5 ^ (i6 = r4 + i6 | 0), 8), D5 = YA((e5 = C6 + I9 | 0) ^ r4, 7), f4 = Q6, C6 = YA(w5 ^ k6, 7), r4 = YA((Q6 = C6 + h5 | 0) ^ s5, 16), h5 = YA(C6 ^ (w5 = f4 + r4 | 0), 12), Q6 = YA(r4 ^ (C6 = h5 + Q6 | 0), 8), w5 = YA((r4 = w5 + Q6 | 0) ^ h5, 7), 10 != (0 | (F6 = F6 + 1 | 0)); )
                        ;
                      E5[0 | A10] = C6, E5[A10 + 1 | 0] = C6 >>> 8, E5[A10 + 2 | 0] = C6 >>> 16, E5[A10 + 3 | 0] = C6 >>> 24, E5[A10 + 28 | 0] = Q6, E5[A10 + 29 | 0] = Q6 >>> 8, E5[A10 + 30 | 0] = Q6 >>> 16, E5[A10 + 31 | 0] = Q6 >>> 24, E5[A10 + 24 | 0] = t5, E5[A10 + 25 | 0] = t5 >>> 8, E5[A10 + 26 | 0] = t5 >>> 16, E5[A10 + 27 | 0] = t5 >>> 24, E5[A10 + 20 | 0] = o5, E5[A10 + 21 | 0] = o5 >>> 8, E5[A10 + 22 | 0] = o5 >>> 16, E5[A10 + 23 | 0] = o5 >>> 24, E5[A10 + 16 | 0] = I9, E5[A10 + 17 | 0] = I9 >>> 8, E5[A10 + 18 | 0] = I9 >>> 16, E5[A10 + 19 | 0] = I9 >>> 24, E5[A10 + 12 | 0] = n5, E5[A10 + 13 | 0] = n5 >>> 8, E5[A10 + 14 | 0] = n5 >>> 16, E5[A10 + 15 | 0] = n5 >>> 24, E5[A10 + 8 | 0] = B6, E5[A10 + 9 | 0] = B6 >>> 8, E5[A10 + 10 | 0] = B6 >>> 16, E5[A10 + 11 | 0] = B6 >>> 24, E5[A10 + 4 | 0] = i6, E5[A10 + 5 | 0] = i6 >>> 8, E5[A10 + 6 | 0] = i6 >>> 16, E5[A10 + 7 | 0] = i6 >>> 24;
                    }
                    function L5(A10, I9, g8) {
                      var C6 = 0, B6 = 0, Q6 = 0, i6 = 0, o5 = 0, n5 = 0, r4 = 0, f4 = 0, t5 = 0, e5 = 0, c5 = 0, y6 = 0, D5 = 0, w5 = 0, h5 = 0, s5 = 0, p6 = 0, u6 = 0, k6 = 0, F6 = 0;
                      for (C6 = 1797285236, r4 = 2036477234, f4 = 857760878, B6 = 1634760805, Q6 = a4[I9 + 12 | 0] | a4[I9 + 13 | 0] << 8 | a4[I9 + 14 | 0] << 16 | a4[I9 + 15 | 0] << 24, o5 = a4[I9 + 8 | 0] | a4[I9 + 9 | 0] << 8 | a4[I9 + 10 | 0] << 16 | a4[I9 + 11 | 0] << 24, i6 = a4[I9 + 4 | 0] | a4[I9 + 5 | 0] << 8 | a4[I9 + 6 | 0] << 16 | a4[I9 + 7 | 0] << 24, h5 = a4[g8 + 28 | 0] | a4[g8 + 29 | 0] << 8 | a4[g8 + 30 | 0] << 16 | a4[g8 + 31 | 0] << 24, w5 = a4[g8 + 24 | 0] | a4[g8 + 25 | 0] << 8 | a4[g8 + 26 | 0] << 16 | a4[g8 + 27 | 0] << 24, s5 = 20, y6 = a4[g8 + 20 | 0] | a4[g8 + 21 | 0] << 8 | a4[g8 + 22 | 0] << 16 | a4[g8 + 23 | 0] << 24, D5 = a4[g8 + 16 | 0] | a4[g8 + 17 | 0] << 8 | a4[g8 + 18 | 0] << 16 | a4[g8 + 19 | 0] << 24, t5 = a4[g8 + 12 | 0] | a4[g8 + 13 | 0] << 8 | a4[g8 + 14 | 0] << 16 | a4[g8 + 15 | 0] << 24, e5 = a4[g8 + 8 | 0] | a4[g8 + 9 | 0] << 8 | a4[g8 + 10 | 0] << 16 | a4[g8 + 11 | 0] << 24, c5 = a4[g8 + 4 | 0] | a4[g8 + 5 | 0] << 8 | a4[g8 + 6 | 0] << 16 | a4[g8 + 7 | 0] << 24, I9 = a4[0 | I9] | a4[I9 + 1 | 0] << 8 | a4[I9 + 2 | 0] << 16 | a4[I9 + 3 | 0] << 24, g8 = a4[0 | g8] | a4[g8 + 1 | 0] << 8 | a4[g8 + 2 | 0] << 16 | a4[g8 + 3 | 0] << 24; n5 = YA(g8 + f4 | 0, 7) ^ Q6, p6 = YA(n5 + f4 | 0, 9) ^ w5, t5 = YA(B6 + y6 | 0, 7) ^ t5, u6 = YA(t5 + B6 | 0, 9) ^ o5, k6 = YA(u6 + t5 | 0, 13) ^ y6, e5 = YA(C6 + D5 | 0, 7) ^ e5, i6 = YA(e5 + C6 | 0, 9) ^ i6, o5 = YA(i6 + e5 | 0, 13) ^ D5, C6 = YA(i6 + o5 | 0, 18) ^ C6, Q6 = YA(I9 + r4 | 0, 7) ^ h5, y6 = k6 ^ YA(C6 + Q6 | 0, 7), w5 = p6 ^ YA(y6 + C6 | 0, 9), h5 = YA(y6 + w5 | 0, 13) ^ Q6, C6 = YA(w5 + h5 | 0, 18) ^ C6, c5 = YA(Q6 + r4 | 0, 9) ^ c5, F6 = YA(c5 + Q6 | 0, 13) ^ I9, I9 = YA(F6 + c5 | 0, 18) ^ r4, D5 = YA(I9 + n5 | 0, 7) ^ o5, o5 = YA(D5 + I9 | 0, 9) ^ u6, Q6 = YA(o5 + D5 | 0, 13) ^ n5, r4 = YA(Q6 + o5 | 0, 18) ^ I9, n5 = YA(n5 + p6 | 0, 13) ^ g8, g8 = YA(n5 + p6 | 0, 18) ^ f4, I9 = YA(g8 + t5 | 0, 7) ^ F6, i6 = YA(I9 + g8 | 0, 9) ^ i6, t5 = YA(I9 + i6 | 0, 13) ^ t5, f4 = YA(i6 + t5 | 0, 18) ^ g8, B6 = YA(u6 + k6 | 0, 18) ^ B6, g8 = YA(B6 + e5 | 0, 7) ^ n5, c5 = YA(g8 + B6 | 0, 9) ^ c5, e5 = YA(g8 + c5 | 0, 13) ^ e5, B6 = YA(c5 + e5 | 0, 18) ^ B6, n5 = s5 >>> 0 > 2, s5 = s5 - 2 | 0, n5; )
                        ;
                      return E5[0 | A10] = B6, E5[A10 + 1 | 0] = B6 >>> 8, E5[A10 + 2 | 0] = B6 >>> 16, E5[A10 + 3 | 0] = B6 >>> 24, E5[A10 + 28 | 0] = Q6, E5[A10 + 29 | 0] = Q6 >>> 8, E5[A10 + 30 | 0] = Q6 >>> 16, E5[A10 + 31 | 0] = Q6 >>> 24, E5[A10 + 24 | 0] = o5, E5[A10 + 25 | 0] = o5 >>> 8, E5[A10 + 26 | 0] = o5 >>> 16, E5[A10 + 27 | 0] = o5 >>> 24, E5[A10 + 20 | 0] = i6, E5[A10 + 21 | 0] = i6 >>> 8, E5[A10 + 22 | 0] = i6 >>> 16, E5[A10 + 23 | 0] = i6 >>> 24, E5[A10 + 16 | 0] = I9, E5[A10 + 17 | 0] = I9 >>> 8, E5[A10 + 18 | 0] = I9 >>> 16, E5[A10 + 19 | 0] = I9 >>> 24, E5[A10 + 12 | 0] = C6, E5[A10 + 13 | 0] = C6 >>> 8, E5[A10 + 14 | 0] = C6 >>> 16, E5[A10 + 15 | 0] = C6 >>> 24, E5[A10 + 8 | 0] = r4, E5[A10 + 9 | 0] = r4 >>> 8, E5[A10 + 10 | 0] = r4 >>> 16, E5[A10 + 11 | 0] = r4 >>> 24, E5[A10 + 4 | 0] = f4, E5[A10 + 5 | 0] = f4 >>> 8, E5[A10 + 6 | 0] = f4 >>> 16, E5[A10 + 7 | 0] = f4 >>> 24, 0;
                    }
                    function R5(A10, I9, g8, C6, B6, i6, E6) {
                      var a5 = 0, n5 = 0, r4 = 0, f4 = 0, t5 = 0, e5 = 0, c5 = 0;
                      if (I9 - 65 >>> 0 < 4294967232 | E6 >>> 0 > 64)
                        A10 = -1;
                      else {
                        e5 = a5 = D4, D4 = a5 = a5 - 512 & -64;
                        A: {
                          I:
                            if (!(!(!(C6 | B6) | g8) | !A10 | ((n5 = 255 & I9) - 65 & 255) >>> 0 <= 191 | !(!(I9 = 255 & E6) || i6) | I9 >>> 0 >= 65)) {
                              if (I9) {
                                if (!i6)
                                  break I;
                                MA(a5 - -64 | 0, 0, 293), o4[a5 + 56 >> 2] = 327033209, o4[a5 + 60 >> 2] = 1541459225, o4[a5 + 48 >> 2] = -79577749, o4[a5 + 52 >> 2] = 528734635, o4[a5 + 40 >> 2] = 725511199, o4[a5 + 44 >> 2] = -1694144372, o4[a5 + 32 >> 2] = -1377402159, o4[a5 + 36 >> 2] = 1359893119, o4[a5 + 24 >> 2] = 1595750129, o4[a5 + 28 >> 2] = -1521486534, o4[a5 + 16 >> 2] = -23791573, o4[a5 + 20 >> 2] = 1013904242, o4[a5 + 8 >> 2] = -2067093701, o4[a5 + 12 >> 2] = -1150833019, o4[a5 >> 2] = -222443256 ^ (I9 << 8 | n5), o4[a5 + 4 >> 2] = I9 >>> 24 ^ 1779033703, MA((E6 = a5 + 384 | 0) + I9 | 0, 0, 128 - I9 | 0), HA(E6, i6, I9), HA(a5 + 96 | 0, E6, 128), o4[a5 + 352 >> 2] = 128, $A(E6, 128), I9 = 128;
                              } else
                                MA(a5 - -64 | 0, 0, 293), o4[a5 + 56 >> 2] = 327033209, o4[a5 + 60 >> 2] = 1541459225, o4[a5 + 48 >> 2] = -79577749, o4[a5 + 52 >> 2] = 528734635, o4[a5 + 40 >> 2] = 725511199, o4[a5 + 44 >> 2] = -1694144372, o4[a5 + 32 >> 2] = -1377402159, o4[a5 + 36 >> 2] = 1359893119, o4[a5 + 24 >> 2] = 1595750129, o4[a5 + 28 >> 2] = -1521486534, o4[a5 + 16 >> 2] = -23791573, o4[a5 + 20 >> 2] = 1013904242, o4[a5 + 8 >> 2] = -2067093701, o4[a5 + 12 >> 2] = -1150833019, o4[a5 >> 2] = -222443256 ^ n5, o4[a5 + 4 >> 2] = 1779033703, I9 = 0;
                              g:
                                if (C6 | B6)
                                  for (c5 = a5 + 224 | 0, r4 = a5 + 96 | 0; ; ) {
                                    if (E6 = I9 + r4 | 0, !B6 & C6 >>> 0 <= (i6 = 256 - I9 | 0) >>> 0) {
                                      HA(E6, g8, C6), o4[a5 + 352 >> 2] = C6 + o4[a5 + 352 >> 2];
                                      break g;
                                    }
                                    if (HA(E6, g8, i6), o4[a5 + 352 >> 2] = i6 + o4[a5 + 352 >> 2], f4 = I9 = o4[a5 + 68 >> 2], I9 = (t5 = (E6 = o4[a5 + 64 >> 2]) + 128 | 0) >>> 0 < 128 ? I9 + 1 | 0 : I9, o4[a5 + 64 >> 2] = t5, o4[a5 + 68 >> 2] = I9, I9 = o4[a5 + 76 >> 2], I9 = (f4 = E6 = -1 == (0 | f4) & E6 >>> 0 > 4294967167) >>> 0 > (E6 = E6 + o4[a5 + 72 >> 2] | 0) >>> 0 ? I9 + 1 | 0 : I9, o4[a5 + 72 >> 2] = E6, o4[a5 + 76 >> 2] = I9, h4(a5, r4), HA(r4, c5, 128), I9 = o4[a5 + 352 >> 2] - 128 | 0, o4[a5 + 352 >> 2] = I9, g8 = g8 + i6 | 0, !((B6 = B6 - (C6 >>> 0 < i6 >>> 0) | 0) | (C6 = C6 - i6 | 0)))
                                      break;
                                  }
                              G5(a5, A10, n5), D4 = e5;
                              break A;
                            }
                          mA(), Q5();
                        }
                        A10 = 0;
                      }
                      return A10;
                    }
                    function x5(A10, I9, g8, C6) {
                      var B6 = 0, Q6 = 0, i6 = 0, n5 = 0, r4 = 0, f4 = 0, t5 = 0, e5 = 0, c5 = 0, y6 = 0, D5 = 0, w5 = 0;
                      A: {
                        if ((i6 = o4[A10 + 56 >> 2]) | (B6 = o4[A10 + 60 >> 2])) {
                          if (c5 = Q6 = 16 - i6 | 0, r4 = (Q6 = (0 | (n5 = 0 - ((i6 >>> 0 > 16) + B6 | 0) | 0)) == (0 | C6) & g8 >>> 0 > Q6 >>> 0 | C6 >>> 0 > n5 >>> 0) ? c5 : g8, c5 = Q6 = Q6 ? n5 : C6, Q6 | r4) {
                            if (Q6 = 0, i6 = 0, !c5 & r4 >>> 0 >= 4 | c5)
                              for (f4 = -4 & r4, n5 = A10 - -64 | 0; B6 = Q6 + o4[A10 + 56 >> 2] | 0, E5[B6 + n5 | 0] = a4[I9 + Q6 | 0], B6 = (y6 = 1 | Q6) + o4[A10 + 56 >> 2] | 0, E5[B6 + n5 | 0] = a4[I9 + y6 | 0], B6 = (y6 = 2 | Q6) + o4[A10 + 56 >> 2] | 0, E5[B6 + n5 | 0] = a4[I9 + y6 | 0], B6 = (y6 = 3 | Q6) + o4[A10 + 56 >> 2] | 0, E5[B6 + n5 | 0] = a4[I9 + y6 | 0], B6 = i6, i6 = (Q6 = Q6 + 4 | 0) >>> 0 < 4 ? B6 + 1 | 0 : B6, B6 = t5, t5 = B6 = (e5 = e5 + 4 | 0) >>> 0 < 4 ? B6 + 1 | 0 : B6, (0 | e5) != (0 | f4) | (0 | c5) != (0 | B6); )
                                ;
                            if (n5 = B6 = 0, B6 | (t5 = 3 & r4))
                              for (; e5 = Q6 + o4[A10 + 56 >> 2] | 0, E5[(A10 + e5 | 0) - -64 | 0] = a4[I9 + Q6 | 0], i6 = (Q6 = Q6 + 1 | 0) ? i6 : i6 + 1 | 0, B6 = w5, w5 = B6 = (D5 = D5 + 1 | 0) ? B6 : B6 + 1 | 0, (0 | t5) != (0 | D5) | (0 | n5) != (0 | B6); )
                                ;
                            i6 = o4[A10 + 56 >> 2], B6 = o4[A10 + 60 >> 2];
                          }
                          if (B6 = B6 + c5 | 0, B6 = (i6 = i6 + r4 | 0) >>> 0 < r4 >>> 0 ? B6 + 1 | 0 : B6, o4[A10 + 56 >> 2] = i6, o4[A10 + 60 >> 2] = B6, !B6 & i6 >>> 0 < 16)
                            break A;
                          N5(A10, A10 - -64 | 0, 16, 0), o4[A10 + 56 >> 2] = 0, o4[A10 + 60 >> 2] = 0, g8 = (i6 = g8) - r4 | 0, C6 = C6 - ((i6 >>> 0 < r4 >>> 0) + c5 | 0) | 0, I9 = I9 + r4 | 0;
                        }
                        if (!C6 & g8 >>> 0 >= 16 | C6 && (N5(A10, I9, i6 = -16 & g8, C6), g8 &= 15, C6 = 0, I9 = I9 + i6 | 0), g8 | C6) {
                          if (D5 = 0, w5 = 0, Q6 = 0, i6 = 0, !C6 & g8 >>> 0 >= 4 | C6)
                            for (r4 = 12 & g8, c5 = 0, n5 = A10 - -64 | 0, e5 = 0, t5 = 0; B6 = Q6 + o4[A10 + 56 >> 2] | 0, E5[B6 + n5 | 0] = a4[I9 + Q6 | 0], B6 = (f4 = 1 | Q6) + o4[A10 + 56 >> 2] | 0, E5[B6 + n5 | 0] = a4[I9 + f4 | 0], B6 = (f4 = 2 | Q6) + o4[A10 + 56 >> 2] | 0, E5[B6 + n5 | 0] = a4[I9 + f4 | 0], B6 = (f4 = 3 | Q6) + o4[A10 + 56 >> 2] | 0, E5[B6 + n5 | 0] = a4[I9 + f4 | 0], i6 = (Q6 = Q6 + 4 | 0) >>> 0 < 4 ? i6 + 1 | 0 : i6, B6 = t5, t5 = B6 = (e5 = e5 + 4 | 0) >>> 0 < 4 ? B6 + 1 | 0 : B6, (0 | r4) != (0 | e5) | (0 | c5) != (0 | B6); )
                              ;
                          if (n5 = B6 = 0, B6 | (t5 = 3 & g8))
                            for (; B6 = Q6 + o4[A10 + 56 >> 2] | 0, E5[(A10 + B6 | 0) - -64 | 0] = a4[I9 + Q6 | 0], i6 = (Q6 = Q6 + 1 | 0) ? i6 : i6 + 1 | 0, B6 = w5, w5 = B6 = (D5 = D5 + 1 | 0) ? B6 : B6 + 1 | 0, (0 | t5) != (0 | D5) | (0 | n5) != (0 | B6); )
                              ;
                          i6 = C6 + o4[A10 + 60 >> 2] | 0, i6 = (I9 = g8 + o4[A10 + 56 >> 2] | 0) >>> 0 < g8 >>> 0 ? i6 + 1 | 0 : i6, o4[A10 + 56 >> 2] = I9, o4[A10 + 60 >> 2] = i6;
                        }
                      }
                    }
                    function j4(A10, I9, g8) {
                      var C6, B6 = 0, Q6 = 0, i6 = 0, E6 = 0, a5 = 0, n5 = 0, r4 = 0, f4 = 0, t5 = 0, e5 = 0, c5 = 0, y6 = 0, D5 = 0, w5 = 0, h5 = 0, s5 = 0, p6 = 0, u6 = 0, k6 = 0;
                      y6 = o4[I9 + 4 >> 2], B6 = o4[A10 + 4 >> 2], D5 = o4[I9 + 8 >> 2], Q6 = o4[A10 + 8 >> 2], w5 = o4[I9 + 12 >> 2], i6 = o4[A10 + 12 >> 2], h5 = o4[I9 + 16 >> 2], E6 = o4[A10 + 16 >> 2], s5 = o4[I9 + 20 >> 2], a5 = o4[A10 + 20 >> 2], p6 = o4[I9 + 24 >> 2], n5 = o4[A10 + 24 >> 2], e5 = o4[I9 + 28 >> 2], r4 = o4[A10 + 28 >> 2], u6 = o4[I9 + 32 >> 2], f4 = o4[A10 + 32 >> 2], k6 = o4[I9 + 36 >> 2], t5 = o4[A10 + 36 >> 2], g8 = 0 - g8 | 0, c5 = o4[A10 >> 2], o4[A10 >> 2] = g8 & (c5 ^ o4[I9 >> 2]) ^ c5, o4[A10 + 36 >> 2] = t5 ^ g8 & (t5 ^ k6), o4[A10 + 32 >> 2] = f4 ^ g8 & (f4 ^ u6), o4[A10 + 28 >> 2] = r4 ^ g8 & (r4 ^ e5), o4[A10 + 24 >> 2] = n5 ^ g8 & (n5 ^ p6), o4[A10 + 20 >> 2] = a5 ^ g8 & (a5 ^ s5), o4[A10 + 16 >> 2] = E6 ^ g8 & (E6 ^ h5), o4[A10 + 12 >> 2] = i6 ^ g8 & (i6 ^ w5), o4[A10 + 8 >> 2] = Q6 ^ g8 & (Q6 ^ D5), o4[A10 + 4 >> 2] = B6 ^ g8 & (B6 ^ y6), B6 = o4[A10 + 40 >> 2], y6 = o4[I9 + 40 >> 2], Q6 = o4[A10 + 44 >> 2], D5 = o4[I9 + 44 >> 2], i6 = o4[A10 + 48 >> 2], w5 = o4[I9 + 48 >> 2], E6 = o4[A10 + 52 >> 2], h5 = o4[I9 + 52 >> 2], a5 = o4[A10 + 56 >> 2], s5 = o4[I9 + 56 >> 2], n5 = o4[A10 + 60 >> 2], p6 = o4[I9 + 60 >> 2], r4 = o4[(e5 = A10 - -64 | 0) >> 2], u6 = o4[I9 - -64 >> 2], f4 = o4[A10 + 68 >> 2], k6 = o4[I9 + 68 >> 2], t5 = o4[A10 + 72 >> 2], c5 = o4[I9 + 72 >> 2], C6 = o4[A10 + 76 >> 2], o4[A10 + 76 >> 2] = C6 ^ g8 & (o4[I9 + 76 >> 2] ^ C6), o4[A10 + 72 >> 2] = t5 ^ g8 & (t5 ^ c5), o4[A10 + 68 >> 2] = f4 ^ g8 & (f4 ^ k6), o4[e5 >> 2] = r4 ^ g8 & (r4 ^ u6), o4[A10 + 60 >> 2] = n5 ^ g8 & (n5 ^ p6), o4[A10 + 56 >> 2] = a5 ^ g8 & (a5 ^ s5), o4[A10 + 52 >> 2] = E6 ^ g8 & (E6 ^ h5), o4[A10 + 48 >> 2] = i6 ^ g8 & (i6 ^ w5), o4[A10 + 44 >> 2] = Q6 ^ g8 & (Q6 ^ D5), o4[A10 + 40 >> 2] = B6 ^ g8 & (B6 ^ y6), B6 = o4[A10 + 80 >> 2], y6 = o4[I9 + 80 >> 2], Q6 = o4[A10 + 84 >> 2], D5 = o4[I9 + 84 >> 2], i6 = o4[A10 + 88 >> 2], w5 = o4[I9 + 88 >> 2], E6 = o4[A10 + 92 >> 2], h5 = o4[I9 + 92 >> 2], a5 = o4[A10 + 96 >> 2], s5 = o4[I9 + 96 >> 2], n5 = o4[A10 + 100 >> 2], p6 = o4[I9 + 100 >> 2], r4 = o4[A10 + 104 >> 2], e5 = o4[I9 + 104 >> 2], f4 = o4[A10 + 108 >> 2], u6 = o4[I9 + 108 >> 2], t5 = o4[A10 + 112 >> 2], k6 = o4[I9 + 112 >> 2], c5 = o4[I9 + 116 >> 2], I9 = o4[A10 + 116 >> 2], o4[A10 + 116 >> 2] = g8 & (c5 ^ I9) ^ I9, o4[A10 + 112 >> 2] = t5 ^ g8 & (t5 ^ k6), o4[A10 + 108 >> 2] = f4 ^ g8 & (f4 ^ u6), o4[A10 + 104 >> 2] = r4 ^ g8 & (r4 ^ e5), o4[A10 + 100 >> 2] = n5 ^ g8 & (n5 ^ p6), o4[A10 + 96 >> 2] = a5 ^ g8 & (a5 ^ s5), o4[A10 + 92 >> 2] = E6 ^ g8 & (E6 ^ h5), o4[A10 + 88 >> 2] = i6 ^ g8 & (i6 ^ w5), o4[A10 + 84 >> 2] = Q6 ^ g8 & (Q6 ^ D5), o4[A10 + 80 >> 2] = B6 ^ g8 & (B6 ^ y6);
                    }
                    function X5(A10, I9) {
                      var g8, C6, B6 = 0;
                      for (D4 = g8 = D4 - 192 | 0, S5(C6 = g8 + 144 | 0, I9), S5(B6 = g8 + 96 | 0, C6), S5(B6, B6), F5(B6, I9, B6), F5(C6, C6, B6), S5(I9 = g8 + 48 | 0, C6), F5(B6, B6, I9), S5(I9, B6), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), F5(B6, I9, B6), S5(I9, B6), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), F5(I9, I9, B6), S5(g8, I9), S5(g8, g8), S5(g8, g8), S5(g8, g8), S5(g8, g8), S5(g8, g8), S5(g8, g8), S5(g8, g8), S5(g8, g8), S5(g8, g8), S5(g8, g8), S5(g8, g8), S5(g8, g8), S5(g8, g8), S5(g8, g8), S5(g8, g8), S5(g8, g8), S5(g8, g8), S5(g8, g8), S5(g8, g8), F5(I9, g8, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), F5(B6, I9, B6), S5(I9, B6), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), F5(I9, I9, B6), S5(g8, I9), I9 = 1; S5(g8, g8), 100 != (0 | (I9 = I9 + 1 | 0)); )
                        ;
                      F5(I9 = g8 + 48 | 0, g8, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), S5(I9, I9), F5(B6 = g8 + 96 | 0, I9, B6), S5(B6, B6), S5(B6, B6), S5(B6, B6), S5(B6, B6), S5(B6, B6), F5(A10, B6, g8 + 144 | 0), D4 = g8 + 192 | 0;
                    }
                    function q4(A10, I9, g8) {
                      var C6, B6 = 0, Q6 = 0, i6 = 0, E6 = 0, a5 = 0, n5 = 0, f4 = 0, t5 = 0;
                      D4 = C6 = D4 - 128 | 0, o4[A10 >> 2] = 1, o4[A10 + 4 >> 2] = 0, o4[A10 + 8 >> 2] = 0, o4[A10 + 12 >> 2] = 0, o4[A10 + 16 >> 2] = 0, o4[A10 + 20 >> 2] = 0, o4[A10 + 24 >> 2] = 0, o4[A10 + 28 >> 2] = 0, o4[A10 + 32 >> 2] = 0, o4[A10 + 36 >> 2] = 0, o4[A10 + 40 >> 2] = 1, MA(A10 + 44 | 0, 0, 76), j4(A10, B6 = r3(I9, 960) + 2704 | 0, (255 & (1 ^ (I9 = g8 - ((g8 >> 31 & g8) << 1) | 0))) - 1 >>> 31 | 0), j4(A10, B6 + 120 | 0, (255 & (2 ^ I9)) - 1 >>> 31 | 0), j4(A10, B6 + 240 | 0, (255 & (3 ^ I9)) - 1 >>> 31 | 0), j4(A10, B6 + 360 | 0, (255 & (4 ^ I9)) - 1 >>> 31 | 0), j4(A10, B6 + 480 | 0, (255 & (5 ^ I9)) - 1 >>> 31 | 0), j4(A10, B6 + 600 | 0, (255 & (6 ^ I9)) - 1 >>> 31 | 0), j4(A10, B6 + 720 | 0, (255 & (7 ^ I9)) - 1 >>> 31 | 0), j4(A10, B6 + 840 | 0, (255 & (8 ^ I9)) - 1 >>> 31 | 0), Q6 = o4[A10 + 40 >> 2], i6 = o4[A10 + 44 >> 2], E6 = o4[A10 + 48 >> 2], a5 = o4[A10 + 52 >> 2], n5 = o4[A10 + 56 >> 2], f4 = o4[A10 + 60 >> 2], t5 = o4[(I9 = A10 - -64 | 0) >> 2], B6 = o4[I9 + 4 >> 2], I9 = o4[A10 + 76 >> 2], o4[C6 + 40 >> 2] = o4[A10 + 72 >> 2], o4[C6 + 44 >> 2] = I9, o4[C6 + 32 >> 2] = t5, o4[C6 + 36 >> 2] = B6, o4[C6 + 24 >> 2] = n5, o4[C6 + 28 >> 2] = f4, o4[C6 + 16 >> 2] = E6, o4[C6 + 20 >> 2] = a5, o4[C6 + 8 >> 2] = Q6, o4[C6 + 12 >> 2] = i6, Q6 = o4[A10 + 8 >> 2], i6 = o4[A10 + 12 >> 2], E6 = o4[A10 + 16 >> 2], a5 = o4[A10 + 20 >> 2], n5 = o4[A10 + 24 >> 2], f4 = o4[A10 + 28 >> 2], t5 = o4[A10 >> 2], B6 = o4[A10 + 4 >> 2], I9 = o4[A10 + 36 >> 2], o4[C6 + 80 >> 2] = o4[A10 + 32 >> 2], o4[C6 + 84 >> 2] = I9, o4[C6 + 72 >> 2] = n5, o4[C6 + 76 >> 2] = f4, o4[(I9 = C6 - -64 | 0) >> 2] = E6, o4[I9 + 4 >> 2] = a5, o4[C6 + 56 >> 2] = Q6, o4[C6 + 60 >> 2] = i6, o4[C6 + 48 >> 2] = t5, o4[C6 + 52 >> 2] = B6, Q6 = o4[A10 + 80 >> 2], i6 = o4[A10 + 84 >> 2], E6 = o4[A10 + 88 >> 2], a5 = o4[A10 + 92 >> 2], n5 = o4[A10 + 96 >> 2], f4 = o4[A10 + 100 >> 2], t5 = o4[A10 + 104 >> 2], B6 = o4[A10 + 108 >> 2], I9 = o4[A10 + 112 >> 2], o4[C6 + 124 >> 2] = 0 - o4[A10 + 116 >> 2], o4[C6 + 120 >> 2] = 0 - I9, o4[C6 + 116 >> 2] = 0 - B6, o4[C6 + 112 >> 2] = 0 - t5, o4[C6 + 108 >> 2] = 0 - f4, o4[C6 + 104 >> 2] = 0 - n5, o4[C6 + 100 >> 2] = 0 - a5, o4[C6 + 96 >> 2] = 0 - E6, o4[C6 + 92 >> 2] = 0 - i6, o4[C6 + 88 >> 2] = 0 - Q6, j4(A10, C6 + 8 | 0, (128 & g8) >>> 7 | 0), D4 = C6 + 128 | 0;
                    }
                    function z5(A10, I9, g8, C6) {
                      var B6 = 0, Q6 = 0, i6 = 0, o5 = 0, n5 = 0, r4 = 0, f4 = 0;
                      if (g8 | C6)
                        A:
                          for (f4 = A10 + 224 | 0, n5 = A10 + 96 | 0, Q6 = a4[A10 + 352 | 0] | a4[A10 + 353 | 0] << 8 | a4[A10 + 354 | 0] << 16 | a4[A10 + 355 | 0] << 24; ; ) {
                            if (B6 = Q6 + n5 | 0, !C6 & g8 >>> 0 <= (i6 = 256 - Q6 | 0) >>> 0) {
                              HA(B6, I9, g8), I9 = (a4[A10 + 352 | 0] | a4[A10 + 353 | 0] << 8 | a4[A10 + 354 | 0] << 16 | a4[A10 + 355 | 0] << 24) + g8 | 0, E5[A10 + 352 | 0] = I9, E5[A10 + 353 | 0] = I9 >>> 8, E5[A10 + 354 | 0] = I9 >>> 16, E5[A10 + 355 | 0] = I9 >>> 24;
                              break A;
                            }
                            if (HA(B6, I9, i6), B6 = (a4[A10 + 352 | 0] | a4[A10 + 353 | 0] << 8 | a4[A10 + 354 | 0] << 16 | a4[A10 + 355 | 0] << 24) + i6 | 0, E5[A10 + 352 | 0] = B6, E5[A10 + 353 | 0] = B6 >>> 8, E5[A10 + 354 | 0] = B6 >>> 16, E5[A10 + 355 | 0] = B6 >>> 24, r4 = Q6 = a4[A10 + 68 | 0] | a4[A10 + 69 | 0] << 8 | a4[A10 + 70 | 0] << 16 | a4[A10 + 71 | 0] << 24, Q6 = (o5 = 128 + (B6 = a4[A10 + 64 | 0] | a4[A10 + 65 | 0] << 8 | a4[A10 + 66 | 0] << 16 | a4[A10 + 67 | 0] << 24) | 0) >>> 0 < 128 ? Q6 + 1 | 0 : Q6, E5[A10 + 64 | 0] = o5, E5[A10 + 65 | 0] = o5 >>> 8, E5[A10 + 66 | 0] = o5 >>> 16, E5[A10 + 67 | 0] = o5 >>> 24, E5[A10 + 68 | 0] = Q6, E5[A10 + 69 | 0] = Q6 >>> 8, E5[A10 + 70 | 0] = Q6 >>> 16, E5[A10 + 71 | 0] = Q6 >>> 24, Q6 = a4[A10 + 76 | 0] | a4[A10 + 77 | 0] << 8 | a4[A10 + 78 | 0] << 16 | a4[A10 + 79 | 0] << 24, Q6 = (r4 = B6 = -1 == (0 | r4) & B6 >>> 0 > 4294967167) >>> 0 > (B6 = B6 + (a4[A10 + 72 | 0] | a4[A10 + 73 | 0] << 8 | a4[A10 + 74 | 0] << 16 | a4[A10 + 75 | 0] << 24) | 0) >>> 0 ? Q6 + 1 | 0 : Q6, E5[A10 + 72 | 0] = B6, E5[A10 + 73 | 0] = B6 >>> 8, E5[A10 + 74 | 0] = B6 >>> 16, E5[A10 + 75 | 0] = B6 >>> 24, E5[A10 + 76 | 0] = Q6, E5[A10 + 77 | 0] = Q6 >>> 8, E5[A10 + 78 | 0] = Q6 >>> 16, E5[A10 + 79 | 0] = Q6 >>> 24, h4(A10, n5), HA(n5, f4, 128), B6 = Q6 = (a4[A10 + 352 | 0] | a4[A10 + 353 | 0] << 8 | a4[A10 + 354 | 0] << 16 | a4[A10 + 355 | 0] << 24) - 128 | 0, E5[A10 + 352 | 0] = B6, E5[A10 + 353 | 0] = B6 >>> 8, E5[A10 + 354 | 0] = B6 >>> 16, E5[A10 + 355 | 0] = B6 >>> 24, I9 = I9 + i6 | 0, !((C6 = C6 - (g8 >>> 0 < i6 >>> 0) | 0) | (g8 = g8 - i6 | 0)))
                              break;
                          }
                      return 0;
                    }
                    function V5(A10, I9) {
                      var g8, C6 = 0, B6 = 0, Q6 = 0, i6 = 0, E6 = 0, a5 = 0, n5 = 0, r4 = 0, f4 = 0, t5 = 0, e5 = 0, c5 = 0, y6 = 0, D5 = 0, w5 = 0, h5 = 0, s5 = 0, p6 = 0;
                      C6 = o4[I9 + 40 >> 2], B6 = o4[I9 + 4 >> 2], Q6 = o4[I9 + 44 >> 2], i6 = o4[I9 + 8 >> 2], E6 = o4[I9 + 48 >> 2], a5 = o4[I9 + 12 >> 2], n5 = o4[I9 + 52 >> 2], r4 = o4[I9 + 16 >> 2], f4 = o4[I9 + 56 >> 2], e5 = o4[I9 + 20 >> 2], c5 = o4[I9 + 60 >> 2], y6 = o4[I9 + 24 >> 2], D5 = o4[(t5 = I9 - -64 | 0) >> 2], w5 = o4[I9 + 28 >> 2], h5 = o4[I9 + 68 >> 2], s5 = o4[I9 + 32 >> 2], p6 = o4[I9 + 72 >> 2], g8 = o4[I9 >> 2], o4[A10 + 36 >> 2] = o4[I9 + 36 >> 2] + o4[I9 + 76 >> 2], o4[A10 + 32 >> 2] = s5 + p6, o4[A10 + 28 >> 2] = w5 + h5, o4[A10 + 24 >> 2] = y6 + D5, o4[A10 + 20 >> 2] = e5 + c5, o4[A10 + 16 >> 2] = r4 + f4, o4[A10 + 12 >> 2] = a5 + n5, o4[A10 + 8 >> 2] = i6 + E6, o4[A10 + 4 >> 2] = B6 + Q6, o4[A10 >> 2] = C6 + g8, C6 = o4[I9 + 40 >> 2], B6 = o4[I9 + 4 >> 2], Q6 = o4[I9 + 44 >> 2], i6 = o4[I9 + 8 >> 2], E6 = o4[I9 + 48 >> 2], a5 = o4[I9 + 12 >> 2], n5 = o4[I9 + 52 >> 2], r4 = o4[I9 + 16 >> 2], f4 = o4[I9 + 56 >> 2], e5 = o4[I9 + 20 >> 2], c5 = o4[I9 + 60 >> 2], y6 = o4[I9 + 24 >> 2], t5 = o4[t5 >> 2], D5 = o4[I9 + 28 >> 2], w5 = o4[I9 + 68 >> 2], h5 = o4[I9 + 32 >> 2], s5 = o4[I9 + 72 >> 2], p6 = o4[I9 >> 2], o4[A10 + 76 >> 2] = o4[I9 + 76 >> 2] - o4[I9 + 36 >> 2], o4[A10 + 72 >> 2] = s5 - h5, o4[A10 + 68 >> 2] = w5 - D5, o4[A10 - -64 >> 2] = t5 - y6, o4[A10 + 60 >> 2] = c5 - e5, o4[A10 + 56 >> 2] = f4 - r4, o4[A10 + 52 >> 2] = n5 - a5, o4[A10 + 48 >> 2] = E6 - i6, o4[A10 + 44 >> 2] = Q6 - B6, o4[A10 + 40 >> 2] = C6 - p6, C6 = o4[I9 + 80 >> 2], B6 = o4[I9 + 84 >> 2], Q6 = o4[I9 + 88 >> 2], i6 = o4[I9 + 92 >> 2], E6 = o4[I9 + 96 >> 2], a5 = o4[I9 + 100 >> 2], n5 = o4[I9 + 104 >> 2], r4 = o4[I9 + 108 >> 2], f4 = o4[I9 + 116 >> 2], o4[A10 + 112 >> 2] = o4[I9 + 112 >> 2], o4[A10 + 116 >> 2] = f4, o4[A10 + 104 >> 2] = n5, o4[A10 + 108 >> 2] = r4, o4[A10 + 96 >> 2] = E6, o4[A10 + 100 >> 2] = a5, o4[A10 + 88 >> 2] = Q6, o4[A10 + 92 >> 2] = i6, o4[A10 + 80 >> 2] = C6, o4[A10 + 84 >> 2] = B6, F5(A10 + 120 | 0, I9 + 120 | 0, 1440);
                    }
                    function O5(A10, I9) {
                      var g8, C6, B6, Q6, i6, a5 = 0, n5 = 0, f4 = 0, t5 = 0, e5 = 0, c5 = 0, y6 = 0, D5 = 0, w5 = 0, h5 = 0;
                      (f4 = o4[A10 + 56 >> 2]) | (a5 = o4[A10 + 60 >> 2]) && (E5[f4 + (n5 = A10 - -64 | 0) | 0] = 1, !((h5 = f4 + 1 | 0) ? a5 : a5 + 1 | 0) & h5 >>> 0 <= 15 && MA(65 + (A10 + f4 | 0) | 0, 0, 15 - f4 | 0), E5[A10 + 80 | 0] = 1, N5(A10, n5, 16, 0)), h5 = o4[A10 + 52 >> 2], D5 = o4[A10 + 48 >> 2], n5 = o4[A10 + 44 >> 2], f4 = o4[A10 + 24 >> 2], e5 = o4[A10 + 28 >> 2] + (f4 >>> 26 | 0) | 0, t5 = o4[A10 + 32 >> 2] + (e5 >>> 26 | 0) | 0, g8 = o4[A10 + 36 >> 2] + (t5 >>> 26 | 0) | 0, a5 = (y6 = (f4 = (f4 = (67108863 & f4) + ((c5 = o4[A10 + 20 >> 2] + r3(g8 >>> 26 | 0, 5) | 0) >>> 26 | 0) | 0) & (e5 = (t5 = (i6 = (67108863 & g8) + ((Q6 = (C6 = 67108863 & t5) + ((B6 = (w5 = 67108863 & e5) + ((c5 = f4 + ((a5 = 5 + (y6 = 67108863 & c5) | 0) >>> 26 | 0) | 0) >>> 26 | 0) | 0) >>> 26 | 0) | 0) >>> 26 | 0) | 0) - 67108864 | 0) >> 31) | c5 & (t5 = 67108863 & (c5 = (t5 >>> 31 | 0) - 1 | 0))) << 26 | a5 & t5 | e5 & y6) + o4[A10 + 40 >> 2] | 0, E5[0 | I9] = a5, E5[I9 + 1 | 0] = a5 >>> 8, E5[I9 + 2 | 0] = a5 >>> 16, E5[I9 + 3 | 0] = a5 >>> 24, y6 = a5 >>> 0 < y6 >>> 0, a5 = (w5 = e5 & w5 | t5 & B6) << 20 | f4 >>> 6, f4 = 0, a5 = (n5 = a5 + n5 | 0) >>> 0 < a5 >>> 0 ? 1 : f4, a5 = (f4 = n5 + y6 | 0) >>> 0 < n5 >>> 0 ? a5 + 1 | 0 : a5, E5[(n5 = I9) + 4 | 0] = f4, E5[n5 + 5 | 0] = f4 >>> 8, E5[n5 + 6 | 0] = f4 >>> 16, E5[n5 + 7 | 0] = f4 >>> 24, f4 = 0, n5 = (n5 = (t5 = e5 & C6 | t5 & Q6) << 14 | w5 >>> 12) >>> 0 > (D5 = n5 + D5 | 0) >>> 0 ? 1 : f4, f4 = D5, D5 = a5, f4 = (a5 = f4 + a5 | 0) >>> 0 < D5 >>> 0 ? n5 + 1 | 0 : n5, E5[(n5 = I9) + 8 | 0] = a5, E5[n5 + 9 | 0] = a5 >>> 8, E5[n5 + 10 | 0] = a5 >>> 16, E5[n5 + 11 | 0] = a5 >>> 24, a5 = n5 = (c5 & i6 | e5 & g8) << 8 | t5 >>> 18, a5 = (a5 = f4) + (n5 = n5 + h5 | 0) | 0, E5[I9 + 12 | 0] = a5, E5[I9 + 13 | 0] = a5 >>> 8, E5[I9 + 14 | 0] = a5 >>> 16, E5[I9 + 15 | 0] = a5 >>> 24, $A(A10, 88);
                    }
                    function T5(A10, I9, g8) {
                      var C6, B6 = 0;
                      return D4 = C6 = D4 - 16 | 0, E5[C6 + 15 | 0] = 0, B6 = -1, 0 | nI[o4[8722]](A10, I9, g8) || (E5[C6 + 15 | 0] = a4[0 | A10] | a4[C6 + 15 | 0], E5[C6 + 15 | 0] = a4[A10 + 1 | 0] | a4[C6 + 15 | 0], E5[C6 + 15 | 0] = a4[A10 + 2 | 0] | a4[C6 + 15 | 0], E5[C6 + 15 | 0] = a4[A10 + 3 | 0] | a4[C6 + 15 | 0], E5[C6 + 15 | 0] = a4[A10 + 4 | 0] | a4[C6 + 15 | 0], E5[C6 + 15 | 0] = a4[A10 + 5 | 0] | a4[C6 + 15 | 0], E5[C6 + 15 | 0] = a4[A10 + 6 | 0] | a4[C6 + 15 | 0], E5[C6 + 15 | 0] = a4[A10 + 7 | 0] | a4[C6 + 15 | 0], E5[C6 + 15 | 0] = a4[A10 + 8 | 0] | a4[C6 + 15 | 0], E5[C6 + 15 | 0] = a4[A10 + 9 | 0] | a4[C6 + 15 | 0], E5[C6 + 15 | 0] = a4[A10 + 10 | 0] | a4[C6 + 15 | 0], E5[C6 + 15 | 0] = a4[A10 + 11 | 0] | a4[C6 + 15 | 0], E5[C6 + 15 | 0] = a4[A10 + 12 | 0] | a4[C6 + 15 | 0], E5[C6 + 15 | 0] = a4[A10 + 13 | 0] | a4[C6 + 15 | 0], E5[C6 + 15 | 0] = a4[A10 + 14 | 0] | a4[C6 + 15 | 0], E5[C6 + 15 | 0] = a4[A10 + 15 | 0] | a4[C6 + 15 | 0], E5[C6 + 15 | 0] = a4[A10 + 16 | 0] | a4[C6 + 15 | 0], E5[C6 + 15 | 0] = a4[A10 + 17 | 0] | a4[C6 + 15 | 0], E5[C6 + 15 | 0] = a4[A10 + 18 | 0] | a4[C6 + 15 | 0], E5[C6 + 15 | 0] = a4[A10 + 19 | 0] | a4[C6 + 15 | 0], E5[C6 + 15 | 0] = a4[A10 + 20 | 0] | a4[C6 + 15 | 0], E5[C6 + 15 | 0] = a4[A10 + 21 | 0] | a4[C6 + 15 | 0], E5[C6 + 15 | 0] = a4[A10 + 22 | 0] | a4[C6 + 15 | 0], E5[C6 + 15 | 0] = a4[A10 + 23 | 0] | a4[C6 + 15 | 0], E5[C6 + 15 | 0] = a4[A10 + 24 | 0] | a4[C6 + 15 | 0], E5[C6 + 15 | 0] = a4[A10 + 25 | 0] | a4[C6 + 15 | 0], E5[C6 + 15 | 0] = a4[A10 + 26 | 0] | a4[C6 + 15 | 0], E5[C6 + 15 | 0] = a4[A10 + 27 | 0] | a4[C6 + 15 | 0], E5[C6 + 15 | 0] = a4[A10 + 28 | 0] | a4[C6 + 15 | 0], E5[C6 + 15 | 0] = a4[A10 + 29 | 0] | a4[C6 + 15 | 0], E5[C6 + 15 | 0] = a4[A10 + 30 | 0] | a4[C6 + 15 | 0], E5[C6 + 15 | 0] = a4[A10 + 31 | 0] | a4[C6 + 15 | 0], B6 = (a4[C6 + 15 | 0] << 23) - 8388608 >> 31), D4 = C6 + 16 | 0, B6;
                    }
                    function W5(A10, I9) {
                      var g8, C6, B6, Q6, i6, a5, n5, f4 = 0, t5 = 0;
                      C6 = o4[I9 + 32 >> 2], B6 = o4[I9 + 28 >> 2], Q6 = o4[I9 + 24 >> 2], i6 = o4[I9 + 20 >> 2], a5 = o4[I9 + 16 >> 2], n5 = o4[I9 + 12 >> 2], f4 = o4[I9 + 4 >> 2], t5 = o4[I9 >> 2], g8 = o4[I9 + 36 >> 2], I9 = o4[I9 + 8 >> 2], t5 = r3((C6 + (B6 + (Q6 + (i6 + (a5 + (n5 + ((f4 + (t5 + (r3(g8, 19) + 16777216 >>> 25 | 0) >> 26) >> 25) + I9 >> 26) >> 25) >> 26) >> 25) >> 26) >> 25) >> 26) + g8 >> 25, 19) + t5 | 0, E5[0 | A10] = t5, E5[A10 + 2 | 0] = t5 >>> 16, E5[A10 + 1 | 0] = t5 >>> 8, f4 = f4 + (t5 >> 26) | 0, E5[A10 + 5 | 0] = f4 >>> 14, E5[A10 + 4 | 0] = f4 >>> 6, E5[A10 + 3 | 0] = t5 >>> 24 & 3 | f4 << 2, I9 = I9 + (f4 >> 25) | 0, E5[A10 + 8 | 0] = I9 >>> 13, E5[A10 + 7 | 0] = I9 >>> 5, E5[A10 + 6 | 0] = I9 << 3 | (29360128 & f4) >>> 22, t5 = (I9 >> 26) + n5 | 0, E5[A10 + 11 | 0] = t5 >>> 11, E5[A10 + 10 | 0] = t5 >>> 3, E5[A10 + 9 | 0] = t5 << 5 | (65011712 & I9) >>> 21, f4 = (t5 >> 25) + a5 | 0, E5[A10 + 15 | 0] = f4 >>> 18, E5[A10 + 14 | 0] = f4 >>> 10, E5[A10 + 13 | 0] = f4 >>> 2, I9 = (f4 >> 26) + i6 | 0, E5[A10 + 16 | 0] = I9, E5[A10 + 12 | 0] = f4 << 6 | (33030144 & t5) >>> 19, E5[A10 + 18 | 0] = I9 >>> 16, E5[A10 + 17 | 0] = I9 >>> 8, f4 = (I9 >> 25) + Q6 | 0, E5[A10 + 21 | 0] = f4 >>> 15, E5[A10 + 20 | 0] = f4 >>> 7, E5[A10 + 19 | 0] = I9 >>> 24 & 1 | f4 << 1, I9 = (f4 >> 26) + B6 | 0, E5[A10 + 24 | 0] = I9 >>> 13, E5[A10 + 23 | 0] = I9 >>> 5, E5[A10 + 22 | 0] = I9 << 3 | (58720256 & f4) >>> 23, f4 = (I9 >> 25) + C6 | 0, E5[A10 + 27 | 0] = f4 >>> 12, E5[A10 + 26 | 0] = f4 >>> 4, E5[A10 + 25 | 0] = f4 << 4 | (31457280 & I9) >>> 21, I9 = g8 + (f4 >> 26) | 0, E5[A10 + 30 | 0] = I9 >>> 10, E5[A10 + 29 | 0] = I9 >>> 2, E5[A10 + 31 | 0] = (33292288 & I9) >>> 18, E5[A10 + 28 | 0] = I9 << 6 | (66060288 & f4) >>> 20;
                    }
                    function Z4(A10, I9) {
                      var g8;
                      return o4[12 + (g8 = D4 - 16 | 0) >> 2] = A10, o4[g8 + 8 >> 2] = I9, o4[g8 + 4 >> 2] = 0, o4[g8 + 4 >> 2] = o4[g8 + 4 >> 2] | a4[o4[g8 + 12 >> 2]] ^ a4[o4[g8 + 8 >> 2]], o4[g8 + 4 >> 2] = o4[g8 + 4 >> 2] | a4[o4[g8 + 12 >> 2] + 1 | 0] ^ a4[o4[g8 + 8 >> 2] + 1 | 0], o4[g8 + 4 >> 2] = o4[g8 + 4 >> 2] | a4[o4[g8 + 12 >> 2] + 2 | 0] ^ a4[o4[g8 + 8 >> 2] + 2 | 0], o4[g8 + 4 >> 2] = o4[g8 + 4 >> 2] | a4[o4[g8 + 12 >> 2] + 3 | 0] ^ a4[o4[g8 + 8 >> 2] + 3 | 0], o4[g8 + 4 >> 2] = o4[g8 + 4 >> 2] | a4[o4[g8 + 12 >> 2] + 4 | 0] ^ a4[o4[g8 + 8 >> 2] + 4 | 0], o4[g8 + 4 >> 2] = o4[g8 + 4 >> 2] | a4[o4[g8 + 12 >> 2] + 5 | 0] ^ a4[o4[g8 + 8 >> 2] + 5 | 0], o4[g8 + 4 >> 2] = o4[g8 + 4 >> 2] | a4[o4[g8 + 12 >> 2] + 6 | 0] ^ a4[o4[g8 + 8 >> 2] + 6 | 0], o4[g8 + 4 >> 2] = o4[g8 + 4 >> 2] | a4[o4[g8 + 12 >> 2] + 7 | 0] ^ a4[o4[g8 + 8 >> 2] + 7 | 0], o4[g8 + 4 >> 2] = o4[g8 + 4 >> 2] | a4[o4[g8 + 12 >> 2] + 8 | 0] ^ a4[o4[g8 + 8 >> 2] + 8 | 0], o4[g8 + 4 >> 2] = o4[g8 + 4 >> 2] | a4[o4[g8 + 12 >> 2] + 9 | 0] ^ a4[o4[g8 + 8 >> 2] + 9 | 0], o4[g8 + 4 >> 2] = o4[g8 + 4 >> 2] | a4[o4[g8 + 12 >> 2] + 10 | 0] ^ a4[o4[g8 + 8 >> 2] + 10 | 0], o4[g8 + 4 >> 2] = o4[g8 + 4 >> 2] | a4[o4[g8 + 12 >> 2] + 11 | 0] ^ a4[o4[g8 + 8 >> 2] + 11 | 0], o4[g8 + 4 >> 2] = o4[g8 + 4 >> 2] | a4[o4[g8 + 12 >> 2] + 12 | 0] ^ a4[o4[g8 + 8 >> 2] + 12 | 0], o4[g8 + 4 >> 2] = o4[g8 + 4 >> 2] | a4[o4[g8 + 12 >> 2] + 13 | 0] ^ a4[o4[g8 + 8 >> 2] + 13 | 0], o4[g8 + 4 >> 2] = o4[g8 + 4 >> 2] | a4[o4[g8 + 12 >> 2] + 14 | 0] ^ a4[o4[g8 + 8 >> 2] + 14 | 0], o4[g8 + 4 >> 2] = o4[g8 + 4 >> 2] | a4[o4[g8 + 12 >> 2] + 15 | 0] ^ a4[o4[g8 + 8 >> 2] + 15 | 0], (o4[g8 + 4 >> 2] - 1 >>> 8 & 1) - 1 | 0;
                    }
                    function $4(A10, I9) {
                      var g8, C6 = 0, B6 = 0;
                      g8 = I9;
                      A:
                        if (C6 = 255 & I9) {
                          if (3 & A10)
                            for (; ; ) {
                              if (!(I9 = a4[0 | A10]) | (0 | I9) == (255 & g8))
                                break A;
                              if (!(3 & (A10 = A10 + 1 | 0)))
                                break;
                            }
                          I:
                            if (!((-1 ^ (I9 = o4[A10 >> 2])) & I9 - 16843009 & -2139062144))
                              for (C6 = r3(C6, 16843009); ; ) {
                                if ((-1 ^ (I9 ^= C6)) & I9 - 16843009 & -2139062144)
                                  break I;
                                if (I9 = o4[A10 + 4 >> 2], A10 = A10 + 4 | 0, I9 - 16843009 & (-1 ^ I9) & -2139062144)
                                  break;
                              }
                          for (; I9 = A10, (C6 = a4[0 | A10]) && (A10 = I9 + 1 | 0, (0 | C6) != (255 & g8)); )
                            ;
                          A10 = I9;
                        } else {
                          C6 = A10;
                          I: {
                            if (3 & A10)
                              for (; ; ) {
                                if (!a4[0 | A10])
                                  break I;
                                if (!(3 & (A10 = A10 + 1 | 0)))
                                  break;
                              }
                            for (; I9 = A10, A10 = A10 + 4 | 0, !((-1 ^ (B6 = o4[I9 >> 2])) & B6 - 16843009 & -2139062144); )
                              ;
                            for (; I9 = (A10 = I9) + 1 | 0, a4[0 | A10]; )
                              ;
                          }
                          A10 = C6 + (A10 - C6 | 0) | 0;
                        }
                      return a4[0 | A10] == (255 & g8) ? A10 : 0;
                    }
                    function AA(A10, I9) {
                      var g8, C6 = 0, B6 = 0, Q6 = 0, i6 = 0, o5 = 0;
                      for (D4 = g8 = D4 - 192 | 0, EA(A10), MA(g8 - -64 | 0, 54, 128); E5[0 | (C6 = (i6 = g8 - -64 | 0) + B6 | 0)] = a4[0 | C6] ^ a4[I9 + B6 | 0], E5[0 | (Q6 = (C6 = 1 | B6) + i6 | 0)] = a4[0 | Q6] ^ a4[I9 + C6 | 0], E5[0 | (Q6 = (C6 = 2 | B6) + i6 | 0)] = a4[0 | Q6] ^ a4[I9 + C6 | 0], E5[0 | (C6 = (C6 = i6) + (i6 = 3 | B6) | 0)] = a4[0 | C6] ^ a4[I9 + i6 | 0], B6 = B6 + 4 | 0, 32 != (0 | (o5 = o5 + 4 | 0)); )
                        ;
                      for (m4(A10, B6 = g8 - -64 | 0, 128, 0), EA(i6 = A10 + 208 | 0), MA(B6, 92, 128), B6 = 0, o5 = 0; E5[0 | (C6 = (A10 = g8 - -64 | 0) + B6 | 0)] = a4[0 | C6] ^ a4[I9 + B6 | 0], E5[0 | (Q6 = (C6 = 1 | B6) + A10 | 0)] = a4[0 | Q6] ^ a4[I9 + C6 | 0], E5[0 | (Q6 = (C6 = 2 | B6) + A10 | 0)] = a4[0 | Q6] ^ a4[I9 + C6 | 0], E5[0 | (C6 = (C6 = A10) + (A10 = 3 | B6) | 0)] = a4[0 | C6] ^ a4[A10 + I9 | 0], B6 = B6 + 4 | 0, 32 != (0 | (o5 = o5 + 4 | 0)); )
                        ;
                      m4(i6, A10 = g8 - -64 | 0, 128, 0), $A(A10, 128), $A(g8, 64), D4 = g8 + 192 | 0;
                    }
                    function IA(A10, I9, g8, C6, B6, Q6, i6) {
                      var E6, a5, n5, r4, f4, t5 = 0;
                      return D4 = E6 = D4 - 352 | 0, L5(E6, Q6, i6), !((!B6 & C6 >>> 0 > A10 - g8 >>> 0 | 0 != (0 | B6)) & A10 >>> 0 > g8 >>> 0) & (!B6 & C6 >>> 0 <= g8 - A10 >>> 0 | A10 >>> 0 >= g8 >>> 0) || (g8 = kA(A10, g8, C6)), o4[E6 + 56 >> 2] = 0, o4[E6 + 60 >> 2] = 0, o4[E6 + 48 >> 2] = 0, o4[E6 + 52 >> 2] = 0, o4[E6 + 40 >> 2] = 0, o4[E6 + 44 >> 2] = 0, o4[E6 + 32 >> 2] = 0, o4[E6 + 36 >> 2] = 0, i6 = (t5 = !B6 & C6 >>> 0 >= 32 | 0 != (0 | B6)) ? 32 : C6, f4 = t5 = t5 ? 0 : B6, (n5 = !(i6 | t5)) || HA(E6 - -64 | 0, g8, i6), LA(a5 = E6 + 32 | 0, a5, r4 = i6 + 32 | 0, t5 = r4 >>> 0 < 32 ? t5 + 1 | 0 : t5, Q6 = Q6 + 16 | 0, E6), OA(E6 + 96 | 0, a5), n5 || HA(A10, E6 - -64 | 0, i6), $A(E6 + 32 | 0, 64), !B6 & C6 >>> 0 >= 33 | B6 && vA(A10 + i6 | 0, g8 + i6 | 0, C6 - i6 | 0, B6 - (f4 + (C6 >>> 0 < i6 >>> 0) | 0) | 0, Q6, E6), $A(E6, 32), zA(g8 = E6 + 96 | 0, A10, C6, B6), TA(g8, I9), $A(g8, 256), D4 = E6 + 352 | 0, 0;
                    }
                    function gA(A10, I9, g8, C6, B6, Q6, i6) {
                      var E6, a5, n5 = 0, r4 = 0;
                      D4 = E6 = D4 - 96 | 0, L5(E6, Q6, i6), i6 = E6 + 32 | 0, a5 = Q6 + 16 | 0, nI[o4[8724]](i6, 32, 0, a5, E6), Q6 = -1;
                      A: {
                        if (!(0 | nI[o4[8718]](g8, I9, C6, B6, i6))) {
                          if (Q6 = 0, !A10)
                            break A;
                          !((!B6 & C6 >>> 0 > I9 - A10 >>> 0 | 0 != (0 | B6)) & A10 >>> 0 < I9 >>> 0) & (!B6 & C6 >>> 0 <= A10 - I9 >>> 0 | A10 >>> 0 <= I9 >>> 0) || (I9 = kA(A10, I9, C6)), (i6 = (g8 = !B6 & C6 >>> 0 >= 32 | 0 != (0 | B6)) ? 32 : C6) | (g8 = g8 ? 0 : B6) ? (r4 = HA(E6 - -64 | 0, I9, i6), LA(Q6 = E6 + 32 | 0, Q6, n5 = i6 + 32 | 0, n5 >>> 0 < 32 ? g8 + 1 | 0 : g8, a5, E6), HA(A10, r4, i6)) : LA(Q6 = E6 + 32 | 0, Q6, n5 = i6 + 32 | 0, n5 >>> 0 < 32 ? g8 + 1 | 0 : g8, a5, E6), $A(E6 + 32 | 0, 64), Q6 = 0, !B6 & C6 >>> 0 < 33 || vA(A10 + i6 | 0, I9 + i6 | 0, C6 - i6 | 0, B6 - (g8 + (C6 >>> 0 < i6 >>> 0) | 0) | 0, a5, E6);
                        }
                        $A(E6, 32);
                      }
                      return D4 = E6 + 96 | 0, Q6;
                    }
                    function CA(A10, I9, g8, C6, B6, Q6, i6, E6, n5, r4) {
                      var f4, t5;
                      return D4 = f4 = D4 - 400 | 0, o4[f4 + 4 >> 2] = 0, d3(t5 = f4 + 16 | 0, n5, r4), r4 = a4[n5 + 20 | 0] | a4[n5 + 21 | 0] << 8 | a4[n5 + 22 | 0] << 16 | a4[n5 + 23 | 0] << 24, o4[f4 + 8 >> 2] = a4[n5 + 16 | 0] | a4[n5 + 17 | 0] << 8 | a4[n5 + 18 | 0] << 16 | a4[n5 + 19 | 0] << 24, o4[f4 + 12 >> 2] = r4, XA(r4 = f4 + 80 | 0, 64, f4 + 4 | 0, t5), OA(n5 = f4 + 144 | 0, r4), $A(r4, 64), zA(n5, Q6, i6, E6), zA(n5, 34816, 0 - i6 & 15, 0), zA(n5, I9, g8, C6), zA(n5, 34816, 0 - g8 & 15, 0), o4[f4 + 72 >> 2] = i6, o4[f4 + 76 >> 2] = E6, zA(n5, Q6 = f4 + 72 | 0, 8, 0), o4[f4 + 72 >> 2] = g8, o4[f4 + 76 >> 2] = C6, zA(n5, Q6, 8, 0), TA(n5, Q6 = f4 + 48 | 0), $A(n5, 256), n5 = Z4(Q6, B6), $A(Q6, 16), A10 && (n5 ? (MA(A10, 0, g8), n5 = -1) : (_A(A10, I9, g8, C6, f4 + 4 | 0, f4 + 16 | 0), n5 = 0)), $A(f4 + 16 | 0, 32), D4 = f4 + 400 | 0, n5;
                    }
                    function BA(A10, I9, g8, C6, B6, Q6, i6, E6, n5, r4, f4) {
                      var t5, e5, c5;
                      return D4 = t5 = D4 - 384 | 0, o4[t5 + 4 >> 2] = 0, d3(e5 = t5 + 16 | 0, r4, f4), f4 = a4[r4 + 20 | 0] | a4[r4 + 21 | 0] << 8 | a4[r4 + 22 | 0] << 16 | a4[r4 + 23 | 0] << 24, o4[t5 + 8 >> 2] = a4[r4 + 16 | 0] | a4[r4 + 17 | 0] << 8 | a4[r4 + 18 | 0] << 16 | a4[r4 + 19 | 0] << 24, o4[t5 + 12 >> 2] = f4, XA(f4 = t5 - -64 | 0, 64, c5 = t5 + 4 | 0, e5), OA(r4 = t5 + 128 | 0, f4), $A(f4, 64), zA(r4, i6, E6, n5), zA(r4, 34816, 0 - E6 & 15, 0), _A(A10, C6, B6, Q6, c5, e5), zA(r4, A10, B6, Q6), zA(r4, 34816, 0 - B6 & 15, 0), o4[t5 + 56 >> 2] = E6, o4[t5 + 60 >> 2] = n5, zA(r4, A10 = t5 + 56 | 0, 8, 0), o4[t5 + 56 >> 2] = B6, o4[t5 + 60 >> 2] = Q6, zA(r4, A10, 8, 0), TA(r4, I9), $A(r4, 256), g8 && (o4[g8 >> 2] = 16, o4[g8 + 4 >> 2] = 0), $A(t5 + 16 | 0, 32), D4 = t5 + 384 | 0, 0;
                    }
                    function QA(A10, I9, g8, C6) {
                      var B6, Q6 = 0;
                      return D4 = B6 = D4 - 208 | 0, o4[B6 + 72 >> 2] = 0, o4[B6 + 76 >> 2] = 0, Q6 = o4[8487], o4[B6 + 8 >> 2] = o4[8486], o4[B6 + 12 >> 2] = Q6, Q6 = o4[8489], o4[B6 + 16 >> 2] = o4[8488], o4[B6 + 20 >> 2] = Q6, Q6 = o4[8491], o4[B6 + 24 >> 2] = o4[8490], o4[B6 + 28 >> 2] = Q6, Q6 = o4[8493], o4[B6 + 32 >> 2] = o4[8492], o4[B6 + 36 >> 2] = Q6, Q6 = o4[8495], o4[B6 + 40 >> 2] = o4[8494], o4[B6 + 44 >> 2] = Q6, Q6 = o4[8497], o4[B6 + 48 >> 2] = o4[8496], o4[B6 + 52 >> 2] = Q6, Q6 = o4[8499], o4[B6 + 56 >> 2] = o4[8498], o4[B6 + 60 >> 2] = Q6, o4[B6 + 64 >> 2] = 0, o4[B6 + 68 >> 2] = 0, Q6 = o4[8485], o4[B6 >> 2] = o4[8484], o4[B6 + 4 >> 2] = Q6, m4(B6, I9, g8, C6), M5(B6, A10), D4 = B6 + 208 | 0, 0;
                    }
                    function iA(A10, I9) {
                      var g8, C6 = 0, B6 = 0, Q6 = 0;
                      if (E5[15 + (g8 = D4 - 16 | 0) | 0] = 0, I9) {
                        if (B6 = 3 & I9, I9 >>> 0 >= 4)
                          for (Q6 = -4 & I9, I9 = 0; E5[g8 + 15 | 0] = a4[A10 + C6 | 0] | a4[g8 + 15 | 0], E5[g8 + 15 | 0] = a4[(1 | C6) + A10 | 0] | a4[g8 + 15 | 0], E5[g8 + 15 | 0] = a4[(2 | C6) + A10 | 0] | a4[g8 + 15 | 0], E5[g8 + 15 | 0] = a4[(3 | C6) + A10 | 0] | a4[g8 + 15 | 0], C6 = C6 + 4 | 0, (0 | Q6) != (0 | (I9 = I9 + 4 | 0)); )
                            ;
                        if (B6)
                          for (I9 = 0; E5[g8 + 15 | 0] = a4[A10 + C6 | 0] | a4[g8 + 15 | 0], C6 = C6 + 1 | 0, (0 | B6) != (0 | (I9 = I9 + 1 | 0)); )
                            ;
                      }
                      return a4[g8 + 15 | 0] - 1 >>> 8 & 1;
                    }
                    function EA(A10) {
                      var I9 = 0;
                      o4[A10 + 64 >> 2] = 0, o4[A10 + 68 >> 2] = 0, o4[A10 + 72 >> 2] = 0, o4[A10 + 76 >> 2] = 0, I9 = o4[8485], o4[A10 >> 2] = o4[8484], o4[A10 + 4 >> 2] = I9, I9 = o4[8487], o4[A10 + 8 >> 2] = o4[8486], o4[A10 + 12 >> 2] = I9, I9 = o4[8489], o4[A10 + 16 >> 2] = o4[8488], o4[A10 + 20 >> 2] = I9, I9 = o4[8491], o4[A10 + 24 >> 2] = o4[8490], o4[A10 + 28 >> 2] = I9, I9 = o4[8493], o4[A10 + 32 >> 2] = o4[8492], o4[A10 + 36 >> 2] = I9, I9 = o4[8495], o4[A10 + 40 >> 2] = o4[8494], o4[A10 + 44 >> 2] = I9, I9 = o4[8497], o4[A10 + 48 >> 2] = o4[8496], o4[A10 + 52 >> 2] = I9, I9 = o4[8499], o4[A10 + 56 >> 2] = o4[8498], o4[A10 + 60 >> 2] = I9;
                    }
                    function oA(A10, I9, g8) {
                      var C6, B6 = 0, Q6 = 0;
                      if (o4[12 + (C6 = D4 - 16 | 0) >> 2] = A10, o4[C6 + 8 >> 2] = I9, A10 = 0, E5[C6 + 7 | 0] = 0, g8) {
                        if (I9 = 1 & g8, 1 != (0 | g8))
                          for (Q6 = -2 & g8, g8 = 0; E5[C6 + 7 | 0] = a4[C6 + 7 | 0] | a4[o4[C6 + 12 >> 2] + A10 | 0] ^ a4[o4[C6 + 8 >> 2] + A10 | 0], B6 = 1 | A10, E5[C6 + 7 | 0] = a4[C6 + 7 | 0] | a4[B6 + o4[C6 + 12 >> 2] | 0] ^ a4[o4[C6 + 8 >> 2] + B6 | 0], A10 = A10 + 2 | 0, (0 | Q6) != (0 | (g8 = g8 + 2 | 0)); )
                            ;
                        I9 && (E5[C6 + 7 | 0] = a4[C6 + 7 | 0] | a4[o4[C6 + 12 >> 2] + A10 | 0] ^ a4[o4[C6 + 8 >> 2] + A10 | 0]);
                      }
                      return (a4[C6 + 7 | 0] - 1 >>> 8 & 1) - 1 | 0;
                    }
                    function aA(A10) {
                      for (var I9 = 0, g8 = 0, C6 = 0, B6 = 0, Q6 = 0, i6 = 0, E6 = 0, o5 = 0, n5 = 0, r4 = 0; B6 = (g8 = a4[A10 + C6 | 0]) ^ a4[0 | (I9 = C6 + 2448 | 0)] | B6, Q6 = g8 ^ a4[I9 + 192 | 0] | Q6, i6 = g8 ^ a4[I9 + 160 | 0] | i6, E6 = g8 ^ a4[I9 + 128 | 0] | E6, o5 = g8 ^ a4[I9 + 96 | 0] | o5, n5 = g8 ^ a4[I9 - -64 | 0] | n5, r4 = g8 ^ a4[I9 + 32 | 0] | r4, 31 != (0 | (C6 = C6 + 1 | 0)); )
                        ;
                      return ((255 & ((I9 = 127 ^ (A10 = 127 & a4[A10 + 31 | 0])) | Q6)) - 1 | (255 & (I9 | i6)) - 1 | (255 & (I9 | E6)) - 1 | (255 & (122 ^ A10 | o5)) - 1 | (255 & (5 ^ A10 | n5)) - 1 | (255 & (A10 | r4)) - 1 | (255 & (A10 | B6)) - 1) >>> 8 & 1;
                    }
                    function nA(A10, I9, g8) {
                      var C6 = 0, B6 = 0, Q6 = 0, i6 = 0;
                      return B6 = 31 & (Q6 = i6 = 63 & g8), Q6 = Q6 >>> 0 >= 32 ? -1 >>> B6 | 0 : (C6 = -1 >>> B6 | 0) | (1 << B6) - 1 << 32 - B6, Q6 &= A10, C6 &= I9, B6 = 31 & i6, i6 >>> 0 >= 32 ? (C6 = Q6 << B6, i6 = 0) : (C6 = (1 << B6) - 1 & Q6 >>> 32 - B6 | C6 << B6, i6 = Q6 << B6), Q6 = C6, C6 = 31 & (B6 = 0 - g8 & 63), B6 >>> 0 >= 32 ? (C6 = -1 << C6, g8 = 0) : C6 = (g8 = -1 << C6) | (1 << C6) - 1 & -1 >>> 32 - C6, A10 &= g8, I9 &= C6, C6 = 31 & B6, B6 >>> 0 >= 32 ? (g8 = 0, A10 = I9 >>> C6 | 0) : (g8 = I9 >>> C6 | 0, A10 = ((1 << C6) - 1 & I9) << 32 - C6 | A10 >>> C6), w4 = g8 | Q6, A10 | i6;
                    }
                    function rA(A10, I9, g8, C6, B6, Q6, i6, E6, a5, n5) {
                      var r4, f4, t5;
                      return D4 = r4 = D4 - 352 | 0, XA(t5 = r4 + 32 | 0, 64, a5, n5), OA(f4 = r4 + 96 | 0, t5), $A(t5, 64), zA(f4, Q6, i6, E6), zA(f4, 33920, 0 - i6 & 15, 0), zA(f4, I9, g8, C6), zA(f4, 33920, 0 - g8 & 15, 0), o4[r4 + 24 >> 2] = i6, o4[r4 + 28 >> 2] = E6, zA(f4, Q6 = r4 + 24 | 0, 8, 0), o4[r4 + 24 >> 2] = g8, o4[r4 + 28 >> 2] = C6, zA(f4, Q6, 8, 0), TA(f4, r4), $A(f4, 256), Q6 = Z4(r4, B6), $A(r4, 16), A10 && (Q6 ? (MA(A10, 0, g8), Q6 = -1) : (wA(A10, I9, g8, C6, a5, 1, n5), Q6 = 0)), D4 = r4 + 352 | 0, Q6;
                    }
                    function fA(A10, I9, g8, C6, B6, Q6, i6, E6, a5, n5, r4) {
                      var f4, t5, e5;
                      return D4 = f4 = D4 - 336 | 0, XA(e5 = f4 + 16 | 0, 64, n5, r4), OA(t5 = f4 + 80 | 0, e5), $A(e5, 64), zA(t5, i6, E6, a5), zA(t5, 33920, 0 - E6 & 15, 0), wA(A10, C6, B6, Q6, n5, 1, r4), zA(t5, A10, B6, Q6), zA(t5, 33920, 0 - B6 & 15, 0), o4[f4 + 8 >> 2] = E6, o4[f4 + 12 >> 2] = a5, zA(t5, A10 = f4 + 8 | 0, 8, 0), o4[f4 + 8 >> 2] = B6, o4[f4 + 12 >> 2] = Q6, zA(t5, A10, 8, 0), TA(t5, I9), $A(t5, 256), g8 && (o4[g8 >> 2] = 16, o4[g8 + 4 >> 2] = 0), D4 = f4 + 336 | 0, 0;
                    }
                    function tA(A10, I9, g8, C6, B6, Q6, i6, E6, a5, n5) {
                      var r4, f4, t5;
                      return D4 = r4 = D4 - 352 | 0, qA(t5 = r4 + 32 | 0, a5, n5), OA(f4 = r4 + 96 | 0, t5), $A(t5, 64), zA(f4, Q6, i6, E6), o4[r4 + 24 >> 2] = i6, o4[r4 + 28 >> 2] = E6, zA(f4, Q6 = r4 + 24 | 0, 8, 0), zA(f4, I9, g8, C6), o4[r4 + 24 >> 2] = g8, o4[r4 + 28 >> 2] = C6, zA(f4, Q6, 8, 0), TA(f4, r4), $A(f4, 256), Q6 = Z4(r4, B6), $A(r4, 16), A10 && (Q6 ? (MA(A10, 0, g8), Q6 = -1) : (bA(A10, I9, g8, C6, a5, n5), Q6 = 0)), D4 = r4 + 352 | 0, Q6;
                    }
                    function eA(A10, I9, g8, C6, B6, Q6, i6, E6, a5, n5, r4) {
                      var f4, t5, e5;
                      return D4 = f4 = D4 - 336 | 0, qA(e5 = f4 + 16 | 0, n5, r4), OA(t5 = f4 + 80 | 0, e5), $A(e5, 64), zA(t5, i6, E6, a5), o4[f4 + 8 >> 2] = E6, o4[f4 + 12 >> 2] = a5, zA(t5, i6 = f4 + 8 | 0, 8, 0), bA(A10, C6, B6, Q6, n5, r4), zA(t5, A10, B6, Q6), o4[f4 + 8 >> 2] = B6, o4[f4 + 12 >> 2] = Q6, zA(t5, i6, 8, 0), TA(t5, I9), $A(t5, 256), g8 && (o4[g8 >> 2] = 16, o4[g8 + 4 >> 2] = 0), D4 = f4 + 336 | 0, 0;
                    }
                    function cA(A10, I9) {
                      var g8;
                      for (o4[12 + (g8 = D4 - 16 | 0) >> 2] = A10, o4[g8 + 8 >> 2] = I9, A10 = 0, o4[g8 + 4 >> 2] = 0; o4[g8 + 4 >> 2] = o4[g8 + 4 >> 2] | a4[o4[g8 + 12 >> 2] + A10 | 0] ^ a4[o4[g8 + 8 >> 2] + A10 | 0], I9 = 1 | A10, o4[g8 + 4 >> 2] = o4[g8 + 4 >> 2] | a4[I9 + o4[g8 + 12 >> 2] | 0] ^ a4[I9 + o4[g8 + 8 >> 2] | 0], 32 != (0 | (A10 = A10 + 2 | 0)); )
                        ;
                      return (o4[g8 + 4 >> 2] - 1 >>> 8 & 1) - 1 | 0;
                    }
                    function yA(A10) {
                      var I9 = 0, g8 = 0, C6 = 0, B6 = 0;
                      for (I9 = 1; I9 = a4[0 | (g8 = A10 + C6 | 0)] + I9 | 0, E5[0 | g8] = I9, I9 = a4[0 | (g8 = (1 | C6) + A10 | 0)] + (I9 >>> 8 | 0) | 0, E5[0 | g8] = I9, I9 = a4[0 | (g8 = (2 | C6) + A10 | 0)] + (I9 >>> 8 | 0) | 0, E5[0 | g8] = I9, I9 = a4[0 | (g8 = (3 | C6) + A10 | 0)] + (I9 >>> 8 | 0) | 0, E5[0 | g8] = I9, I9 = I9 >>> 8 | 0, C6 = C6 + 4 | 0, 4 != (0 | (B6 = B6 + 4 | 0)); )
                        ;
                    }
                    function DA(A10, I9, g8, C6) {
                      var B6, Q6, i6, E6, o5 = 0, a5 = 0;
                      return E6 = r3(o5 = g8 >>> 16 | 0, a5 = A10 >>> 16 | 0), o5 = (65535 & (a5 = ((i6 = r3(B6 = 65535 & g8, Q6 = 65535 & A10)) >>> 16 | 0) + r3(a5, B6) | 0)) + r3(o5, Q6) | 0, w4 = (r3(I9, g8) + E6 | 0) + r3(A10, C6) + (a5 >>> 16) + (o5 >>> 16) | 0, 65535 & i6 | o5 << 16;
                    }
                    function wA(A10, I9, g8, C6, B6, i6, E6) {
                      var a5 = 0, n5 = 0;
                      a5 = C6, 1 == (((a5 = (n5 = g8 + 63 | 0) >>> 0 < 63 ? a5 + 1 | 0 : a5) >>> 6 | 0) + (0 != (0 | (a5 = (63 & a5) << 26 | n5 >>> 6))) | 0) & i6 >>> 0 > (n5 = 0 - a5 | 0) >>> 0 | 1 == (0 | C6) | C6 >>> 0 > 1 ? (mA(), Q5()) : nI[o4[8716]](A10, I9, g8, C6, B6, i6, E6);
                    }
                    function hA(A10, I9) {
                      A10 |= 0;
                      var g8, C6 = 0, B6 = 0, Q6 = 0;
                      if (D4 = g8 = D4 - 16 | 0, I9 |= 0)
                        for (; E5[g8 + 15 | 0] = 0, B6 = A10 + C6 | 0, Q6 = 0 | t4(34904, g8 + 15 | 0, 0), E5[0 | B6] = Q6, (0 | (C6 = C6 + 1 | 0)) != (0 | I9); )
                          ;
                      D4 = g8 + 16 | 0;
                    }
                    function sA(A10, I9, g8, C6, B6, Q6, i6) {
                      var E6, o5 = 0;
                      return D4 = E6 = D4 - 32 | 0, o5 = -1, !C6 & g8 >>> 0 < 16 || SA(E6, Q6, i6) || (o5 = gA(A10, I9 + 16 | 0, I9, g8 - 16 | 0, C6 - (g8 >>> 0 < 16) | 0, B6, E6), $A(E6, 32)), D4 = E6 + 32 | 0, o5;
                    }
                    function pA(A10) {
                      var I9, g8;
                      return (A10 = (I9 = o4[8712]) + (g8 = A10 + 7 & -8) | 0) >>> 0 <= I9 >>> 0 && g8 || A10 >>> 0 > rI() << 16 >>> 0 && !(0 | y5(0 | A10)) ? (o4[8916] = 48, -1) : (o4[8712] = A10, I9);
                    }
                    function uA(A10, I9) {
                      var g8, C6, B6;
                      D4 = g8 = D4 - 176 | 0, X5(C6 = g8 + 96 | 0, I9 + 80 | 0), F5(B6 = g8 + 48 | 0, I9, C6), F5(g8, I9 + 40 | 0, C6), W5(A10, g8), W5(g8 + 144 | 0, B6), E5[A10 + 31 | 0] = a4[A10 + 31 | 0] ^ a4[g8 + 144 | 0] << 7, D4 = g8 + 176 | 0;
                    }
                    function kA(A10, I9, g8) {
                      var C6 = 0;
                      if (A10 >>> 0 < I9 >>> 0)
                        return HA(A10, I9, g8);
                      if (g8)
                        for (C6 = A10 + g8 | 0, I9 = I9 + g8 | 0; I9 = I9 - 1 | 0, E5[0 | (C6 = C6 - 1 | 0)] = a4[0 | I9], g8 = g8 - 1 | 0; )
                          ;
                      return A10;
                    }
                    function FA(A10, I9, g8, C6, B6, i6, E6) {
                      var o5, a5 = 0;
                      if (D4 = o5 = D4 - 32 | 0, !C6 & g8 >>> 0 < 4294967280)
                        return a5 = -1, SA(o5, i6, E6) || (a5 = IA(A10 + 16 | 0, A10, I9, g8, C6, B6, o5), $A(o5, 32)), D4 = o5 + 32 | 0, a5;
                      mA(), Q5();
                    }
                    function lA(A10, I9, g8, C6, B6, Q6) {
                      return I9 |= 0, 0 | (!(C6 |= 0) & (g8 |= 0) >>> 0 >= 16 | C6 ? gA(A10 |= 0, I9 + 16 | 0, I9, g8 - 16 | 0, C6 - (g8 >>> 0 < 16) | 0, B6 |= 0, Q6 |= 0) : -1);
                    }
                    function SA(A10, I9, g8) {
                      A10 |= 0;
                      var C6, B6 = 0;
                      return D4 = C6 = D4 - 32 | 0, B6 = -1, T5(C6, g8 |= 0, I9 |= 0) || (B6 = L5(A10, 34832, C6)), D4 = C6 + 32 | 0, 0 | B6;
                    }
                    function HA(A10, I9, g8) {
                      var C6 = 0;
                      if (g8)
                        for (C6 = A10; E5[0 | C6] = a4[0 | I9], C6 = C6 + 1 | 0, I9 = I9 + 1 | 0, g8 = g8 - 1 | 0; )
                          ;
                      return A10;
                    }
                    function MA(A10, I9, g8) {
                      var C6 = 0;
                      if (g8)
                        for (C6 = A10; E5[0 | C6] = I9, C6 = C6 + 1 | 0, g8 = g8 - 1 | 0; )
                          ;
                      return A10;
                    }
                    function GA(A10, I9, g8) {
                      return A10 |= 0, I9 |= 0, (g8 |= 0) >>> 0 >= 256 && (e4(1260, 1187, 107, 1067), Q5()), 0 | G5(A10, I9, 255 & g8);
                    }
                    function UA(A10, I9) {
                      var g8;
                      D4 = g8 = D4 + -64 | 0, M5(A10, g8), m4(A10 = A10 + 208 | 0, g8, 64, 0), M5(A10, I9), $A(g8, 64), D4 = g8 - -64 | 0;
                    }
                    function JA(A10, I9, g8, C6, B6, Q6, i6) {
                      return 0 | IA(A10 |= 0, I9 |= 0, g8 |= 0, C6 |= 0, B6 |= 0, Q6 |= 0, i6 |= 0);
                    }
                    function NA(A10, I9, g8, C6, B6, Q6, i6) {
                      return 0 | gA(A10 |= 0, I9 |= 0, g8 |= 0, C6 |= 0, B6 |= 0, Q6 |= 0, i6 |= 0);
                    }
                    function YA(A10, I9) {
                      var g8 = 0;
                      return (-1 >>> (g8 = 31 & I9) & A10) << g8 | ((g8 = A10) & -1 << (A10 = 0 - I9 & 31)) >>> A10;
                    }
                    function bA(A10, I9, g8, C6, B6, i6) {
                      1 == (0 | C6) | C6 >>> 0 > 1 && (mA(), Q5()), nI[o4[8715]](A10, I9, g8, C6, B6, 1, 0, i6);
                    }
                    function _A(A10, I9, g8, C6, B6, i6) {
                      1 == (0 | C6) | C6 >>> 0 > 1 && (mA(), Q5()), nI[o4[8716]](A10, I9, g8, C6, B6, 1, i6);
                    }
                    function KA() {
                      var A10;
                      D4 = A10 = D4 - 16 | 0, E5[A10 + 15 | 0] = 0, t4(34940, A10 + 15 | 0, 0), D4 = A10 + 16 | 0;
                    }
                    function PA(A10, I9, g8) {
                      return 0 | T5(A10 |= 0, I9 |= 0, g8 |= 0);
                    }
                    function vA(A10, I9, g8, C6, B6, Q6) {
                      nI[o4[8725]](A10, I9, g8, C6, B6, 1, 0, Q6);
                    }
                    function mA() {
                      var A10;
                      (A10 = o4[9050]) && nI[0 | A10](), c4(), Q5();
                    }
                    function dA(A10, I9) {
                      return A10 |= 0, hA(I9 |= 0, 32), 0 | VA(A10, I9);
                    }
                    function LA(A10, I9, g8, C6, B6, Q6) {
                      nI[o4[8725]](A10, I9, g8, C6, B6, 0, 0, Q6);
                    }
                    function RA(A10) {
                      return A10 ? 31 - f3(A10 - 1 ^ A10) | 0 : 32;
                    }
                    function xA(A10, I9, g8, C6) {
                      nI[o4[8716]](A10, I9, 40, 0, g8, 0, C6);
                    }
                    function jA(A10, I9) {
                      return 0 | VA(A10 |= 0, I9 |= 0);
                    }
                    function XA(A10, I9, g8, C6) {
                      nI[o4[8714]](A10, I9, 0, g8, C6);
                    }
                    function qA(A10, I9, g8) {
                      nI[o4[8713]](A10, 64, 0, I9, g8);
                    }
                    function zA(A10, I9, g8, C6) {
                      nI[o4[8720]](A10, I9, g8, C6);
                    }
                    function VA(A10, I9) {
                      return 0 | nI[o4[8723]](A10, I9);
                    }
                    function OA(A10, I9) {
                      nI[o4[8719]](A10, I9);
                    }
                    function TA(A10, I9) {
                      nI[o4[8721]](A10, I9);
                    }
                    function WA(A10, I9, g8, C6) {
                      m4(A10, I9, g8, C6);
                    }
                    function ZA(A10) {
                      hA(A10 |= 0, 32);
                    }
                    function $A(A10, I9) {
                      MA(A10, 0, I9);
                    }
                    function AI() {
                      return 16;
                    }
                    function II() {
                      return 32;
                    }
                    function gI() {
                      return 24;
                    }
                    function CI() {
                      return -17;
                    }
                    function BI() {
                      return 64;
                    }
                    function QI() {
                      return 1;
                    }
                    function iI() {
                      return 3;
                    }
                    function EI() {
                      return 8;
                    }
                    function oI() {
                      return 0;
                    }
                    B5(I8 = a4, 1024, "TGlic29kaXVtRFJHcmFuZG9tYnl0ZXMAYjY0X3BvcyA8PSBiNjRfbGVuAGNyeXB0b19nZW5lcmljaGFzaF9ibGFrZTJiX2ZpbmFsAHJhbmRvbWJ5dGVzL3JhbmRvbWJ5dGVzLmMAc29kaXVtL2NvZGVjcy5jAGNyeXB0b19nZW5lcmljaGFzaC9ibGFrZTJiL3JlZi9ibGFrZTJiLXJlZi5jAGNyeXB0b19nZW5lcmljaGFzaC9ibGFrZTJiL3JlZi9nZW5lcmljaGFzaF9ibGFrZTJiLmMAYnVmX2xlbiA8PSBTSVpFX01BWABvdXRsZW4gPD0gVUlOVDhfTUFYAFMtPmJ1ZmxlbiA8PSBCTEFLRTJCX0JMT0NLQllURVMAMS4wLjE4AHNvZGl1bV9iaW4yYmFzZTY0AAAAAAAAAAC2eFn/hXLTAL1uFf8PCmoAKcABAJjoef+8PKD/mXHO/wC34v60DUj/AAAAAAAAAACwoA7+08mG/54YjwB/aTUAYAy9AKfX+/+fTID+amXh/x78BACSDK4="), B5(I8, 1440, "WfGy/grlpv973Sr+HhTUAFKAAwAw0fMAd3lA/zLjnP8AbsUBZxuQ"), B5(I8, 1488, "hTuMAb3xJP/4JcMBYNw3ALdMPv/DQj0AMkykAeGkTP9MPaP/dT4fAFGRQP92QQ4AonPW/waKLgB85vT/CoqPADQawgC49EwAgY8pAb70E/97qnr/YoFEAHnVkwBWZR7/oWebAIxZQ//v5b4BQwu1AMbwif7uRbz/Q5fuABMqbP/lVXEBMkSH/xFqCQAyZwH/UAGoASOYHv8QqLkBOFno/2XS/AAp+kcAzKpP/w4u7/9QTe8AvdZL/xGN+QAmUEz/vlV1AFbkqgCc2NABw8+k/5ZCTP+v4RD/jVBiAUzb8gDGonIALtqYAJsr8f6boGj/M7ulAAIRrwBCVKAB9zoeACNBNf5F7L8ALYb1AaN73QAgbhT/NBelALrWRwDpsGAA8u82ATlZigBTAFT/iKBkAFyOeP5ofL4AtbE+//opVQCYgioBYPz2AJeXP/7vhT4AIDicAC2nvf+OhbMBg1bTALuzlv76qg7/0qNOACU0lwBjTRoA7pzV/9XA0QFJLlQAFEEpATbOTwDJg5L+qm8Y/7EhMv6rJsv/Tvd0ANHdmQCFgLIBOiwZAMknOwG9E/wAMeXSAXW7dQC1s7gBAHLbADBekwD1KTgAfQ3M/vStdwAs3SD+VOoUAPmgxgHsfur/L2Oo/qrimf9ms9gA4o16/3pCmf629YYA4+QZAdY56//YrTj/tefSAHeAnf+BX4j/bn4zAAKpt/8HgmL+RbBe/3QE4wHZ8pH/yq0fAWkBJ/8ur0UA5C86/9fgRf7POEX/EP6L/xfP1P/KFH7/X9Vg/wmwIQDIBc//8SqA/iMhwP/45cQBgRF4APtnl/8HNHD/jDhC/yji9f/ZRiX+rNYJ/0hDhgGSwNb/LCZwAES4S//OWvsAleuNALWqOgB09O8AXJ0CAGatYgDpiWABfzHLAAWblAAXlAn/03oMACKGGv/bzIgAhggp/+BTK/5VGfcAbX8A/qmIMADud9v/563VAM4S/v4Iugf/fgkHAW8qSABvNOz+YD+NAJO/f/7NTsD/DmrtAbvbTACv87v+aVmtAFUZWQGi85QAAnbR/iGeCQCLoy7/XUYoAGwqjv5v/I7/m9+QADPlp/9J/Jv/XnQM/5ig2v+c7iX/s+rP/8UAs/+apI0A4cRoAAojGf7R1PL/Yf3e/rhl5QDeEn8BpIiH/x7PjP6SYfMAgcAa/slUIf9vCk7/k1Gy/wQEGACh7tf/Bo0hADXXDv8ptdD/54udALPL3f//uXEAveKs/3FC1v/KPi3/ZkAI/06uEP6FdUT/"), B5(I8, 2480, "AQ=="), B5(I8, 2512, "JuiVj8KyJ7BFw/SJ8u+Y8NXfrAXTxjM5sTgCiG1T/AXHF2pwPU3YT7o8C3YNEGcPKiBT+iw5zMZOx/13kqwDeuz///////////////////////////////////////9/7f///////////////////////////////////////3/u////////////////////////////////////////f+3T9VwaYxJY1pz3ot753hQ="), B5(I8, 2703, ""), B5(I8, 33676, "AQ=="), B5(I8, 33712, "AQ=="), B5(I8, 33744, "4Ot6fDtBuK4WVuP68Z/EatoJjeucMrH9hmIFFl9JuABfnJW8o1CMJLHQsVWcg+9bBERcxFgcjobYIk7d0J8RV+z///////////////////////////////////////9/7f///////////////////////////////////////3/u////////////////////////////////////////fw=="), B5(I8, 33936, "CMm882fmCWo7p8qEha5nuyv4lP5y82488TYdXzr1T6XRguatf1IOUR9sPiuMaAWba71B+6vZgx95IX4TGc3gWyKuKNeYL4pCzWXvI5FEN3EvO03sz/vAtbzbiYGl27XpOLVI81vCVjkZ0AW28RHxWZtPGa+kgj+SGIFt2tVeHKtCAgOjmKoH2L5vcEUBW4MSjLLkTr6FMSTitP/Vw30MVW+Je/J0Xb5ysZYWO/6x3oA1Esclpwbcm5Qmac908ZvB0krxnsFpm+TjJU84hke+77XVjIvGncEPZZysd8yhDCR1AitZbyzpLYPkpm6qhHRK1PtBvdypsFy1UxGD2oj5dqvfZu5SUT6YEDK0LW3GMag/IfuYyCcDsOQO777Hf1m/wo+oPfML4MYlpwqTR5Gn1W+CA+BRY8oGcG4OCmcpKRT8L9JGhQq3JybJJlw4IRsu7SrEWvxtLE3fs5WdEw04U95jr4tUcwplqLJ3PLsKanbmru1HLsnCgTs1ghSFLHKSZAPxTKHov6IBMEK8S2YaqJGX+NBwi0vCML5UBqNRbMcYUu/WGeiS0RCpZVUkBpnWKiBxV4U1DvS40bsycKBqEMjQ0rgWwaQZU6tBUQhsNx6Z647fTHdIJ6hIm+G1vLA0Y1rJxbMMHDnLikHjSqrYTnPjY3dPypxbo7iy1vNvLmj8su9d7oKPdGAvF0NvY6V4cqvwoRR4yITsOWQaCALHjCgeYyP6/76Q6b2C3utsUKQVecay96P5vitTcuPyeHHGnGEm6s4+J8oHwsAhx7iG0R7r4M3WfdrqeNFu7n9PffW6bxdyqmfwBqaYyKLFfWMKrg35vgSYPxEbRxwTNQtxG4R9BCP1d9sokyTHQHuryjK8vskVCr6ePEwNEJzEZx1DtkI+y77UxUwqfmX8nCl/Wez61jqrb8tfF1hHSowZRGyA"), B5(I8, 34768, "U2lnRWQyNTUxOSBubyBFZDI1NTE5IGNvbGxpc2lvbnMB"), B5(I8, 34848, "cI0BAAEAAAACAAAAAwAAAAQAAAAFAAAABgAAAAcAAAAIAAAACQAAAAoAAAALAAAADAAAAA0=");
                    var aI, nI = (aI = [null, function(A10, I9, g8, C6, B6) {
                      var Q6;
                      return A10 |= 0, C6 |= 0, B6 |= 0, D4 = Q6 = D4 + -64 | 0, (I9 |= 0) | (g8 |= 0) && (o4[Q6 + 8 >> 2] = 2036477234, o4[Q6 + 12 >> 2] = 1797285236, o4[Q6 >> 2] = 1634760805, o4[Q6 + 4 >> 2] = 857760878, o4[Q6 + 16 >> 2] = a4[0 | B6] | a4[B6 + 1 | 0] << 8 | a4[B6 + 2 | 0] << 16 | a4[B6 + 3 | 0] << 24, o4[Q6 + 20 >> 2] = a4[B6 + 4 | 0] | a4[B6 + 5 | 0] << 8 | a4[B6 + 6 | 0] << 16 | a4[B6 + 7 | 0] << 24, o4[Q6 + 24 >> 2] = a4[B6 + 8 | 0] | a4[B6 + 9 | 0] << 8 | a4[B6 + 10 | 0] << 16 | a4[B6 + 11 | 0] << 24, o4[Q6 + 28 >> 2] = a4[B6 + 12 | 0] | a4[B6 + 13 | 0] << 8 | a4[B6 + 14 | 0] << 16 | a4[B6 + 15 | 0] << 24, o4[Q6 + 32 >> 2] = a4[B6 + 16 | 0] | a4[B6 + 17 | 0] << 8 | a4[B6 + 18 | 0] << 16 | a4[B6 + 19 | 0] << 24, o4[Q6 + 36 >> 2] = a4[B6 + 20 | 0] | a4[B6 + 21 | 0] << 8 | a4[B6 + 22 | 0] << 16 | a4[B6 + 23 | 0] << 24, o4[Q6 + 40 >> 2] = a4[B6 + 24 | 0] | a4[B6 + 25 | 0] << 8 | a4[B6 + 26 | 0] << 16 | a4[B6 + 27 | 0] << 24, B6 = a4[B6 + 28 | 0] | a4[B6 + 29 | 0] << 8 | a4[B6 + 30 | 0] << 16 | a4[B6 + 31 | 0] << 24, o4[Q6 + 48 >> 2] = 0, o4[Q6 + 52 >> 2] = 0, o4[Q6 + 44 >> 2] = B6, o4[Q6 + 56 >> 2] = a4[0 | C6] | a4[C6 + 1 | 0] << 8 | a4[C6 + 2 | 0] << 16 | a4[C6 + 3 | 0] << 24, o4[Q6 + 60 >> 2] = a4[C6 + 4 | 0] | a4[C6 + 5 | 0] << 8 | a4[C6 + 6 | 0] << 16 | a4[C6 + 7 | 0] << 24, H5(Q6, A10 = MA(A10, 0, I9), A10, I9, g8), $A(Q6, 64)), D4 = Q6 - -64 | 0, 0;
                    }, function(A10, I9, g8, C6, B6) {
                      var Q6;
                      return A10 |= 0, C6 |= 0, B6 |= 0, D4 = Q6 = D4 + -64 | 0, (I9 |= 0) | (g8 |= 0) && (o4[Q6 + 8 >> 2] = 2036477234, o4[Q6 + 12 >> 2] = 1797285236, o4[Q6 >> 2] = 1634760805, o4[Q6 + 4 >> 2] = 857760878, o4[Q6 + 16 >> 2] = a4[0 | B6] | a4[B6 + 1 | 0] << 8 | a4[B6 + 2 | 0] << 16 | a4[B6 + 3 | 0] << 24, o4[Q6 + 20 >> 2] = a4[B6 + 4 | 0] | a4[B6 + 5 | 0] << 8 | a4[B6 + 6 | 0] << 16 | a4[B6 + 7 | 0] << 24, o4[Q6 + 24 >> 2] = a4[B6 + 8 | 0] | a4[B6 + 9 | 0] << 8 | a4[B6 + 10 | 0] << 16 | a4[B6 + 11 | 0] << 24, o4[Q6 + 28 >> 2] = a4[B6 + 12 | 0] | a4[B6 + 13 | 0] << 8 | a4[B6 + 14 | 0] << 16 | a4[B6 + 15 | 0] << 24, o4[Q6 + 32 >> 2] = a4[B6 + 16 | 0] | a4[B6 + 17 | 0] << 8 | a4[B6 + 18 | 0] << 16 | a4[B6 + 19 | 0] << 24, o4[Q6 + 36 >> 2] = a4[B6 + 20 | 0] | a4[B6 + 21 | 0] << 8 | a4[B6 + 22 | 0] << 16 | a4[B6 + 23 | 0] << 24, o4[Q6 + 40 >> 2] = a4[B6 + 24 | 0] | a4[B6 + 25 | 0] << 8 | a4[B6 + 26 | 0] << 16 | a4[B6 + 27 | 0] << 24, B6 = a4[B6 + 28 | 0] | a4[B6 + 29 | 0] << 8 | a4[B6 + 30 | 0] << 16 | a4[B6 + 31 | 0] << 24, o4[Q6 + 48 >> 2] = 0, o4[Q6 + 44 >> 2] = B6, o4[Q6 + 52 >> 2] = a4[0 | C6] | a4[C6 + 1 | 0] << 8 | a4[C6 + 2 | 0] << 16 | a4[C6 + 3 | 0] << 24, o4[Q6 + 56 >> 2] = a4[C6 + 4 | 0] | a4[C6 + 5 | 0] << 8 | a4[C6 + 6 | 0] << 16 | a4[C6 + 7 | 0] << 24, o4[Q6 + 60 >> 2] = a4[C6 + 8 | 0] | a4[C6 + 9 | 0] << 8 | a4[C6 + 10 | 0] << 16 | a4[C6 + 11 | 0] << 24, H5(Q6, A10 = MA(A10, 0, I9), A10, I9, g8), $A(Q6, 64)), D4 = Q6 - -64 | 0, 0;
                    }, function(A10, I9, g8, C6, B6, Q6, i6, E6) {
                      var n5;
                      return A10 |= 0, I9 |= 0, B6 |= 0, Q6 |= 0, i6 |= 0, E6 |= 0, D4 = n5 = D4 + -64 | 0, (g8 |= 0) | (C6 |= 0) && (o4[n5 + 8 >> 2] = 2036477234, o4[n5 + 12 >> 2] = 1797285236, o4[n5 >> 2] = 1634760805, o4[n5 + 4 >> 2] = 857760878, o4[n5 + 16 >> 2] = a4[0 | E6] | a4[E6 + 1 | 0] << 8 | a4[E6 + 2 | 0] << 16 | a4[E6 + 3 | 0] << 24, o4[n5 + 20 >> 2] = a4[E6 + 4 | 0] | a4[E6 + 5 | 0] << 8 | a4[E6 + 6 | 0] << 16 | a4[E6 + 7 | 0] << 24, o4[n5 + 24 >> 2] = a4[E6 + 8 | 0] | a4[E6 + 9 | 0] << 8 | a4[E6 + 10 | 0] << 16 | a4[E6 + 11 | 0] << 24, o4[n5 + 28 >> 2] = a4[E6 + 12 | 0] | a4[E6 + 13 | 0] << 8 | a4[E6 + 14 | 0] << 16 | a4[E6 + 15 | 0] << 24, o4[n5 + 32 >> 2] = a4[E6 + 16 | 0] | a4[E6 + 17 | 0] << 8 | a4[E6 + 18 | 0] << 16 | a4[E6 + 19 | 0] << 24, o4[n5 + 36 >> 2] = a4[E6 + 20 | 0] | a4[E6 + 21 | 0] << 8 | a4[E6 + 22 | 0] << 16 | a4[E6 + 23 | 0] << 24, o4[n5 + 40 >> 2] = a4[E6 + 24 | 0] | a4[E6 + 25 | 0] << 8 | a4[E6 + 26 | 0] << 16 | a4[E6 + 27 | 0] << 24, o4[n5 + 44 >> 2] = a4[E6 + 28 | 0] | a4[E6 + 29 | 0] << 8 | a4[E6 + 30 | 0] << 16 | a4[E6 + 31 | 0] << 24, o4[n5 + 48 >> 2] = Q6, o4[n5 + 52 >> 2] = i6, o4[n5 + 56 >> 2] = a4[0 | B6] | a4[B6 + 1 | 0] << 8 | a4[B6 + 2 | 0] << 16 | a4[B6 + 3 | 0] << 24, o4[n5 + 60 >> 2] = a4[B6 + 4 | 0] | a4[B6 + 5 | 0] << 8 | a4[B6 + 6 | 0] << 16 | a4[B6 + 7 | 0] << 24, H5(n5, I9, A10, g8, C6), $A(n5, 64)), D4 = n5 - -64 | 0, 0;
                    }, function(A10, I9, g8, C6, B6, Q6, i6) {
                      var E6;
                      return A10 |= 0, I9 |= 0, B6 |= 0, Q6 |= 0, i6 |= 0, D4 = E6 = D4 + -64 | 0, (g8 |= 0) | (C6 |= 0) && (o4[E6 + 8 >> 2] = 2036477234, o4[E6 + 12 >> 2] = 1797285236, o4[E6 >> 2] = 1634760805, o4[E6 + 4 >> 2] = 857760878, o4[E6 + 16 >> 2] = a4[0 | i6] | a4[i6 + 1 | 0] << 8 | a4[i6 + 2 | 0] << 16 | a4[i6 + 3 | 0] << 24, o4[E6 + 20 >> 2] = a4[i6 + 4 | 0] | a4[i6 + 5 | 0] << 8 | a4[i6 + 6 | 0] << 16 | a4[i6 + 7 | 0] << 24, o4[E6 + 24 >> 2] = a4[i6 + 8 | 0] | a4[i6 + 9 | 0] << 8 | a4[i6 + 10 | 0] << 16 | a4[i6 + 11 | 0] << 24, o4[E6 + 28 >> 2] = a4[i6 + 12 | 0] | a4[i6 + 13 | 0] << 8 | a4[i6 + 14 | 0] << 16 | a4[i6 + 15 | 0] << 24, o4[E6 + 32 >> 2] = a4[i6 + 16 | 0] | a4[i6 + 17 | 0] << 8 | a4[i6 + 18 | 0] << 16 | a4[i6 + 19 | 0] << 24, o4[E6 + 36 >> 2] = a4[i6 + 20 | 0] | a4[i6 + 21 | 0] << 8 | a4[i6 + 22 | 0] << 16 | a4[i6 + 23 | 0] << 24, o4[E6 + 40 >> 2] = a4[i6 + 24 | 0] | a4[i6 + 25 | 0] << 8 | a4[i6 + 26 | 0] << 16 | a4[i6 + 27 | 0] << 24, i6 = a4[i6 + 28 | 0] | a4[i6 + 29 | 0] << 8 | a4[i6 + 30 | 0] << 16 | a4[i6 + 31 | 0] << 24, o4[E6 + 48 >> 2] = Q6, o4[E6 + 44 >> 2] = i6, o4[E6 + 52 >> 2] = a4[0 | B6] | a4[B6 + 1 | 0] << 8 | a4[B6 + 2 | 0] << 16 | a4[B6 + 3 | 0] << 24, o4[E6 + 56 >> 2] = a4[B6 + 4 | 0] | a4[B6 + 5 | 0] << 8 | a4[B6 + 6 | 0] << 16 | a4[B6 + 7 | 0] << 24, o4[E6 + 60 >> 2] = a4[B6 + 8 | 0] | a4[B6 + 9 | 0] << 8 | a4[B6 + 10 | 0] << 16 | a4[B6 + 11 | 0] << 24, H5(E6, I9, A10, g8, C6), $A(E6, 64)), D4 = E6 - -64 | 0, 0;
                    }, function(A10, I9, g8, C6, B6) {
                      var Q6, i6, n5;
                      return A10 |= 0, I9 |= 0, g8 |= 0, C6 |= 0, B6 |= 0, D4 = Q6 = (i6 = D4) - 128 & -64, o4[Q6 >> 2] = 67108863 & (a4[0 | B6] | a4[B6 + 1 | 0] << 8 | a4[B6 + 2 | 0] << 16 | a4[B6 + 3 | 0] << 24), o4[Q6 + 4 >> 2] = (a4[B6 + 3 | 0] | a4[B6 + 4 | 0] << 8 | a4[B6 + 5 | 0] << 16 | a4[B6 + 6 | 0] << 24) >>> 2 & 67108611, o4[Q6 + 8 >> 2] = (a4[B6 + 6 | 0] | a4[B6 + 7 | 0] << 8 | a4[B6 + 8 | 0] << 16 | a4[B6 + 9 | 0] << 24) >>> 4 & 67092735, o4[Q6 + 12 >> 2] = (a4[B6 + 9 | 0] | a4[B6 + 10 | 0] << 8 | a4[B6 + 11 | 0] << 16 | a4[B6 + 12 | 0] << 24) >>> 6 & 66076671, n5 = a4[B6 + 12 | 0] | a4[B6 + 13 | 0] << 8 | a4[B6 + 14 | 0] << 16 | a4[B6 + 15 | 0] << 24, o4[Q6 + 20 >> 2] = 0, o4[Q6 + 24 >> 2] = 0, o4[Q6 + 28 >> 2] = 0, o4[Q6 + 32 >> 2] = 0, o4[Q6 + 36 >> 2] = 0, o4[Q6 + 16 >> 2] = n5 >>> 8 & 1048575, o4[Q6 + 40 >> 2] = a4[B6 + 16 | 0] | a4[B6 + 17 | 0] << 8 | a4[B6 + 18 | 0] << 16 | a4[B6 + 19 | 0] << 24, o4[Q6 + 44 >> 2] = a4[B6 + 20 | 0] | a4[B6 + 21 | 0] << 8 | a4[B6 + 22 | 0] << 16 | a4[B6 + 23 | 0] << 24, o4[Q6 + 48 >> 2] = a4[B6 + 24 | 0] | a4[B6 + 25 | 0] << 8 | a4[B6 + 26 | 0] << 16 | a4[B6 + 27 | 0] << 24, B6 = a4[B6 + 28 | 0] | a4[B6 + 29 | 0] << 8 | a4[B6 + 30 | 0] << 16 | a4[B6 + 31 | 0] << 24, E5[Q6 + 80 | 0] = 0, o4[Q6 + 56 >> 2] = 0, o4[Q6 + 60 >> 2] = 0, o4[Q6 + 52 >> 2] = B6, x5(Q6, I9, g8, C6), O5(Q6, A10), D4 = i6, 0;
                    }, function(A10, I9, g8, C6, B6) {
                      var Q6, i6, n5;
                      return A10 |= 0, I9 |= 0, g8 |= 0, C6 |= 0, B6 |= 0, D4 = Q6 = (i6 = D4) - 192 & -64, o4[Q6 + 64 >> 2] = 67108863 & (a4[0 | B6] | a4[B6 + 1 | 0] << 8 | a4[B6 + 2 | 0] << 16 | a4[B6 + 3 | 0] << 24), o4[Q6 + 68 >> 2] = (a4[B6 + 3 | 0] | a4[B6 + 4 | 0] << 8 | a4[B6 + 5 | 0] << 16 | a4[B6 + 6 | 0] << 24) >>> 2 & 67108611, o4[Q6 + 72 >> 2] = (a4[B6 + 6 | 0] | a4[B6 + 7 | 0] << 8 | a4[B6 + 8 | 0] << 16 | a4[B6 + 9 | 0] << 24) >>> 4 & 67092735, o4[Q6 + 76 >> 2] = (a4[B6 + 9 | 0] | a4[B6 + 10 | 0] << 8 | a4[B6 + 11 | 0] << 16 | a4[B6 + 12 | 0] << 24) >>> 6 & 66076671, n5 = a4[B6 + 12 | 0] | a4[B6 + 13 | 0] << 8 | a4[B6 + 14 | 0] << 16 | a4[B6 + 15 | 0] << 24, o4[Q6 + 84 >> 2] = 0, o4[Q6 + 88 >> 2] = 0, o4[Q6 + 92 >> 2] = 0, o4[Q6 + 96 >> 2] = 0, o4[Q6 + 100 >> 2] = 0, o4[Q6 + 80 >> 2] = n5 >>> 8 & 1048575, o4[Q6 + 104 >> 2] = a4[B6 + 16 | 0] | a4[B6 + 17 | 0] << 8 | a4[B6 + 18 | 0] << 16 | a4[B6 + 19 | 0] << 24, o4[Q6 + 108 >> 2] = a4[B6 + 20 | 0] | a4[B6 + 21 | 0] << 8 | a4[B6 + 22 | 0] << 16 | a4[B6 + 23 | 0] << 24, o4[Q6 + 112 >> 2] = a4[B6 + 24 | 0] | a4[B6 + 25 | 0] << 8 | a4[B6 + 26 | 0] << 16 | a4[B6 + 27 | 0] << 24, B6 = a4[B6 + 28 | 0] | a4[B6 + 29 | 0] << 8 | a4[B6 + 30 | 0] << 16 | a4[B6 + 31 | 0] << 24, E5[Q6 + 144 | 0] = 0, o4[Q6 + 120 >> 2] = 0, o4[Q6 + 124 >> 2] = 0, o4[Q6 + 116 >> 2] = B6, x5(B6 = Q6 - -64 | 0, I9, g8, C6), O5(B6, I9 = Q6 + 48 | 0), A10 = Z4(A10, I9), D4 = i6, 0 | A10;
                    }, function(A10, I9) {
                      var g8;
                      return I9 |= 0, o4[(A10 |= 0) >> 2] = 67108863 & (a4[0 | I9] | a4[I9 + 1 | 0] << 8 | a4[I9 + 2 | 0] << 16 | a4[I9 + 3 | 0] << 24), o4[A10 + 4 >> 2] = (a4[I9 + 3 | 0] | a4[I9 + 4 | 0] << 8 | a4[I9 + 5 | 0] << 16 | a4[I9 + 6 | 0] << 24) >>> 2 & 67108611, o4[A10 + 8 >> 2] = (a4[I9 + 6 | 0] | a4[I9 + 7 | 0] << 8 | a4[I9 + 8 | 0] << 16 | a4[I9 + 9 | 0] << 24) >>> 4 & 67092735, o4[A10 + 12 >> 2] = (a4[I9 + 9 | 0] | a4[I9 + 10 | 0] << 8 | a4[I9 + 11 | 0] << 16 | a4[I9 + 12 | 0] << 24) >>> 6 & 66076671, g8 = a4[I9 + 12 | 0] | a4[I9 + 13 | 0] << 8 | a4[I9 + 14 | 0] << 16 | a4[I9 + 15 | 0] << 24, o4[A10 + 20 >> 2] = 0, o4[A10 + 24 >> 2] = 0, o4[A10 + 28 >> 2] = 0, o4[A10 + 32 >> 2] = 0, o4[A10 + 36 >> 2] = 0, o4[A10 + 16 >> 2] = g8 >>> 8 & 1048575, o4[A10 + 40 >> 2] = a4[I9 + 16 | 0] | a4[I9 + 17 | 0] << 8 | a4[I9 + 18 | 0] << 16 | a4[I9 + 19 | 0] << 24, o4[A10 + 44 >> 2] = a4[I9 + 20 | 0] | a4[I9 + 21 | 0] << 8 | a4[I9 + 22 | 0] << 16 | a4[I9 + 23 | 0] << 24, o4[A10 + 48 >> 2] = a4[I9 + 24 | 0] | a4[I9 + 25 | 0] << 8 | a4[I9 + 26 | 0] << 16 | a4[I9 + 27 | 0] << 24, I9 = a4[I9 + 28 | 0] | a4[I9 + 29 | 0] << 8 | a4[I9 + 30 | 0] << 16 | a4[I9 + 31 | 0] << 24, E5[A10 + 80 | 0] = 0, o4[A10 + 56 >> 2] = 0, o4[A10 + 60 >> 2] = 0, o4[A10 + 52 >> 2] = I9, 0;
                    }, function(A10, I9, g8, C6) {
                      return x5(A10 |= 0, I9 |= 0, g8 |= 0, C6 |= 0), 0;
                    }, function(A10, I9) {
                      return O5(A10 |= 0, I9 |= 0), 0;
                    }, function(A10, I9, g8) {
                      A10 |= 0, I9 |= 0, g8 |= 0;
                      var C6, B6 = 0, Q6 = 0, i6 = 0, n5 = 0, r4 = 0, f4 = 0, t5 = 0, e5 = 0, c5 = 0, y6 = 0, h5 = 0, s5 = 0, p6 = 0, u6 = 0, k6 = 0, l5 = 0, H6 = 0, M6 = 0, G6 = 0, U6 = 0, J6 = 0, N6 = 0, Y5 = 0, b6 = 0, _6 = 0, K6 = 0, v6 = 0, m5 = 0, d4 = 0, L6 = 0, R6 = 0, x6 = 0, j5 = 0, q5 = 0, z6 = 0, V6 = 0, O6 = 0, T6 = 0, Z5 = 0, $5 = 0, AA2 = 0, IA2 = 0, gA2 = 0, CA2 = 0, BA2 = 0, QA2 = 0, iA2 = 0, EA2 = 0, oA2 = 0, aA2 = 0, nA2 = 0, rA2 = 0, fA2 = 0, tA2 = 0, eA2 = 0, cA2 = 0, yA2 = 0, wA2 = 0, hA2 = 0, sA2 = 0, pA2 = 0, uA2 = 0, kA2 = 0, FA2 = 0, lA2 = 0;
                      for (D4 = C6 = D4 - 368 | 0; h5 = (i6 = a4[g8 + B6 | 0]) ^ a4[0 | (r4 = B6 + 33680 | 0)] | h5, c5 = i6 ^ a4[r4 + 192 | 0] | c5, y6 = i6 ^ a4[r4 + 160 | 0] | y6, e5 = i6 ^ a4[r4 + 128 | 0] | e5, n5 = i6 ^ a4[r4 + 96 | 0] | n5, f4 = i6 ^ a4[r4 - -64 | 0] | f4, Q6 = i6 ^ a4[r4 + 32 | 0] | Q6, 31 != (0 | (B6 = B6 + 1 | 0)); )
                        ;
                      if (B6 = -1, !(256 & ((255 & ((i6 = 127 ^ (r4 = 127 & a4[g8 + 31 | 0])) | c5)) - 1 | (255 & (i6 | y6)) - 1 | (255 & (i6 | e5)) - 1 | (255 & (87 ^ r4 | n5)) - 1 | (255 & (f4 | r4)) - 1 | (255 & (Q6 | r4)) - 1 | (255 & (r4 | h5)) - 1))) {
                        for (B6 = I9, I9 = a4[I9 + 28 | 0] | a4[I9 + 29 | 0] << 8 | a4[I9 + 30 | 0] << 16 | a4[I9 + 31 | 0] << 24, o4[C6 + 360 >> 2] = a4[B6 + 24 | 0] | a4[B6 + 25 | 0] << 8 | a4[B6 + 26 | 0] << 16 | a4[B6 + 27 | 0] << 24, o4[C6 + 364 >> 2] = I9, I9 = a4[B6 + 20 | 0] | a4[B6 + 21 | 0] << 8 | a4[B6 + 22 | 0] << 16 | a4[B6 + 23 | 0] << 24, o4[C6 + 352 >> 2] = a4[B6 + 16 | 0] | a4[B6 + 17 | 0] << 8 | a4[B6 + 18 | 0] << 16 | a4[B6 + 19 | 0] << 24, o4[C6 + 356 >> 2] = I9, Q6 = a4[B6 + 4 | 0] | a4[B6 + 5 | 0] << 8 | a4[B6 + 6 | 0] << 16 | a4[B6 + 7 | 0] << 24, I9 = a4[0 | B6] | a4[B6 + 1 | 0] << 8 | a4[B6 + 2 | 0] << 16 | a4[B6 + 3 | 0] << 24, o4[C6 + 336 >> 2] = I9, o4[C6 + 340 >> 2] = Q6, Q6 = a4[B6 + 12 | 0] | a4[B6 + 13 | 0] << 8 | a4[B6 + 14 | 0] << 16 | a4[B6 + 15 | 0] << 24, o4[C6 + 344 >> 2] = a4[B6 + 8 | 0] | a4[B6 + 9 | 0] << 8 | a4[B6 + 10 | 0] << 16 | a4[B6 + 11 | 0] << 24, o4[C6 + 348 >> 2] = Q6, E5[C6 + 336 | 0] = 248 & I9, E5[C6 + 367 | 0] = 63 & a4[C6 + 367 | 0] | 64, P5(C6 + 288 | 0, g8), o4[C6 + 260 >> 2] = 0, o4[C6 + 264 >> 2] = 0, o4[C6 + 268 >> 2] = 0, o4[C6 + 272 >> 2] = 0, o4[C6 + 276 >> 2] = 0, o4[C6 + 208 >> 2] = 0, o4[C6 + 212 >> 2] = 0, o4[C6 + 216 >> 2] = 0, o4[C6 + 220 >> 2] = 0, o4[C6 + 224 >> 2] = 0, o4[C6 + 228 >> 2] = 0, o4[C6 + 244 >> 2] = 0, o4[C6 + 248 >> 2] = 0, o4[C6 + 240 >> 2] = 1, o4[C6 + 252 >> 2] = 0, o4[C6 + 256 >> 2] = 0, o4[C6 + 192 >> 2] = 0, o4[C6 + 196 >> 2] = 0, o4[C6 + 200 >> 2] = 0, o4[C6 + 204 >> 2] = 0, I9 = o4[C6 + 316 >> 2], o4[C6 + 168 >> 2] = o4[C6 + 312 >> 2], o4[C6 + 172 >> 2] = I9, I9 = o4[C6 + 308 >> 2], o4[C6 + 160 >> 2] = o4[C6 + 304 >> 2], o4[C6 + 164 >> 2] = I9, I9 = o4[C6 + 300 >> 2], o4[C6 + 152 >> 2] = o4[C6 + 296 >> 2], o4[C6 + 156 >> 2] = I9, I9 = o4[C6 + 292 >> 2], o4[C6 + 144 >> 2] = o4[C6 + 288 >> 2], o4[C6 + 148 >> 2] = I9, I9 = o4[C6 + 324 >> 2], o4[C6 + 176 >> 2] = o4[C6 + 320 >> 2], o4[C6 + 180 >> 2] = I9, o4[C6 + 116 >> 2] = 0, o4[C6 + 120 >> 2] = 0, o4[C6 + 124 >> 2] = 0, o4[C6 + 128 >> 2] = 0, o4[C6 + 132 >> 2] = 0, o4[C6 + 100 >> 2] = 0, o4[C6 + 104 >> 2] = 0, o4[C6 + 96 >> 2] = 1, o4[C6 + 108 >> 2] = 0, o4[C6 + 112 >> 2] = 0, g8 = 254; Z5 = o4[C6 + 276 >> 2], i6 = o4[C6 + 180 >> 2], $5 = o4[C6 + 96 >> 2], AA2 = o4[C6 + 192 >> 2], IA2 = o4[C6 + 144 >> 2], gA2 = o4[C6 + 240 >> 2], CA2 = o4[C6 + 100 >> 2], BA2 = o4[C6 + 196 >> 2], QA2 = o4[C6 + 148 >> 2], iA2 = o4[C6 + 244 >> 2], J6 = o4[C6 + 104 >> 2], EA2 = o4[C6 + 200 >> 2], N6 = o4[C6 + 152 >> 2], oA2 = o4[C6 + 248 >> 2], K6 = o4[C6 + 108 >> 2], aA2 = o4[C6 + 204 >> 2], Y5 = o4[C6 + 156 >> 2], nA2 = o4[C6 + 252 >> 2], b6 = o4[C6 + 112 >> 2], rA2 = o4[C6 + 208 >> 2], G6 = o4[C6 + 160 >> 2], fA2 = o4[C6 + 256 >> 2], h5 = o4[C6 + 116 >> 2], tA2 = o4[C6 + 212 >> 2], t5 = o4[C6 + 164 >> 2], eA2 = o4[C6 + 260 >> 2], c5 = o4[C6 + 120 >> 2], cA2 = o4[C6 + 216 >> 2], y6 = o4[C6 + 168 >> 2], yA2 = o4[C6 + 264 >> 2], e5 = o4[C6 + 124 >> 2], wA2 = o4[C6 + 220 >> 2], n5 = o4[C6 + 172 >> 2], hA2 = o4[C6 + 268 >> 2], f4 = o4[C6 + 128 >> 2], sA2 = o4[C6 + 224 >> 2], Q6 = o4[C6 + 176 >> 2], pA2 = o4[C6 + 272 >> 2], uA2 = g8, U6 = (H6 = (I9 = 0 - ((I9 = T6) ^ (T6 = a4[C6 + 336 + (g8 >>> 3) | 0] >>> (7 & g8) & 1)) | 0) & ((B6 = o4[C6 + 132 >> 2]) ^ (q5 = o4[C6 + 228 >> 2]))) ^ B6, o4[C6 + 132 >> 2] = U6, z6 = i6 ^ (p6 = I9 & (i6 ^ Z5)), o4[C6 + 84 >> 2] = z6 - U6, _6 = f4 ^ (u6 = I9 & (f4 ^ sA2)), o4[C6 + 128 >> 2] = _6, V6 = (M6 = I9 & (Q6 ^ pA2)) ^ Q6, o4[C6 + 80 >> 2] = V6 - _6, m5 = e5 ^ (k6 = I9 & (e5 ^ wA2)), o4[C6 + 124 >> 2] = m5, kA2 = n5 ^ (l5 = I9 & (n5 ^ hA2)), o4[C6 + 76 >> 2] = kA2 - m5, d4 = c5 ^ (s5 = I9 & (c5 ^ cA2)), o4[C6 + 120 >> 2] = d4, FA2 = y6 ^ (r4 = I9 & (y6 ^ yA2)), o4[C6 + 72 >> 2] = FA2 - d4, L6 = h5 ^ (i6 = I9 & (h5 ^ tA2)), o4[C6 + 116 >> 2] = L6, lA2 = t5 ^ (h5 = I9 & (t5 ^ eA2)), o4[C6 + 68 >> 2] = lA2 - L6, R6 = b6 ^ (c5 = I9 & (b6 ^ rA2)), o4[C6 + 112 >> 2] = R6, v6 = G6 ^ (y6 = I9 & (G6 ^ fA2)), o4[C6 + 64 >> 2] = v6 - R6, x6 = K6 ^ (e5 = I9 & (K6 ^ aA2)), o4[C6 + 108 >> 2] = x6, O6 = Y5 ^ (n5 = I9 & (Y5 ^ nA2)), o4[C6 + 60 >> 2] = O6 - x6, j5 = J6 ^ (f4 = I9 & (J6 ^ EA2)), o4[C6 + 104 >> 2] = j5, K6 = N6 ^ (Q6 = I9 & (N6 ^ oA2)), o4[C6 + 56 >> 2] = K6 - j5, J6 = CA2 ^ (B6 = I9 & (CA2 ^ BA2)), o4[C6 + 100 >> 2] = J6, Y5 = QA2 ^ (g8 = I9 & (QA2 ^ iA2)), o4[C6 + 52 >> 2] = Y5 - J6, N6 = $5 ^ (b6 = I9 & ($5 ^ AA2)), o4[C6 + 96 >> 2] = N6, G6 = (I9 &= IA2 ^ gA2) ^ IA2, o4[C6 + 48 >> 2] = G6 - N6, t5 = p6 ^ Z5, H6 ^= q5, o4[C6 + 36 >> 2] = t5 - H6, p6 = M6 ^ pA2, u6 ^= sA2, o4[C6 + 32 >> 2] = p6 - u6, M6 = l5 ^ hA2, k6 ^= wA2, o4[C6 + 28 >> 2] = M6 - k6, l5 = r4 ^ yA2, s5 ^= cA2, o4[C6 + 24 >> 2] = l5 - s5, r4 = h5 ^ eA2, i6 ^= tA2, o4[C6 + 20 >> 2] = r4 - i6, h5 = y6 ^ fA2, c5 ^= rA2, o4[C6 + 16 >> 2] = h5 - c5, y6 = n5 ^ nA2, e5 ^= aA2, o4[C6 + 12 >> 2] = y6 - e5, n5 = Q6 ^ oA2, f4 ^= EA2, o4[C6 + 8 >> 2] = n5 - f4, Q6 = g8 ^ iA2, B6 ^= BA2, o4[C6 + 4 >> 2] = Q6 - B6, g8 = I9 ^ gA2, I9 = b6 ^ AA2, o4[C6 >> 2] = g8 - I9, o4[C6 + 276 >> 2] = t5 + H6, o4[C6 + 272 >> 2] = p6 + u6, o4[C6 + 268 >> 2] = k6 + M6, o4[C6 + 264 >> 2] = s5 + l5, o4[C6 + 260 >> 2] = i6 + r4, o4[C6 + 256 >> 2] = c5 + h5, o4[C6 + 248 >> 2] = n5 + f4, o4[C6 + 244 >> 2] = B6 + Q6, o4[C6 + 240 >> 2] = I9 + g8, o4[C6 + 252 >> 2] = e5 + y6, o4[C6 + 228 >> 2] = U6 + z6, o4[C6 + 224 >> 2] = _6 + V6, o4[C6 + 220 >> 2] = m5 + kA2, o4[C6 + 216 >> 2] = d4 + FA2, o4[C6 + 212 >> 2] = L6 + lA2, o4[C6 + 208 >> 2] = v6 + R6, o4[C6 + 204 >> 2] = x6 + O6, o4[C6 + 200 >> 2] = K6 + j5, o4[C6 + 196 >> 2] = J6 + Y5, o4[C6 + 192 >> 2] = G6 + N6, F5(z6 = C6 + 96 | 0, _6 = C6 + 48 | 0, G6 = C6 + 240 | 0), F5(U6 = C6 + 192 | 0, U6, C6), S5(_6, C6), S5(C6, G6), t5 = o4[C6 + 192 >> 2], H6 = o4[C6 + 96 >> 2], p6 = o4[C6 + 196 >> 2], u6 = o4[C6 + 100 >> 2], M6 = o4[C6 + 200 >> 2], k6 = o4[C6 + 104 >> 2], l5 = o4[C6 + 204 >> 2], s5 = o4[C6 + 108 >> 2], r4 = o4[C6 + 208 >> 2], i6 = o4[C6 + 112 >> 2], h5 = o4[C6 + 212 >> 2], c5 = o4[C6 + 116 >> 2], y6 = o4[C6 + 216 >> 2], e5 = o4[C6 + 120 >> 2], n5 = o4[C6 + 220 >> 2], f4 = o4[C6 + 124 >> 2], Q6 = o4[C6 + 224 >> 2], B6 = o4[C6 + 128 >> 2], g8 = o4[C6 + 228 >> 2], I9 = o4[C6 + 132 >> 2], o4[C6 + 180 >> 2] = g8 + I9, o4[C6 + 176 >> 2] = B6 + Q6, o4[C6 + 172 >> 2] = n5 + f4, o4[C6 + 168 >> 2] = e5 + y6, o4[C6 + 164 >> 2] = c5 + h5, o4[C6 + 160 >> 2] = i6 + r4, o4[C6 + 156 >> 2] = s5 + l5, o4[C6 + 152 >> 2] = k6 + M6, o4[C6 + 148 >> 2] = p6 + u6, o4[C6 + 144 >> 2] = t5 + H6, o4[C6 + 228 >> 2] = I9 - g8, o4[C6 + 224 >> 2] = B6 - Q6, o4[C6 + 220 >> 2] = f4 - n5, o4[C6 + 216 >> 2] = e5 - y6, o4[C6 + 212 >> 2] = c5 - h5, o4[C6 + 208 >> 2] = i6 - r4, o4[C6 + 204 >> 2] = s5 - l5, o4[C6 + 200 >> 2] = k6 - M6, o4[C6 + 196 >> 2] = u6 - p6, o4[C6 + 192 >> 2] = H6 - t5, F5(G6, C6, _6), m5 = o4[C6 + 52 >> 2], s5 = o4[C6 + 4 >> 2], d4 = o4[C6 + 56 >> 2], r4 = o4[C6 + 8 >> 2], L6 = o4[C6 + 64 >> 2], i6 = o4[C6 + 16 >> 2], R6 = o4[C6 + 60 >> 2], e5 = o4[C6 + 12 >> 2], x6 = o4[C6 + 72 >> 2], n5 = o4[C6 + 24 >> 2], j5 = o4[C6 + 68 >> 2], f4 = o4[C6 + 20 >> 2], J6 = o4[C6 + 80 >> 2], B6 = o4[C6 + 32 >> 2], N6 = o4[C6 + 76 >> 2], g8 = o4[C6 + 28 >> 2], q5 = o4[C6 + 84 >> 2], I9 = o4[C6 + 36 >> 2], V6 = o4[C6 + 48 >> 2], Q6 = o4[C6 >> 2] - V6 | 0, o4[C6 >> 2] = Q6, I9 = I9 - q5 | 0, o4[C6 + 36 >> 2] = I9, b6 = g8 - N6 | 0, o4[C6 + 28 >> 2] = b6, G6 = B6 - J6 | 0, o4[C6 + 32 >> 2] = G6, h5 = f4 - j5 | 0, o4[C6 + 20 >> 2] = h5, c5 = n5 - x6 | 0, o4[C6 + 24 >> 2] = c5, y6 = e5 - R6 | 0, o4[C6 + 12 >> 2] = y6, e5 = i6 - L6 | 0, o4[C6 + 16 >> 2] = e5, n5 = r4 - d4 | 0, o4[C6 + 8 >> 2] = n5, B6 = s5 - m5 | 0, o4[C6 + 4 >> 2] = B6, S5(U6, U6), I9 = DA(I9, I9 >> 31, 121666, 0), g8 = w4, O6 = I9, I9 = DA((33554431 & (g8 = (t5 = I9 + 16777216 | 0) >>> 0 < 16777216 ? g8 + 1 | 0 : g8)) << 7 | t5 >>> 25, g8 >> 25, 19, 0), f4 = w4, g8 = I9, I9 = DA(Q6, Q6 >> 31, 121666, 0), v6 = w4 + f4 | 0, I9 = I9 >>> 0 > (g8 = g8 + I9 | 0) >>> 0 ? v6 + 1 | 0 : v6, I9 = (f4 = g8 + 33554432 | 0) >>> 0 < 33554432 ? I9 + 1 | 0 : I9, H6 = g8 - (-67108864 & f4) | 0, o4[C6 + 96 >> 2] = H6, Q6 = DA(B6, B6 >> 31, 121666, 0), g8 = w4, g8 = (B6 = Q6 + 16777216 | 0) >>> 0 < 16777216 ? g8 + 1 | 0 : g8, p6 = (I9 = (67108863 & I9) << 6 | f4 >>> 26) + (Q6 - (-33554432 & B6) | 0) | 0, o4[C6 + 100 >> 2] = p6, v6 = g8 >> 25, B6 = (33554431 & g8) << 7 | B6 >>> 25, g8 = DA(n5, n5 >> 31, 121666, 0) + B6 | 0, I9 = v6 + w4 | 0, I9 = g8 >>> 0 < B6 >>> 0 ? I9 + 1 | 0 : I9, f4 = (u6 = g8 + 33554432 | 0) >>> 0 < 33554432 ? I9 + 1 | 0 : I9, M6 = g8 - (-67108864 & u6) | 0, o4[C6 + 104 >> 2] = M6, B6 = DA(e5, e5 >> 31, 121666, 0), Q6 = w4, g8 = DA(y6, y6 >> 31, 121666, 0), I9 = w4, Y5 = B6, K6 = g8, B6 = (33554431 & (I9 = (k6 = g8 + 16777216 | 0) >>> 0 < 16777216 ? I9 + 1 | 0 : I9)) << 7 | k6 >>> 25, I9 = (I9 >> 25) + Q6 | 0, I9 = (g8 = Y5 + B6 | 0) >>> 0 < B6 >>> 0 ? I9 + 1 | 0 : I9, Q6 = (l5 = g8 + 33554432 | 0) >>> 0 < 33554432 ? I9 + 1 | 0 : I9, s5 = g8 - (-67108864 & l5) | 0, o4[C6 + 112 >> 2] = s5, B6 = DA(c5, c5 >> 31, 121666, 0), n5 = w4, g8 = DA(h5, h5 >> 31, 121666, 0), I9 = w4, Y5 = g8, g8 = (33554431 & (I9 = (r4 = g8 + 16777216 | 0) >>> 0 < 16777216 ? I9 + 1 | 0 : I9)) << 7 | r4 >>> 25, I9 = (I9 >> 25) + n5 | 0, I9 = g8 >>> 0 > (B6 = g8 + B6 | 0) >>> 0 ? I9 + 1 | 0 : I9, g8 = (i6 = B6 + 33554432 | 0) >>> 0 < 33554432 ? I9 + 1 | 0 : I9, h5 = B6 - (-67108864 & i6) | 0, o4[C6 + 120 >> 2] = h5, n5 = DA(G6, G6 >> 31, 121666, 0), e5 = w4, B6 = DA(b6, b6 >> 31, 121666, 0), I9 = w4, G6 = B6, B6 = (33554431 & (I9 = (c5 = B6 + 16777216 | 0) >>> 0 < 16777216 ? I9 + 1 | 0 : I9)) << 7 | c5 >>> 25, I9 = (I9 >> 25) + e5 | 0, I9 = B6 >>> 0 > (n5 = B6 + n5 | 0) >>> 0 ? I9 + 1 | 0 : I9, B6 = (y6 = n5 + 33554432 | 0) >>> 0 < 33554432 ? I9 + 1 | 0 : I9, e5 = n5 - (-67108864 & y6) | 0, o4[C6 + 128 >> 2] = e5, n5 = (f4 = K6 + ((67108863 & f4) << 6 | u6 >>> 26) | 0) - (-33554432 & k6) | 0, o4[C6 + 108 >> 2] = n5, f4 = (Q6 = Y5 + ((67108863 & Q6) << 6 | l5 >>> 26) | 0) - (-33554432 & r4) | 0, o4[C6 + 116 >> 2] = f4, Q6 = (I9 = G6 + ((67108863 & g8) << 6 | i6 >>> 26) | 0) - (-33554432 & c5) | 0, o4[C6 + 124 >> 2] = Q6, g8 = (B6 = O6 + ((67108863 & B6) << 6 | y6 >>> 26) | 0) - (-33554432 & t5) | 0, o4[C6 + 132 >> 2] = g8, S5(I9 = C6 + 144 | 0, I9), o4[C6 + 84 >> 2] = g8 + q5, o4[C6 + 80 >> 2] = e5 + J6, o4[C6 + 76 >> 2] = Q6 + N6, o4[C6 + 72 >> 2] = h5 + x6, o4[C6 + 68 >> 2] = f4 + j5, o4[C6 + 64 >> 2] = s5 + L6, o4[C6 + 60 >> 2] = n5 + R6, o4[C6 + 56 >> 2] = M6 + d4, o4[C6 + 52 >> 2] = p6 + m5, o4[C6 + 48 >> 2] = H6 + V6, g8 = uA2 - 1 | 0, F5(z6, C6 + 288 | 0, U6), F5(U6, C6, _6), uA2; )
                          ;
                        h5 = o4[C6 + 144 >> 2], H6 = o4[C6 + 240 >> 2], c5 = o4[C6 + 148 >> 2], p6 = o4[C6 + 244 >> 2], y6 = o4[C6 + 152 >> 2], u6 = o4[C6 + 248 >> 2], e5 = o4[C6 + 156 >> 2], M6 = o4[C6 + 252 >> 2], n5 = o4[C6 + 160 >> 2], k6 = o4[C6 + 256 >> 2], f4 = o4[C6 + 164 >> 2], l5 = o4[C6 + 260 >> 2], Q6 = o4[C6 + 168 >> 2], s5 = o4[C6 + 264 >> 2], B6 = o4[C6 + 172 >> 2], r4 = o4[C6 + 268 >> 2], g8 = o4[C6 + 176 >> 2], i6 = o4[C6 + 272 >> 2], t5 = 0 - T6 | 0, I9 = o4[C6 + 276 >> 2], o4[C6 + 276 >> 2] = t5 & (I9 ^ o4[C6 + 180 >> 2]) ^ I9, o4[C6 + 272 >> 2] = i6 ^ t5 & (g8 ^ i6), o4[C6 + 268 >> 2] = r4 ^ t5 & (B6 ^ r4), o4[C6 + 264 >> 2] = s5 ^ t5 & (Q6 ^ s5), o4[C6 + 260 >> 2] = l5 ^ t5 & (f4 ^ l5), o4[C6 + 256 >> 2] = k6 ^ t5 & (n5 ^ k6), o4[C6 + 252 >> 2] = M6 ^ t5 & (e5 ^ M6), o4[C6 + 248 >> 2] = u6 ^ t5 & (y6 ^ u6), o4[C6 + 244 >> 2] = p6 ^ t5 & (c5 ^ p6), o4[C6 + 240 >> 2] = H6 ^ t5 & (h5 ^ H6), H6 = o4[C6 + 192 >> 2], h5 = o4[C6 + 96 >> 2], p6 = o4[C6 + 196 >> 2], c5 = o4[C6 + 100 >> 2], u6 = o4[C6 + 200 >> 2], y6 = o4[C6 + 104 >> 2], M6 = o4[C6 + 204 >> 2], e5 = o4[C6 + 108 >> 2], k6 = o4[C6 + 208 >> 2], n5 = o4[C6 + 112 >> 2], l5 = o4[C6 + 212 >> 2], f4 = o4[C6 + 116 >> 2], s5 = o4[C6 + 216 >> 2], Q6 = o4[C6 + 120 >> 2], r4 = o4[C6 + 220 >> 2], B6 = o4[C6 + 124 >> 2], i6 = o4[C6 + 224 >> 2], g8 = o4[C6 + 128 >> 2], I9 = o4[C6 + 228 >> 2], o4[C6 + 228 >> 2] = t5 & (I9 ^ o4[C6 + 132 >> 2]) ^ I9, o4[C6 + 224 >> 2] = i6 ^ t5 & (g8 ^ i6), o4[C6 + 220 >> 2] = r4 ^ t5 & (B6 ^ r4), o4[C6 + 216 >> 2] = s5 ^ t5 & (Q6 ^ s5), o4[C6 + 212 >> 2] = l5 ^ t5 & (f4 ^ l5), o4[C6 + 208 >> 2] = k6 ^ t5 & (n5 ^ k6), o4[C6 + 204 >> 2] = M6 ^ t5 & (e5 ^ M6), o4[C6 + 200 >> 2] = u6 ^ t5 & (y6 ^ u6), o4[C6 + 196 >> 2] = p6 ^ t5 & (c5 ^ p6), o4[C6 + 192 >> 2] = H6 ^ t5 & (h5 ^ H6), X5(g8 = C6 + 192 | 0, g8), F5(I9 = C6 + 240 | 0, I9, g8), W5(A10, I9), $A(C6 + 336 | 0, 32), B6 = 0;
                      }
                      return D4 = C6 + 368 | 0, 0 | B6;
                    }, function(A10, I9) {
                      var g8, C6, B6, Q6, i6, n5, r4, f4, t5, e5, c5, y6, w5, h5, s5, p6, u6, k6, l5, S6;
                      return I9 |= 0, D4 = g8 = D4 - 304 | 0, E5[0 | (A10 |= 0)] = a4[0 | I9], E5[A10 + 1 | 0] = a4[I9 + 1 | 0], E5[A10 + 2 | 0] = a4[I9 + 2 | 0], E5[A10 + 3 | 0] = a4[I9 + 3 | 0], E5[A10 + 4 | 0] = a4[I9 + 4 | 0], E5[A10 + 5 | 0] = a4[I9 + 5 | 0], E5[A10 + 6 | 0] = a4[I9 + 6 | 0], E5[A10 + 7 | 0] = a4[I9 + 7 | 0], E5[A10 + 8 | 0] = a4[I9 + 8 | 0], E5[A10 + 9 | 0] = a4[I9 + 9 | 0], E5[A10 + 10 | 0] = a4[I9 + 10 | 0], E5[A10 + 11 | 0] = a4[I9 + 11 | 0], E5[A10 + 12 | 0] = a4[I9 + 12 | 0], E5[A10 + 13 | 0] = a4[I9 + 13 | 0], E5[A10 + 14 | 0] = a4[I9 + 14 | 0], E5[A10 + 15 | 0] = a4[I9 + 15 | 0], E5[A10 + 16 | 0] = a4[I9 + 16 | 0], E5[A10 + 17 | 0] = a4[I9 + 17 | 0], E5[A10 + 18 | 0] = a4[I9 + 18 | 0], E5[A10 + 19 | 0] = a4[I9 + 19 | 0], E5[A10 + 20 | 0] = a4[I9 + 20 | 0], E5[A10 + 21 | 0] = a4[I9 + 21 | 0], E5[A10 + 22 | 0] = a4[I9 + 22 | 0], E5[A10 + 23 | 0] = a4[I9 + 23 | 0], E5[A10 + 24 | 0] = a4[I9 + 24 | 0], E5[A10 + 25 | 0] = a4[I9 + 25 | 0], E5[A10 + 26 | 0] = a4[I9 + 26 | 0], E5[A10 + 27 | 0] = a4[I9 + 27 | 0], E5[A10 + 28 | 0] = a4[I9 + 28 | 0], E5[A10 + 29 | 0] = a4[I9 + 29 | 0], E5[A10 + 30 | 0] = a4[I9 + 30 | 0], I9 = a4[I9 + 31 | 0], E5[0 | A10] = 248 & a4[0 | A10], E5[A10 + 31 | 0] = 63 & I9 | 64, v5(g8 + 48 | 0, A10), I9 = o4[g8 + 132 >> 2], C6 = o4[g8 + 92 >> 2], B6 = o4[g8 + 136 >> 2], Q6 = o4[g8 + 96 >> 2], i6 = o4[g8 + 140 >> 2], n5 = o4[g8 + 100 >> 2], r4 = o4[g8 + 144 >> 2], f4 = o4[g8 + 104 >> 2], t5 = o4[g8 + 148 >> 2], e5 = o4[g8 + 108 >> 2], c5 = o4[g8 + 152 >> 2], y6 = o4[g8 + 112 >> 2], w5 = o4[g8 + 156 >> 2], h5 = o4[g8 + 116 >> 2], s5 = o4[g8 + 160 >> 2], p6 = o4[g8 + 120 >> 2], u6 = o4[g8 + 128 >> 2], k6 = o4[g8 + 88 >> 2], l5 = o4[g8 + 124 >> 2], S6 = o4[g8 + 164 >> 2], o4[g8 + 292 >> 2] = l5 + S6, o4[g8 + 288 >> 2] = s5 + p6, o4[g8 + 284 >> 2] = w5 + h5, o4[g8 + 280 >> 2] = c5 + y6, o4[g8 + 276 >> 2] = t5 + e5, o4[g8 + 272 >> 2] = r4 + f4, o4[g8 + 268 >> 2] = i6 + n5, o4[g8 + 264 >> 2] = B6 + Q6, o4[g8 + 260 >> 2] = I9 + C6, o4[g8 + 256 >> 2] = u6 + k6, o4[g8 + 244 >> 2] = S6 - l5, o4[g8 + 240 >> 2] = s5 - p6, o4[g8 + 236 >> 2] = w5 - h5, o4[g8 + 232 >> 2] = c5 - y6, o4[g8 + 228 >> 2] = t5 - e5, o4[g8 + 224 >> 2] = r4 - f4, o4[g8 + 220 >> 2] = i6 - n5, o4[g8 + 216 >> 2] = B6 - Q6, o4[g8 + 212 >> 2] = I9 - C6, o4[g8 + 208 >> 2] = u6 - k6, X5(I9 = g8 + 208 | 0, I9), F5(g8, g8 + 256 | 0, I9), W5(A10, g8), D4 = g8 + 304 | 0, 0;
                    }, function(A10, I9, g8, C6, B6) {
                      A10 |= 0, C6 |= 0, B6 |= 0;
                      var Q6, i6 = 0, n5 = 0, r4 = 0, f4 = 0;
                      if (D4 = Q6 = D4 - 112 | 0, (I9 |= 0) | (g8 |= 0)) {
                        i6 = a4[B6 + 28 | 0] | a4[B6 + 29 | 0] << 8 | a4[B6 + 30 | 0] << 16 | a4[B6 + 31 | 0] << 24, o4[Q6 + 24 >> 2] = a4[B6 + 24 | 0] | a4[B6 + 25 | 0] << 8 | a4[B6 + 26 | 0] << 16 | a4[B6 + 27 | 0] << 24, o4[Q6 + 28 >> 2] = i6, i6 = a4[B6 + 20 | 0] | a4[B6 + 21 | 0] << 8 | a4[B6 + 22 | 0] << 16 | a4[B6 + 23 | 0] << 24, o4[Q6 + 16 >> 2] = a4[B6 + 16 | 0] | a4[B6 + 17 | 0] << 8 | a4[B6 + 18 | 0] << 16 | a4[B6 + 19 | 0] << 24, o4[Q6 + 20 >> 2] = i6, i6 = a4[B6 + 4 | 0] | a4[B6 + 5 | 0] << 8 | a4[B6 + 6 | 0] << 16 | a4[B6 + 7 | 0] << 24, o4[Q6 >> 2] = a4[0 | B6] | a4[B6 + 1 | 0] << 8 | a4[B6 + 2 | 0] << 16 | a4[B6 + 3 | 0] << 24, o4[Q6 + 4 >> 2] = i6, i6 = a4[B6 + 12 | 0] | a4[B6 + 13 | 0] << 8 | a4[B6 + 14 | 0] << 16 | a4[B6 + 15 | 0] << 24, o4[Q6 + 8 >> 2] = a4[B6 + 8 | 0] | a4[B6 + 9 | 0] << 8 | a4[B6 + 10 | 0] << 16 | a4[B6 + 11 | 0] << 24, o4[Q6 + 12 >> 2] = i6, B6 = a4[0 | C6] | a4[C6 + 1 | 0] << 8 | a4[C6 + 2 | 0] << 16 | a4[C6 + 3 | 0] << 24, C6 = a4[C6 + 4 | 0] | a4[C6 + 5 | 0] << 8 | a4[C6 + 6 | 0] << 16 | a4[C6 + 7 | 0] << 24, o4[Q6 + 104 >> 2] = 0, o4[Q6 + 108 >> 2] = 0, o4[Q6 + 96 >> 2] = B6, o4[Q6 + 100 >> 2] = C6;
                        A: {
                          if (!g8 & I9 >>> 0 >= 64 | g8) {
                            for (; J5(A10, Q6 + 96 | 0, Q6), C6 = a4[Q6 + 104 | 0] + 1 | 0, E5[Q6 + 104 | 0] = C6, C6 = a4[Q6 + 105 | 0] + (C6 >>> 8 | 0) | 0, E5[Q6 + 105 | 0] = C6, C6 = a4[Q6 + 106 | 0] + (C6 >>> 8 | 0) | 0, E5[Q6 + 106 | 0] = C6, C6 = a4[Q6 + 107 | 0] + (C6 >>> 8 | 0) | 0, E5[Q6 + 107 | 0] = C6, C6 = a4[Q6 + 108 | 0] + (C6 >>> 8 | 0) | 0, E5[Q6 + 108 | 0] = C6, C6 = a4[Q6 + 109 | 0] + (C6 >>> 8 | 0) | 0, E5[Q6 + 109 | 0] = C6, C6 = a4[Q6 + 110 | 0] + (C6 >>> 8 | 0) | 0, E5[Q6 + 110 | 0] = C6, E5[Q6 + 111 | 0] = a4[Q6 + 111 | 0] + (C6 >>> 8 | 0), A10 = A10 - -64 | 0, g8 = g8 - 1 | 0, !(g8 = (I9 = I9 + -64 | 0) >>> 0 < 4294967232 ? g8 + 1 | 0 : g8) & I9 >>> 0 > 63 | g8; )
                              ;
                            if (!(I9 | g8))
                              break A;
                          }
                          if (C6 = 0, J5(Q6 + 32 | 0, Q6 + 96 | 0, Q6), g8 = 3 & I9, B6 = 0, I9 - 1 >>> 0 >= 3)
                            for (i6 = -4 & I9, I9 = 0; n5 = r4 = Q6 + 32 | 0, E5[A10 + B6 | 0] = a4[n5 + B6 | 0], E5[(f4 = 1 | B6) + A10 | 0] = a4[n5 + f4 | 0], E5[(n5 = 2 | B6) + A10 | 0] = a4[n5 + r4 | 0], E5[(n5 = 3 | B6) + A10 | 0] = a4[n5 + (Q6 + 32 | 0) | 0], B6 = B6 + 4 | 0, (0 | i6) != (0 | (I9 = I9 + 4 | 0)); )
                              ;
                          if (g8)
                            for (; E5[A10 + B6 | 0] = a4[(Q6 + 32 | 0) + B6 | 0], B6 = B6 + 1 | 0, (0 | g8) != (0 | (C6 = C6 + 1 | 0)); )
                              ;
                        }
                        $A(Q6 + 32 | 0, 64), $A(Q6, 32);
                      }
                      return D4 = Q6 + 112 | 0, 0;
                    }, function(A10, I9, g8, C6, B6, Q6, i6, n5) {
                      A10 |= 0, I9 |= 0, B6 |= 0, Q6 |= 0, i6 |= 0, n5 |= 0;
                      var r4, f4 = 0;
                      if (D4 = r4 = D4 - 112 | 0, (g8 |= 0) | (C6 |= 0)) {
                        f4 = a4[n5 + 28 | 0] | a4[n5 + 29 | 0] << 8 | a4[n5 + 30 | 0] << 16 | a4[n5 + 31 | 0] << 24, o4[r4 + 24 >> 2] = a4[n5 + 24 | 0] | a4[n5 + 25 | 0] << 8 | a4[n5 + 26 | 0] << 16 | a4[n5 + 27 | 0] << 24, o4[r4 + 28 >> 2] = f4, f4 = a4[n5 + 20 | 0] | a4[n5 + 21 | 0] << 8 | a4[n5 + 22 | 0] << 16 | a4[n5 + 23 | 0] << 24, o4[r4 + 16 >> 2] = a4[n5 + 16 | 0] | a4[n5 + 17 | 0] << 8 | a4[n5 + 18 | 0] << 16 | a4[n5 + 19 | 0] << 24, o4[r4 + 20 >> 2] = f4, f4 = a4[n5 + 4 | 0] | a4[n5 + 5 | 0] << 8 | a4[n5 + 6 | 0] << 16 | a4[n5 + 7 | 0] << 24, o4[r4 >> 2] = a4[0 | n5] | a4[n5 + 1 | 0] << 8 | a4[n5 + 2 | 0] << 16 | a4[n5 + 3 | 0] << 24, o4[r4 + 4 >> 2] = f4, f4 = a4[n5 + 12 | 0] | a4[n5 + 13 | 0] << 8 | a4[n5 + 14 | 0] << 16 | a4[n5 + 15 | 0] << 24, o4[r4 + 8 >> 2] = a4[n5 + 8 | 0] | a4[n5 + 9 | 0] << 8 | a4[n5 + 10 | 0] << 16 | a4[n5 + 11 | 0] << 24, o4[r4 + 12 >> 2] = f4, n5 = a4[B6 + 4 | 0] | a4[B6 + 5 | 0] << 8 | a4[B6 + 6 | 0] << 16 | a4[B6 + 7 | 0] << 24, o4[r4 + 96 >> 2] = a4[0 | B6] | a4[B6 + 1 | 0] << 8 | a4[B6 + 2 | 0] << 16 | a4[B6 + 3 | 0] << 24, o4[r4 + 100 >> 2] = n5, E5[r4 + 104 | 0] = Q6, E5[r4 + 111 | 0] = i6 >>> 24, E5[r4 + 110 | 0] = i6 >>> 16, E5[r4 + 109 | 0] = i6 >>> 8, E5[r4 + 108 | 0] = i6, E5[r4 + 107 | 0] = (16777215 & i6) << 8 | Q6 >>> 24, E5[r4 + 106 | 0] = (65535 & i6) << 16 | Q6 >>> 16, E5[r4 + 105 | 0] = (255 & i6) << 24 | Q6 >>> 8;
                        A: {
                          if (!C6 & g8 >>> 0 >= 64 | C6) {
                            for (; ; ) {
                              for (n5 = 0, J5(r4 + 32 | 0, r4 + 96 | 0, r4); Q6 = r4 + 32 | 0, E5[A10 + n5 | 0] = a4[Q6 + n5 | 0] ^ a4[I9 + n5 | 0], E5[(B6 = 1 | n5) + A10 | 0] = a4[B6 + Q6 | 0] ^ a4[I9 + B6 | 0], 64 != (0 | (n5 = n5 + 2 | 0)); )
                                ;
                              if (B6 = a4[r4 + 104 | 0] + 1 | 0, E5[r4 + 104 | 0] = B6, B6 = a4[r4 + 105 | 0] + (B6 >>> 8 | 0) | 0, E5[r4 + 105 | 0] = B6, B6 = a4[r4 + 106 | 0] + (B6 >>> 8 | 0) | 0, E5[r4 + 106 | 0] = B6, B6 = a4[r4 + 107 | 0] + (B6 >>> 8 | 0) | 0, E5[r4 + 107 | 0] = B6, B6 = a4[r4 + 108 | 0] + (B6 >>> 8 | 0) | 0, E5[r4 + 108 | 0] = B6, B6 = a4[r4 + 109 | 0] + (B6 >>> 8 | 0) | 0, E5[r4 + 109 | 0] = B6, B6 = a4[r4 + 110 | 0] + (B6 >>> 8 | 0) | 0, E5[r4 + 110 | 0] = B6, E5[r4 + 111 | 0] = a4[r4 + 111 | 0] + (B6 >>> 8 | 0), I9 = I9 - -64 | 0, A10 = A10 - -64 | 0, C6 = C6 - 1 | 0, !(!(C6 = (g8 = g8 + -64 | 0) >>> 0 < 4294967232 ? C6 + 1 | 0 : C6) & g8 >>> 0 > 63 | C6))
                                break;
                            }
                            if (!(g8 | C6))
                              break A;
                          }
                          if (n5 = 0, J5(r4 + 32 | 0, r4 + 96 | 0, r4), C6 = 1 & g8, 1 != (0 | g8))
                            for (Q6 = -2 & g8, B6 = 0; i6 = r4 + 32 | 0, E5[A10 + n5 | 0] = a4[i6 + n5 | 0] ^ a4[I9 + n5 | 0], E5[(g8 = 1 | n5) + A10 | 0] = a4[g8 + i6 | 0] ^ a4[I9 + g8 | 0], n5 = n5 + 2 | 0, (0 | Q6) != (0 | (B6 = B6 + 2 | 0)); )
                              ;
                          C6 && (E5[A10 + n5 | 0] = a4[(r4 + 32 | 0) + n5 | 0] ^ a4[I9 + n5 | 0]);
                        }
                        $A(r4 + 32 | 0, 64), $A(r4, 32);
                      }
                      return D4 = r4 + 112 | 0, 0;
                    }], aI.grow = function(A10) {
                      var I9 = this.length;
                      return this.length = this.length + A10, I9;
                    }, aI.set = function(A10, I9) {
                      this[A10] = I9;
                    }, aI.get = function(A10) {
                      return this[A10];
                    }, aI);
                    function rI() {
                      return i5.byteLength / 65536 | 0;
                    }
                    return { f: function() {
                    }, g: function(A10, I9, g8, C6, B6, Q6, i6, E6, o5, a5, n5, r4) {
                      return 0 | eA(A10 |= 0, I9 |= 0, g8 |= 0, C6 |= 0, (A10 = 0) | (B6 |= 0), Q6 |= 0, i6 |= 0, A10 | (E6 |= 0), o5 |= 0, n5 |= 0, r4 |= 0);
                    }, h: function(A10, I9, g8, C6, B6, i6, E6, a5, n5, r4, f4) {
                      return A10 |= 0, I9 |= 0, n5 |= 0, n5 = C6 |= 0, !(C6 = B6 |= 0) & (B6 = 0 | n5) >>> 0 < 4294967280 ? (eA(A10, A10 + B6 | 0, 0, g8 |= 0, B6, C6, i6 |= 0, E6 |= 0, a5 |= 0, r4 |= 0, f4 |= 0), I9 && (C6 = (A10 = B6 + 16 | 0) >>> 0 < 16 ? C6 + 1 | 0 : C6, o4[I9 >> 2] = A10, o4[I9 + 4 >> 2] = C6)) : (mA(), Q5()), 0;
                    }, i: function(A10, I9, g8, C6, B6, Q6, i6, E6, o5, a5, n5, r4) {
                      return 0 | fA(A10 |= 0, I9 |= 0, g8 |= 0, C6 |= 0, (A10 = 0) | (B6 |= 0), Q6 |= 0, i6 |= 0, A10 | (E6 |= 0), o5 |= 0, n5 |= 0, r4 |= 0);
                    }, j: function(A10, I9, g8, C6, B6, i6, E6, a5, n5, r4, f4) {
                      return A10 |= 0, I9 |= 0, n5 |= 0, n5 = C6 |= 0, !(C6 = B6 |= 0) & (B6 = 0 | n5) >>> 0 < 4294967280 ? (fA(A10, A10 + B6 | 0, 0, g8 |= 0, B6, C6, i6 |= 0, E6 |= 0, a5 |= 0, r4 |= 0, f4 |= 0), I9 && (C6 = (A10 = B6 + 16 | 0) >>> 0 < 16 ? C6 + 1 | 0 : C6, o4[I9 >> 2] = A10, o4[I9 + 4 >> 2] = C6)) : (mA(), Q5()), 0;
                    }, k: function(A10, I9, g8, C6, B6, Q6, i6, E6, o5, a5, n5) {
                      return 0 | tA(A10 |= 0, g8 |= 0, (A10 = 0) | (C6 |= 0), B6 |= 0, Q6 |= 0, i6 |= 0, A10 | (E6 |= 0), o5 |= 0, a5 |= 0, n5 |= 0);
                    }, l: function(A10, I9, g8, C6, B6, Q6, i6, E6, a5, n5, r4) {
                      return I9 |= 0, g8 |= 0, C6 |= 0, B6 |= 0, E6 |= 0, E6 |= 0, g8 = -1, !(Q6 |= 0) & (B6 |= 0) >>> 0 >= 16 | Q6 && (g8 = tA(A10 |= 0, C6, B6 - 16 | 0, Q6 - (B6 >>> 0 < 16) | 0, (C6 + B6 | 0) - 16 | 0, i6 |= 0, E6, a5 |= 0, n5 |= 0, r4 |= 0)), I9 && (o4[I9 >> 2] = g8 ? 0 : B6 - 16 | 0, o4[I9 + 4 >> 2] = g8 ? 0 : Q6 - (B6 >>> 0 < 16) | 0), 0 | g8;
                    }, m: function(A10, I9, g8, C6, B6, Q6, i6, E6, o5, a5, n5) {
                      return 0 | rA(A10 |= 0, g8 |= 0, (A10 = 0) | (C6 |= 0), B6 |= 0, Q6 |= 0, i6 |= 0, A10 | (E6 |= 0), o5 |= 0, a5 |= 0, n5 |= 0);
                    }, n: function(A10, I9, g8, C6, B6, Q6, i6, E6, a5, n5, r4) {
                      return I9 |= 0, g8 |= 0, C6 |= 0, B6 |= 0, E6 |= 0, E6 |= 0, g8 = -1, !(Q6 |= 0) & (B6 |= 0) >>> 0 >= 16 | Q6 && (g8 = rA(A10 |= 0, C6, B6 - 16 | 0, Q6 - (B6 >>> 0 < 16) | 0, (C6 + B6 | 0) - 16 | 0, i6 |= 0, E6, a5 |= 0, n5 |= 0, r4 |= 0)), I9 && (o4[I9 >> 2] = g8 ? 0 : B6 - 16 | 0, o4[I9 + 4 >> 2] = g8 ? 0 : Q6 - (B6 >>> 0 < 16) | 0), 0 | g8;
                    }, o: II, p: function() {
                      return 12;
                    }, q: oI, r: AI, s: CI, t: ZA, u: II, v: EI, w: oI, x: AI, y: CI, z: ZA, A: function(A10, I9, g8, C6, B6, Q6, i6, E6, o5, a5, n5, r4) {
                      return 0 | BA(A10 |= 0, I9 |= 0, g8 |= 0, C6 |= 0, (A10 = 0) | (B6 |= 0), Q6 |= 0, i6 |= 0, A10 | (E6 |= 0), o5 |= 0, n5 |= 0, r4 |= 0);
                    }, B: function(A10, I9, g8, C6, B6, i6, E6, a5, n5, r4, f4) {
                      return A10 |= 0, I9 |= 0, n5 |= 0, n5 = C6 |= 0, !(C6 = B6 |= 0) & (B6 = 0 | n5) >>> 0 < 4294967280 ? (BA(A10, A10 + B6 | 0, 0, g8 |= 0, B6, C6, i6 |= 0, E6 |= 0, a5 |= 0, r4 |= 0, f4 |= 0), I9 && (C6 = (A10 = B6 + 16 | 0) >>> 0 < 16 ? C6 + 1 | 0 : C6, o4[I9 >> 2] = A10, o4[I9 + 4 >> 2] = C6)) : (mA(), Q5()), 0;
                    }, C: function(A10, I9, g8, C6, B6, Q6, i6, E6, o5, a5, n5) {
                      return 0 | CA(A10 |= 0, g8 |= 0, (A10 = 0) | (C6 |= 0), B6 |= 0, Q6 |= 0, i6 |= 0, A10 | (E6 |= 0), o5 |= 0, a5 |= 0, n5 |= 0);
                    }, D: function(A10, I9, g8, C6, B6, Q6, i6, E6, a5, n5, r4) {
                      return I9 |= 0, g8 |= 0, C6 |= 0, B6 |= 0, E6 |= 0, E6 |= 0, g8 = -1, !(Q6 |= 0) & (B6 |= 0) >>> 0 >= 16 | Q6 && (g8 = CA(A10 |= 0, C6, B6 - 16 | 0, Q6 - (B6 >>> 0 < 16) | 0, (C6 + B6 | 0) - 16 | 0, i6 |= 0, E6, a5 |= 0, n5 |= 0, r4 |= 0)), I9 && (o4[I9 >> 2] = g8 ? 0 : B6 - 16 | 0, o4[I9 + 4 >> 2] = g8 ? 0 : Q6 - (B6 >>> 0 < 16) | 0), 0 | g8;
                    }, E: II, F: gI, G: oI, H: AI, I: CI, J: ZA, K: II, L: II, M: function(A10, I9, g8, C6, B6) {
                      var Q6;
                      return A10 |= 0, I9 |= 0, g8 |= 0, C6 |= 0, D4 = Q6 = D4 - 480 | 0, AA(Q6, B6 |= 0), WA(Q6, I9, g8, C6), UA(Q6, Q6 + 416 | 0), I9 = o4[Q6 + 444 >> 2], g8 = o4[Q6 + 440 >> 2], E5[A10 + 24 | 0] = g8, E5[A10 + 25 | 0] = g8 >>> 8, E5[A10 + 26 | 0] = g8 >>> 16, E5[A10 + 27 | 0] = g8 >>> 24, E5[A10 + 28 | 0] = I9, E5[A10 + 29 | 0] = I9 >>> 8, E5[A10 + 30 | 0] = I9 >>> 16, E5[A10 + 31 | 0] = I9 >>> 24, I9 = o4[Q6 + 436 >> 2], g8 = o4[Q6 + 432 >> 2], E5[A10 + 16 | 0] = g8, E5[A10 + 17 | 0] = g8 >>> 8, E5[A10 + 18 | 0] = g8 >>> 16, E5[A10 + 19 | 0] = g8 >>> 24, E5[A10 + 20 | 0] = I9, E5[A10 + 21 | 0] = I9 >>> 8, E5[A10 + 22 | 0] = I9 >>> 16, E5[A10 + 23 | 0] = I9 >>> 24, I9 = o4[Q6 + 428 >> 2], g8 = o4[Q6 + 424 >> 2], E5[A10 + 8 | 0] = g8, E5[A10 + 9 | 0] = g8 >>> 8, E5[A10 + 10 | 0] = g8 >>> 16, E5[A10 + 11 | 0] = g8 >>> 24, E5[A10 + 12 | 0] = I9, E5[A10 + 13 | 0] = I9 >>> 8, E5[A10 + 14 | 0] = I9 >>> 16, E5[A10 + 15 | 0] = I9 >>> 24, I9 = o4[Q6 + 420 >> 2], g8 = o4[Q6 + 416 >> 2], E5[0 | A10] = g8, E5[A10 + 1 | 0] = g8 >>> 8, E5[A10 + 2 | 0] = g8 >>> 16, E5[A10 + 3 | 0] = g8 >>> 24, E5[A10 + 4 | 0] = I9, E5[A10 + 5 | 0] = I9 >>> 8, E5[A10 + 6 | 0] = I9 >>> 16, E5[A10 + 7 | 0] = I9 >>> 24, D4 = Q6 + 480 | 0, 0;
                    }, N: function(A10, I9, g8, C6, B6) {
                      var Q6, i6;
                      return A10 |= 0, I9 |= 0, g8 |= 0, C6 |= 0, D4 = Q6 = D4 - 512 | 0, AA(i6 = Q6 + 32 | 0, B6 |= 0), WA(i6, I9, g8, C6), UA(i6, Q6 + 448 | 0), I9 = o4[Q6 + 476 >> 2], o4[Q6 + 24 >> 2] = o4[Q6 + 472 >> 2], o4[Q6 + 28 >> 2] = I9, I9 = o4[Q6 + 468 >> 2], o4[Q6 + 16 >> 2] = o4[Q6 + 464 >> 2], o4[Q6 + 20 >> 2] = I9, I9 = o4[Q6 + 460 >> 2], o4[Q6 + 8 >> 2] = o4[Q6 + 456 >> 2], o4[Q6 + 12 >> 2] = I9, I9 = o4[Q6 + 452 >> 2], o4[Q6 >> 2] = o4[Q6 + 448 >> 2], o4[Q6 + 4 >> 2] = I9, I9 = cA(A10, Q6), g8 = oA(Q6, A10, 32), D4 = Q6 + 512 | 0, g8 | ((0 | A10) == (0 | Q6) ? -1 : I9);
                    }, O: ZA, P: II, Q: II, R: II, S: II, T: gI, U: AI, V: CI, W: function(A10, I9, g8) {
                      A10 |= 0, I9 |= 0;
                      var C6, B6 = 0;
                      return D4 = C6 = D4 + -64 | 0, QA(C6, g8 |= 0, 32, 0), g8 = o4[C6 + 28 >> 2], B6 = o4[C6 + 24 >> 2], E5[I9 + 24 | 0] = B6, E5[I9 + 25 | 0] = B6 >>> 8, E5[I9 + 26 | 0] = B6 >>> 16, E5[I9 + 27 | 0] = B6 >>> 24, E5[I9 + 28 | 0] = g8, E5[I9 + 29 | 0] = g8 >>> 8, E5[I9 + 30 | 0] = g8 >>> 16, E5[I9 + 31 | 0] = g8 >>> 24, g8 = o4[C6 + 20 >> 2], B6 = o4[C6 + 16 >> 2], E5[I9 + 16 | 0] = B6, E5[I9 + 17 | 0] = B6 >>> 8, E5[I9 + 18 | 0] = B6 >>> 16, E5[I9 + 19 | 0] = B6 >>> 24, E5[I9 + 20 | 0] = g8, E5[I9 + 21 | 0] = g8 >>> 8, E5[I9 + 22 | 0] = g8 >>> 16, E5[I9 + 23 | 0] = g8 >>> 24, g8 = o4[C6 + 12 >> 2], B6 = o4[C6 + 8 >> 2], E5[I9 + 8 | 0] = B6, E5[I9 + 9 | 0] = B6 >>> 8, E5[I9 + 10 | 0] = B6 >>> 16, E5[I9 + 11 | 0] = B6 >>> 24, E5[I9 + 12 | 0] = g8, E5[I9 + 13 | 0] = g8 >>> 8, E5[I9 + 14 | 0] = g8 >>> 16, E5[I9 + 15 | 0] = g8 >>> 24, g8 = o4[C6 + 4 >> 2], B6 = o4[C6 >> 2], E5[0 | I9] = B6, E5[I9 + 1 | 0] = B6 >>> 8, E5[I9 + 2 | 0] = B6 >>> 16, E5[I9 + 3 | 0] = B6 >>> 24, E5[I9 + 4 | 0] = g8, E5[I9 + 5 | 0] = g8 >>> 8, E5[I9 + 6 | 0] = g8 >>> 16, E5[I9 + 7 | 0] = g8 >>> 24, $A(C6, 64), A10 = VA(A10, I9), D4 = C6 - -64 | 0, 0 | A10;
                    }, X: dA, Y: SA, Z: JA, _: function(A10, I9, g8, C6, B6, Q6, i6, E6) {
                      var o5, a5;
                      return A10 |= 0, I9 |= 0, g8 |= 0, Q6 |= 0, a5 = C6 |= 0, C6 = B6 |= 0, D4 = o5 = D4 - 32 | 0, B6 = -1, SA(o5, i6 |= 0, E6 |= 0) || (B6 = IA(A10, I9, g8, a5, C6, Q6, o5), $A(o5, 32)), D4 = o5 + 32 | 0, 0 | B6;
                    }, $: function(A10, I9, g8, C6, B6, i6) {
                      return A10 |= 0, I9 |= 0, B6 |= 0, i6 |= 0, !(C6 |= 0) & (g8 |= 0) >>> 0 >= 4294967280 | C6 && (mA(), Q5()), 0 | IA(A10 + 16 | 0, A10, I9, g8, C6, B6, i6);
                    }, aa: function(A10, I9, g8, C6, B6, Q6, i6) {
                      return 0 | FA(A10 |= 0, I9 |= 0, g8 |= 0, C6 |= 0, B6 |= 0, Q6 |= 0, i6 |= 0);
                    }, ba: NA, ca: function(A10, I9, g8, C6, B6, Q6, i6, E6) {
                      var o5, a5;
                      return A10 |= 0, I9 |= 0, g8 |= 0, Q6 |= 0, a5 = C6 |= 0, C6 = B6 |= 0, D4 = o5 = D4 - 32 | 0, B6 = -1, SA(o5, i6 |= 0, E6 |= 0) || (B6 = gA(A10, I9, g8, a5, C6, Q6, o5), $A(o5, 32)), D4 = o5 + 32 | 0, 0 | B6;
                    }, da: lA, ea: function(A10, I9, g8, C6, B6, Q6, i6) {
                      return 0 | sA(A10 |= 0, I9 |= 0, g8 |= 0, C6 |= 0, B6 |= 0, Q6 |= 0, i6 |= 0);
                    }, fa: function(A10, I9, g8, C6, B6) {
                      A10 |= 0, I9 |= 0, B6 |= 0;
                      var Q6, i6, a5, n5 = 0, r4 = 0;
                      return i6 = g8 |= 0, g8 = C6 |= 0, a5 = C6 = D4, D4 = Q6 = C6 - 512 & -64, C6 = -1, dA(Q6 - -64 | 0, Q6 + 32 | 0) || (Y4(C6 = Q6 + 128 | 0, 0, 0, 24), z5(C6, r4 = Q6 - -64 | 0, 32, 0), z5(C6, B6, 32, 0), GA(C6, n5 = Q6 + 96 | 0, 24), C6 = FA(A10 + 32 | 0, I9, i6, g8, n5, C6 = B6, B6 = Q6 + 32 | 0), I9 = o4[Q6 + 92 >> 2], g8 = o4[Q6 + 88 >> 2], E5[A10 + 24 | 0] = g8, E5[A10 + 25 | 0] = g8 >>> 8, E5[A10 + 26 | 0] = g8 >>> 16, E5[A10 + 27 | 0] = g8 >>> 24, E5[A10 + 28 | 0] = I9, E5[A10 + 29 | 0] = I9 >>> 8, E5[A10 + 30 | 0] = I9 >>> 16, E5[A10 + 31 | 0] = I9 >>> 24, I9 = o4[Q6 + 84 >> 2], g8 = o4[Q6 + 80 >> 2], E5[A10 + 16 | 0] = g8, E5[A10 + 17 | 0] = g8 >>> 8, E5[A10 + 18 | 0] = g8 >>> 16, E5[A10 + 19 | 0] = g8 >>> 24, E5[A10 + 20 | 0] = I9, E5[A10 + 21 | 0] = I9 >>> 8, E5[A10 + 22 | 0] = I9 >>> 16, E5[A10 + 23 | 0] = I9 >>> 24, I9 = o4[Q6 + 76 >> 2], g8 = o4[Q6 + 72 >> 2], E5[A10 + 8 | 0] = g8, E5[A10 + 9 | 0] = g8 >>> 8, E5[A10 + 10 | 0] = g8 >>> 16, E5[A10 + 11 | 0] = g8 >>> 24, E5[A10 + 12 | 0] = I9, E5[A10 + 13 | 0] = I9 >>> 8, E5[A10 + 14 | 0] = I9 >>> 16, E5[A10 + 15 | 0] = I9 >>> 24, I9 = o4[Q6 + 68 >> 2], g8 = o4[Q6 + 64 >> 2], E5[0 | A10] = g8, E5[A10 + 1 | 0] = g8 >>> 8, E5[A10 + 2 | 0] = g8 >>> 16, E5[A10 + 3 | 0] = g8 >>> 24, E5[A10 + 4 | 0] = I9, E5[A10 + 5 | 0] = I9 >>> 8, E5[A10 + 6 | 0] = I9 >>> 16, E5[A10 + 7 | 0] = I9 >>> 24, $A(B6, 32), $A(r4, 32), $A(n5, 24)), D4 = a5, 0 | C6;
                    }, ga: function(A10, I9, g8, C6, B6, Q6) {
                      A10 |= 0, I9 |= 0, B6 |= 0, Q6 |= 0;
                      var i6, E6, o5 = 0, a5 = 0;
                      return i6 = o5 = D4, D4 = o5 = o5 - 448 & -64, a5 = -1, E6 = C6 |= 0, !C6 & (g8 |= 0) >>> 0 >= 48 | C6 && (Y4(C6 = o5 - -64 | 0, 0, 0, 24), z5(C6, I9, 32, 0), z5(C6, B6, 32, 0), GA(B6 = C6, C6 = o5 + 32 | 0, 24), a5 = sA(A10, I9 + 32 | 0, g8 - 32 | 0, E6 - (g8 >>> 0 < 32) | 0, C6, I9, Q6)), D4 = i6, 0 | a5;
                    }, ha: function() {
                      return 48;
                    }, ia: AI, ja: BI, ka: II, la: AI, ma: BI, na: II, oa: function() {
                      return 384;
                    }, pa: function(A10, I9, g8, C6, B6, Q6, i6) {
                      return 0 | R5(A10 |= 0, I9 |= 0, g8 |= 0, C6 |= 0, B6 |= 0, Q6 |= 0, i6 |= 0);
                    }, qa: Y4, ra: function(A10, I9, g8, C6) {
                      return 0 | z5(A10 |= 0, I9 |= 0, g8 |= 0, C6 |= 0);
                    }, sa: GA, ta: ZA, ua: BI, va: function(A10, I9, g8, C6) {
                      return 0 | QA(A10 |= 0, I9 |= 0, g8 |= 0, C6 |= 0);
                    }, wa: AI, xa: BI, ya: EI, za: II, Aa: function(A10, I9, g8, C6, B6, i6) {
                      A10 |= 0, I9 |= 0, g8 |= 0, C6 |= 0, i6 |= 0;
                      var E6, n5 = 0, r4 = 0, f4 = 0, t5 = 0, e5 = 0, c5 = 0, y6 = 0;
                      return D4 = E6 = D4 - 32 | 0, n5 = a4[0 | (B6 |= 0)] | a4[B6 + 1 | 0] << 8 | a4[B6 + 2 | 0] << 16 | a4[B6 + 3 | 0] << 24, B6 = a4[B6 + 4 | 0] | a4[B6 + 5 | 0] << 8 | a4[B6 + 6 | 0] << 16 | a4[B6 + 7 | 0] << 24, o4[E6 + 24 >> 2] = 0, o4[E6 + 28 >> 2] = 0, o4[E6 + 16 >> 2] = n5, o4[E6 + 20 >> 2] = B6, o4[E6 + 8 >> 2] = 0, o4[E6 + 12 >> 2] = 0, o4[(B6 = E6) >> 2] = g8, o4[B6 + 4 >> 2] = C6, I9 - 65 >>> 0 <= 4294967246 ? (o4[8916] = 28, A10 = -1) : I9 - 65 >>> 0 < 4294967232 ? A10 = -1 : (D4 = B6 = (f4 = D4) - 512 & -64, !i6 | !A10 | ((r4 = 255 & I9) - 65 & 255) >>> 0 <= 191 ? (mA(), Q5()) : (C6 = E6 + 16 | 0, E6 ? (t5 = 725511199 ^ (a4[E6 + 8 | 0] | a4[E6 + 9 | 0] << 8 | a4[E6 + 10 | 0] << 16 | a4[E6 + 11 | 0] << 24), e5 = -1694144372 ^ (a4[E6 + 12 | 0] | a4[E6 + 13 | 0] << 8 | a4[E6 + 14 | 0] << 16 | a4[E6 + 15 | 0] << 24), g8 = -1377402159 ^ (a4[0 | E6] | a4[E6 + 1 | 0] << 8 | a4[E6 + 2 | 0] << 16 | a4[E6 + 3 | 0] << 24), I9 = 1359893119 ^ (a4[E6 + 4 | 0] | a4[E6 + 5 | 0] << 8 | a4[E6 + 6 | 0] << 16 | a4[E6 + 7 | 0] << 24)) : (t5 = 725511199, e5 = -1694144372, g8 = -1377402159, I9 = 1359893119), C6 ? (c5 = 327033209 ^ (a4[C6 + 8 | 0] | a4[C6 + 9 | 0] << 8 | a4[C6 + 10 | 0] << 16 | a4[C6 + 11 | 0] << 24), y6 = 1541459225 ^ (a4[C6 + 12 | 0] | a4[C6 + 13 | 0] << 8 | a4[C6 + 14 | 0] << 16 | a4[C6 + 15 | 0] << 24), n5 = -79577749 ^ (a4[0 | C6] | a4[C6 + 1 | 0] << 8 | a4[C6 + 2 | 0] << 16 | a4[C6 + 3 | 0] << 24), C6 = 528734635 ^ (a4[C6 + 4 | 0] | a4[C6 + 5 | 0] << 8 | a4[C6 + 6 | 0] << 16 | a4[C6 + 7 | 0] << 24)) : (c5 = 327033209, y6 = 1541459225, n5 = -79577749, C6 = 528734635), MA(B6 - -64 | 0, 0, 293), o4[B6 + 56 >> 2] = c5, o4[B6 + 60 >> 2] = y6, o4[B6 + 48 >> 2] = n5, o4[B6 + 52 >> 2] = C6, o4[B6 + 40 >> 2] = t5, o4[B6 + 44 >> 2] = e5, o4[B6 + 32 >> 2] = g8, o4[B6 + 36 >> 2] = I9, o4[B6 + 24 >> 2] = 1595750129, o4[B6 + 28 >> 2] = -1521486534, o4[B6 + 16 >> 2] = -23791573, o4[B6 + 20 >> 2] = 1013904242, o4[B6 + 8 >> 2] = -2067093701, o4[B6 + 12 >> 2] = -1150833019, o4[B6 >> 2] = -222443256 ^ (8192 | r4), o4[B6 + 4 >> 2] = 1779033703, MA(32 + (I9 = B6 + 384 | 0) | 0, 0, 96), HA(I9, i6, 32), HA(B6 + 96 | 0, I9, 128), o4[B6 + 352 >> 2] = 128, $A(I9, 128), G5(B6, A10, r4), D4 = f4), A10 = 0), D4 = E6 + 32 | 0, 0 | A10;
                    }, Ba: ZA, Ca: function(A10, I9, g8) {
                      return A10 |= 0, R5(I9 |= 0, 32, g8 |= 0, 32, 0, 0, 0), 0 | jA(A10, I9);
                    }, Da: function(A10, I9) {
                      return A10 |= 0, hA(I9 |= 0, 32), 0 | jA(A10, I9);
                    }, Ea: function(A10, I9, g8, C6, B6) {
                      I9 |= 0, g8 |= 0, C6 |= 0, B6 |= 0;
                      var i6, o5, n5 = 0, r4 = 0;
                      if (o5 = n5 = D4, D4 = n5 = n5 - 512 & -64, i6 = (A10 |= 0) || I9) {
                        if (r4 = -1, !PA(n5 + 96 | 0, C6, B6)) {
                          for (C6 = I9 || A10, A10 = 0, Y4(I9 = n5 + 128 | 0, 0, 0, 64), z5(I9, r4 = n5 + 96 | 0, 32, 0), $A(r4, 32), z5(I9, g8, 32, 0), z5(I9, B6, 32, 0), GA(I9, n5 + 32 | 0, 64), $A(I9, 384); I9 = (B6 = n5 + 32 | 0) + A10 | 0, E5[A10 + i6 | 0] = a4[0 | I9], E5[A10 + C6 | 0] = a4[I9 + 32 | 0], E5[(g8 = 1 | A10) + i6 | 0] = a4[g8 + B6 | 0], E5[g8 + C6 | 0] = a4[I9 + 33 | 0], 32 != (0 | (A10 = A10 + 2 | 0)); )
                            ;
                          $A(n5 + 32 | 0, 64), r4 = 0;
                        }
                        return D4 = o5, 0 | r4;
                      }
                      mA(), Q5();
                    }, Fa: function(A10, I9, g8, C6, B6) {
                      I9 |= 0, g8 |= 0, C6 |= 0, B6 |= 0;
                      var i6, o5, n5 = 0, r4 = 0;
                      if (o5 = n5 = D4, D4 = n5 = n5 - 512 & -64, i6 = (A10 |= 0) || I9) {
                        if (r4 = -1, !PA(n5 + 96 | 0, C6, B6)) {
                          for (C6 = I9 || A10, A10 = 0, Y4(I9 = n5 + 128 | 0, 0, 0, 64), z5(I9, r4 = n5 + 96 | 0, 32, 0), $A(r4, 32), z5(I9, B6, 32, 0), z5(I9, g8, 32, 0), GA(I9, n5 + 32 | 0, 64), $A(I9, 384); I9 = (B6 = n5 + 32 | 0) + A10 | 0, E5[A10 + C6 | 0] = a4[0 | I9], E5[A10 + i6 | 0] = a4[I9 + 32 | 0], E5[(g8 = 1 | A10) + C6 | 0] = a4[g8 + B6 | 0], E5[g8 + i6 | 0] = a4[I9 + 33 | 0], 32 != (0 | (A10 = A10 + 2 | 0)); )
                            ;
                          $A(n5 + 32 | 0, 64), r4 = 0;
                        }
                        return D4 = o5, 0 | r4;
                      }
                      mA(), Q5();
                    }, Ga: II, Ha: II, Ia: II, Ja: II, Ka: jA, La: PA, Ma: II, Na: II, Oa: II, Pa: gI, Qa: AI, Ra: CI, Sa: ZA, Ta: JA, Ua: function(A10, I9, g8, C6, B6, i6) {
                      return A10 |= 0, I9 |= 0, B6 |= 0, i6 |= 0, !(C6 |= 0) & (g8 |= 0) >>> 0 >= 4294967280 | C6 && (mA(), Q5()), IA(A10 + 16 | 0, A10, I9, g8, C6, B6, i6), 0;
                    }, Va: NA, Wa: lA, Xa: ZA, Ya: function(A10, I9, g8) {
                      return A10 |= 0, g8 |= 0, hA(I9 |= 0, 24), d3(A10, I9, g8), E5[A10 + 32 | 0] = 1, E5[A10 + 33 | 0] = 0, E5[A10 + 34 | 0] = 0, E5[A10 + 35 | 0] = 0, g8 = a4[I9 + 16 | 0] | a4[I9 + 17 | 0] << 8 | a4[I9 + 18 | 0] << 16 | a4[I9 + 19 | 0] << 24, I9 = a4[I9 + 20 | 0] | a4[I9 + 21 | 0] << 8 | a4[I9 + 22 | 0] << 16 | a4[I9 + 23 | 0] << 24, E5[A10 + 44 | 0] = 0, E5[A10 + 45 | 0] = 0, E5[A10 + 46 | 0] = 0, E5[A10 + 47 | 0] = 0, E5[A10 + 48 | 0] = 0, E5[A10 + 49 | 0] = 0, E5[A10 + 50 | 0] = 0, E5[A10 + 51 | 0] = 0, E5[A10 + 36 | 0] = g8, E5[A10 + 37 | 0] = g8 >>> 8, E5[A10 + 38 | 0] = g8 >>> 16, E5[A10 + 39 | 0] = g8 >>> 24, E5[A10 + 40 | 0] = I9, E5[A10 + 41 | 0] = I9 >>> 8, E5[A10 + 42 | 0] = I9 >>> 16, E5[A10 + 43 | 0] = I9 >>> 24, 0;
                    }, Za: function(A10, I9, g8) {
                      return d3(A10 |= 0, I9 |= 0, g8 |= 0), E5[A10 + 32 | 0] = 1, E5[A10 + 33 | 0] = 0, E5[A10 + 34 | 0] = 0, E5[A10 + 35 | 0] = 0, g8 = a4[I9 + 16 | 0] | a4[I9 + 17 | 0] << 8 | a4[I9 + 18 | 0] << 16 | a4[I9 + 19 | 0] << 24, I9 = a4[I9 + 20 | 0] | a4[I9 + 21 | 0] << 8 | a4[I9 + 22 | 0] << 16 | a4[I9 + 23 | 0] << 24, E5[A10 + 44 | 0] = 0, E5[A10 + 45 | 0] = 0, E5[A10 + 46 | 0] = 0, E5[A10 + 47 | 0] = 0, E5[A10 + 48 | 0] = 0, E5[A10 + 49 | 0] = 0, E5[A10 + 50 | 0] = 0, E5[A10 + 51 | 0] = 0, E5[A10 + 36 | 0] = g8, E5[A10 + 37 | 0] = g8 >>> 8, E5[A10 + 38 | 0] = g8 >>> 16, E5[A10 + 39 | 0] = g8 >>> 24, E5[A10 + 40 | 0] = I9, E5[A10 + 41 | 0] = I9 >>> 8, E5[A10 + 42 | 0] = I9 >>> 16, E5[A10 + 43 | 0] = I9 >>> 24, 0;
                    }, _a: function(A10) {
                      var I9, g8 = 0, C6 = 0;
                      D4 = I9 = D4 - 48 | 0, g8 = a4[28 + (A10 |= 0) | 0] | a4[A10 + 29 | 0] << 8 | a4[A10 + 30 | 0] << 16 | a4[A10 + 31 | 0] << 24, o4[I9 + 24 >> 2] = a4[A10 + 24 | 0] | a4[A10 + 25 | 0] << 8 | a4[A10 + 26 | 0] << 16 | a4[A10 + 27 | 0] << 24, o4[I9 + 28 >> 2] = g8, g8 = a4[A10 + 20 | 0] | a4[A10 + 21 | 0] << 8 | a4[A10 + 22 | 0] << 16 | a4[A10 + 23 | 0] << 24, o4[I9 + 16 >> 2] = a4[A10 + 16 | 0] | a4[A10 + 17 | 0] << 8 | a4[A10 + 18 | 0] << 16 | a4[A10 + 19 | 0] << 24, o4[I9 + 20 >> 2] = g8, g8 = a4[A10 + 4 | 0] | a4[A10 + 5 | 0] << 8 | a4[A10 + 6 | 0] << 16 | a4[A10 + 7 | 0] << 24, o4[I9 >> 2] = a4[0 | A10] | a4[A10 + 1 | 0] << 8 | a4[A10 + 2 | 0] << 16 | a4[A10 + 3 | 0] << 24, o4[I9 + 4 >> 2] = g8, g8 = a4[A10 + 12 | 0] | a4[A10 + 13 | 0] << 8 | a4[A10 + 14 | 0] << 16 | a4[A10 + 15 | 0] << 24, o4[I9 + 8 >> 2] = a4[A10 + 8 | 0] | a4[A10 + 9 | 0] << 8 | a4[A10 + 10 | 0] << 16 | a4[A10 + 11 | 0] << 24, o4[I9 + 12 >> 2] = g8, g8 = a4[A10 + 40 | 0] | a4[A10 + 41 | 0] << 8 | a4[A10 + 42 | 0] << 16 | a4[A10 + 43 | 0] << 24, o4[I9 + 32 >> 2] = a4[A10 + 36 | 0] | a4[A10 + 37 | 0] << 8 | a4[A10 + 38 | 0] << 16 | a4[A10 + 39 | 0] << 24, o4[I9 + 36 >> 2] = g8, xA(I9, I9, A10 + 32 | 0, A10), g8 = o4[I9 + 28 >> 2], C6 = o4[I9 + 24 >> 2], E5[A10 + 24 | 0] = C6, E5[A10 + 25 | 0] = C6 >>> 8, E5[A10 + 26 | 0] = C6 >>> 16, E5[A10 + 27 | 0] = C6 >>> 24, E5[A10 + 28 | 0] = g8, E5[A10 + 29 | 0] = g8 >>> 8, E5[A10 + 30 | 0] = g8 >>> 16, E5[A10 + 31 | 0] = g8 >>> 24, g8 = o4[I9 + 20 >> 2], C6 = o4[I9 + 16 >> 2], E5[A10 + 16 | 0] = C6, E5[A10 + 17 | 0] = C6 >>> 8, E5[A10 + 18 | 0] = C6 >>> 16, E5[A10 + 19 | 0] = C6 >>> 24, E5[A10 + 20 | 0] = g8, E5[A10 + 21 | 0] = g8 >>> 8, E5[A10 + 22 | 0] = g8 >>> 16, E5[A10 + 23 | 0] = g8 >>> 24, g8 = o4[I9 + 12 >> 2], C6 = o4[I9 + 8 >> 2], E5[A10 + 8 | 0] = C6, E5[A10 + 9 | 0] = C6 >>> 8, E5[A10 + 10 | 0] = C6 >>> 16, E5[A10 + 11 | 0] = C6 >>> 24, E5[A10 + 12 | 0] = g8, E5[A10 + 13 | 0] = g8 >>> 8, E5[A10 + 14 | 0] = g8 >>> 16, E5[A10 + 15 | 0] = g8 >>> 24, g8 = o4[I9 + 4 >> 2], C6 = o4[I9 >> 2], E5[0 | A10] = C6, E5[A10 + 1 | 0] = C6 >>> 8, E5[A10 + 2 | 0] = C6 >>> 16, E5[A10 + 3 | 0] = C6 >>> 24, E5[A10 + 4 | 0] = g8, E5[A10 + 5 | 0] = g8 >>> 8, E5[A10 + 6 | 0] = g8 >>> 16, E5[A10 + 7 | 0] = g8 >>> 24, C6 = o4[I9 + 36 >> 2], g8 = o4[I9 + 32 >> 2], E5[A10 + 32 | 0] = 1, E5[A10 + 33 | 0] = 0, E5[A10 + 34 | 0] = 0, E5[A10 + 35 | 0] = 0, E5[A10 + 36 | 0] = g8, E5[A10 + 37 | 0] = g8 >>> 8, E5[A10 + 38 | 0] = g8 >>> 16, E5[A10 + 39 | 0] = g8 >>> 24, E5[A10 + 40 | 0] = C6, E5[A10 + 41 | 0] = C6 >>> 8, E5[A10 + 42 | 0] = C6 >>> 16, E5[A10 + 43 | 0] = C6 >>> 24, D4 = I9 + 48 | 0;
                    }, $a: function(A10, I9, g8, C6, B6, i6, n5, r4, f4, t5) {
                      A10 |= 0, I9 |= 0, C6 |= 0, n5 |= 0, f4 |= 0, t5 |= 0;
                      var e5, c5 = 0, y6 = 0, w5 = 0;
                      return c5 = B6 |= 0, B6 = i6 |= 0, c5 |= i6 = 0, e5 = i6 | (r4 |= 0), D4 = i6 = D4 - 384 | 0, (g8 |= 0) && (o4[g8 >> 2] = 0, o4[g8 + 4 >> 2] = 0), !B6 & c5 >>> 0 < 4294967279 ? (XA(y6 = i6 + 16 | 0, 64, w5 = A10 + 32 | 0, A10), OA(r4 = i6 + 80 | 0, y6), $A(y6, 64), zA(r4, n5, e5, f4), zA(r4, 33904, 0 - e5 & 15, 0), o4[i6 + 72 >> 2] = 0, o4[i6 + 76 >> 2] = 0, o4[(n5 = i6 - -64 | 0) >> 2] = 0, o4[n5 + 4 >> 2] = 0, o4[i6 + 56 >> 2] = 0, o4[i6 + 60 >> 2] = 0, o4[i6 + 48 >> 2] = 0, o4[i6 + 52 >> 2] = 0, o4[i6 + 40 >> 2] = 0, o4[i6 + 44 >> 2] = 0, o4[i6 + 32 >> 2] = 0, o4[i6 + 36 >> 2] = 0, o4[i6 + 16 >> 2] = 0, o4[i6 + 20 >> 2] = 0, o4[i6 + 24 >> 2] = 0, o4[i6 + 28 >> 2] = 0, E5[i6 + 16 | 0] = t5, wA(y6, y6, 64, 0, w5, 1, A10), zA(r4, y6, 64, 0), E5[0 | I9] = a4[i6 + 16 | 0], wA(I9 = I9 + 1 | 0, C6, c5, B6, w5, 2, A10), zA(r4, I9, c5, B6), zA(r4, 33904, 15 & c5, 0), o4[i6 + 8 >> 2] = e5, o4[i6 + 12 >> 2] = f4, zA(r4, C6 = i6 + 8 | 0, 8, 0), o4[i6 + 8 >> 2] = c5 - -64, o4[i6 + 12 >> 2] = B6 - ((c5 >>> 0 < 4294967232) - 1 | 0), zA(r4, C6, 8, 0), TA(r4, I9 = I9 + c5 | 0), $A(r4, 256), E5[A10 + 36 | 0] = a4[A10 + 36 | 0] ^ a4[0 | I9], E5[A10 + 37 | 0] = a4[A10 + 37 | 0] ^ a4[I9 + 1 | 0], E5[A10 + 38 | 0] = a4[A10 + 38 | 0] ^ a4[I9 + 2 | 0], E5[A10 + 39 | 0] = a4[A10 + 39 | 0] ^ a4[I9 + 3 | 0], E5[A10 + 40 | 0] = a4[A10 + 40 | 0] ^ a4[I9 + 4 | 0], E5[A10 + 41 | 0] = a4[A10 + 41 | 0] ^ a4[I9 + 5 | 0], E5[A10 + 42 | 0] = a4[A10 + 42 | 0] ^ a4[I9 + 6 | 0], E5[A10 + 43 | 0] = a4[A10 + 43 | 0] ^ a4[I9 + 7 | 0], yA(w5), (2 & t5 || iA(w5, 4)) && (I9 = a4[A10 + 28 | 0] | a4[A10 + 29 | 0] << 8 | a4[A10 + 30 | 0] << 16 | a4[A10 + 31 | 0] << 24, o4[i6 + 360 >> 2] = a4[A10 + 24 | 0] | a4[A10 + 25 | 0] << 8 | a4[A10 + 26 | 0] << 16 | a4[A10 + 27 | 0] << 24, o4[i6 + 364 >> 2] = I9, I9 = a4[A10 + 20 | 0] | a4[A10 + 21 | 0] << 8 | a4[A10 + 22 | 0] << 16 | a4[A10 + 23 | 0] << 24, o4[i6 + 352 >> 2] = a4[A10 + 16 | 0] | a4[A10 + 17 | 0] << 8 | a4[A10 + 18 | 0] << 16 | a4[A10 + 19 | 0] << 24, o4[i6 + 356 >> 2] = I9, I9 = a4[A10 + 4 | 0] | a4[A10 + 5 | 0] << 8 | a4[A10 + 6 | 0] << 16 | a4[A10 + 7 | 0] << 24, o4[i6 + 336 >> 2] = a4[0 | A10] | a4[A10 + 1 | 0] << 8 | a4[A10 + 2 | 0] << 16 | a4[A10 + 3 | 0] << 24, o4[i6 + 340 >> 2] = I9, I9 = a4[A10 + 12 | 0] | a4[A10 + 13 | 0] << 8 | a4[A10 + 14 | 0] << 16 | a4[A10 + 15 | 0] << 24, o4[i6 + 344 >> 2] = a4[A10 + 8 | 0] | a4[A10 + 9 | 0] << 8 | a4[A10 + 10 | 0] << 16 | a4[A10 + 11 | 0] << 24, o4[i6 + 348 >> 2] = I9, I9 = a4[A10 + 40 | 0] | a4[A10 + 41 | 0] << 8 | a4[A10 + 42 | 0] << 16 | a4[A10 + 43 | 0] << 24, o4[i6 + 368 >> 2] = a4[A10 + 36 | 0] | a4[A10 + 37 | 0] << 8 | a4[A10 + 38 | 0] << 16 | a4[A10 + 39 | 0] << 24, o4[i6 + 372 >> 2] = I9, xA(I9 = i6 + 336 | 0, I9, w5, A10), I9 = o4[i6 + 364 >> 2], C6 = o4[i6 + 360 >> 2], E5[A10 + 24 | 0] = C6, E5[A10 + 25 | 0] = C6 >>> 8, E5[A10 + 26 | 0] = C6 >>> 16, E5[A10 + 27 | 0] = C6 >>> 24, E5[A10 + 28 | 0] = I9, E5[A10 + 29 | 0] = I9 >>> 8, E5[A10 + 30 | 0] = I9 >>> 16, E5[A10 + 31 | 0] = I9 >>> 24, I9 = o4[i6 + 356 >> 2], C6 = o4[i6 + 352 >> 2], E5[A10 + 16 | 0] = C6, E5[A10 + 17 | 0] = C6 >>> 8, E5[A10 + 18 | 0] = C6 >>> 16, E5[A10 + 19 | 0] = C6 >>> 24, E5[A10 + 20 | 0] = I9, E5[A10 + 21 | 0] = I9 >>> 8, E5[A10 + 22 | 0] = I9 >>> 16, E5[A10 + 23 | 0] = I9 >>> 24, I9 = o4[i6 + 348 >> 2], C6 = o4[i6 + 344 >> 2], E5[A10 + 8 | 0] = C6, E5[A10 + 9 | 0] = C6 >>> 8, E5[A10 + 10 | 0] = C6 >>> 16, E5[A10 + 11 | 0] = C6 >>> 24, E5[A10 + 12 | 0] = I9, E5[A10 + 13 | 0] = I9 >>> 8, E5[A10 + 14 | 0] = I9 >>> 16, E5[A10 + 15 | 0] = I9 >>> 24, I9 = o4[i6 + 340 >> 2], C6 = o4[i6 + 336 >> 2], E5[0 | A10] = C6, E5[A10 + 1 | 0] = C6 >>> 8, E5[A10 + 2 | 0] = C6 >>> 16, E5[A10 + 3 | 0] = C6 >>> 24, E5[A10 + 4 | 0] = I9, E5[A10 + 5 | 0] = I9 >>> 8, E5[A10 + 6 | 0] = I9 >>> 16, E5[A10 + 7 | 0] = I9 >>> 24, I9 = o4[i6 + 368 >> 2], C6 = o4[i6 + 372 >> 2], E5[A10 + 32 | 0] = 1, E5[A10 + 33 | 0] = 0, E5[A10 + 34 | 0] = 0, E5[A10 + 35 | 0] = 0, E5[A10 + 36 | 0] = I9, E5[A10 + 37 | 0] = I9 >>> 8, E5[A10 + 38 | 0] = I9 >>> 16, E5[A10 + 39 | 0] = I9 >>> 24, E5[A10 + 40 | 0] = C6, E5[A10 + 41 | 0] = C6 >>> 8, E5[A10 + 42 | 0] = C6 >>> 16, E5[A10 + 43 | 0] = C6 >>> 24), g8 && (B6 = (A10 = c5 + 17 | 0) >>> 0 < 17 ? B6 + 1 | 0 : B6, o4[g8 >> 2] = A10, o4[g8 + 4 >> 2] = B6), D4 = i6 + 384 | 0) : (mA(), Q5()), 0;
                    }, ab: function(A10, I9, g8, C6, B6, i6, n5, r4, f4, t5) {
                      A10 |= 0, I9 |= 0, C6 |= 0, B6 |= 0, r4 |= 0, t5 |= 0;
                      var e5, c5 = 0, y6 = 0, w5 = 0, h5 = 0, s5 = 0, p6 = 0;
                      c5 = i6 |= 0, i6 = n5 |= 0, y6 = 0 | c5, e5 = f4 |= 0, D4 = n5 = D4 - 400 | 0, (g8 |= 0) && (o4[g8 >> 2] = 0, o4[g8 + 4 >> 2] = 0), C6 && (E5[0 | C6] = 255), p6 = -1;
                      A: {
                        I: {
                          if (!(!i6 & y6 >>> 0 < 17)) {
                            if (s5 = c5 = i6 - (y6 >>> 0 < 17) | 0, !c5 & (f4 = y6 - 17 | 0) >>> 0 >= 4294967279 | c5)
                              break I;
                            XA(w5 = n5 + 32 | 0, 64, h5 = A10 + 32 | 0, A10), OA(c5 = n5 + 96 | 0, w5), $A(w5, 64), zA(c5, r4, e5, t5), zA(c5, 33904, 0 - e5 & 15, 0), o4[n5 + 88 >> 2] = 0, o4[n5 + 92 >> 2] = 0, o4[n5 + 80 >> 2] = 0, o4[n5 + 84 >> 2] = 0, o4[n5 + 72 >> 2] = 0, o4[n5 + 76 >> 2] = 0, o4[(r4 = n5 - -64 | 0) >> 2] = 0, o4[r4 + 4 >> 2] = 0, o4[n5 + 56 >> 2] = 0, o4[n5 + 60 >> 2] = 0, o4[n5 + 48 >> 2] = 0, o4[n5 + 52 >> 2] = 0, o4[n5 + 40 >> 2] = 0, o4[n5 + 44 >> 2] = 0, o4[n5 + 32 >> 2] = 0, o4[n5 + 36 >> 2] = 0, E5[n5 + 32 | 0] = a4[0 | B6], wA(w5, w5, 64, 0, h5, 1, A10), r4 = a4[n5 + 32 | 0], E5[n5 + 32 | 0] = a4[0 | B6], zA(c5, w5, 64, 0), zA(c5, B6 = B6 + 1 | 0, f4, s5), zA(c5, 33904, y6 - 1 & 15, 0), o4[n5 + 24 >> 2] = e5, o4[n5 + 28 >> 2] = t5, zA(c5, t5 = n5 + 24 | 0, 8, 0), i6 = (y6 = y6 + 47 | 0) >>> 0 < 47 ? i6 + 1 | 0 : i6, o4[n5 + 24 >> 2] = y6, o4[n5 + 28 >> 2] = i6, zA(c5, t5, 8, 0), TA(c5, n5), $A(c5, 256), oA(n5, B6 + f4 | 0, 16) ? $A(n5, 16) : (wA(I9, B6, f4, s5, h5, 2, A10), E5[A10 + 36 | 0] = a4[A10 + 36 | 0] ^ a4[0 | n5], E5[A10 + 37 | 0] = a4[A10 + 37 | 0] ^ a4[n5 + 1 | 0], E5[A10 + 38 | 0] = a4[A10 + 38 | 0] ^ a4[n5 + 2 | 0], E5[A10 + 39 | 0] = a4[A10 + 39 | 0] ^ a4[n5 + 3 | 0], E5[A10 + 40 | 0] = a4[A10 + 40 | 0] ^ a4[n5 + 4 | 0], E5[A10 + 41 | 0] = a4[A10 + 41 | 0] ^ a4[n5 + 5 | 0], E5[A10 + 42 | 0] = a4[A10 + 42 | 0] ^ a4[n5 + 6 | 0], E5[A10 + 43 | 0] = a4[A10 + 43 | 0] ^ a4[n5 + 7 | 0], yA(h5), (2 & r4 || iA(h5, 4)) && (I9 = a4[A10 + 28 | 0] | a4[A10 + 29 | 0] << 8 | a4[A10 + 30 | 0] << 16 | a4[A10 + 31 | 0] << 24, o4[n5 + 376 >> 2] = a4[A10 + 24 | 0] | a4[A10 + 25 | 0] << 8 | a4[A10 + 26 | 0] << 16 | a4[A10 + 27 | 0] << 24, o4[n5 + 380 >> 2] = I9, I9 = a4[A10 + 20 | 0] | a4[A10 + 21 | 0] << 8 | a4[A10 + 22 | 0] << 16 | a4[A10 + 23 | 0] << 24, o4[n5 + 368 >> 2] = a4[A10 + 16 | 0] | a4[A10 + 17 | 0] << 8 | a4[A10 + 18 | 0] << 16 | a4[A10 + 19 | 0] << 24, o4[n5 + 372 >> 2] = I9, I9 = a4[A10 + 4 | 0] | a4[A10 + 5 | 0] << 8 | a4[A10 + 6 | 0] << 16 | a4[A10 + 7 | 0] << 24, o4[n5 + 352 >> 2] = a4[0 | A10] | a4[A10 + 1 | 0] << 8 | a4[A10 + 2 | 0] << 16 | a4[A10 + 3 | 0] << 24, o4[n5 + 356 >> 2] = I9, I9 = a4[A10 + 12 | 0] | a4[A10 + 13 | 0] << 8 | a4[A10 + 14 | 0] << 16 | a4[A10 + 15 | 0] << 24, o4[n5 + 360 >> 2] = a4[A10 + 8 | 0] | a4[A10 + 9 | 0] << 8 | a4[A10 + 10 | 0] << 16 | a4[A10 + 11 | 0] << 24, o4[n5 + 364 >> 2] = I9, I9 = a4[A10 + 40 | 0] | a4[A10 + 41 | 0] << 8 | a4[A10 + 42 | 0] << 16 | a4[A10 + 43 | 0] << 24, o4[n5 + 384 >> 2] = a4[A10 + 36 | 0] | a4[A10 + 37 | 0] << 8 | a4[A10 + 38 | 0] << 16 | a4[A10 + 39 | 0] << 24, o4[n5 + 388 >> 2] = I9, xA(I9 = n5 + 352 | 0, I9, h5, A10), I9 = o4[n5 + 380 >> 2], B6 = o4[n5 + 376 >> 2], E5[A10 + 24 | 0] = B6, E5[A10 + 25 | 0] = B6 >>> 8, E5[A10 + 26 | 0] = B6 >>> 16, E5[A10 + 27 | 0] = B6 >>> 24, E5[A10 + 28 | 0] = I9, E5[A10 + 29 | 0] = I9 >>> 8, E5[A10 + 30 | 0] = I9 >>> 16, E5[A10 + 31 | 0] = I9 >>> 24, I9 = o4[n5 + 372 >> 2], B6 = o4[n5 + 368 >> 2], E5[A10 + 16 | 0] = B6, E5[A10 + 17 | 0] = B6 >>> 8, E5[A10 + 18 | 0] = B6 >>> 16, E5[A10 + 19 | 0] = B6 >>> 24, E5[A10 + 20 | 0] = I9, E5[A10 + 21 | 0] = I9 >>> 8, E5[A10 + 22 | 0] = I9 >>> 16, E5[A10 + 23 | 0] = I9 >>> 24, I9 = o4[n5 + 364 >> 2], B6 = o4[n5 + 360 >> 2], E5[A10 + 8 | 0] = B6, E5[A10 + 9 | 0] = B6 >>> 8, E5[A10 + 10 | 0] = B6 >>> 16, E5[A10 + 11 | 0] = B6 >>> 24, E5[A10 + 12 | 0] = I9, E5[A10 + 13 | 0] = I9 >>> 8, E5[A10 + 14 | 0] = I9 >>> 16, E5[A10 + 15 | 0] = I9 >>> 24, I9 = o4[n5 + 356 >> 2], B6 = o4[n5 + 352 >> 2], E5[0 | A10] = B6, E5[A10 + 1 | 0] = B6 >>> 8, E5[A10 + 2 | 0] = B6 >>> 16, E5[A10 + 3 | 0] = B6 >>> 24, E5[A10 + 4 | 0] = I9, E5[A10 + 5 | 0] = I9 >>> 8, E5[A10 + 6 | 0] = I9 >>> 16, E5[A10 + 7 | 0] = I9 >>> 24, I9 = o4[n5 + 384 >> 2], B6 = o4[n5 + 388 >> 2], E5[A10 + 32 | 0] = 1, E5[A10 + 33 | 0] = 0, E5[A10 + 34 | 0] = 0, E5[A10 + 35 | 0] = 0, E5[A10 + 36 | 0] = I9, E5[A10 + 37 | 0] = I9 >>> 8, E5[A10 + 38 | 0] = I9 >>> 16, E5[A10 + 39 | 0] = I9 >>> 24, E5[A10 + 40 | 0] = B6, E5[A10 + 41 | 0] = B6 >>> 8, E5[A10 + 42 | 0] = B6 >>> 16, E5[A10 + 43 | 0] = B6 >>> 24), g8 && (o4[g8 >> 2] = f4, o4[g8 + 4 >> 2] = s5), p6 = 0, C6 && (E5[0 | C6] = r4));
                          }
                          D4 = n5 + 400 | 0;
                          break A;
                        }
                        mA(), Q5();
                      }
                      return 0 | p6;
                    }, bb: function() {
                      return 52;
                    }, cb: function() {
                      return 17;
                    }, db: gI, eb: II, fb: function() {
                      return -18;
                    }, gb: oI, hb: QI, ib: function() {
                      return 2;
                    }, jb: iI, kb: EI, lb: AI, mb: function(A10, I9, g8, C6, B6) {
                      A10 |= 0, I9 |= 0, g8 |= 0, C6 |= 0;
                      var Q6, i6 = 0, o5 = 0, n5 = 0, r4 = 0, f4 = 0, t5 = 0, e5 = 0, c5 = 0, y6 = 0, D5 = 0, h5 = 0, s5 = 0, p6 = 0, u6 = 0, k6 = 0, F6 = 0;
                      if (p6 = 1886610805 ^ (B6 = a4[0 | (i6 = B6 |= 0)] | a4[i6 + 1 | 0] << 8 | a4[i6 + 2 | 0] << 16 | a4[i6 + 3 | 0] << 24), u6 = 1936682341 ^ (o5 = a4[i6 + 4 | 0] | a4[i6 + 5 | 0] << 8 | a4[i6 + 6 | 0] << 16 | a4[i6 + 7 | 0] << 24), B6 ^= 1852142177, n5 = 1819895653 ^ o5, k6 = 1852075885 ^ (o5 = a4[i6 + 8 | 0] | a4[i6 + 9 | 0] << 8 | a4[i6 + 10 | 0] << 16 | a4[i6 + 11 | 0] << 24), F6 = 1685025377 ^ (i6 = a4[i6 + 12 | 0] | a4[i6 + 13 | 0] << 8 | a4[i6 + 14 | 0] << 16 | a4[i6 + 15 | 0] << 24), r4 = 2037671283 ^ o5, o5 = 1952801890 ^ i6, D5 = g8, (0 | (c5 = (I9 + g8 | 0) - (Q6 = 7 & g8) | 0)) != (0 | I9)) {
                        for (; g8 = (h5 = o5 ^ (s5 = a4[I9 + 4 | 0] | a4[I9 + 5 | 0] << 8 | a4[I9 + 6 | 0] << 16 | a4[I9 + 7 | 0] << 24)) + n5 | 0, r4 = B6 = (i6 = C6 = r4 ^ (y6 = a4[0 | I9] | a4[I9 + 1 | 0] << 8 | a4[I9 + 2 | 0] << 16 | a4[I9 + 3 | 0] << 24)) + B6 | 0, e5 = g8 = B6 >>> 0 < i6 >>> 0 ? g8 + 1 | 0 : g8, g8 = u6 + F6 | 0, g8 = (n5 = p6 + k6 | 0) >>> 0 < k6 >>> 0 ? g8 + 1 | 0 : g8, i6 = nA(k6, F6, 13) ^ n5, o5 = g8, g8 = e5 + (B6 = g8 ^ w4) | 0, g8 = i6 >>> 0 > (f4 = r4 + i6 | 0) >>> 0 ? g8 + 1 | 0 : g8, i6 = nA(i6, B6, 17) ^ f4, t5 = g8, p6 = nA(i6, B6 = g8 ^ w4, 13), u6 = w4, g8 = nA(C6, h5, 16), C6 = e5 ^ w4, h5 = g8 ^ r4, o5 = nA(n5, o5, 32), g8 = w4 + C6 | 0, g8 = (o5 = (n5 = h5 + o5 | 0) >>> 0 < o5 >>> 0 ? g8 + 1 | 0 : g8) + B6 | 0, e5 = g8 = (r4 = i6 + n5 | 0) >>> 0 < n5 >>> 0 ? g8 + 1 | 0 : g8, p6 = nA(i6 = r4 ^ p6, B6 = g8 ^ u6, 17), u6 = w4, g8 = nA(h5, C6, 21), C6 = o5 ^ w4, h5 = g8 ^ n5, o5 = nA(f4, t5, 32), g8 = w4 + C6 | 0, g8 = (o5 = (n5 = h5 + o5 | 0) >>> 0 < o5 >>> 0 ? g8 + 1 | 0 : g8) + B6 | 0, k6 = (i6 = i6 + n5 | 0) ^ p6, B6 = g8 = i6 >>> 0 < n5 >>> 0 ? g8 + 1 | 0 : g8, F6 = g8 ^ u6, g8 = nA(h5, C6, 16), f4 = o5 ^= w4, t5 = nA(g8 ^= n5, o5, 21), n5 = w4, e5 = (o5 = nA(r4, e5, 32)) + g8 | 0, g8 = w4 + f4 | 0, r4 = t5 ^ e5, o5 = (g8 = o5 >>> 0 > e5 >>> 0 ? g8 + 1 | 0 : g8) ^ n5, B6 = nA(i6, B6, 32), n5 = w4, p6 = e5 ^ y6, u6 = g8 ^ s5, (0 | c5) != (0 | (I9 = I9 + 8 | 0)); )
                          ;
                        I9 = c5;
                      }
                      switch (s5 = 0, t5 = D5 << 24, Q6 - 1 | 0) {
                        case 6:
                          t5 |= a4[I9 + 6 | 0] << 16;
                        case 5:
                          t5 |= a4[I9 + 5 | 0] << 8;
                        case 4:
                          t5 |= a4[I9 + 4 | 0];
                        case 3:
                          s5 |= (C6 = a4[I9 + 3 | 0]) << 24, t5 |= g8 = C6 >>> 8 | 0;
                        case 2:
                          s5 |= (C6 = a4[I9 + 2 | 0]) << 16, t5 |= g8 = C6 >>> 16 | 0;
                        case 1:
                          s5 |= (C6 = a4[I9 + 1 | 0]) << 8, t5 |= g8 = C6 >>> 24 | 0;
                        case 0:
                          s5 = a4[0 | I9] | s5;
                      }
                      return I9 = A10, C6 = nA(i6 = r4 ^ s5, A10 = o5 ^ t5, 16), A10 = A10 + n5 | 0, e5 = A10 = (r4 = B6 + i6 | 0) >>> 0 < B6 >>> 0 ? A10 + 1 | 0 : A10, f4 = nA(B6 = C6 ^ r4, A10 ^= g8 = w4, 21), o5 = w4, g8 = u6 + F6 | 0, C6 = g8 = (i6 = p6 + k6 | 0) >>> 0 < k6 >>> 0 ? g8 + 1 | 0 : g8, c5 = B6, B6 = nA(i6, g8, 32), g8 = w4 + A10 | 0, A10 = o5, o5 = g8 = B6 >>> 0 > (n5 = c5 + B6 | 0) >>> 0 ? g8 + 1 | 0 : g8, D5 = nA(B6 = n5 ^ f4, A10 ^= g8, 16), y6 = w4, i6 = (g8 = r4) + (r4 = c5 = nA(k6, F6, 13) ^ i6) | 0, g8 = (f4 = w4 ^ C6) + e5 | 0, C6 = i6, e5 = B6, B6 = nA(i6, g8 = i6 >>> 0 < r4 >>> 0 ? g8 + 1 | 0 : g8, 32), A10 = w4 + A10 | 0, h5 = nA(i6 = (r4 = e5 + B6 | 0) ^ D5, B6 = (e5 = B6 >>> 0 > r4 >>> 0 ? A10 + 1 | 0 : A10) ^ y6, 21), y6 = w4, c5 = nA(c5, f4, 17) ^ C6, g8 = (f4 = w4 ^ g8) + o5 | 0, A10 = g8 = (A10 = c5) >>> 0 > (C6 = A10 + n5 | 0) >>> 0 ? g8 + 1 | 0 : g8, o5 = i6, i6 = nA(C6, g8, 32), g8 = w4 + B6 | 0, D5 = g8 = (o5 = i6 >>> 0 > (n5 = o5 + i6 | 0) >>> 0 ? g8 + 1 | 0 : g8) ^ y6, y6 = nA(h5 ^= n5, g8, 16), i6 = w4, c5 = nA(c5, f4, 13) ^ C6, A10 = (f4 = A10 ^ w4) + e5 | 0, C6 = A10 = (g8 = c5) >>> 0 > (B6 = g8 + r4 | 0) >>> 0 ? A10 + 1 | 0 : A10, A10 = nA(B6, A10, 32), g8 = D5 + w4 | 0, D5 = g8 = (r4 = i6) ^ (i6 = (A10 = h5 + (255 ^ A10) | 0) >>> 0 < h5 >>> 0 ? g8 + 1 | 0 : g8), r4 = A10, y6 = nA(h5 = y6 ^ A10, g8, 21), e5 = w4, c5 = nA(c5, f4, 17) ^ B6, g8 = (f4 = C6 ^ w4) + (o5 ^ t5) | 0, C6 = g8 = (A10 = n5 ^ s5) >>> 0 > (B6 = c5 + A10 | 0) >>> 0 ? g8 + 1 | 0 : g8, A10 = nA(B6, g8, 32), g8 = D5 + w4 | 0, g8 = (o5 = (A10 = A10 + h5 | 0) >>> 0 < h5 >>> 0 ? g8 + 1 | 0 : g8) ^ e5, e5 = A10, y6 = nA(D5 = y6 ^ A10, g8, 16), n5 = w4, f4 = nA(c5, f4, 13) ^ B6, A10 = i6 + (t5 = w4 ^ C6) | 0, C6 = A10 = (B6 = r4 + f4 | 0) >>> 0 < r4 >>> 0 ? A10 + 1 | 0 : A10, A10 = nA(B6, A10, 32), g8 = g8 + w4 | 0, c5 = g8 = (i6 = (A10 = A10 + D5 | 0) >>> 0 < D5 >>> 0 ? g8 + 1 | 0 : g8) ^ n5, n5 = A10, y6 = nA(D5 = y6 ^ A10, g8, 21), r4 = w4, A10 = nA(f4, t5, 17), g8 = o5 + (f4 = C6 ^ w4) | 0, C6 = g8 = (B6 = e5 + (t5 = A10 ^ B6) | 0) >>> 0 < e5 >>> 0 ? g8 + 1 | 0 : g8, A10 = nA(B6, g8, 32), g8 = c5 + w4 | 0, r4 = g8 = (o5 = (A10 = A10 + D5 | 0) >>> 0 < D5 >>> 0 ? g8 + 1 | 0 : g8) ^ r4, e5 = A10, c5 = nA(D5 = y6 ^ A10, g8, 16), y6 = w4, A10 = nA(t5, f4, 13), g8 = i6 + (f4 = C6 ^ w4) | 0, C6 = g8 = (i6 = n5 + (t5 = A10 ^ B6) | 0) >>> 0 < n5 >>> 0 ? g8 + 1 | 0 : g8, A10 = nA(i6, g8, 32), g8 = r4 + w4 | 0, r4 = A10 = A10 + D5 | 0, n5 = g8 = A10 >>> 0 < D5 >>> 0 ? g8 + 1 | 0 : g8, D5 = nA(B6 = c5 ^ A10, A10 = g8 ^ y6, 21), c5 = w4, t5 = nA(t5, f4, 17), g8 = o5 + (y6 = C6 ^ w4) | 0, f4 = i6 ^ t5, i6 = B6, B6 = nA(C6 = e5 + f4 | 0, g8 = C6 >>> 0 < e5 >>> 0 ? g8 + 1 | 0 : g8, 32), A10 = w4 + A10 | 0, c5 = nA(i6 = (e5 = i6 + B6 | 0) ^ D5, B6 = (o5 = B6 >>> 0 > e5 >>> 0 ? A10 + 1 | 0 : A10) ^ c5, 16), t5 = w4, A10 = nA(f4, y6, 13), g8 = n5 + (y6 = g8 ^ w4) | 0, A10 = g8 = (C6 = r4 + (f4 = A10 ^ C6) | 0) >>> 0 < r4 >>> 0 ? g8 + 1 | 0 : g8, n5 = nA(C6, g8, 32), g8 = w4 + B6 | 0, B6 = i6 = n5 + i6 | 0, t5 = nA(i6 ^ c5, (g8 = i6 >>> 0 < n5 >>> 0 ? g8 + 1 | 0 : g8) ^ t5, 21), r4 = w4, C6 = nA(f4, y6, 17) ^ C6, n5 = nA(C6, A10 ^= w4, 13), A10 = A10 + o5 | 0, o5 = A10 = w4 ^ ((C6 = C6 + e5 | 0) >>> 0 < e5 >>> 0 ? A10 + 1 | 0 : A10), C6 = nA(i6 = C6 ^ n5, A10, 17) ^ t5, A10 = w4 ^ r4, g8 = g8 + o5 | 0, r4 = B6, C6 = nA(B6 = B6 + i6 | 0, g8 = r4 >>> 0 > B6 >>> 0 ? g8 + 1 | 0 : g8, 32) ^ C6 ^ B6, E5[0 | I9] = C6, E5[I9 + 1 | 0] = C6 >>> 8, E5[I9 + 2 | 0] = C6 >>> 16, E5[I9 + 3 | 0] = C6 >>> 24, A10 ^= g8 ^ w4, E5[I9 + 4 | 0] = A10, E5[I9 + 5 | 0] = A10 >>> 8, E5[I9 + 6 | 0] = A10 >>> 16, E5[I9 + 7 | 0] = A10 >>> 24, 0;
                    }, nb: function(A10) {
                      hA(A10 |= 0, 16);
                    }, ob: function() {
                      return 208;
                    }, pb: BI, qb: II, rb: II, sb: BI, tb: function() {
                      return -65;
                    }, ub: function(A10, I9, g8) {
                      A10 |= 0;
                      var C6, B6, Q6, i6, o5 = 0, n5 = 0, r4 = 0, f4 = 0, t5 = 0;
                      return D4 = Q6 = D4 - 160 | 0, QA(I9 |= 0, g8 |= 0, 32, 0), E5[0 | I9] = 248 & a4[0 | I9], E5[I9 + 31 | 0] = 63 & a4[I9 + 31 | 0] | 64, v5(Q6, I9), uA(A10, Q6), n5 = a4[(B6 = g8) + 8 | 0] | a4[B6 + 9 | 0] << 8 | a4[B6 + 10 | 0] << 16 | a4[B6 + 11 | 0] << 24, o5 = a4[B6 + 12 | 0] | a4[B6 + 13 | 0] << 8 | a4[B6 + 14 | 0] << 16 | a4[B6 + 15 | 0] << 24, r4 = a4[B6 + 16 | 0] | a4[B6 + 17 | 0] << 8 | a4[B6 + 18 | 0] << 16 | a4[B6 + 19 | 0] << 24, f4 = a4[B6 + 20 | 0] | a4[B6 + 21 | 0] << 8 | a4[B6 + 22 | 0] << 16 | a4[B6 + 23 | 0] << 24, t5 = a4[0 | B6] | a4[B6 + 1 | 0] << 8 | a4[B6 + 2 | 0] << 16 | a4[B6 + 3 | 0] << 24, g8 = a4[B6 + 4 | 0] | a4[B6 + 5 | 0] << 8 | a4[B6 + 6 | 0] << 16 | a4[B6 + 7 | 0] << 24, i6 = a4[B6 + 28 | 0] | a4[B6 + 29 | 0] << 8 | a4[B6 + 30 | 0] << 16 | a4[B6 + 31 | 0] << 24, C6 = I9, I9 = a4[B6 + 24 | 0] | a4[B6 + 25 | 0] << 8 | a4[B6 + 26 | 0] << 16 | a4[B6 + 27 | 0] << 24, E5[C6 + 24 | 0] = I9, E5[C6 + 25 | 0] = I9 >>> 8, E5[C6 + 26 | 0] = I9 >>> 16, E5[C6 + 27 | 0] = I9 >>> 24, E5[C6 + 28 | 0] = i6, E5[C6 + 29 | 0] = i6 >>> 8, E5[C6 + 30 | 0] = i6 >>> 16, E5[C6 + 31 | 0] = i6 >>> 24, E5[C6 + 16 | 0] = r4, E5[C6 + 17 | 0] = r4 >>> 8, E5[C6 + 18 | 0] = r4 >>> 16, E5[C6 + 19 | 0] = r4 >>> 24, E5[C6 + 20 | 0] = f4, E5[C6 + 21 | 0] = f4 >>> 8, E5[C6 + 22 | 0] = f4 >>> 16, E5[C6 + 23 | 0] = f4 >>> 24, E5[C6 + 8 | 0] = n5, E5[C6 + 9 | 0] = n5 >>> 8, E5[C6 + 10 | 0] = n5 >>> 16, E5[C6 + 11 | 0] = n5 >>> 24, E5[C6 + 12 | 0] = o5, E5[C6 + 13 | 0] = o5 >>> 8, E5[C6 + 14 | 0] = o5 >>> 16, E5[C6 + 15 | 0] = o5 >>> 24, E5[0 | C6] = t5, E5[C6 + 1 | 0] = t5 >>> 8, E5[C6 + 2 | 0] = t5 >>> 16, E5[C6 + 3 | 0] = t5 >>> 24, E5[C6 + 4 | 0] = g8, E5[C6 + 5 | 0] = g8 >>> 8, E5[C6 + 6 | 0] = g8 >>> 16, E5[C6 + 7 | 0] = g8 >>> 24, r4 = a4[(o5 = A10) + 8 | 0] | a4[o5 + 9 | 0] << 8 | a4[o5 + 10 | 0] << 16 | a4[o5 + 11 | 0] << 24, f4 = a4[o5 + 12 | 0] | a4[o5 + 13 | 0] << 8 | a4[o5 + 14 | 0] << 16 | a4[o5 + 15 | 0] << 24, t5 = a4[o5 + 16 | 0] | a4[o5 + 17 | 0] << 8 | a4[o5 + 18 | 0] << 16 | a4[o5 + 19 | 0] << 24, g8 = a4[o5 + 20 | 0] | a4[o5 + 21 | 0] << 8 | a4[o5 + 22 | 0] << 16 | a4[o5 + 23 | 0] << 24, I9 = a4[0 | o5] | a4[o5 + 1 | 0] << 8 | a4[o5 + 2 | 0] << 16 | a4[o5 + 3 | 0] << 24, A10 = a4[o5 + 4 | 0] | a4[o5 + 5 | 0] << 8 | a4[o5 + 6 | 0] << 16 | a4[o5 + 7 | 0] << 24, n5 = a4[o5 + 28 | 0] | a4[o5 + 29 | 0] << 8 | a4[o5 + 30 | 0] << 16 | a4[o5 + 31 | 0] << 24, o5 = a4[o5 + 24 | 0] | a4[o5 + 25 | 0] << 8 | a4[o5 + 26 | 0] << 16 | a4[o5 + 27 | 0] << 24, E5[C6 + 56 | 0] = o5, E5[C6 + 57 | 0] = o5 >>> 8, E5[C6 + 58 | 0] = o5 >>> 16, E5[C6 + 59 | 0] = o5 >>> 24, E5[C6 + 60 | 0] = n5, E5[C6 + 61 | 0] = n5 >>> 8, E5[C6 + 62 | 0] = n5 >>> 16, E5[C6 + 63 | 0] = n5 >>> 24, E5[C6 + 48 | 0] = t5, E5[C6 + 49 | 0] = t5 >>> 8, E5[C6 + 50 | 0] = t5 >>> 16, E5[C6 + 51 | 0] = t5 >>> 24, E5[C6 + 52 | 0] = g8, E5[C6 + 53 | 0] = g8 >>> 8, E5[C6 + 54 | 0] = g8 >>> 16, E5[C6 + 55 | 0] = g8 >>> 24, E5[C6 + 40 | 0] = r4, E5[C6 + 41 | 0] = r4 >>> 8, E5[C6 + 42 | 0] = r4 >>> 16, E5[C6 + 43 | 0] = r4 >>> 24, E5[C6 + 44 | 0] = f4, E5[C6 + 45 | 0] = f4 >>> 8, E5[C6 + 46 | 0] = f4 >>> 16, E5[C6 + 47 | 0] = f4 >>> 24, E5[C6 + 32 | 0] = I9, E5[C6 + 33 | 0] = I9 >>> 8, E5[C6 + 34 | 0] = I9 >>> 16, E5[C6 + 35 | 0] = I9 >>> 24, E5[C6 + 36 | 0] = A10, E5[C6 + 37 | 0] = A10 >>> 8, E5[C6 + 38 | 0] = A10 >>> 16, E5[C6 + 39 | 0] = A10 >>> 24, D4 = Q6 + 160 | 0, 0;
                    }, vb: function(A10, I9) {
                      A10 |= 0, I9 |= 0;
                      var g8, C6, B6, Q6, i6, n5 = 0, r4 = 0, f4 = 0;
                      return D4 = r4 = D4 - 192 | 0, hA(r4, 32), QA(I9, r4, 32, 0), E5[0 | I9] = 248 & a4[0 | I9], E5[I9 + 31 | 0] = 63 & a4[I9 + 31 | 0] | 64, v5(f4 = r4 + 32 | 0, I9), uA(A10, f4), g8 = r4, f4 = o4[r4 + 28 >> 2], r4 = o4[r4 + 24 >> 2], E5[I9 + 24 | 0] = r4, E5[I9 + 25 | 0] = r4 >>> 8, E5[I9 + 26 | 0] = r4 >>> 16, E5[I9 + 27 | 0] = r4 >>> 24, E5[I9 + 28 | 0] = f4, E5[I9 + 29 | 0] = f4 >>> 8, E5[I9 + 30 | 0] = f4 >>> 16, E5[I9 + 31 | 0] = f4 >>> 24, f4 = o4[g8 + 20 >> 2], r4 = o4[g8 + 16 >> 2], E5[I9 + 16 | 0] = r4, E5[I9 + 17 | 0] = r4 >>> 8, E5[I9 + 18 | 0] = r4 >>> 16, E5[I9 + 19 | 0] = r4 >>> 24, E5[I9 + 20 | 0] = f4, E5[I9 + 21 | 0] = f4 >>> 8, E5[I9 + 22 | 0] = f4 >>> 16, E5[I9 + 23 | 0] = f4 >>> 24, f4 = o4[g8 + 12 >> 2], r4 = o4[g8 + 8 >> 2], E5[I9 + 8 | 0] = r4, E5[I9 + 9 | 0] = r4 >>> 8, E5[I9 + 10 | 0] = r4 >>> 16, E5[I9 + 11 | 0] = r4 >>> 24, E5[I9 + 12 | 0] = f4, E5[I9 + 13 | 0] = f4 >>> 8, E5[I9 + 14 | 0] = f4 >>> 16, E5[I9 + 15 | 0] = f4 >>> 24, f4 = o4[g8 + 4 >> 2], r4 = o4[g8 >> 2], E5[0 | I9] = r4, E5[I9 + 1 | 0] = r4 >>> 8, E5[I9 + 2 | 0] = r4 >>> 16, E5[I9 + 3 | 0] = r4 >>> 24, E5[I9 + 4 | 0] = f4, E5[I9 + 5 | 0] = f4 >>> 8, E5[I9 + 6 | 0] = f4 >>> 16, E5[I9 + 7 | 0] = f4 >>> 24, C6 = a4[(n5 = A10) + 8 | 0] | a4[n5 + 9 | 0] << 8 | a4[n5 + 10 | 0] << 16 | a4[n5 + 11 | 0] << 24, B6 = a4[n5 + 12 | 0] | a4[n5 + 13 | 0] << 8 | a4[n5 + 14 | 0] << 16 | a4[n5 + 15 | 0] << 24, Q6 = a4[n5 + 16 | 0] | a4[n5 + 17 | 0] << 8 | a4[n5 + 18 | 0] << 16 | a4[n5 + 19 | 0] << 24, f4 = a4[n5 + 20 | 0] | a4[n5 + 21 | 0] << 8 | a4[n5 + 22 | 0] << 16 | a4[n5 + 23 | 0] << 24, r4 = a4[0 | n5] | a4[n5 + 1 | 0] << 8 | a4[n5 + 2 | 0] << 16 | a4[n5 + 3 | 0] << 24, A10 = a4[n5 + 4 | 0] | a4[n5 + 5 | 0] << 8 | a4[n5 + 6 | 0] << 16 | a4[n5 + 7 | 0] << 24, i6 = a4[n5 + 28 | 0] | a4[n5 + 29 | 0] << 8 | a4[n5 + 30 | 0] << 16 | a4[n5 + 31 | 0] << 24, n5 = a4[n5 + 24 | 0] | a4[n5 + 25 | 0] << 8 | a4[n5 + 26 | 0] << 16 | a4[n5 + 27 | 0] << 24, E5[I9 + 56 | 0] = n5, E5[I9 + 57 | 0] = n5 >>> 8, E5[I9 + 58 | 0] = n5 >>> 16, E5[I9 + 59 | 0] = n5 >>> 24, E5[I9 + 60 | 0] = i6, E5[I9 + 61 | 0] = i6 >>> 8, E5[I9 + 62 | 0] = i6 >>> 16, E5[I9 + 63 | 0] = i6 >>> 24, E5[I9 + 48 | 0] = Q6, E5[I9 + 49 | 0] = Q6 >>> 8, E5[I9 + 50 | 0] = Q6 >>> 16, E5[I9 + 51 | 0] = Q6 >>> 24, E5[I9 + 52 | 0] = f4, E5[I9 + 53 | 0] = f4 >>> 8, E5[I9 + 54 | 0] = f4 >>> 16, E5[I9 + 55 | 0] = f4 >>> 24, E5[I9 + 40 | 0] = C6, E5[I9 + 41 | 0] = C6 >>> 8, E5[I9 + 42 | 0] = C6 >>> 16, E5[I9 + 43 | 0] = C6 >>> 24, E5[I9 + 44 | 0] = B6, E5[I9 + 45 | 0] = B6 >>> 8, E5[I9 + 46 | 0] = B6 >>> 16, E5[I9 + 47 | 0] = B6 >>> 24, E5[I9 + 32 | 0] = r4, E5[I9 + 33 | 0] = r4 >>> 8, E5[I9 + 34 | 0] = r4 >>> 16, E5[I9 + 35 | 0] = r4 >>> 24, E5[I9 + 36 | 0] = A10, E5[I9 + 37 | 0] = A10 >>> 8, E5[I9 + 38 | 0] = A10 >>> 16, E5[I9 + 39 | 0] = A10 >>> 24, $A(g8, 32), D4 = g8 + 192 | 0, 0;
                    }, wb: function(A10, I9, g8, C6, B6, Q6) {
                      I9 |= 0, B6 |= 0, Q6 |= 0;
                      var i6, E6 = 0;
                      return D4 = i6 = D4 - 16 | 0, s4(A10 |= 0, i6 + 8 | 0, kA(A10 - -64 | 0, g8 |= 0, C6 |= 0), C6, B6, Q6, 0), 64 != o4[i6 + 8 >> 2] | o4[i6 + 12 >> 2] ? (I9 && (o4[I9 >> 2] = 0, o4[I9 + 4 >> 2] = 0), MA(A10, 0, C6 - -64 | 0), E6 = -1) : I9 && (o4[I9 >> 2] = C6 - -64, o4[I9 + 4 >> 2] = B6 - ((C6 >>> 0 < 4294967232) - 1 | 0)), D4 = i6 + 16 | 0, 0 | E6;
                    }, xb: function(A10, I9, g8, C6, B6, Q6) {
                      A10 |= 0, I9 |= 0, g8 |= 0;
                      var i6 = 0;
                      A: {
                        I: {
                          if (!(!(B6 |= 0) & (C6 |= 0) >>> 0 < 64 || (B6 = B6 - 1 | 0, !(B6 = (C6 = C6 + -64 | 0) >>> 0 < 4294967232 ? B6 + 1 | 0 : B6) & C6 >>> 0 > 4294967231 | B6))) {
                            if (!k5(g8, i6 = g8 - -64 | 0, C6, B6, Q6 |= 0, 0))
                              break I;
                            A10 && MA(A10, 0, C6);
                          }
                          if (g8 = -1, !I9)
                            break A;
                          o4[I9 >> 2] = 0, o4[I9 + 4 >> 2] = 0;
                          break A;
                        }
                        I9 && (o4[I9 >> 2] = C6, o4[I9 + 4 >> 2] = B6), g8 = 0, A10 && kA(A10, i6, C6);
                      }
                      return 0 | g8;
                    }, yb: function(A10, I9, g8, C6, B6, Q6) {
                      return s4(A10 |= 0, I9 |= 0, g8 |= 0, C6 |= 0, B6 |= 0, Q6 |= 0, 0), 0;
                    }, zb: function(A10, I9, g8, C6, B6) {
                      return 0 | k5(A10 |= 0, I9 |= 0, g8 |= 0, C6 |= 0, B6 |= 0, 0);
                    }, Ab: function(A10) {
                      return EA(A10 |= 0), 0;
                    }, Bb: function(A10, I9, g8, C6) {
                      return 0 | m4(A10 |= 0, I9 |= 0, g8 |= 0, C6 |= 0);
                    }, Cb: function(A10, I9, g8, C6) {
                      var B6;
                      return I9 |= 0, g8 |= 0, C6 |= 0, D4 = B6 = D4 + -64 | 0, M5(A10 |= 0, B6), A10 = s4(I9, g8, B6, 64, 0, C6, 1), D4 = B6 - -64 | 0, 0 | A10;
                    }, Db: function(A10, I9, g8) {
                      var C6;
                      return I9 |= 0, g8 |= 0, D4 = C6 = D4 + -64 | 0, M5(A10 |= 0, C6), A10 = k5(I9, C6, 64, 0, g8, 1), D4 = C6 - -64 | 0, 0 | A10;
                    }, Eb: function(A10, I9) {
                      A10 |= 0;
                      var g8, C6 = 0, B6 = 0, Q6 = 0, i6 = 0, a5 = 0, n5 = 0, f4 = 0, t5 = 0, e5 = 0, c5 = 0, y6 = 0, h5 = 0, s5 = 0, p6 = 0, u6 = 0, k6 = 0, S6 = 0, H6 = 0, M6 = 0, G6 = 0, J6 = 0, N6 = 0, Y5 = 0, K6 = 0, P6 = 0, v6 = 0, m5 = 0, d4 = 0, L6 = 0, R6 = 0, x6 = 0, j5 = 0, q5 = 0, z6 = 0, O6 = 0, T6 = 0, Z5 = 0, $5 = 0, AA2 = 0, IA2 = 0, gA2 = 0, CA2 = 0, BA2 = 0, QA2 = 0, EA2 = 0, oA2 = 0, nA2 = 0, rA2 = 0, fA2 = 0, tA2 = 0, eA2 = 0, cA2 = 0, yA2 = 0, wA2 = 0, hA2 = 0, sA2 = 0, pA2 = 0, uA2 = 0, kA2 = 0, FA2 = 0, lA2 = 0, SA2 = 0, HA2 = 0, GA2 = 0, UA2 = 0, JA2 = 0, NA2 = 0, YA2 = 0, bA2 = 0, _A2 = 0, KA2 = 0, PA2 = 0, vA2 = 0, mA2 = 0, dA2 = 0, LA2 = 0, RA2 = 0, xA2 = 0, jA2 = 0, XA2 = 0;
                      if (D4 = g8 = D4 - 256 | 0, PA2 = -1, !aA(I9 |= 0) && !U5(g8 + 96 | 0, I9)) {
                        for (D4 = C6 = D4 - 2048 | 0, V5(s5 = C6 + 640 | 0, I9 = g8 + 96 | 0), B6 = o4[I9 + 8 >> 2], i6 = o4[I9 + 12 >> 2], Q6 = o4[I9 + 16 >> 2], a5 = o4[I9 + 20 >> 2], e5 = o4[I9 + 24 >> 2], c5 = o4[I9 + 28 >> 2], n5 = o4[I9 >> 2], f4 = o4[I9 + 4 >> 2], p6 = o4[I9 + 36 >> 2], o4[C6 + 352 >> 2] = o4[I9 + 32 >> 2], o4[C6 + 356 >> 2] = p6, o4[C6 + 344 >> 2] = e5, o4[C6 + 348 >> 2] = c5, o4[C6 + 336 >> 2] = Q6, o4[C6 + 340 >> 2] = a5, o4[C6 + 328 >> 2] = B6, o4[C6 + 332 >> 2] = i6, o4[C6 + 320 >> 2] = n5, o4[C6 + 324 >> 2] = f4, B6 = o4[I9 + 40 >> 2], i6 = o4[I9 + 44 >> 2], Q6 = o4[I9 + 48 >> 2], a5 = o4[I9 + 52 >> 2], e5 = o4[I9 + 56 >> 2], c5 = o4[I9 + 60 >> 2], f4 = o4[(n5 = I9 - -64 | 0) >> 2], n5 = o4[n5 + 4 >> 2], p6 = o4[I9 + 76 >> 2], o4[C6 + 392 >> 2] = o4[I9 + 72 >> 2], o4[C6 + 396 >> 2] = p6, o4[C6 + 384 >> 2] = f4, o4[C6 + 388 >> 2] = n5, o4[C6 + 376 >> 2] = e5, o4[C6 + 380 >> 2] = c5, o4[C6 + 368 >> 2] = Q6, o4[C6 + 372 >> 2] = a5, o4[C6 + 360 >> 2] = B6, o4[C6 + 364 >> 2] = i6, B6 = o4[I9 + 80 >> 2], i6 = o4[I9 + 84 >> 2], Q6 = o4[I9 + 88 >> 2], a5 = o4[I9 + 92 >> 2], e5 = o4[I9 + 96 >> 2], c5 = o4[I9 + 100 >> 2], n5 = o4[I9 + 104 >> 2], f4 = o4[I9 + 108 >> 2], p6 = o4[I9 + 116 >> 2], o4[C6 + 432 >> 2] = o4[I9 + 112 >> 2], o4[C6 + 436 >> 2] = p6, o4[C6 + 424 >> 2] = n5, o4[C6 + 428 >> 2] = f4, o4[C6 + 416 >> 2] = e5, o4[C6 + 420 >> 2] = c5, o4[C6 + 408 >> 2] = Q6, o4[C6 + 412 >> 2] = a5, o4[C6 + 400 >> 2] = B6, o4[C6 + 404 >> 2] = i6, l4(I9 = C6 + 480 | 0, B6 = C6 + 320 | 0), F5(n5 = C6 + 160 | 0, I9, i6 = C6 + 600 | 0), F5(C6 + 200 | 0, Q6 = C6 + 520 | 0, a5 = C6 + 560 | 0), F5(C6 + 240 | 0, a5, i6), F5(C6 + 280 | 0, I9, Q6), _5(I9, n5, s5), F5(B6, I9, i6), F5(s5 = C6 + 360 | 0, Q6, a5), F5(e5 = C6 + 400 | 0, a5, i6), F5(c5 = C6 + 440 | 0, I9, Q6), V5(f4 = C6 + 800 | 0, B6), _5(I9, n5, f4), F5(B6, I9, i6), F5(s5, Q6, a5), F5(e5, a5, i6), F5(c5, I9, Q6), V5(f4 = C6 + 960 | 0, B6), _5(I9, n5, f4), F5(B6, I9, i6), F5(s5, Q6, a5), F5(e5, a5, i6), F5(c5, I9, Q6), V5(f4 = C6 + 1120 | 0, B6), _5(I9, n5, f4), F5(B6, I9, i6), F5(s5, Q6, a5), F5(e5, a5, i6), F5(c5, I9, Q6), V5(f4 = C6 + 1280 | 0, B6), _5(I9, n5, f4), F5(B6, I9, i6), F5(s5, Q6, a5), F5(e5, a5, i6), F5(c5, I9, Q6), V5(f4 = C6 + 1440 | 0, B6), _5(I9, n5, f4), F5(B6, I9, i6), F5(s5, Q6, a5), F5(e5, a5, i6), F5(c5, I9, Q6), V5(f4 = C6 + 1600 | 0, B6), _5(I9, n5, f4), F5(B6, I9, i6), F5(s5, Q6, a5), F5(e5, a5, i6), F5(c5, I9, Q6), V5(C6 + 1760 | 0, B6), o4[C6 + 32 >> 2] = 0, o4[C6 + 36 >> 2] = 0, o4[C6 + 24 >> 2] = 0, o4[C6 + 28 >> 2] = 0, o4[C6 + 16 >> 2] = 0, o4[C6 + 20 >> 2] = 0, o4[C6 + 8 >> 2] = 0, o4[C6 + 12 >> 2] = 0, o4[C6 + 44 >> 2] = 0, o4[C6 + 48 >> 2] = 0, o4[C6 + 52 >> 2] = 0, o4[C6 + 56 >> 2] = 0, o4[C6 + 60 >> 2] = 0, o4[C6 + 64 >> 2] = 0, o4[C6 + 68 >> 2] = 0, o4[C6 + 72 >> 2] = 0, o4[C6 + 76 >> 2] = 0, o4[C6 + 80 >> 2] = 1, o4[C6 >> 2] = 0, o4[C6 + 4 >> 2] = 0, o4[C6 + 40 >> 2] = 1, MA(C6 + 84 | 0, 0, 76), f4 = C6 + 120 | 0, p6 = C6 + 80 | 0, M6 = C6 + 40 | 0, I9 = 252; B6 = o4[C6 + 36 >> 2], o4[C6 + 1960 >> 2] = o4[C6 + 32 >> 2], o4[C6 + 1964 >> 2] = B6, B6 = o4[C6 + 28 >> 2], o4[C6 + 1952 >> 2] = o4[C6 + 24 >> 2], o4[C6 + 1956 >> 2] = B6, B6 = o4[C6 + 20 >> 2], o4[C6 + 1944 >> 2] = o4[C6 + 16 >> 2], o4[C6 + 1948 >> 2] = B6, B6 = o4[C6 + 12 >> 2], o4[C6 + 1936 >> 2] = o4[C6 + 8 >> 2], o4[C6 + 1940 >> 2] = B6, B6 = o4[C6 + 4 >> 2], o4[C6 + 1928 >> 2] = o4[C6 >> 2], o4[C6 + 1932 >> 2] = B6, B6 = o4[C6 + 76 >> 2], o4[C6 + 2e3 >> 2] = o4[C6 + 72 >> 2], o4[C6 + 2004 >> 2] = B6, B6 = o4[C6 + 68 >> 2], o4[C6 + 1992 >> 2] = o4[C6 + 64 >> 2], o4[C6 + 1996 >> 2] = B6, B6 = o4[C6 + 60 >> 2], o4[C6 + 1984 >> 2] = o4[C6 + 56 >> 2], o4[C6 + 1988 >> 2] = B6, B6 = o4[C6 + 52 >> 2], o4[C6 + 1976 >> 2] = o4[C6 + 48 >> 2], o4[C6 + 1980 >> 2] = B6, B6 = o4[C6 + 44 >> 2], o4[C6 + 1968 >> 2] = o4[C6 + 40 >> 2], o4[C6 + 1972 >> 2] = B6, B6 = o4[C6 + 84 >> 2], o4[C6 + 2008 >> 2] = o4[C6 + 80 >> 2], o4[C6 + 2012 >> 2] = B6, B6 = o4[C6 + 92 >> 2], o4[C6 + 2016 >> 2] = o4[C6 + 88 >> 2], o4[C6 + 2020 >> 2] = B6, B6 = o4[C6 + 100 >> 2], o4[C6 + 2024 >> 2] = o4[C6 + 96 >> 2], o4[C6 + 2028 >> 2] = B6, B6 = o4[C6 + 108 >> 2], o4[C6 + 2032 >> 2] = o4[C6 + 104 >> 2], o4[C6 + 2036 >> 2] = B6, B6 = o4[C6 + 116 >> 2], o4[C6 + 2040 >> 2] = o4[C6 + 112 >> 2], o4[C6 + 2044 >> 2] = B6, B6 = I9, I9 = E5[I9 + 33424 | 0], l4(C6 + 480 | 0, C6 + 1928 | 0), (0 | I9) > 0 ? (F5(k6 = C6 + 320 | 0, n5 = C6 + 480 | 0, i6), F5(s5, Q6, a5), F5(e5, a5, i6), F5(c5, n5, Q6), _5(n5, k6, (C6 + 640 | 0) + r3((254 & I9) >>> 1 | 0, 160) | 0)) : (0 | I9) >= 0 || (F5(k6 = C6 + 320 | 0, n5 = C6 + 480 | 0, i6), F5(s5, Q6, a5), F5(e5, a5, i6), F5(c5, n5, Q6), b5(n5, k6, (C6 + 640 | 0) + r3((0 - I9 & 254) >>> 1 | 0, 160) | 0)), F5(C6, I9 = C6 + 480 | 0, i6), F5(M6, Q6, a5), F5(p6, a5, i6), F5(f4, I9, Q6), I9 = B6 - 1 | 0, B6; )
                          ;
                        W5(I9 = C6 + 640 | 0, C6), I9 = iA(I9, 32), D4 = C6 + 2048 | 0, I9 && (Q6 = o4[g8 + 136 >> 2], o4[g8 >> 2] = 1 - Q6, PA2 = 0, j5 = o4[g8 + 172 >> 2], o4[g8 + 36 >> 2] = 0 - j5, f4 = o4[g8 + 168 >> 2], o4[g8 + 32 >> 2] = 0 - f4, q5 = o4[g8 + 164 >> 2], o4[g8 + 28 >> 2] = 0 - q5, s5 = o4[g8 + 160 >> 2], o4[g8 + 24 >> 2] = 0 - s5, z6 = o4[g8 + 156 >> 2], o4[g8 + 20 >> 2] = 0 - z6, e5 = o4[g8 + 152 >> 2], o4[g8 + 16 >> 2] = 0 - e5, O6 = o4[g8 + 148 >> 2], o4[g8 + 12 >> 2] = 0 - O6, c5 = o4[g8 + 144 >> 2], o4[g8 + 8 >> 2] = 0 - c5, T6 = o4[g8 + 140 >> 2], o4[g8 + 4 >> 2] = 0 - T6, X5(g8, g8), I9 = DA(M6 = o4[g8 + 4 >> 2], L6 = M6 >> 31, G6 = z6 << 1, fA2 = G6 >> 31), B6 = w4, C6 = DA(a5 = o4[g8 >> 2], N6 = a5 >> 31, s5, Y5 = s5 >> 31), B6 = w4 + B6 | 0, B6 = (I9 = C6 + I9 | 0) >>> 0 < C6 >>> 0 ? B6 + 1 | 0 : B6, C6 = (i6 = DA(K6 = o4[g8 + 8 >> 2], Z5 = K6 >> 31, e5, P6 = e5 >> 31)) + I9 | 0, I9 = w4 + B6 | 0, I9 = C6 >>> 0 < i6 >>> 0 ? I9 + 1 | 0 : I9, B6 = C6, C6 = DA(R6 = o4[g8 + 12 >> 2], IA2 = R6 >> 31, BA2 = O6 << 1, tA2 = BA2 >> 31), I9 = w4 + I9 | 0, I9 = C6 >>> 0 > (B6 = B6 + C6 | 0) >>> 0 ? I9 + 1 | 0 : I9, C6 = DA($5 = o4[g8 + 16 >> 2], QA2 = $5 >> 31, c5, v6 = c5 >> 31), I9 = w4 + I9 | 0, I9 = C6 >>> 0 > (B6 = C6 + B6 | 0) >>> 0 ? I9 + 1 | 0 : I9, JA2 = i6 = o4[g8 + 20 >> 2], n5 = DA(i6, eA2 = i6 >> 31, EA2 = T6 << 1, cA2 = EA2 >> 31), C6 = w4 + I9 | 0, C6 = (B6 = n5 + B6 | 0) >>> 0 < n5 >>> 0 ? C6 + 1 | 0 : C6, NA2 = S6 = o4[g8 + 24 >> 2], I9 = (Q6 = DA(S6, HA2 = S6 >> 31, n5 = Q6 + 1 | 0, m5 = n5 >> 31)) + B6 | 0, B6 = w4 + C6 | 0, B6 = I9 >>> 0 < Q6 >>> 0 ? B6 + 1 | 0 : B6, yA2 = o4[g8 + 28 >> 2], C6 = (Q6 = DA(y6 = r3(yA2, 19), gA2 = y6 >> 31, oA2 = j5 << 1, wA2 = oA2 >> 31)) + I9 | 0, I9 = w4 + B6 | 0, I9 = C6 >>> 0 < Q6 >>> 0 ? I9 + 1 | 0 : I9, B6 = C6, vA2 = o4[g8 + 32 >> 2], C6 = DA(k6 = r3(vA2, 19), AA2 = k6 >> 31, f4, d4 = f4 >> 31), I9 = w4 + I9 | 0, I9 = C6 >>> 0 > (B6 = B6 + C6 | 0) >>> 0 ? I9 + 1 | 0 : I9, mA2 = o4[g8 + 36 >> 2], C6 = DA(p6 = r3(mA2, 19), x6 = p6 >> 31, nA2 = q5 << 1, hA2 = nA2 >> 31), I9 = w4 + I9 | 0, h5 = B6 = C6 + B6 | 0, Q6 = C6 >>> 0 > B6 >>> 0 ? I9 + 1 | 0 : I9, I9 = DA(e5, P6, M6, L6), B6 = w4, t5 = DA(a5, N6, z6, sA2 = z6 >> 31), C6 = w4 + B6 | 0, C6 = (I9 = t5 + I9 | 0) >>> 0 < t5 >>> 0 ? C6 + 1 | 0 : C6, t5 = DA(K6, Z5, O6, pA2 = O6 >> 31), B6 = w4 + C6 | 0, B6 = (I9 = t5 + I9 | 0) >>> 0 < t5 >>> 0 ? B6 + 1 | 0 : B6, C6 = (t5 = DA(c5, v6, R6, IA2)) + I9 | 0, I9 = w4 + B6 | 0, I9 = C6 >>> 0 < t5 >>> 0 ? I9 + 1 | 0 : I9, B6 = C6, C6 = DA($5, QA2, T6, uA2 = T6 >> 31), I9 = w4 + I9 | 0, I9 = C6 >>> 0 > (B6 = B6 + C6 | 0) >>> 0 ? I9 + 1 | 0 : I9, C6 = DA(n5, m5, i6, eA2), I9 = w4 + I9 | 0, I9 = C6 >>> 0 > (B6 = C6 + B6 | 0) >>> 0 ? I9 + 1 | 0 : I9, t5 = DA(S6 = r3(S6, 19), rA2 = S6 >> 31, j5, kA2 = j5 >> 31), C6 = w4 + I9 | 0, C6 = (B6 = t5 + B6 | 0) >>> 0 < t5 >>> 0 ? C6 + 1 | 0 : C6, I9 = (t5 = DA(f4, d4, y6, gA2)) + B6 | 0, B6 = w4 + C6 | 0, B6 = I9 >>> 0 < t5 >>> 0 ? B6 + 1 | 0 : B6, C6 = (t5 = DA(k6, AA2, q5, FA2 = q5 >> 31)) + I9 | 0, I9 = w4 + B6 | 0, I9 = C6 >>> 0 < t5 >>> 0 ? I9 + 1 | 0 : I9, B6 = C6, C6 = DA(s5, Y5, p6, x6), I9 = w4 + I9 | 0, YA2 = B6 = B6 + C6 | 0, CA2 = C6 >>> 0 > B6 >>> 0 ? I9 + 1 | 0 : I9, I9 = DA(M6, L6, BA2, tA2), C6 = w4, B6 = (t5 = DA(a5, N6, e5, P6)) + I9 | 0, I9 = w4 + C6 | 0, I9 = B6 >>> 0 < t5 >>> 0 ? I9 + 1 | 0 : I9, t5 = DA(c5, v6, K6, Z5), C6 = w4 + I9 | 0, C6 = (B6 = t5 + B6 | 0) >>> 0 < t5 >>> 0 ? C6 + 1 | 0 : C6, I9 = (t5 = DA(R6, IA2, EA2, cA2)) + B6 | 0, B6 = w4 + C6 | 0, B6 = I9 >>> 0 < t5 >>> 0 ? B6 + 1 | 0 : B6, C6 = (t5 = DA(n5, m5, $5, QA2)) + I9 | 0, I9 = w4 + B6 | 0, I9 = C6 >>> 0 < t5 >>> 0 ? I9 + 1 | 0 : I9, B6 = C6, C6 = DA(t5 = r3(i6, 19), lA2 = t5 >> 31, oA2, wA2), I9 = w4 + I9 | 0, I9 = C6 >>> 0 > (B6 = B6 + C6 | 0) >>> 0 ? I9 + 1 | 0 : I9, C6 = DA(f4, d4, S6, rA2), I9 = w4 + I9 | 0, I9 = C6 >>> 0 > (B6 = C6 + B6 | 0) >>> 0 ? I9 + 1 | 0 : I9, i6 = DA(y6, gA2, nA2, hA2), C6 = w4 + I9 | 0, C6 = (B6 = i6 + B6 | 0) >>> 0 < i6 >>> 0 ? C6 + 1 | 0 : C6, I9 = (i6 = DA(s5, Y5, k6, AA2)) + B6 | 0, B6 = w4 + C6 | 0, B6 = I9 >>> 0 < i6 >>> 0 ? B6 + 1 | 0 : B6, C6 = (i6 = DA(p6, x6, G6, fA2)) + I9 | 0, I9 = w4 + B6 | 0, dA2 = C6, LA2 = I9 = C6 >>> 0 < i6 >>> 0 ? I9 + 1 | 0 : I9, RA2 = C6 = C6 + 33554432 | 0, xA2 = I9 = C6 >>> 0 < 33554432 ? I9 + 1 | 0 : I9, C6 = (67108863 & I9) << 6 | C6 >>> 26, I9 = (I9 >> 26) + CA2 | 0, YA2 = i6 = C6 + YA2 | 0, C6 = I9 = C6 >>> 0 > i6 >>> 0 ? I9 + 1 | 0 : I9, jA2 = I9 = i6 + 16777216 | 0, i6 = (33554431 & (C6 = I9 >>> 0 < 16777216 ? C6 + 1 | 0 : C6)) << 7 | I9 >>> 25, I9 = (B6 = C6 >> 25) + Q6 | 0, I9 = (C6 = i6 + h5 | 0) >>> 0 < i6 >>> 0 ? I9 + 1 | 0 : I9, bA2 = B6 = C6 + 33554432 | 0, i6 = I9 = B6 >>> 0 < 33554432 ? I9 + 1 | 0 : I9, o4[g8 + 72 >> 2] = C6 - (-67108864 & B6), I9 = DA(M6, L6, EA2, cA2), B6 = w4, Q6 = DA(a5, N6, c5, v6), C6 = w4 + B6 | 0, C6 = (I9 = Q6 + I9 | 0) >>> 0 < Q6 >>> 0 ? C6 + 1 | 0 : C6, B6 = (Q6 = DA(n5, m5, K6, Z5)) + I9 | 0, I9 = w4 + C6 | 0, I9 = B6 >>> 0 < Q6 >>> 0 ? I9 + 1 | 0 : I9, C6 = DA(Q6 = r3(R6, 19), SA2 = Q6 >> 31, oA2, wA2), I9 = w4 + I9 | 0, I9 = C6 >>> 0 > (B6 = C6 + B6 | 0) >>> 0 ? I9 + 1 | 0 : I9, C6 = (h5 = DA(CA2 = r3($5, 19), GA2 = CA2 >> 31, f4, d4)) + B6 | 0, B6 = w4 + I9 | 0, B6 = C6 >>> 0 < h5 >>> 0 ? B6 + 1 | 0 : B6, h5 = DA(nA2, hA2, t5, lA2), I9 = w4 + B6 | 0, I9 = (C6 = h5 + C6 | 0) >>> 0 < h5 >>> 0 ? I9 + 1 | 0 : I9, B6 = (h5 = DA(s5, Y5, S6, rA2)) + C6 | 0, C6 = w4 + I9 | 0, C6 = B6 >>> 0 < h5 >>> 0 ? C6 + 1 | 0 : C6, h5 = DA(y6, gA2, G6, fA2), I9 = w4 + C6 | 0, I9 = (B6 = h5 + B6 | 0) >>> 0 < h5 >>> 0 ? I9 + 1 | 0 : I9, C6 = DA(e5, P6, k6, AA2), I9 = w4 + I9 | 0, I9 = C6 >>> 0 > (B6 = C6 + B6 | 0) >>> 0 ? I9 + 1 | 0 : I9, C6 = (h5 = DA(p6, x6, BA2, tA2)) + B6 | 0, B6 = w4 + I9 | 0, H6 = C6, _A2 = C6 >>> 0 < h5 >>> 0 ? B6 + 1 | 0 : B6, I9 = DA(n5, m5, M6, L6), B6 = w4, C6 = (h5 = DA(a5, N6, T6, uA2)) + I9 | 0, I9 = w4 + B6 | 0, I9 = C6 >>> 0 < h5 >>> 0 ? I9 + 1 | 0 : I9, h5 = B6 = r3(K6, 19), B6 = (u6 = DA(B6, UA2 = B6 >> 31, j5, kA2)) + C6 | 0, C6 = w4 + I9 | 0, C6 = B6 >>> 0 < u6 >>> 0 ? C6 + 1 | 0 : C6, u6 = DA(f4, d4, Q6, SA2), I9 = w4 + C6 | 0, I9 = (B6 = u6 + B6 | 0) >>> 0 < u6 >>> 0 ? I9 + 1 | 0 : I9, C6 = DA(CA2, GA2, q5, FA2), I9 = w4 + I9 | 0, I9 = C6 >>> 0 > (B6 = C6 + B6 | 0) >>> 0 ? I9 + 1 | 0 : I9, C6 = (u6 = DA(s5, Y5, t5, lA2)) + B6 | 0, B6 = w4 + I9 | 0, B6 = C6 >>> 0 < u6 >>> 0 ? B6 + 1 | 0 : B6, u6 = DA(S6, rA2, z6, sA2), I9 = w4 + B6 | 0, I9 = (C6 = u6 + C6 | 0) >>> 0 < u6 >>> 0 ? I9 + 1 | 0 : I9, B6 = (u6 = DA(e5, P6, y6, gA2)) + C6 | 0, C6 = w4 + I9 | 0, C6 = B6 >>> 0 < u6 >>> 0 ? C6 + 1 | 0 : C6, u6 = DA(k6, AA2, O6, pA2), I9 = w4 + C6 | 0, I9 = (B6 = u6 + B6 | 0) >>> 0 < u6 >>> 0 ? I9 + 1 | 0 : I9, C6 = DA(c5, v6, p6, x6), I9 = w4 + I9 | 0, KA2 = B6 = C6 + B6 | 0, u6 = C6 >>> 0 > B6 >>> 0 ? I9 + 1 | 0 : I9, I9 = DA(I9 = r3(M6, 19), I9 >> 31, oA2, wA2), B6 = w4, C6 = DA(a5, N6, n5, m5), B6 = w4 + B6 | 0, B6 = (I9 = C6 + I9 | 0) >>> 0 < C6 >>> 0 ? B6 + 1 | 0 : B6, C6 = (h5 = DA(f4, d4, h5, UA2)) + I9 | 0, I9 = w4 + B6 | 0, B6 = (Q6 = DA(Q6, SA2, nA2, hA2)) + C6 | 0, C6 = w4 + (C6 >>> 0 < h5 >>> 0 ? I9 + 1 | 0 : I9) | 0, C6 = B6 >>> 0 < Q6 >>> 0 ? C6 + 1 | 0 : C6, Q6 = DA(s5, Y5, CA2, GA2), I9 = w4 + C6 | 0, I9 = (B6 = Q6 + B6 | 0) >>> 0 < Q6 >>> 0 ? I9 + 1 | 0 : I9, C6 = DA(G6, fA2, t5, lA2), I9 = w4 + I9 | 0, I9 = C6 >>> 0 > (B6 = C6 + B6 | 0) >>> 0 ? I9 + 1 | 0 : I9, C6 = (Q6 = DA(e5, P6, S6, rA2)) + B6 | 0, B6 = w4 + I9 | 0, B6 = C6 >>> 0 < Q6 >>> 0 ? B6 + 1 | 0 : B6, Q6 = DA(y6, gA2, BA2, tA2), I9 = w4 + B6 | 0, I9 = (C6 = Q6 + C6 | 0) >>> 0 < Q6 >>> 0 ? I9 + 1 | 0 : I9, B6 = (Q6 = DA(c5, v6, k6, AA2)) + C6 | 0, C6 = w4 + I9 | 0, C6 = B6 >>> 0 < Q6 >>> 0 ? C6 + 1 | 0 : C6, Q6 = DA(p6, x6, EA2, cA2), I9 = w4 + C6 | 0, h5 = B6 = Q6 + B6 | 0, SA2 = I9 = B6 >>> 0 < Q6 >>> 0 ? I9 + 1 | 0 : I9, UA2 = B6 = B6 + 33554432 | 0, XA2 = I9 = B6 >>> 0 < 33554432 ? I9 + 1 | 0 : I9, C6 = I9 >> 26, I9 = (67108863 & I9) << 6 | B6 >>> 26, B6 = C6 + u6 | 0, u6 = Q6 = I9 + KA2 | 0, I9 = B6 = I9 >>> 0 > Q6 >>> 0 ? B6 + 1 | 0 : B6, KA2 = B6 = Q6 + 16777216 | 0, Q6 = (33554431 & (I9 = B6 >>> 0 < 16777216 ? I9 + 1 | 0 : I9)) << 7 | B6 >>> 25, I9 = (I9 >> 25) + _A2 | 0, I9 = (B6 = Q6 + H6 | 0) >>> 0 < Q6 >>> 0 ? I9 + 1 | 0 : I9, _A2 = B6 = (C6 = B6) + 33554432 | 0, Q6 = I9 = B6 >>> 0 < 33554432 ? I9 + 1 | 0 : I9, o4[g8 + 56 >> 2] = C6 - (-67108864 & B6), I9 = DA(s5, Y5, M6, L6), C6 = w4, B6 = (H6 = DA(a5, N6, q5, FA2)) + I9 | 0, I9 = w4 + C6 | 0, I9 = B6 >>> 0 < H6 >>> 0 ? I9 + 1 | 0 : I9, C6 = DA(K6, Z5, z6, sA2), I9 = w4 + I9 | 0, I9 = C6 >>> 0 > (B6 = C6 + B6 | 0) >>> 0 ? I9 + 1 | 0 : I9, C6 = DA(e5, P6, R6, IA2), I9 = w4 + I9 | 0, I9 = C6 >>> 0 > (B6 = C6 + B6 | 0) >>> 0 ? I9 + 1 | 0 : I9, H6 = DA($5, QA2, O6, pA2), C6 = w4 + I9 | 0, C6 = (B6 = H6 + B6 | 0) >>> 0 < H6 >>> 0 ? C6 + 1 | 0 : C6, I9 = (H6 = DA(c5, v6, JA2, eA2)) + B6 | 0, B6 = w4 + C6 | 0, B6 = I9 >>> 0 < H6 >>> 0 ? B6 + 1 | 0 : B6, C6 = (H6 = DA(T6, uA2, NA2, HA2)) + I9 | 0, I9 = w4 + B6 | 0, I9 = C6 >>> 0 < H6 >>> 0 ? I9 + 1 | 0 : I9, B6 = C6, C6 = DA(yA2, H6 = yA2 >> 31, n5, m5), I9 = w4 + I9 | 0, I9 = C6 >>> 0 > (B6 = B6 + C6 | 0) >>> 0 ? I9 + 1 | 0 : I9, C6 = DA(k6, AA2, j5, kA2), I9 = w4 + I9 | 0, I9 = C6 >>> 0 > (B6 = C6 + B6 | 0) >>> 0 ? I9 + 1 | 0 : I9, J6 = (C6 = B6) + (B6 = DA(p6, x6, f4, d4)) | 0, C6 = w4 + I9 | 0, B6 = (I9 = i6 >> 26) + (B6 = B6 >>> 0 > J6 >>> 0 ? C6 + 1 | 0 : C6) | 0, I9 = (C6 = (i6 = (67108863 & i6) << 6 | bA2 >>> 26) + J6 | 0) >>> 0 < i6 >>> 0 ? B6 + 1 | 0 : B6, bA2 = B6 = C6 + 16777216 | 0, i6 = I9 = B6 >>> 0 < 16777216 ? I9 + 1 | 0 : I9, o4[g8 + 76 >> 2] = C6 - (-33554432 & B6), I9 = DA(c5, v6, M6, L6), B6 = w4, J6 = DA(a5, N6, O6, pA2), C6 = w4 + B6 | 0, C6 = (I9 = J6 + I9 | 0) >>> 0 < J6 >>> 0 ? C6 + 1 | 0 : C6, J6 = DA(K6, Z5, T6, uA2), B6 = w4 + C6 | 0, B6 = (I9 = J6 + I9 | 0) >>> 0 < J6 >>> 0 ? B6 + 1 | 0 : B6, C6 = (J6 = DA(n5, m5, R6, IA2)) + I9 | 0, I9 = w4 + B6 | 0, I9 = C6 >>> 0 < J6 >>> 0 ? I9 + 1 | 0 : I9, B6 = C6, C6 = DA(CA2, GA2, j5, kA2), I9 = w4 + I9 | 0, I9 = C6 >>> 0 > (B6 = B6 + C6 | 0) >>> 0 ? I9 + 1 | 0 : I9, C6 = DA(f4, d4, t5, lA2), I9 = w4 + I9 | 0, I9 = C6 >>> 0 > (B6 = C6 + B6 | 0) >>> 0 ? I9 + 1 | 0 : I9, B6 = (S6 = DA(S6, rA2, q5, FA2)) + B6 | 0, C6 = w4 + I9 | 0, I9 = (y6 = DA(s5, Y5, y6, gA2)) + B6 | 0, B6 = w4 + (B6 >>> 0 < S6 >>> 0 ? C6 + 1 | 0 : C6) | 0, C6 = (k6 = DA(k6, AA2, z6, sA2)) + I9 | 0, I9 = w4 + (I9 >>> 0 < y6 >>> 0 ? B6 + 1 | 0 : B6) | 0, I9 = C6 >>> 0 < k6 >>> 0 ? I9 + 1 | 0 : I9, B6 = C6, C6 = DA(e5, P6, p6, x6), I9 = w4 + I9 | 0, y6 = B6 = B6 + C6 | 0, I9 = (I9 = C6 >>> 0 > B6 >>> 0 ? I9 + 1 | 0 : I9) + (B6 = Q6 >> 26) | 0, C6 = (B6 = Q6 = y6 + (C6 = (67108863 & Q6) << 6 | _A2 >>> 26) | 0) >>> 0 < C6 >>> 0 ? I9 + 1 | 0 : I9, k6 = I9 = B6 + 16777216 | 0, Q6 = C6 = I9 >>> 0 < 16777216 ? C6 + 1 | 0 : C6, o4[g8 + 60 >> 2] = B6 - (-33554432 & I9), I9 = DA(M6, L6, nA2, hA2), C6 = w4, B6 = (y6 = DA(a5, N6, f4, d4)) + I9 | 0, I9 = w4 + C6 | 0, I9 = B6 >>> 0 < y6 >>> 0 ? I9 + 1 | 0 : I9, C6 = DA(s5, Y5, K6, Z5), I9 = w4 + I9 | 0, I9 = C6 >>> 0 > (B6 = C6 + B6 | 0) >>> 0 ? I9 + 1 | 0 : I9, y6 = DA(R6, IA2, G6, fA2), C6 = w4 + I9 | 0, C6 = (B6 = y6 + B6 | 0) >>> 0 < y6 >>> 0 ? C6 + 1 | 0 : C6, I9 = (y6 = DA(e5, P6, $5, QA2)) + B6 | 0, B6 = w4 + C6 | 0, B6 = I9 >>> 0 < y6 >>> 0 ? B6 + 1 | 0 : B6, C6 = (y6 = DA(BA2, tA2, JA2, eA2)) + I9 | 0, I9 = w4 + B6 | 0, I9 = C6 >>> 0 < y6 >>> 0 ? I9 + 1 | 0 : I9, B6 = C6, C6 = DA(c5, v6, NA2, HA2), I9 = w4 + I9 | 0, I9 = C6 >>> 0 > (B6 = B6 + C6 | 0) >>> 0 ? I9 + 1 | 0 : I9, C6 = B6, B6 = DA(yA2, H6, EA2, cA2), I9 = w4 + I9 | 0, I9 = (C6 = C6 + B6 | 0) >>> 0 < B6 >>> 0 ? I9 + 1 | 0 : I9, y6 = B6 = vA2, B6 = (G6 = DA(B6, S6 = B6 >> 31, n5, m5)) + C6 | 0, C6 = w4 + I9 | 0, I9 = (p6 = DA(p6, x6, oA2, wA2)) + B6 | 0, B6 = w4 + (B6 >>> 0 < G6 >>> 0 ? C6 + 1 | 0 : C6) | 0, C6 = I9 >>> 0 < p6 >>> 0 ? B6 + 1 | 0 : B6, B6 = I9, I9 = (I9 = i6 >> 25) + C6 | 0, I9 = (B6 = B6 + (i6 = (33554431 & i6) << 7 | bA2 >>> 25) | 0) >>> 0 < i6 >>> 0 ? I9 + 1 | 0 : I9, p6 = B6 = (C6 = B6) + 33554432 | 0, i6 = I9 = B6 >>> 0 < 33554432 ? I9 + 1 | 0 : I9, o4[g8 + 80 >> 2] = C6 - (-67108864 & B6), B6 = Q6 >> 25, C6 = (Q6 = (33554431 & Q6) << 7 | k6 >>> 25) + (dA2 - (I9 = -67108864 & RA2) | 0) | 0, I9 = B6 + (LA2 - ((I9 >>> 0 > dA2 >>> 0) + xA2 | 0) | 0) | 0, I9 = C6 >>> 0 < Q6 >>> 0 ? I9 + 1 | 0 : I9, Q6 = I9 = (67108863 & (I9 = (B6 = C6 + 33554432 | 0) >>> 0 < 33554432 ? I9 + 1 | 0 : I9)) << 6 | B6 >>> 26, I9 = I9 + (G6 = YA2 - (-33554432 & jA2) | 0) | 0, o4[g8 + 68 >> 2] = I9, o4[g8 + 64 >> 2] = C6 - (-67108864 & B6), I9 = DA(f4, d4, M6, L6), C6 = w4, B6 = (Q6 = DA(a5, N6, j5, kA2)) + I9 | 0, I9 = w4 + C6 | 0, I9 = B6 >>> 0 < Q6 >>> 0 ? I9 + 1 | 0 : I9, C6 = (Q6 = DA(K6, Z5, q5, FA2)) + B6 | 0, B6 = w4 + I9 | 0, B6 = C6 >>> 0 < Q6 >>> 0 ? B6 + 1 | 0 : B6, I9 = (Q6 = DA(s5, Y5, R6, IA2)) + C6 | 0, C6 = w4 + B6 | 0, C6 = I9 >>> 0 < Q6 >>> 0 ? C6 + 1 | 0 : C6, B6 = (Q6 = DA($5, QA2, z6, sA2)) + I9 | 0, I9 = w4 + C6 | 0, I9 = B6 >>> 0 < Q6 >>> 0 ? I9 + 1 | 0 : I9, C6 = DA(e5, P6, JA2, eA2), I9 = w4 + I9 | 0, I9 = C6 >>> 0 > (B6 = C6 + B6 | 0) >>> 0 ? I9 + 1 | 0 : I9, C6 = DA(O6, pA2, NA2, HA2), I9 = w4 + I9 | 0, I9 = C6 >>> 0 > (B6 = C6 + B6 | 0) >>> 0 ? I9 + 1 | 0 : I9, C6 = (Q6 = DA(c5, v6, yA2, H6)) + B6 | 0, B6 = w4 + I9 | 0, B6 = C6 >>> 0 < Q6 >>> 0 ? B6 + 1 | 0 : B6, Q6 = (I9 = DA(y6, S6, T6, uA2)) + C6 | 0, C6 = w4 + B6 | 0, C6 = I9 >>> 0 > Q6 >>> 0 ? C6 + 1 | 0 : C6, B6 = Q6, Q6 = DA(I9 = mA2, I9 >> 31, n5, m5), I9 = w4 + C6 | 0, C6 = B6 = B6 + Q6 | 0, I9 = (I9 = B6 >>> 0 < Q6 >>> 0 ? I9 + 1 | 0 : I9) + (B6 = i6 >> 26) | 0, I9 = (C6 = C6 + (i6 = (67108863 & i6) << 6 | p6 >>> 26) | 0) >>> 0 < i6 >>> 0 ? I9 + 1 | 0 : I9, I9 = (B6 = C6 + 16777216 | 0) >>> 0 < 16777216 ? I9 + 1 | 0 : I9, o4[g8 + 84 >> 2] = C6 - (-33554432 & B6), i6 = u6 - (-33554432 & KA2) | 0, Q6 = h5 - (C6 = -67108864 & UA2) | 0, a5 = SA2 - ((C6 >>> 0 > h5 >>> 0) + XA2 | 0) | 0, I9 = DA((33554431 & (C6 = I9)) << 7 | B6 >>> 25, I9 = C6 >> 25, 19, 0), B6 = w4 + a5 | 0, I9 = I9 >>> 0 > (C6 = I9 + Q6 | 0) >>> 0 ? B6 + 1 | 0 : B6, Q6 = I9 = (67108863 & (I9 = (B6 = C6 + 33554432 | 0) >>> 0 < 33554432 ? I9 + 1 | 0 : I9)) << 6 | B6 >>> 26, I9 = I9 + i6 | 0, o4[g8 + 52 >> 2] = I9, o4[g8 + 48 >> 2] = C6 - (-67108864 & B6), W5(A10, g8 + 48 | 0));
                      }
                      return D4 = g8 + 256 | 0, 0 | PA2;
                    }, Fb: function(A10, I9) {
                      A10 |= 0;
                      var g8, C6 = 0;
                      return D4 = g8 = D4 + -64 | 0, QA(g8, I9 |= 0, 32, 0), E5[0 | g8] = 248 & a4[0 | g8], E5[g8 + 31 | 0] = 63 & a4[g8 + 31 | 0] | 64, I9 = o4[g8 + 20 >> 2], C6 = o4[g8 + 16 >> 2], E5[A10 + 16 | 0] = C6, E5[A10 + 17 | 0] = C6 >>> 8, E5[A10 + 18 | 0] = C6 >>> 16, E5[A10 + 19 | 0] = C6 >>> 24, E5[A10 + 20 | 0] = I9, E5[A10 + 21 | 0] = I9 >>> 8, E5[A10 + 22 | 0] = I9 >>> 16, E5[A10 + 23 | 0] = I9 >>> 24, I9 = o4[g8 + 12 >> 2], C6 = o4[g8 + 8 >> 2], E5[A10 + 8 | 0] = C6, E5[A10 + 9 | 0] = C6 >>> 8, E5[A10 + 10 | 0] = C6 >>> 16, E5[A10 + 11 | 0] = C6 >>> 24, E5[A10 + 12 | 0] = I9, E5[A10 + 13 | 0] = I9 >>> 8, E5[A10 + 14 | 0] = I9 >>> 16, E5[A10 + 15 | 0] = I9 >>> 24, I9 = o4[g8 + 4 >> 2], C6 = o4[g8 >> 2], E5[0 | A10] = C6, E5[A10 + 1 | 0] = C6 >>> 8, E5[A10 + 2 | 0] = C6 >>> 16, E5[A10 + 3 | 0] = C6 >>> 24, E5[A10 + 4 | 0] = I9, E5[A10 + 5 | 0] = I9 >>> 8, E5[A10 + 6 | 0] = I9 >>> 16, E5[A10 + 7 | 0] = I9 >>> 24, I9 = o4[g8 + 28 >> 2], C6 = o4[g8 + 24 >> 2], E5[A10 + 24 | 0] = C6, E5[A10 + 25 | 0] = C6 >>> 8, E5[A10 + 26 | 0] = C6 >>> 16, E5[A10 + 27 | 0] = C6 >>> 24, E5[A10 + 28 | 0] = I9, E5[A10 + 29 | 0] = I9 >>> 8, E5[A10 + 30 | 0] = I9 >>> 16, E5[A10 + 31 | 0] = I9 >>> 24, $A(g8, 64), D4 = g8 - -64 | 0, 0;
                    }, Gb: function() {
                      var A10, I9;
                      return D4 = A10 = D4 - 16 | 0, E5[A10 + 15 | 0] = 0, I9 = 0 | t4(34904, A10 + 15 | 0, 0), D4 = A10 + 16 | 0, 0 | I9;
                    }, Hb: KA, Ib: function(A10) {
                      var I9, g8 = 0, C6 = 0;
                      if (D4 = I9 = D4 - 16 | 0, (A10 |= 0) >>> 0 >= 2) {
                        for (g8 = (0 - A10 >>> 0) % (A10 >>> 0) | 0; E5[I9 + 15 | 0] = 0, g8 >>> 0 > (C6 = 0 | t4(34904, I9 + 15 | 0, 0)) >>> 0; )
                          ;
                        g8 = (C6 >>> 0) % (A10 >>> 0) | 0;
                      }
                      return D4 = I9 + 16 | 0, 0 | g8;
                    }, Jb: hA, Kb: function(A10, I9, g8) {
                      XA(A10 |= 0, I9 |= 0, 1024, g8 |= 0);
                    }, Lb: II, Mb: function() {
                      var A10 = 0, I9 = 0;
                      return (A10 = o4[9048]) && (A10 = o4[A10 + 20 >> 2]) && (I9 = 0 | nI[0 | A10]()), 0 | I9;
                    }, Nb: function(A10, I9, g8) {
                      A10 |= 0, I9 |= 0;
                      var C6, B6 = 0, i6 = 0, o5 = 0;
                      if (D4 = C6 = D4 - 16 | 0, g8 |= 0)
                        e4(1240, 1100, 197, 1036), Q5();
                      else {
                        if (I9)
                          for (; E5[C6 + 15 | 0] = 0, i6 = A10 + B6 | 0, o5 = 0 | t4(34904, C6 + 15 | 0, 0), E5[0 | i6] = o5, (0 | I9) != (0 | (B6 = B6 + 1 | 0)); )
                            ;
                        D4 = C6 + 16 | 0;
                      }
                    }, Ob: function(A10, I9, g8, C6) {
                      A10 |= 0, g8 |= 0;
                      var B6 = 0, i6 = 0, o5 = 0;
                      if (!((C6 |= 0) >>> 0 > 2147483646 | C6 << 1 >>> 0 >= (I9 |= 0) >>> 0)) {
                        if (I9 = 0, C6) {
                          for (; B6 = (I9 << 1) + A10 | 0, i6 = 15 & (o5 = a4[I9 + g8 | 0]), E5[B6 + 1 | 0] = 22272 + ((i6 << 8) + (i6 + 65526 & 55552) | 0) >>> 8, i6 = B6, B6 = o5 >>> 4 | 0, E5[0 | i6] = 87 + ((B6 + 65526 >>> 8 & 217) + B6 | 0), (0 | C6) != (0 | (I9 = I9 + 1 | 0)); )
                            ;
                          I9 = C6 << 1;
                        } else
                          I9 = 0;
                        return E5[I9 + A10 | 0] = 0, 0 | A10;
                      }
                      mA(), Q5();
                    }, Pb: function(A10, I9, g8, C6, B6, Q6, i6) {
                      A10 |= 0, I9 |= 0, g8 |= 0, B6 |= 0, Q6 |= 0, i6 |= 0;
                      var n5 = 0, r4 = 0, f4 = 0, t5 = 0, e5 = 0, c5 = 0, y6 = 0, D5 = 0, w5 = 0, h5 = 0;
                      A:
                        if (C6 |= 0) {
                          I: {
                            g: {
                              C: {
                                B: {
                                  if (!B6) {
                                    for (r4 = 1, B6 = 0; ; ) {
                                      if (!(255 & ((y6 = (65526 + (f4 = (223 & (e5 = a4[g8 + n5 | 0])) - 55 & 255) ^ f4 + 65520) >>> 8 | 0) | (D5 = 65526 + (e5 ^= 48) >>> 8 | 0))))
                                        break C;
                                      if (I9 >>> 0 <= c5 >>> 0)
                                        break B;
                                      if (f4 = f4 & y6 | e5 & D5, 255 & t5 ? (E5[A10 + c5 | 0] = B6 | f4, c5 = c5 + 1 | 0) : B6 = f4 << 4, t5 ^= -1, (0 | (n5 = n5 + 1 | 0)) == (0 | C6))
                                        break;
                                    }
                                    n5 = C6;
                                    break C;
                                  }
                                  for (; ; ) {
                                    Q: {
                                      i: {
                                        E: {
                                          o: {
                                            a: {
                                              if (!(255 & ((e5 = (65526 + (f4 = (223 & (r4 = a4[g8 + n5 | 0])) - 55 & 255) ^ f4 + 65520) >>> 8 | 0) | (D5 = 65526 + (y6 = 48 ^ r4) >>> 8 | 0)))) {
                                                if (255 & t5)
                                                  break g;
                                                if (!$4(B6, r4))
                                                  break A;
                                                if ((n5 = t5 = n5 + 1 | 0) >>> 0 < C6 >>> 0)
                                                  break a;
                                                break A;
                                              }
                                              if (I9 >>> 0 <= c5 >>> 0)
                                                break B;
                                              if (r4 = f4 & e5 | y6 & D5, !(255 & t5))
                                                break o;
                                              E5[A10 + c5 | 0] = r4 | h5, c5 = c5 + 1 | 0;
                                              break Q;
                                            }
                                            for (; ; ) {
                                              if (!(255 & ((e5 = (65526 + (f4 = (223 & (r4 = a4[g8 + n5 | 0])) - 55 & 255) ^ f4 + 65520) >>> 8 | 0) | (D5 = 65526 + (y6 = 48 ^ r4) >>> 8 | 0)))) {
                                                if (!$4(B6, r4))
                                                  break A;
                                                if ((n5 = n5 + 1 | 0) >>> 0 < C6 >>> 0)
                                                  continue;
                                                break E;
                                              }
                                              break;
                                            }
                                            if (I9 >>> 0 <= c5 >>> 0)
                                              break i;
                                            r4 = f4 & e5 | y6 & D5;
                                          }
                                          h5 = r4 << 4, t5 = 0;
                                          break Q;
                                        }
                                        n5 = C6 >>> 0 > t5 >>> 0 ? C6 : t5;
                                        break A;
                                      }
                                      t5 = 0;
                                      break B;
                                    }
                                    if (t5 ^= -1, r4 = 1, !((n5 = n5 + 1 | 0) >>> 0 < C6 >>> 0))
                                      break;
                                  }
                                  break C;
                                }
                                o4[8916] = 68, r4 = 0;
                              }
                              if (!(255 & t5))
                                break I;
                            }
                            o4[8916] = 28, w5 = -1, n5 = n5 - 1 | 0, c5 = 0;
                            break A;
                          }
                          r4 || (c5 = 0, w5 = -1);
                        }
                      return i6 ? o4[i6 >> 2] = g8 + n5 : (0 | C6) != (0 | n5) && (o4[8916] = 28, w5 = -1), Q6 && (o4[Q6 >> 2] = c5), 0 | w5;
                    }, Qb: function(A10, I9) {
                      A10 |= 0;
                      var g8 = 0;
                      return 1 != (-7 & (I9 |= 0)) && (mA(), Q5()), 1 + ((3 & (g8 = (g8 = A10) + r3(A10 = (A10 >>> 0) / 3 | 0, -3) | 0) ? 2 & I9 ? g8 + 1 | 0 : 4 : 0) + (A10 << 2) | 0) | 0;
                    }, Rb: function(A10, I9, g8, C6, B6) {
                      A10 |= 0, I9 |= 0, g8 |= 0, C6 |= 0;
                      var i6 = 0, o5 = 0, n5 = 0, f4 = 0, t5 = 0, c5 = 0, y6 = 0, D5 = 0, w5 = 0, h5 = 0;
                      A: {
                        I: {
                          g: {
                            if (1 == (-7 & (B6 |= 0)) && (f4 = (i6 = (C6 >>> 0) / 3 | 0) << 2, (i6 = r3(i6, -3) + C6 | 0) && (f4 = 2 & B6 ? (2 | f4) + (i6 >>> 1 | 0) | 0 : f4 + 4 | 0), !(I9 >>> 0 <= f4 >>> 0))) {
                              if (!(4 & B6)) {
                                if (i6 = 0, !C6)
                                  break A;
                                break g;
                              }
                              if (i6 = 0, !C6)
                                break A;
                              for (; ; ) {
                                for (c5 = (D5 = a4[g8 + y6 | 0]) | c5 << 8, t5 = i6, i6 = 1 + ((((n5 |= 8) - 6 >>> 0) / 6 | 0) + i6 | 0) | 0; w5 = 65510 + (o5 = c5 >>> (n5 = (B6 = n5) - 6 | 0) & 63) >>> 8 | 0, h5 = o5 + 65484 >>> 8 | 0, E5[A10 + t5 | 0] = (1 + (16321 ^ o5) ^ -1) >>> 8 & 45 | o5 + 252 & o5 + 65474 >>> 8 & (-1 ^ h5) | (o5 + 32705 ^ -1) >>> 8 & 95 | w5 & o5 + 65 | h5 & o5 + 71 & (-1 ^ w5), (0 | (t5 = t5 + 1 | 0)) != (0 | i6); )
                                  ;
                                if ((0 | (y6 = y6 + 1 | 0)) == (0 | C6))
                                  break;
                              }
                              if (!n5)
                                break A;
                              t5 = (C6 = 65510 + (g8 = D5 << 12 - B6 & 63) >>> 8 | 0) & g8 + 65, c5 = g8 + 252 & g8 + 65474 >>> 8 & (-1 ^ (B6 = g8 + 65484 >>> 8 | 0)), n5 = B6 & g8 + 71 & (-1 ^ C6), C6 = g8 + 32705 | 0, B6 = (1 + (16321 ^ g8) ^ -1) >>> 8 & 45, g8 = 95;
                              break I;
                            }
                            mA(), Q5();
                          }
                          for (; ; ) {
                            for (c5 = (D5 = a4[g8 + y6 | 0]) | c5 << 8, t5 = i6, i6 = 1 + ((((n5 |= 8) - 6 >>> 0) / 6 | 0) + i6 | 0) | 0; w5 = 65510 + (o5 = c5 >>> (n5 = (B6 = n5) - 6 | 0) & 63) >>> 8 | 0, h5 = o5 + 65484 >>> 8 | 0, E5[A10 + t5 | 0] = (1 + (16321 ^ o5) ^ -1) >>> 8 & 43 | o5 + 252 & o5 + 65474 >>> 8 & (-1 ^ h5) | (o5 + 16321 ^ -1) >>> 8 & 47 | w5 & o5 + 65 | h5 & o5 + 71 & (-1 ^ w5), (0 | (t5 = t5 + 1 | 0)) != (0 | i6); )
                              ;
                            if ((0 | (y6 = y6 + 1 | 0)) == (0 | C6))
                              break;
                          }
                          if (!n5)
                            break A;
                          t5 = (C6 = 65510 + (g8 = D5 << 12 - B6 & 63) >>> 8 | 0) & g8 + 65, c5 = g8 + 252 & g8 + 65474 >>> 8 & (-1 ^ (B6 = g8 + 65484 >>> 8 | 0)), n5 = B6 & g8 + 71 & (-1 ^ C6), C6 = g8 + 16321 | 0, B6 = (1 + (16321 ^ g8) ^ -1) >>> 8 & 43, g8 = 47;
                        }
                        E5[A10 + i6 | 0] = g8 & (-1 ^ C6) >>> 8 | t5 | c5 | B6 | n5, i6 = i6 + 1 | 0;
                      }
                      A: {
                        I: {
                          if (i6 >>> 0 <= f4 >>> 0) {
                            if (i6 >>> 0 < f4 >>> 0)
                              break I;
                            f4 = i6;
                            break A;
                          }
                          e4(1048, 1126, 230, 1319), Q5();
                        }
                        MA(A10 + i6 | 0, 61, f4 - i6 | 0);
                      }
                      return MA(A10 + f4 | 0, 0, (I9 >>> 0 > (g8 = f4 + 1 | 0) >>> 0 ? I9 : g8) - f4 | 0), 0 | A10;
                    }, Sb: function(A10, I9, g8, C6, B6, i6, n5, r4) {
                      A10 |= 0, I9 |= 0, g8 |= 0, C6 |= 0, B6 |= 0, i6 |= 0, n5 |= 0;
                      var f4 = 0, t5 = 0, e5 = 0, c5 = 0, y6 = 0, D5 = 0, w5 = 0, h5 = 0;
                      A: {
                        I: {
                          g: {
                            C: {
                              B: {
                                Q: {
                                  i: {
                                    E: {
                                      o: {
                                        a: {
                                          n: {
                                            if (1 == (-7 & (r4 |= 0))) {
                                              if (e5 = 0, !C6)
                                                break E;
                                              if (4 & r4)
                                                break n;
                                              for (; ; ) {
                                                e5 = t5;
                                                r: {
                                                  f: {
                                                    t: {
                                                      e: {
                                                        for (; ; ) {
                                                          if (f4 = (f4 = (c5 = E5[g8 + e5 | 0]) - 65 | 0) & ((90 - c5 ^ -1) & (-1 ^ f4)) >>> 8 & 255 | c5 + 4 & ((c5 + 65488 ^ -1) & (57 - c5 ^ -1)) >>> 8 & 255 | c5 + 185 & ((c5 + 65439 ^ -1) & (122 - c5 ^ -1)) >>> 8 & 255 | (1 + (16336 ^ c5) ^ -1) >>> 8 & 63 | (1 + (16340 ^ c5) ^ -1) >>> 8 & 62, 255 != (0 | (f4 |= (f4 - 1 & 1 + (65470 ^ c5)) >>> 8 & 255)))
                                                            break e;
                                                          if (f4 = 0, !B6)
                                                            break o;
                                                          if (!$4(B6, c5))
                                                            break;
                                                          if ((e5 = e5 + 1 | 0) >>> 0 >= C6 >>> 0)
                                                            break t;
                                                        }
                                                        t5 = e5;
                                                        break o;
                                                      }
                                                      if (w5 = f4 + (w5 << 6) | 0, y6 >>> 0 > 1)
                                                        break f;
                                                      y6 = y6 + 6 | 0;
                                                      break r;
                                                    }
                                                    t5 = (A10 = t5 + 1 | 0) >>> 0 < C6 >>> 0 ? C6 : A10;
                                                    break o;
                                                  }
                                                  if (y6 = y6 - 2 | 0, I9 >>> 0 <= D5 >>> 0)
                                                    break a;
                                                  E5[A10 + D5 | 0] = w5 >>> y6, D5 = D5 + 1 | 0;
                                                }
                                                if (f4 = 0, !((t5 = e5 + 1 | 0) >>> 0 < C6 >>> 0))
                                                  break;
                                              }
                                              break o;
                                            }
                                            mA(), Q5();
                                          }
                                          n:
                                            for (; ; ) {
                                              for (e5 = t5; ; ) {
                                                r: {
                                                  if (f4 = (f4 = (c5 = E5[g8 + e5 | 0]) - 65 | 0) & ((90 - c5 ^ -1) & (-1 ^ f4)) >>> 8 & 255 | c5 + 4 & ((c5 + 65488 ^ -1) & (57 - c5 ^ -1)) >>> 8 & 255 | c5 + 185 & ((c5 + 65439 ^ -1) & (122 - c5 ^ -1)) >>> 8 & 255 | (1 + (16288 ^ c5) ^ -1) >>> 8 & 63 | (1 + (16338 ^ c5) ^ -1) >>> 8 & 62, 255 == (0 | (f4 |= (f4 - 1 & 1 + (65470 ^ c5)) >>> 8 & 255))) {
                                                    if (f4 = 0, !B6)
                                                      break o;
                                                    if ($4(B6, c5))
                                                      break r;
                                                    t5 = e5;
                                                    break o;
                                                  }
                                                  if (w5 = f4 + (w5 << 6) | 0, y6 >>> 0 < 2)
                                                    y6 = y6 + 6 | 0;
                                                  else {
                                                    if (y6 = y6 - 2 | 0, I9 >>> 0 <= D5 >>> 0)
                                                      break a;
                                                    E5[A10 + D5 | 0] = w5 >>> y6, D5 = D5 + 1 | 0;
                                                  }
                                                  if (f4 = 0, (t5 = e5 + 1 | 0) >>> 0 < C6 >>> 0)
                                                    continue n;
                                                  break o;
                                                }
                                                if (!((e5 = e5 + 1 | 0) >>> 0 < C6 >>> 0))
                                                  break;
                                              }
                                              break;
                                            }
                                          t5 = (A10 = t5 + 1 | 0) >>> 0 < C6 >>> 0 ? C6 : A10;
                                          break o;
                                        }
                                        t5 = e5, o4[8916] = 68, f4 = 1;
                                      }
                                      if (y6 >>> 0 > 4)
                                        break i;
                                      e5 = t5;
                                    }
                                    if (A10 = e5, I9 = -1, f4) {
                                      t5 = A10;
                                      break A;
                                    }
                                    if ((-1 << y6 ^ -1) & w5) {
                                      t5 = A10;
                                      break A;
                                    }
                                    if (2 & r4) {
                                      r4 = A10;
                                      break B;
                                    }
                                    if (y6 >>> 0 < 2) {
                                      r4 = A10;
                                      break B;
                                    }
                                    if (t5 = A10 >>> 0 > C6 >>> 0 ? A10 : C6, e5 = y6 >>> 1 | 0, !B6)
                                      break Q;
                                    for (r4 = A10; ; ) {
                                      if ((0 | r4) == (0 | t5)) {
                                        f4 = 68;
                                        break C;
                                      }
                                      if (61 != (0 | (A10 = E5[g8 + r4 | 0]))) {
                                        if (!$4(B6, A10)) {
                                          f4 = 28, t5 = r4;
                                          break C;
                                        }
                                      } else
                                        e5 = e5 - 1 | 0;
                                      if (r4 = r4 + 1 | 0, !e5)
                                        break;
                                    }
                                    break B;
                                  }
                                  I9 = -1;
                                  break A;
                                }
                                if (f4 = 68, A10 >>> 0 >= C6 >>> 0)
                                  break C;
                                if (61 != a4[A10 + g8 | 0]) {
                                  t5 = A10, f4 = 28;
                                  break C;
                                }
                                if (r4 = A10 + e5 | 0, 1 != (0 | e5)) {
                                  if ((0 | (y6 = A10 + 1 | 0)) == (0 | t5))
                                    break C;
                                  if (61 != a4[g8 + y6 | 0]) {
                                    t5 = y6, f4 = 28;
                                    break C;
                                  }
                                  if (2 != (0 | e5)) {
                                    if ((0 | (A10 = A10 + 2 | 0)) == (0 | t5))
                                      break C;
                                    if (f4 = 28, t5 = A10, 61 != a4[A10 + g8 | 0])
                                      break C;
                                  }
                                }
                              }
                              if (I9 = 0, B6)
                                break g;
                              break I;
                            }
                            o4[8916] = f4;
                            break A;
                          }
                          if (!(C6 >>> 0 <= r4 >>> 0)) {
                            for (; ; ) {
                              if (!$4(B6, E5[g8 + r4 | 0]))
                                break I;
                              if ((0 | (r4 = r4 + 1 | 0)) == (0 | C6))
                                break;
                            }
                            r4 = C6;
                          }
                        }
                        t5 = r4, h5 = D5;
                      }
                      return n5 ? o4[n5 >> 2] = g8 + t5 : (0 | C6) != (0 | t5) && (o4[8916] = 28, I9 = -1), i6 && (o4[i6 >> 2] = h5), 0 | I9;
                    }, Tb: function() {
                      var A10 = 0;
                      return o4[9049] ? A10 = 1 : (KA(), hA(36176, 16), o4[9049] = 1, A10 = 0), 0 | A10;
                    }, Ub: function(A10, I9, g8, C6, B6) {
                      A10 |= 0, I9 |= 0, g8 |= 0, B6 |= 0;
                      var i6, n5 = 0, r4 = 0, f4 = 0;
                      D4 = i6 = D4 - 16 | 0;
                      A: {
                        if (C6 |= 0) {
                          if (f4 = -1, (n5 = (n5 = C6 - 1 | 0) - (r4 = n5 & C6 ? (g8 >>> 0) % (C6 >>> 0) | 0 : g8 & n5) | 0) >>> 0 >= (-1 ^ g8) >>> 0)
                            break A;
                          if (!((g8 = g8 + n5 | 0) >>> 0 >= B6 >>> 0))
                            for (A10 && (o4[A10 >> 2] = g8 + 1), A10 = I9 + g8 | 0, f4 = 0, E5[i6 + 15 | 0] = 0, g8 = 0; B6 = I9 = A10 - g8 | 0, r4 = a4[0 | I9] & a4[i6 + 15 | 0], I9 = (g8 ^ n5) - 1 >>> 24 | 0, E5[0 | B6] = r4 | 128 & I9, E5[i6 + 15 | 0] = I9 | a4[i6 + 15 | 0], (0 | C6) != (0 | (g8 = g8 + 1 | 0)); )
                              ;
                        } else
                          f4 = -1;
                        return D4 = i6 + 16 | 0, 0 | f4;
                      }
                      mA(), Q5();
                    }, Vb: function(A10, I9, g8, C6) {
                      A10 |= 0, I9 |= 0, g8 |= 0, C6 |= 0;
                      var B6, Q6 = 0, i6 = 0, E6 = 0, n5 = 0, r4 = 0;
                      if (o4[12 + (B6 = D4 - 16 | 0) >> 2] = 0, C6 - 1 >>> 0 < g8 >>> 0) {
                        for (r4 = (i6 = g8 - 1 | 0) + I9 | 0, g8 = 0, I9 = 0; I9 &= 255, n5 = (128 ^ (E6 = a4[r4 - Q6 | 0])) - 1 & o4[B6 + 12 >> 2] - 1 & I9 - 1, o4[B6 + 12 >> 2] = o4[B6 + 12 >> 2] | n5 << 23 >> 31 & Q6, I9 |= E6, g8 |= n5 >>> 8 & 1, (0 | (Q6 = Q6 + 1 | 0)) != (0 | C6); )
                          ;
                        o4[A10 >> 2] = i6 - o4[B6 + 12 >> 2], A10 = (255 & g8) - 1 | 0;
                      } else
                        A10 = -1;
                      return 0 | A10;
                    }, Wb: function() {
                      return 1312;
                    }, Xb: function() {
                      return 10;
                    }, Yb: iI, Zb: QI, _b: function(A10) {
                      var I9, g8 = 0, C6 = 0, B6 = 0, Q6 = 0, i6 = 0, E6 = 0, r4 = 0, t5 = 0, e5 = 0, c5 = 0, y6 = 0, w5 = 0;
                      D4 = I9 = D4 - 16 | 0;
                      A: {
                        I: {
                          g: {
                            C: {
                              B: {
                                Q: {
                                  i: {
                                    E: {
                                      o: {
                                        if ((A10 |= 0) >>> 0 <= 244) {
                                          if (3 & (g8 = (E6 = o4[8917]) >>> (C6 = (r4 = A10 >>> 0 < 11 ? 16 : A10 + 11 & -8) >>> 3 | 0) | 0)) {
                                            g8 = 35708 + (A10 = (C6 = C6 + (1 & (-1 ^ g8)) | 0) << 3) | 0, B6 = o4[A10 + 35716 >> 2], (0 | g8) != (0 | (A10 = o4[B6 + 8 >> 2])) ? (o4[A10 + 12 >> 2] = g8, o4[g8 + 8 >> 2] = A10) : (y6 = 35668, w5 = YA(-2, C6) & E6, o4[y6 >> 2] = w5), A10 = B6 + 8 | 0, g8 = C6 << 3, o4[B6 + 4 >> 2] = 3 | g8, o4[4 + (g8 = g8 + B6 | 0) >> 2] = 1 | o4[g8 + 4 >> 2];
                                            break A;
                                          }
                                          if ((c5 = o4[8919]) >>> 0 >= r4 >>> 0)
                                            break o;
                                          if (g8) {
                                            g8 = 35708 + (A10 = (B6 = RA(0 - (A10 = (0 - (A10 = 2 << C6) | A10) & g8 << C6) & A10)) << 3) | 0, Q6 = o4[A10 + 35716 >> 2], (0 | g8) != (0 | (A10 = o4[Q6 + 8 >> 2])) ? (o4[A10 + 12 >> 2] = g8, o4[g8 + 8 >> 2] = A10) : (E6 = YA(-2, B6) & E6, o4[8917] = E6), o4[Q6 + 4 >> 2] = 3 | r4, B6 = (A10 = B6 << 3) - r4 | 0, o4[4 + (C6 = Q6 + r4 | 0) >> 2] = 1 | B6, o4[A10 + Q6 >> 2] = B6, c5 && (g8 = 35708 + (-8 & c5) | 0, i6 = o4[8922], (A10 = 1 << (c5 >>> 3)) & E6 ? A10 = o4[g8 + 8 >> 2] : (o4[8917] = A10 | E6, A10 = g8), o4[g8 + 8 >> 2] = i6, o4[A10 + 12 >> 2] = i6, o4[i6 + 12 >> 2] = g8, o4[i6 + 8 >> 2] = A10), A10 = Q6 + 8 | 0, o4[8922] = C6, o4[8919] = B6;
                                            break A;
                                          }
                                          if (!(e5 = o4[8918]))
                                            break o;
                                          for (C6 = o4[35972 + (RA(0 - e5 & e5) << 2) >> 2], i6 = (-8 & o4[C6 + 4 >> 2]) - r4 | 0, g8 = C6; (A10 = o4[g8 + 16 >> 2]) || (A10 = o4[g8 + 20 >> 2]); )
                                            i6 = (B6 = (g8 = (-8 & o4[A10 + 4 >> 2]) - r4 | 0) >>> 0 < i6 >>> 0) ? g8 : i6, C6 = B6 ? A10 : C6, g8 = A10;
                                          if (t5 = o4[C6 + 24 >> 2], (0 | (B6 = o4[C6 + 12 >> 2])) != (0 | C6)) {
                                            A10 = o4[C6 + 8 >> 2], o4[A10 + 12 >> 2] = B6, o4[B6 + 8 >> 2] = A10;
                                            break I;
                                          }
                                          if (!(A10 = o4[(g8 = C6 + 20 | 0) >> 2])) {
                                            if (!(A10 = o4[C6 + 16 >> 2]))
                                              break E;
                                            g8 = C6 + 16 | 0;
                                          }
                                          for (; Q6 = g8, B6 = A10, (A10 = o4[(g8 = A10 + 20 | 0) >> 2]) || (g8 = B6 + 16 | 0, A10 = o4[B6 + 16 >> 2]); )
                                            ;
                                          o4[Q6 >> 2] = 0;
                                          break I;
                                        }
                                        if (r4 = -1, !(A10 >>> 0 > 4294967231) && (r4 = -8 & (A10 = A10 + 11 | 0), e5 = o4[8918])) {
                                          i6 = 0 - r4 | 0, E6 = 0, r4 >>> 0 < 256 || (E6 = 31, r4 >>> 0 > 16777215 || (E6 = 62 + ((r4 >>> 38 - (A10 = f3(A10 >>> 8 | 0)) & 1) - (A10 << 1) | 0) | 0));
                                          a: {
                                            n: {
                                              if (g8 = o4[35972 + (E6 << 2) >> 2])
                                                for (A10 = 0, C6 = r4 << (31 != (0 | E6) ? 25 - (E6 >>> 1 | 0) | 0 : 0); ; ) {
                                                  if (!((Q6 = (-8 & o4[g8 + 4 >> 2]) - r4 | 0) >>> 0 >= i6 >>> 0 || (B6 = g8, i6 = Q6, Q6))) {
                                                    i6 = 0, A10 = g8;
                                                    break n;
                                                  }
                                                  if (Q6 = o4[g8 + 20 >> 2], g8 = o4[16 + ((C6 >>> 29 & 4) + g8 | 0) >> 2], A10 = Q6 ? (0 | Q6) == (0 | g8) ? A10 : Q6 : A10, C6 <<= 1, !g8)
                                                    break;
                                                }
                                              else
                                                A10 = 0;
                                              if (!(A10 | B6)) {
                                                if (B6 = 0, !(A10 = (0 - (A10 = 2 << E6) | A10) & e5))
                                                  break o;
                                                A10 = o4[35972 + (RA(A10 & 0 - A10) << 2) >> 2];
                                              }
                                              if (!A10)
                                                break a;
                                            }
                                            for (; i6 = (C6 = (g8 = (-8 & o4[A10 + 4 >> 2]) - r4 | 0) >>> 0 < i6 >>> 0) ? g8 : i6, B6 = C6 ? A10 : B6, A10 = (g8 = o4[A10 + 16 >> 2]) || o4[A10 + 20 >> 2]; )
                                              ;
                                          }
                                          if (!(!B6 | o4[8919] - r4 >>> 0 <= i6 >>> 0)) {
                                            if (E6 = o4[B6 + 24 >> 2], (0 | B6) != (0 | (C6 = o4[B6 + 12 >> 2]))) {
                                              A10 = o4[B6 + 8 >> 2], o4[A10 + 12 >> 2] = C6, o4[C6 + 8 >> 2] = A10;
                                              break g;
                                            }
                                            if (!(A10 = o4[(g8 = B6 + 20 | 0) >> 2])) {
                                              if (!(A10 = o4[B6 + 16 >> 2]))
                                                break i;
                                              g8 = B6 + 16 | 0;
                                            }
                                            for (; Q6 = g8, C6 = A10, (A10 = o4[(g8 = A10 + 20 | 0) >> 2]) || (g8 = C6 + 16 | 0, A10 = o4[C6 + 16 >> 2]); )
                                              ;
                                            o4[Q6 >> 2] = 0;
                                            break g;
                                          }
                                        }
                                      }
                                      if ((A10 = o4[8919]) >>> 0 >= r4 >>> 0) {
                                        B6 = o4[8922], (g8 = A10 - r4 | 0) >>> 0 >= 16 ? (o4[4 + (C6 = B6 + r4 | 0) >> 2] = 1 | g8, o4[A10 + B6 >> 2] = g8, o4[B6 + 4 >> 2] = 3 | r4) : (o4[B6 + 4 >> 2] = 3 | A10, o4[4 + (A10 = A10 + B6 | 0) >> 2] = 1 | o4[A10 + 4 >> 2], C6 = 0, g8 = 0), o4[8919] = g8, o4[8922] = C6, A10 = B6 + 8 | 0;
                                        break A;
                                      }
                                      if ((t5 = o4[8920]) >>> 0 > r4 >>> 0) {
                                        g8 = t5 - r4 | 0, o4[8920] = g8, A10 = (C6 = o4[8923]) + r4 | 0, o4[8923] = A10, o4[A10 + 4 >> 2] = 1 | g8, o4[C6 + 4 >> 2] = 3 | r4, A10 = C6 + 8 | 0;
                                        break A;
                                      }
                                      if (A10 = 0, e5 = r4 + 47 | 0, o4[9035] ? C6 = o4[9037] : (o4[9038] = -1, o4[9039] = -1, o4[9036] = 4096, o4[9037] = 4096, o4[9035] = I9 + 12 & -16 ^ 1431655768, o4[9040] = 0, o4[9028] = 0, C6 = 4096), (g8 = (Q6 = e5 + C6 | 0) & (i6 = 0 - C6 | 0)) >>> 0 <= r4 >>> 0)
                                        break A;
                                      if ((B6 = o4[9027]) && B6 >>> 0 < (E6 = (C6 = o4[9025]) + g8 | 0) >>> 0 | C6 >>> 0 >= E6 >>> 0)
                                        break A;
                                      o: {
                                        if (!(4 & a4[36112])) {
                                          a: {
                                            n: {
                                              r: {
                                                f: {
                                                  if (B6 = o4[8923])
                                                    for (A10 = 36116; ; ) {
                                                      if ((C6 = o4[A10 >> 2]) >>> 0 <= B6 >>> 0 & B6 >>> 0 < C6 + o4[A10 + 4 >> 2] >>> 0)
                                                        break f;
                                                      if (!(A10 = o4[A10 + 8 >> 2]))
                                                        break;
                                                    }
                                                  if (-1 == (0 | (C6 = pA(0))))
                                                    break a;
                                                  if (E6 = g8, (A10 = (B6 = o4[9036]) - 1 | 0) & C6 && (E6 = (g8 - C6 | 0) + (A10 + C6 & 0 - B6) | 0), E6 >>> 0 <= r4 >>> 0)
                                                    break a;
                                                  if ((B6 = o4[9027]) && B6 >>> 0 < (i6 = (A10 = o4[9025]) + E6 | 0) >>> 0 | A10 >>> 0 >= i6 >>> 0)
                                                    break a;
                                                  if ((0 | C6) != (0 | (A10 = pA(E6))))
                                                    break r;
                                                  break o;
                                                }
                                                if ((0 | (C6 = pA(E6 = i6 & Q6 - t5))) == (o4[A10 >> 2] + o4[A10 + 4 >> 2] | 0))
                                                  break n;
                                                A10 = C6;
                                              }
                                              if (-1 == (0 | A10))
                                                break a;
                                              if (r4 + 48 >>> 0 <= E6 >>> 0) {
                                                C6 = A10;
                                                break o;
                                              }
                                              if (-1 == (0 | pA(C6 = (C6 = o4[9037]) + (e5 - E6 | 0) & 0 - C6)))
                                                break a;
                                              E6 = C6 + E6 | 0, C6 = A10;
                                              break o;
                                            }
                                            if (-1 != (0 | C6))
                                              break o;
                                          }
                                          o4[9028] = 4 | o4[9028];
                                        }
                                        if (-1 == (0 | (C6 = pA(g8))) | -1 == (0 | (A10 = pA(0))) | A10 >>> 0 <= C6 >>> 0)
                                          break C;
                                        if ((E6 = A10 - C6 | 0) >>> 0 <= r4 + 40 >>> 0)
                                          break C;
                                      }
                                      A10 = o4[9025] + E6 | 0, o4[9025] = A10, A10 >>> 0 > n4[9026] && (o4[9026] = A10);
                                      o: {
                                        if (Q6 = o4[8923]) {
                                          for (A10 = 36116; ; ) {
                                            if (((B6 = o4[A10 >> 2]) + (g8 = o4[A10 + 4 >> 2]) | 0) == (0 | C6))
                                              break o;
                                            if (!(A10 = o4[A10 + 8 >> 2]))
                                              break;
                                          }
                                          break Q;
                                        }
                                        for ((A10 = o4[8921]) >>> 0 <= C6 >>> 0 && A10 || (o4[8921] = C6), A10 = 0, o4[9030] = E6, o4[9029] = C6, o4[8925] = -1, o4[8926] = o4[9035], o4[9032] = 0; g8 = 35708 + (B6 = A10 << 3) | 0, o4[B6 + 35716 >> 2] = g8, o4[B6 + 35720 >> 2] = g8, 32 != (0 | (A10 = A10 + 1 | 0)); )
                                          ;
                                        g8 = (B6 = E6 - 40 | 0) - (A10 = C6 + 8 & 7 ? -8 - C6 & 7 : 0) | 0, o4[8920] = g8, A10 = A10 + C6 | 0, o4[8923] = A10, o4[A10 + 4 >> 2] = 1 | g8, o4[4 + (C6 + B6 | 0) >> 2] = 40, o4[8924] = o4[9039];
                                        break B;
                                      }
                                      if (8 & a4[A10 + 12 | 0] | B6 >>> 0 > Q6 >>> 0 | C6 >>> 0 <= Q6 >>> 0)
                                        break Q;
                                      o4[A10 + 4 >> 2] = g8 + E6, C6 = (A10 = Q6 + 8 & 7 ? -8 - Q6 & 7 : 0) + Q6 | 0, o4[8923] = C6, A10 = (g8 = o4[8920] + E6 | 0) - A10 | 0, o4[8920] = A10, o4[C6 + 4 >> 2] = 1 | A10, o4[4 + (g8 + Q6 | 0) >> 2] = 40, o4[8924] = o4[9039];
                                      break B;
                                    }
                                    B6 = 0;
                                    break I;
                                  }
                                  C6 = 0;
                                  break g;
                                }
                                n4[8921] > C6 >>> 0 && (o4[8921] = C6), g8 = C6 + E6 | 0, A10 = 36116;
                                Q: {
                                  i: {
                                    E: {
                                      o: {
                                        a: {
                                          n: {
                                            for (; ; ) {
                                              if ((0 | g8) != o4[A10 >> 2]) {
                                                if (A10 = o4[A10 + 8 >> 2])
                                                  continue;
                                                break n;
                                              }
                                              break;
                                            }
                                            if (!(8 & a4[A10 + 12 | 0]))
                                              break a;
                                          }
                                          for (A10 = 36116; ; ) {
                                            if ((g8 = o4[A10 >> 2]) >>> 0 <= Q6 >>> 0 && (i6 = g8 + o4[A10 + 4 >> 2] | 0) >>> 0 > Q6 >>> 0)
                                              break o;
                                            A10 = o4[A10 + 8 >> 2];
                                          }
                                        }
                                        if (o4[A10 >> 2] = C6, o4[A10 + 4 >> 2] = o4[A10 + 4 >> 2] + E6, o4[4 + (e5 = (C6 + 8 & 7 ? -8 - C6 & 7 : 0) + C6 | 0) >> 2] = 3 | r4, A10 = (E6 = g8 + (g8 + 8 & 7 ? -8 - g8 & 7 : 0) | 0) - (t5 = r4 + e5 | 0) | 0, (0 | Q6) == (0 | E6)) {
                                          o4[8923] = t5, A10 = o4[8920] + A10 | 0, o4[8920] = A10, o4[t5 + 4 >> 2] = 1 | A10;
                                          break i;
                                        }
                                        if (o4[8922] == (0 | E6)) {
                                          o4[8922] = t5, A10 = o4[8919] + A10 | 0, o4[8919] = A10, o4[t5 + 4 >> 2] = 1 | A10, o4[A10 + t5 >> 2] = A10;
                                          break i;
                                        }
                                        if (1 == (3 & (i6 = o4[E6 + 4 >> 2]))) {
                                          Q6 = -8 & i6;
                                          a:
                                            if (i6 >>> 0 <= 255) {
                                              if (B6 = o4[E6 + 8 >> 2], g8 = i6 >>> 3 | 0, (0 | (C6 = o4[E6 + 12 >> 2])) == (0 | B6)) {
                                                y6 = 35668, w5 = o4[8917] & YA(-2, g8), o4[y6 >> 2] = w5;
                                                break a;
                                              }
                                              o4[B6 + 12 >> 2] = C6, o4[C6 + 8 >> 2] = B6;
                                            } else {
                                              if (r4 = o4[E6 + 24 >> 2], (0 | E6) == (0 | (C6 = o4[E6 + 12 >> 2])))
                                                if ((g8 = o4[(i6 = E6 + 20 | 0) >> 2]) || (g8 = o4[(i6 = E6 + 16 | 0) >> 2])) {
                                                  for (; B6 = i6, (g8 = o4[(i6 = (C6 = g8) + 20 | 0) >> 2]) || (i6 = C6 + 16 | 0, g8 = o4[C6 + 16 >> 2]); )
                                                    ;
                                                  o4[B6 >> 2] = 0;
                                                } else
                                                  C6 = 0;
                                              else
                                                g8 = o4[E6 + 8 >> 2], o4[g8 + 12 >> 2] = C6, o4[C6 + 8 >> 2] = g8;
                                              if (r4) {
                                                B6 = o4[E6 + 28 >> 2];
                                                n: {
                                                  if (o4[(g8 = 35972 + (B6 << 2) | 0) >> 2] == (0 | E6)) {
                                                    if (o4[g8 >> 2] = C6, C6)
                                                      break n;
                                                    y6 = 35672, w5 = o4[8918] & YA(-2, B6), o4[y6 >> 2] = w5;
                                                    break a;
                                                  }
                                                  if (o4[r4 + (o4[r4 + 16 >> 2] == (0 | E6) ? 16 : 20) >> 2] = C6, !C6)
                                                    break a;
                                                }
                                                o4[C6 + 24 >> 2] = r4, (g8 = o4[E6 + 16 >> 2]) && (o4[C6 + 16 >> 2] = g8, o4[g8 + 24 >> 2] = C6), (g8 = o4[E6 + 20 >> 2]) && (o4[C6 + 20 >> 2] = g8, o4[g8 + 24 >> 2] = C6);
                                              }
                                            }
                                          i6 = o4[4 + (E6 = Q6 + E6 | 0) >> 2], A10 = A10 + Q6 | 0;
                                        }
                                        if (o4[E6 + 4 >> 2] = -2 & i6, o4[t5 + 4 >> 2] = 1 | A10, o4[A10 + t5 >> 2] = A10, A10 >>> 0 <= 255) {
                                          g8 = 35708 + (-8 & A10) | 0, (C6 = o4[8917]) & (A10 = 1 << (A10 >>> 3)) ? A10 = o4[g8 + 8 >> 2] : (o4[8917] = A10 | C6, A10 = g8), o4[g8 + 8 >> 2] = t5, o4[A10 + 12 >> 2] = t5, o4[t5 + 12 >> 2] = g8, o4[t5 + 8 >> 2] = A10;
                                          break i;
                                        }
                                        if (i6 = 31, A10 >>> 0 <= 16777215 && (i6 = 62 + ((A10 >>> 38 - (g8 = f3(A10 >>> 8 | 0)) & 1) - (g8 << 1) | 0) | 0), o4[t5 + 28 >> 2] = i6, o4[t5 + 16 >> 2] = 0, o4[t5 + 20 >> 2] = 0, g8 = 35972 + (i6 << 2) | 0, (B6 = o4[8918]) & (C6 = 1 << i6)) {
                                          for (i6 = A10 << (31 != (0 | i6) ? 25 - (i6 >>> 1 | 0) | 0 : 0), C6 = o4[g8 >> 2]; ; ) {
                                            if (g8 = C6, (-8 & o4[C6 + 4 >> 2]) == (0 | A10))
                                              break E;
                                            if (C6 = i6 >>> 29 | 0, i6 <<= 1, !(C6 = o4[16 + (B6 = (4 & C6) + g8 | 0) >> 2]))
                                              break;
                                          }
                                          o4[B6 + 16 >> 2] = t5;
                                        } else
                                          o4[8918] = C6 | B6, o4[g8 >> 2] = t5;
                                        o4[t5 + 24 >> 2] = g8, o4[t5 + 12 >> 2] = t5, o4[t5 + 8 >> 2] = t5;
                                        break i;
                                      }
                                      for (g8 = (B6 = E6 - 40 | 0) - (A10 = C6 + 8 & 7 ? -8 - C6 & 7 : 0) | 0, o4[8920] = g8, A10 = A10 + C6 | 0, o4[8923] = A10, o4[A10 + 4 >> 2] = 1 | g8, o4[4 + (C6 + B6 | 0) >> 2] = 40, o4[8924] = o4[9039], o4[(B6 = (A10 = (i6 + (i6 - 39 & 7 ? 39 - i6 & 7 : 0) | 0) - 47 | 0) >>> 0 < Q6 + 16 >>> 0 ? Q6 : A10) + 4 >> 2] = 27, A10 = o4[9032], o4[B6 + 16 >> 2] = o4[9031], o4[B6 + 20 >> 2] = A10, A10 = o4[9030], o4[B6 + 8 >> 2] = o4[9029], o4[B6 + 12 >> 2] = A10, o4[9031] = B6 + 8, o4[9030] = E6, o4[9029] = C6, o4[9032] = 0, A10 = B6 + 24 | 0; o4[A10 + 4 >> 2] = 7, g8 = A10 + 8 | 0, A10 = A10 + 4 | 0, g8 >>> 0 < i6 >>> 0; )
                                        ;
                                      if ((0 | B6) == (0 | Q6))
                                        break B;
                                      if (o4[B6 + 4 >> 2] = -2 & o4[B6 + 4 >> 2], i6 = B6 - Q6 | 0, o4[Q6 + 4 >> 2] = 1 | i6, o4[B6 >> 2] = i6, i6 >>> 0 <= 255) {
                                        g8 = 35708 + (-8 & i6) | 0, (C6 = o4[8917]) & (A10 = 1 << (i6 >>> 3)) ? A10 = o4[g8 + 8 >> 2] : (o4[8917] = A10 | C6, A10 = g8), o4[g8 + 8 >> 2] = Q6, o4[A10 + 12 >> 2] = Q6, o4[Q6 + 12 >> 2] = g8, o4[Q6 + 8 >> 2] = A10;
                                        break B;
                                      }
                                      if (A10 = 31, i6 >>> 0 <= 16777215 && (A10 = 62 + ((i6 >>> 38 - (A10 = f3(i6 >>> 8 | 0)) & 1) - (A10 << 1) | 0) | 0), o4[Q6 + 28 >> 2] = A10, o4[Q6 + 16 >> 2] = 0, o4[Q6 + 20 >> 2] = 0, g8 = 35972 + (A10 << 2) | 0, (B6 = o4[8918]) & (C6 = 1 << A10)) {
                                        for (A10 = i6 << (31 != (0 | A10) ? 25 - (A10 >>> 1 | 0) | 0 : 0), B6 = o4[g8 >> 2]; ; ) {
                                          if ((0 | i6) == (-8 & o4[(g8 = B6) + 4 >> 2]))
                                            break Q;
                                          if (C6 = A10 >>> 29 | 0, A10 <<= 1, !(B6 = o4[16 + (C6 = (4 & C6) + g8 | 0) >> 2]))
                                            break;
                                        }
                                        o4[C6 + 16 >> 2] = Q6;
                                      } else
                                        o4[8918] = C6 | B6, o4[g8 >> 2] = Q6;
                                      o4[Q6 + 24 >> 2] = g8, o4[Q6 + 12 >> 2] = Q6, o4[Q6 + 8 >> 2] = Q6;
                                      break B;
                                    }
                                    A10 = o4[g8 + 8 >> 2], o4[A10 + 12 >> 2] = t5, o4[g8 + 8 >> 2] = t5, o4[t5 + 24 >> 2] = 0, o4[t5 + 12 >> 2] = g8, o4[t5 + 8 >> 2] = A10;
                                  }
                                  A10 = e5 + 8 | 0;
                                  break A;
                                }
                                A10 = o4[g8 + 8 >> 2], o4[A10 + 12 >> 2] = Q6, o4[g8 + 8 >> 2] = Q6, o4[Q6 + 24 >> 2] = 0, o4[Q6 + 12 >> 2] = g8, o4[Q6 + 8 >> 2] = A10;
                              }
                              if (!((A10 = o4[8920]) >>> 0 <= r4 >>> 0)) {
                                g8 = A10 - r4 | 0, o4[8920] = g8, A10 = (C6 = o4[8923]) + r4 | 0, o4[8923] = A10, o4[A10 + 4 >> 2] = 1 | g8, o4[C6 + 4 >> 2] = 3 | r4, A10 = C6 + 8 | 0;
                                break A;
                              }
                            }
                            o4[8916] = 48, A10 = 0;
                            break A;
                          }
                          g:
                            if (E6) {
                              g8 = o4[B6 + 28 >> 2];
                              C: {
                                if (o4[(A10 = 35972 + (g8 << 2) | 0) >> 2] == (0 | B6)) {
                                  if (o4[A10 >> 2] = C6, C6)
                                    break C;
                                  e5 = YA(-2, g8) & e5, o4[8918] = e5;
                                  break g;
                                }
                                if (o4[E6 + (o4[E6 + 16 >> 2] == (0 | B6) ? 16 : 20) >> 2] = C6, !C6)
                                  break g;
                              }
                              o4[C6 + 24 >> 2] = E6, (A10 = o4[B6 + 16 >> 2]) && (o4[C6 + 16 >> 2] = A10, o4[A10 + 24 >> 2] = C6), (A10 = o4[B6 + 20 >> 2]) && (o4[C6 + 20 >> 2] = A10, o4[A10 + 24 >> 2] = C6);
                            }
                          g:
                            if (i6 >>> 0 <= 15)
                              A10 = i6 + r4 | 0, o4[B6 + 4 >> 2] = 3 | A10, o4[4 + (A10 = A10 + B6 | 0) >> 2] = 1 | o4[A10 + 4 >> 2];
                            else if (o4[B6 + 4 >> 2] = 3 | r4, o4[4 + (Q6 = B6 + r4 | 0) >> 2] = 1 | i6, o4[Q6 + i6 >> 2] = i6, i6 >>> 0 <= 255)
                              g8 = 35708 + (-8 & i6) | 0, (C6 = o4[8917]) & (A10 = 1 << (i6 >>> 3)) ? A10 = o4[g8 + 8 >> 2] : (o4[8917] = A10 | C6, A10 = g8), o4[g8 + 8 >> 2] = Q6, o4[A10 + 12 >> 2] = Q6, o4[Q6 + 12 >> 2] = g8, o4[Q6 + 8 >> 2] = A10;
                            else {
                              A10 = 31, i6 >>> 0 <= 16777215 && (A10 = 62 + ((i6 >>> 38 - (A10 = f3(i6 >>> 8 | 0)) & 1) - (A10 << 1) | 0) | 0), o4[Q6 + 28 >> 2] = A10, o4[Q6 + 16 >> 2] = 0, o4[Q6 + 20 >> 2] = 0, g8 = 35972 + (A10 << 2) | 0;
                              C: {
                                if ((C6 = 1 << A10) & e5) {
                                  for (A10 = i6 << (31 != (0 | A10) ? 25 - (A10 >>> 1 | 0) | 0 : 0), r4 = o4[g8 >> 2]; ; ) {
                                    if ((-8 & o4[(g8 = r4) + 4 >> 2]) == (0 | i6))
                                      break C;
                                    if (C6 = A10 >>> 29 | 0, A10 <<= 1, !(r4 = o4[16 + (C6 = (4 & C6) + g8 | 0) >> 2]))
                                      break;
                                  }
                                  o4[C6 + 16 >> 2] = Q6;
                                } else
                                  o4[8918] = C6 | e5, o4[g8 >> 2] = Q6;
                                o4[Q6 + 24 >> 2] = g8, o4[Q6 + 12 >> 2] = Q6, o4[Q6 + 8 >> 2] = Q6;
                                break g;
                              }
                              A10 = o4[g8 + 8 >> 2], o4[A10 + 12 >> 2] = Q6, o4[g8 + 8 >> 2] = Q6, o4[Q6 + 24 >> 2] = 0, o4[Q6 + 12 >> 2] = g8, o4[Q6 + 8 >> 2] = A10;
                            }
                          A10 = B6 + 8 | 0;
                          break A;
                        }
                        I:
                          if (t5) {
                            g8 = o4[C6 + 28 >> 2];
                            g: {
                              if (o4[(A10 = 35972 + (g8 << 2) | 0) >> 2] == (0 | C6)) {
                                if (o4[A10 >> 2] = B6, B6)
                                  break g;
                                y6 = 35672, w5 = YA(-2, g8) & e5, o4[y6 >> 2] = w5;
                                break I;
                              }
                              if (o4[t5 + (o4[t5 + 16 >> 2] == (0 | C6) ? 16 : 20) >> 2] = B6, !B6)
                                break I;
                            }
                            o4[B6 + 24 >> 2] = t5, (A10 = o4[C6 + 16 >> 2]) && (o4[B6 + 16 >> 2] = A10, o4[A10 + 24 >> 2] = B6), (A10 = o4[C6 + 20 >> 2]) && (o4[B6 + 20 >> 2] = A10, o4[A10 + 24 >> 2] = B6);
                          }
                        i6 >>> 0 <= 15 ? (A10 = i6 + r4 | 0, o4[C6 + 4 >> 2] = 3 | A10, o4[4 + (A10 = A10 + C6 | 0) >> 2] = 1 | o4[A10 + 4 >> 2]) : (o4[C6 + 4 >> 2] = 3 | r4, o4[4 + (B6 = C6 + r4 | 0) >> 2] = 1 | i6, o4[B6 + i6 >> 2] = i6, c5 && (g8 = 35708 + (-8 & c5) | 0, Q6 = o4[8922], (A10 = 1 << (c5 >>> 3)) & E6 ? A10 = o4[g8 + 8 >> 2] : (o4[8917] = A10 | E6, A10 = g8), o4[g8 + 8 >> 2] = Q6, o4[A10 + 12 >> 2] = Q6, o4[Q6 + 12 >> 2] = g8, o4[Q6 + 8 >> 2] = A10), o4[8922] = B6, o4[8919] = i6), A10 = C6 + 8 | 0;
                      }
                      return D4 = I9 + 16 | 0, 0 | A10;
                    }, $b: function(A10) {
                      var I9 = 0, g8 = 0, C6 = 0, B6 = 0, Q6 = 0, i6 = 0, E6 = 0, a5 = 0, r4 = 0;
                      A:
                        if (A10 |= 0) {
                          Q6 = (C6 = A10 - 8 | 0) + (A10 = -8 & (I9 = o4[A10 - 4 >> 2])) | 0;
                          I:
                            if (!(1 & I9)) {
                              if (!(3 & I9))
                                break A;
                              if ((C6 = C6 - (I9 = o4[C6 >> 2]) | 0) >>> 0 < n4[8921])
                                break A;
                              if (A10 = A10 + I9 | 0, o4[8922] == (0 | C6)) {
                                if (3 == (3 & (I9 = o4[Q6 + 4 >> 2])))
                                  return o4[8919] = A10, o4[Q6 + 4 >> 2] = -2 & I9, o4[C6 + 4 >> 2] = 1 | A10, void (o4[A10 + C6 >> 2] = A10);
                              } else {
                                if (I9 >>> 0 <= 255) {
                                  if (B6 = o4[C6 + 8 >> 2], I9 = I9 >>> 3 | 0, (0 | (g8 = o4[C6 + 12 >> 2])) == (0 | B6)) {
                                    a5 = 35668, r4 = o4[8917] & YA(-2, I9), o4[a5 >> 2] = r4;
                                    break I;
                                  }
                                  o4[B6 + 12 >> 2] = g8, o4[g8 + 8 >> 2] = B6;
                                  break I;
                                }
                                if (E6 = o4[C6 + 24 >> 2], (0 | C6) == (0 | (I9 = o4[C6 + 12 >> 2])))
                                  if ((g8 = o4[(B6 = C6 + 20 | 0) >> 2]) || (g8 = o4[(B6 = C6 + 16 | 0) >> 2])) {
                                    for (; i6 = B6, (g8 = o4[(B6 = (I9 = g8) + 20 | 0) >> 2]) || (B6 = I9 + 16 | 0, g8 = o4[I9 + 16 >> 2]); )
                                      ;
                                    o4[i6 >> 2] = 0;
                                  } else
                                    I9 = 0;
                                else
                                  g8 = o4[C6 + 8 >> 2], o4[g8 + 12 >> 2] = I9, o4[I9 + 8 >> 2] = g8;
                                if (!E6)
                                  break I;
                                B6 = o4[C6 + 28 >> 2];
                                g: {
                                  if (o4[(g8 = 35972 + (B6 << 2) | 0) >> 2] == (0 | C6)) {
                                    if (o4[g8 >> 2] = I9, I9)
                                      break g;
                                    a5 = 35672, r4 = o4[8918] & YA(-2, B6), o4[a5 >> 2] = r4;
                                    break I;
                                  }
                                  if (o4[E6 + (o4[E6 + 16 >> 2] == (0 | C6) ? 16 : 20) >> 2] = I9, !I9)
                                    break I;
                                }
                                if (o4[I9 + 24 >> 2] = E6, (g8 = o4[C6 + 16 >> 2]) && (o4[I9 + 16 >> 2] = g8, o4[g8 + 24 >> 2] = I9), !(g8 = o4[C6 + 20 >> 2]))
                                  break I;
                                o4[I9 + 20 >> 2] = g8, o4[g8 + 24 >> 2] = I9;
                              }
                            }
                          if (!(C6 >>> 0 >= Q6 >>> 0) && 1 & (I9 = o4[Q6 + 4 >> 2])) {
                            I: {
                              if (!(2 & I9)) {
                                if (o4[8923] == (0 | Q6)) {
                                  if (o4[8923] = C6, A10 = o4[8920] + A10 | 0, o4[8920] = A10, o4[C6 + 4 >> 2] = 1 | A10, o4[8922] != (0 | C6))
                                    break A;
                                  return o4[8919] = 0, void (o4[8922] = 0);
                                }
                                if (o4[8922] == (0 | Q6))
                                  return o4[8922] = C6, A10 = o4[8919] + A10 | 0, o4[8919] = A10, o4[C6 + 4 >> 2] = 1 | A10, void (o4[A10 + C6 >> 2] = A10);
                                A10 = (-8 & I9) + A10 | 0;
                                g:
                                  if (I9 >>> 0 <= 255) {
                                    if (B6 = o4[Q6 + 8 >> 2], I9 = I9 >>> 3 | 0, (0 | (g8 = o4[Q6 + 12 >> 2])) == (0 | B6)) {
                                      a5 = 35668, r4 = o4[8917] & YA(-2, I9), o4[a5 >> 2] = r4;
                                      break g;
                                    }
                                    o4[B6 + 12 >> 2] = g8, o4[g8 + 8 >> 2] = B6;
                                  } else {
                                    if (E6 = o4[Q6 + 24 >> 2], (0 | Q6) == (0 | (I9 = o4[Q6 + 12 >> 2])))
                                      if ((g8 = o4[(B6 = Q6 + 20 | 0) >> 2]) || (g8 = o4[(B6 = Q6 + 16 | 0) >> 2])) {
                                        for (; i6 = B6, (g8 = o4[(B6 = (I9 = g8) + 20 | 0) >> 2]) || (B6 = I9 + 16 | 0, g8 = o4[I9 + 16 >> 2]); )
                                          ;
                                        o4[i6 >> 2] = 0;
                                      } else
                                        I9 = 0;
                                    else
                                      g8 = o4[Q6 + 8 >> 2], o4[g8 + 12 >> 2] = I9, o4[I9 + 8 >> 2] = g8;
                                    if (E6) {
                                      B6 = o4[Q6 + 28 >> 2];
                                      C: {
                                        if (o4[(g8 = 35972 + (B6 << 2) | 0) >> 2] == (0 | Q6)) {
                                          if (o4[g8 >> 2] = I9, I9)
                                            break C;
                                          a5 = 35672, r4 = o4[8918] & YA(-2, B6), o4[a5 >> 2] = r4;
                                          break g;
                                        }
                                        if (o4[E6 + (o4[E6 + 16 >> 2] == (0 | Q6) ? 16 : 20) >> 2] = I9, !I9)
                                          break g;
                                      }
                                      o4[I9 + 24 >> 2] = E6, (g8 = o4[Q6 + 16 >> 2]) && (o4[I9 + 16 >> 2] = g8, o4[g8 + 24 >> 2] = I9), (g8 = o4[Q6 + 20 >> 2]) && (o4[I9 + 20 >> 2] = g8, o4[g8 + 24 >> 2] = I9);
                                    }
                                  }
                                if (o4[C6 + 4 >> 2] = 1 | A10, o4[A10 + C6 >> 2] = A10, o4[8922] != (0 | C6))
                                  break I;
                                return void (o4[8919] = A10);
                              }
                              o4[Q6 + 4 >> 2] = -2 & I9, o4[C6 + 4 >> 2] = 1 | A10, o4[A10 + C6 >> 2] = A10;
                            }
                            if (A10 >>> 0 <= 255)
                              return I9 = 35708 + (-8 & A10) | 0, (g8 = o4[8917]) & (A10 = 1 << (A10 >>> 3)) ? A10 = o4[I9 + 8 >> 2] : (o4[8917] = A10 | g8, A10 = I9), o4[I9 + 8 >> 2] = C6, o4[A10 + 12 >> 2] = C6, o4[C6 + 12 >> 2] = I9, void (o4[C6 + 8 >> 2] = A10);
                            B6 = 31, A10 >>> 0 <= 16777215 && (B6 = 62 + ((A10 >>> 38 - (I9 = f3(A10 >>> 8 | 0)) & 1) - (I9 << 1) | 0) | 0), o4[C6 + 28 >> 2] = B6, o4[C6 + 16 >> 2] = 0, o4[C6 + 20 >> 2] = 0, i6 = 35972 + (B6 << 2) | 0;
                            I: {
                              g: {
                                if ((g8 = o4[8918]) & (I9 = 1 << B6)) {
                                  for (B6 = A10 << (31 != (0 | B6) ? 25 - (B6 >>> 1 | 0) | 0 : 0), I9 = o4[i6 >> 2]; ; ) {
                                    if (g8 = I9, (-8 & o4[I9 + 4 >> 2]) == (0 | A10))
                                      break g;
                                    if (I9 = B6 >>> 29 | 0, B6 <<= 1, !(I9 = o4[16 + (i6 = g8 + (4 & I9) | 0) >> 2]))
                                      break;
                                  }
                                  o4[i6 + 16 >> 2] = C6, o4[C6 + 24 >> 2] = g8;
                                } else
                                  o4[8918] = I9 | g8, o4[i6 >> 2] = C6, o4[C6 + 24 >> 2] = i6;
                                o4[C6 + 12 >> 2] = C6, o4[C6 + 8 >> 2] = C6;
                                break I;
                              }
                              A10 = o4[g8 + 8 >> 2], o4[A10 + 12 >> 2] = C6, o4[g8 + 8 >> 2] = C6, o4[C6 + 24 >> 2] = 0, o4[C6 + 12 >> 2] = g8, o4[C6 + 8 >> 2] = A10;
                            }
                            A10 = o4[8925] - 1 | 0, o4[8925] = A10 || -1;
                          }
                        }
                    }, ac: nI };
                  }(A8);
                }(I7);
              }, instantiate: function(A7, I7) {
                return { then: function(g6) {
                  var C4 = new D3.Module(A7);
                  g6({ instance: new D3.Instance(C4, I7) });
                } };
              }, RuntimeError: Error };
              e3 = [], "object" != typeof D3 && K4("no native wasm support detected");
              var w3, h3, s3, p4, u4, k4, F4, l3 = false, S4 = "undefined" != typeof TextDecoder ? new TextDecoder("utf8") : void 0;
              function H4(A7, I7) {
                return A7 ? function(A8, I8, g6) {
                  for (var C4 = I8 + g6, B5 = I8; A8[B5] && !(B5 >= C4); )
                    ++B5;
                  if (B5 - I8 > 16 && A8.buffer && S4)
                    return S4.decode(A8.subarray(I8, B5));
                  for (var Q5 = ""; I8 < B5; ) {
                    var i5 = A8[I8++];
                    if (128 & i5) {
                      var E5 = 63 & A8[I8++];
                      if (192 != (224 & i5)) {
                        var o4 = 63 & A8[I8++];
                        if ((i5 = 224 == (240 & i5) ? (15 & i5) << 12 | E5 << 6 | o4 : (7 & i5) << 18 | E5 << 12 | o4 << 6 | 63 & A8[I8++]) < 65536)
                          Q5 += String.fromCharCode(i5);
                        else {
                          var a4 = i5 - 65536;
                          Q5 += String.fromCharCode(55296 | a4 >> 10, 56320 | 1023 & a4);
                        }
                      } else
                        Q5 += String.fromCharCode((31 & i5) << 6 | E5);
                    } else
                      Q5 += String.fromCharCode(i5);
                  }
                  return Q5;
                }(h3, A7, I7) : "";
              }
              function M4() {
                var A7 = y4.buffer;
                i4.HEAP8 = w3 = new Int8Array(A7), i4.HEAP16 = s3 = new Int16Array(A7), i4.HEAP32 = p4 = new Int32Array(A7), i4.HEAPU8 = h3 = new Uint8Array(A7), i4.HEAPU16 = new Uint16Array(A7), i4.HEAPU32 = u4 = new Uint32Array(A7), i4.HEAPF32 = k4 = new Float32Array(A7), i4.HEAPF64 = F4 = new Float64Array(A7);
              }
              var G4 = i4.INITIAL_MEMORY || 16777216;
              G4 >= 65536 || K4("INITIAL_MEMORY should be larger than STACK_SIZE, was " + G4 + "! (STACK_SIZE=65536)"), y4 = i4.wasmMemory ? i4.wasmMemory : new D3.Memory({ initial: G4 / 65536, maximum: 32768 }), M4(), G4 = y4.buffer.byteLength;
              var U4 = [], J4 = [], N4 = [], Y3 = 0, b4 = null, _4 = null;
              function K4(A7) {
                throw i4.onAbort && i4.onAbort(A7), c3(A7 = "Aborted(" + A7 + ")"), l3 = true, A7 += ". Build with -sASSERTIONS for more info.", new D3.RuntimeError(A7);
              }
              var P4, v4, m3, d2, L4 = "data:application/octet-stream;base64,";
              function R4(A7) {
                return A7.startsWith(L4);
              }
              function x4(A7) {
                return A7.startsWith("file://");
              }
              function j3(A7) {
                try {
                  if (A7 == P4 && e3)
                    return new Uint8Array(e3);
                  var I7 = T4(A7);
                  if (I7)
                    return I7;
                  if (Q4)
                    return Q4(A7);
                  throw "both async and sync fetching of the wasm failed";
                } catch (A8) {
                  K4(A8);
                }
              }
              R4(P4 = "<<< WASM_BINARY_FILE >>>") || (v4 = P4, P4 = i4.locateFile ? i4.locateFile(v4, r2) : r2 + v4);
              var X4 = { 34904: () => i4.getRandomValue(), 34940: () => {
                if (void 0 === i4.getRandomValue)
                  try {
                    var A7 = "object" == typeof window ? window : self, I7 = void 0 !== A7.crypto ? A7.crypto : A7.msCrypto, g6 = function() {
                      var A8 = new Uint32Array(1);
                      return I7.getRandomValues(A8), A8[0] >>> 0;
                    };
                    g6(), i4.getRandomValue = g6;
                  } catch (A8) {
                    try {
                      var C4 = require_crypto(), B5 = function() {
                        var A9 = C4.randomBytes(4);
                        return (A9[0] << 24 | A9[1] << 16 | A9[2] << 8 | A9[3]) >>> 0;
                      };
                      B5(), i4.getRandomValue = B5;
                    } catch (A9) {
                      throw "No secure random number generator found";
                    }
                  }
              } };
              function q3(A7) {
                for (; A7.length > 0; )
                  A7.shift()(i4);
              }
              var z4 = [];
              function V4(A7) {
                var I7 = y4.buffer;
                try {
                  return y4.grow(A7 - I7.byteLength + 65535 >>> 16), M4(), 1;
                } catch (A8) {
                }
              }
              var O4 = "function" == typeof atob ? atob : function(A7) {
                var I7, g6, C4, B5, Q5, i5, E5 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", o4 = "", a4 = 0;
                A7 = A7.replace(/[^A-Za-z0-9\+\/\=]/g, "");
                do {
                  I7 = E5.indexOf(A7.charAt(a4++)) << 2 | (B5 = E5.indexOf(A7.charAt(a4++))) >> 4, g6 = (15 & B5) << 4 | (Q5 = E5.indexOf(A7.charAt(a4++))) >> 2, C4 = (3 & Q5) << 6 | (i5 = E5.indexOf(A7.charAt(a4++))), o4 += String.fromCharCode(I7), 64 !== Q5 && (o4 += String.fromCharCode(g6)), 64 !== i5 && (o4 += String.fromCharCode(C4));
                } while (a4 < A7.length);
                return o4;
              };
              function T4(A7) {
                if (R4(A7))
                  return function(A8) {
                    if ("boolean" == typeof n3 && n3) {
                      var I7 = Buffer.from(A8, "base64");
                      return new Uint8Array(I7.buffer, I7.byteOffset, I7.byteLength);
                    }
                    try {
                      for (var g6 = O4(A8), C4 = new Uint8Array(g6.length), B5 = 0; B5 < g6.length; ++B5)
                        C4[B5] = g6.charCodeAt(B5);
                      return C4;
                    } catch (A9) {
                      throw new Error("Converting base64 string to bytes failed.");
                    }
                  }(A7.slice(L4.length));
              }
              var W4, Z3 = { c: function(A7, I7, g6, C4) {
                K4("Assertion failed: " + H4(A7) + ", at: " + [I7 ? H4(I7) : "unknown filename", g6, C4 ? H4(C4) : "unknown function"]);
              }, d: function() {
                K4("");
              }, b: function(A7, I7, g6) {
                return function(A8, I8, g7) {
                  var C4 = function(A9, I9) {
                    var g8;
                    for (z4.length = 0, I9 >>= 2; g8 = h3[A9++]; )
                      I9 += 105 != g8 & I9, z4.push(105 == g8 ? p4[I9] : F4[I9++ >> 1]), ++I9;
                    return z4;
                  }(I8, g7);
                  return X4[A8].apply(null, C4);
                }(A7, I7, g6);
              }, e: function(A7) {
                var I7, g6 = h3.length, C4 = 2147483648;
                if ((A7 >>>= 0) > C4)
                  return false;
                for (var B5 = 1; B5 <= 4; B5 *= 2) {
                  var Q5 = g6 * (1 + 0.2 / B5);
                  if (Q5 = Math.min(Q5, A7 + 100663296), V4(Math.min(C4, (I7 = Math.max(A7, Q5)) + (65536 - I7 % 65536) % 65536)))
                    return true;
                }
                return false;
              }, a: y4 };
              function $3() {
                function A7() {
                  W4 || (W4 = true, i4.calledRun = true, l3 || (q3(J4), i4.onRuntimeInitialized && i4.onRuntimeInitialized(), function() {
                    if (i4.postRun)
                      for ("function" == typeof i4.postRun && (i4.postRun = [i4.postRun]); i4.postRun.length; )
                        A8 = i4.postRun.shift(), N4.unshift(A8);
                    var A8;
                    q3(N4);
                  }()));
                }
                Y3 > 0 || (function() {
                  if (i4.preRun)
                    for ("function" == typeof i4.preRun && (i4.preRun = [i4.preRun]); i4.preRun.length; )
                      A8 = i4.preRun.shift(), U4.unshift(A8);
                  var A8;
                  q3(U4);
                }(), Y3 > 0 || (i4.setStatus ? (i4.setStatus("Running..."), setTimeout(function() {
                  setTimeout(function() {
                    i4.setStatus("");
                  }, 1), A7();
                }, 1)) : A7()));
              }
              if (function() {
                var A7 = { a: Z3 };
                function I7(A8, I8) {
                  var g7, C5 = A8.exports;
                  i4.asm = C5, i4.asm.ac, g7 = i4.asm.f, J4.unshift(g7), function(A9) {
                    if (Y3--, i4.monitorRunDependencies && i4.monitorRunDependencies(Y3), 0 == Y3 && (null !== b4 && (clearInterval(b4), b4 = null), _4)) {
                      var I9 = _4;
                      _4 = null, I9();
                    }
                  }();
                }
                function g6(A8) {
                  I7(A8.instance);
                }
                function C4(I8) {
                  return function() {
                    if (!e3 && (o3 || a3)) {
                      if ("function" == typeof fetch && !x4(P4))
                        return fetch(P4, { credentials: "same-origin" }).then(function(A8) {
                          if (!A8.ok)
                            throw "failed to load wasm binary file at '" + P4 + "'";
                          return A8.arrayBuffer();
                        }).catch(function() {
                          return j3(P4);
                        });
                      if (B4)
                        return new Promise(function(A8, I9) {
                          B4(P4, function(I10) {
                            A8(new Uint8Array(I10));
                          }, I9);
                        });
                    }
                    return Promise.resolve().then(function() {
                      return j3(P4);
                    });
                  }().then(function(I9) {
                    return D3.instantiate(I9, A7);
                  }).then(function(A8) {
                    return A8;
                  }).then(I8, function(A8) {
                    c3("failed to asynchronously prepare wasm: " + A8), K4(A8);
                  });
                }
                if (Y3++, i4.monitorRunDependencies && i4.monitorRunDependencies(Y3), i4.instantiateWasm)
                  try {
                    return i4.instantiateWasm(A7, I7);
                  } catch (A8) {
                    return c3("Module.instantiateWasm callback failed with error: " + A8), false;
                  }
                e3 || "function" != typeof D3.instantiateStreaming || R4(P4) || x4(P4) || n3 || "function" != typeof fetch ? C4(g6) : fetch(P4, { credentials: "same-origin" }).then(function(I8) {
                  return D3.instantiateStreaming(I8, A7).then(g6, function(A8) {
                    return c3("wasm streaming compile failed: " + A8), c3("falling back to ArrayBuffer instantiation"), C4(g6);
                  });
                });
              }(), i4._crypto_aead_chacha20poly1305_encrypt_detached = function() {
                return (i4._crypto_aead_chacha20poly1305_encrypt_detached = i4.asm.g).apply(null, arguments);
              }, i4._crypto_aead_chacha20poly1305_encrypt = function() {
                return (i4._crypto_aead_chacha20poly1305_encrypt = i4.asm.h).apply(null, arguments);
              }, i4._crypto_aead_chacha20poly1305_ietf_encrypt_detached = function() {
                return (i4._crypto_aead_chacha20poly1305_ietf_encrypt_detached = i4.asm.i).apply(null, arguments);
              }, i4._crypto_aead_chacha20poly1305_ietf_encrypt = function() {
                return (i4._crypto_aead_chacha20poly1305_ietf_encrypt = i4.asm.j).apply(null, arguments);
              }, i4._crypto_aead_chacha20poly1305_decrypt_detached = function() {
                return (i4._crypto_aead_chacha20poly1305_decrypt_detached = i4.asm.k).apply(null, arguments);
              }, i4._crypto_aead_chacha20poly1305_decrypt = function() {
                return (i4._crypto_aead_chacha20poly1305_decrypt = i4.asm.l).apply(null, arguments);
              }, i4._crypto_aead_chacha20poly1305_ietf_decrypt_detached = function() {
                return (i4._crypto_aead_chacha20poly1305_ietf_decrypt_detached = i4.asm.m).apply(null, arguments);
              }, i4._crypto_aead_chacha20poly1305_ietf_decrypt = function() {
                return (i4._crypto_aead_chacha20poly1305_ietf_decrypt = i4.asm.n).apply(null, arguments);
              }, i4._crypto_aead_chacha20poly1305_ietf_keybytes = function() {
                return (i4._crypto_aead_chacha20poly1305_ietf_keybytes = i4.asm.o).apply(null, arguments);
              }, i4._crypto_aead_chacha20poly1305_ietf_npubbytes = function() {
                return (i4._crypto_aead_chacha20poly1305_ietf_npubbytes = i4.asm.p).apply(null, arguments);
              }, i4._crypto_aead_chacha20poly1305_ietf_nsecbytes = function() {
                return (i4._crypto_aead_chacha20poly1305_ietf_nsecbytes = i4.asm.q).apply(null, arguments);
              }, i4._crypto_aead_chacha20poly1305_ietf_abytes = function() {
                return (i4._crypto_aead_chacha20poly1305_ietf_abytes = i4.asm.r).apply(null, arguments);
              }, i4._crypto_aead_chacha20poly1305_ietf_messagebytes_max = function() {
                return (i4._crypto_aead_chacha20poly1305_ietf_messagebytes_max = i4.asm.s).apply(null, arguments);
              }, i4._crypto_aead_chacha20poly1305_ietf_keygen = function() {
                return (i4._crypto_aead_chacha20poly1305_ietf_keygen = i4.asm.t).apply(null, arguments);
              }, i4._crypto_aead_chacha20poly1305_keybytes = function() {
                return (i4._crypto_aead_chacha20poly1305_keybytes = i4.asm.u).apply(null, arguments);
              }, i4._crypto_aead_chacha20poly1305_npubbytes = function() {
                return (i4._crypto_aead_chacha20poly1305_npubbytes = i4.asm.v).apply(null, arguments);
              }, i4._crypto_aead_chacha20poly1305_nsecbytes = function() {
                return (i4._crypto_aead_chacha20poly1305_nsecbytes = i4.asm.w).apply(null, arguments);
              }, i4._crypto_aead_chacha20poly1305_abytes = function() {
                return (i4._crypto_aead_chacha20poly1305_abytes = i4.asm.x).apply(null, arguments);
              }, i4._crypto_aead_chacha20poly1305_messagebytes_max = function() {
                return (i4._crypto_aead_chacha20poly1305_messagebytes_max = i4.asm.y).apply(null, arguments);
              }, i4._crypto_aead_chacha20poly1305_keygen = function() {
                return (i4._crypto_aead_chacha20poly1305_keygen = i4.asm.z).apply(null, arguments);
              }, i4._crypto_aead_xchacha20poly1305_ietf_encrypt_detached = function() {
                return (i4._crypto_aead_xchacha20poly1305_ietf_encrypt_detached = i4.asm.A).apply(null, arguments);
              }, i4._crypto_aead_xchacha20poly1305_ietf_encrypt = function() {
                return (i4._crypto_aead_xchacha20poly1305_ietf_encrypt = i4.asm.B).apply(null, arguments);
              }, i4._crypto_aead_xchacha20poly1305_ietf_decrypt_detached = function() {
                return (i4._crypto_aead_xchacha20poly1305_ietf_decrypt_detached = i4.asm.C).apply(null, arguments);
              }, i4._crypto_aead_xchacha20poly1305_ietf_decrypt = function() {
                return (i4._crypto_aead_xchacha20poly1305_ietf_decrypt = i4.asm.D).apply(null, arguments);
              }, i4._crypto_aead_xchacha20poly1305_ietf_keybytes = function() {
                return (i4._crypto_aead_xchacha20poly1305_ietf_keybytes = i4.asm.E).apply(null, arguments);
              }, i4._crypto_aead_xchacha20poly1305_ietf_npubbytes = function() {
                return (i4._crypto_aead_xchacha20poly1305_ietf_npubbytes = i4.asm.F).apply(null, arguments);
              }, i4._crypto_aead_xchacha20poly1305_ietf_nsecbytes = function() {
                return (i4._crypto_aead_xchacha20poly1305_ietf_nsecbytes = i4.asm.G).apply(null, arguments);
              }, i4._crypto_aead_xchacha20poly1305_ietf_abytes = function() {
                return (i4._crypto_aead_xchacha20poly1305_ietf_abytes = i4.asm.H).apply(null, arguments);
              }, i4._crypto_aead_xchacha20poly1305_ietf_messagebytes_max = function() {
                return (i4._crypto_aead_xchacha20poly1305_ietf_messagebytes_max = i4.asm.I).apply(null, arguments);
              }, i4._crypto_aead_xchacha20poly1305_ietf_keygen = function() {
                return (i4._crypto_aead_xchacha20poly1305_ietf_keygen = i4.asm.J).apply(null, arguments);
              }, i4._crypto_auth_bytes = function() {
                return (i4._crypto_auth_bytes = i4.asm.K).apply(null, arguments);
              }, i4._crypto_auth_keybytes = function() {
                return (i4._crypto_auth_keybytes = i4.asm.L).apply(null, arguments);
              }, i4._crypto_auth = function() {
                return (i4._crypto_auth = i4.asm.M).apply(null, arguments);
              }, i4._crypto_auth_verify = function() {
                return (i4._crypto_auth_verify = i4.asm.N).apply(null, arguments);
              }, i4._crypto_auth_keygen = function() {
                return (i4._crypto_auth_keygen = i4.asm.O).apply(null, arguments);
              }, i4._crypto_box_seedbytes = function() {
                return (i4._crypto_box_seedbytes = i4.asm.P).apply(null, arguments);
              }, i4._crypto_box_publickeybytes = function() {
                return (i4._crypto_box_publickeybytes = i4.asm.Q).apply(null, arguments);
              }, i4._crypto_box_secretkeybytes = function() {
                return (i4._crypto_box_secretkeybytes = i4.asm.R).apply(null, arguments);
              }, i4._crypto_box_beforenmbytes = function() {
                return (i4._crypto_box_beforenmbytes = i4.asm.S).apply(null, arguments);
              }, i4._crypto_box_noncebytes = function() {
                return (i4._crypto_box_noncebytes = i4.asm.T).apply(null, arguments);
              }, i4._crypto_box_macbytes = function() {
                return (i4._crypto_box_macbytes = i4.asm.U).apply(null, arguments);
              }, i4._crypto_box_messagebytes_max = function() {
                return (i4._crypto_box_messagebytes_max = i4.asm.V).apply(null, arguments);
              }, i4._crypto_box_seed_keypair = function() {
                return (i4._crypto_box_seed_keypair = i4.asm.W).apply(null, arguments);
              }, i4._crypto_box_keypair = function() {
                return (i4._crypto_box_keypair = i4.asm.X).apply(null, arguments);
              }, i4._crypto_box_beforenm = function() {
                return (i4._crypto_box_beforenm = i4.asm.Y).apply(null, arguments);
              }, i4._crypto_box_detached_afternm = function() {
                return (i4._crypto_box_detached_afternm = i4.asm.Z).apply(null, arguments);
              }, i4._crypto_box_detached = function() {
                return (i4._crypto_box_detached = i4.asm._).apply(null, arguments);
              }, i4._crypto_box_easy_afternm = function() {
                return (i4._crypto_box_easy_afternm = i4.asm.$).apply(null, arguments);
              }, i4._crypto_box_easy = function() {
                return (i4._crypto_box_easy = i4.asm.aa).apply(null, arguments);
              }, i4._crypto_box_open_detached_afternm = function() {
                return (i4._crypto_box_open_detached_afternm = i4.asm.ba).apply(null, arguments);
              }, i4._crypto_box_open_detached = function() {
                return (i4._crypto_box_open_detached = i4.asm.ca).apply(null, arguments);
              }, i4._crypto_box_open_easy_afternm = function() {
                return (i4._crypto_box_open_easy_afternm = i4.asm.da).apply(null, arguments);
              }, i4._crypto_box_open_easy = function() {
                return (i4._crypto_box_open_easy = i4.asm.ea).apply(null, arguments);
              }, i4._crypto_box_seal = function() {
                return (i4._crypto_box_seal = i4.asm.fa).apply(null, arguments);
              }, i4._crypto_box_seal_open = function() {
                return (i4._crypto_box_seal_open = i4.asm.ga).apply(null, arguments);
              }, i4._crypto_box_sealbytes = function() {
                return (i4._crypto_box_sealbytes = i4.asm.ha).apply(null, arguments);
              }, i4._crypto_generichash_bytes_min = function() {
                return (i4._crypto_generichash_bytes_min = i4.asm.ia).apply(null, arguments);
              }, i4._crypto_generichash_bytes_max = function() {
                return (i4._crypto_generichash_bytes_max = i4.asm.ja).apply(null, arguments);
              }, i4._crypto_generichash_bytes = function() {
                return (i4._crypto_generichash_bytes = i4.asm.ka).apply(null, arguments);
              }, i4._crypto_generichash_keybytes_min = function() {
                return (i4._crypto_generichash_keybytes_min = i4.asm.la).apply(null, arguments);
              }, i4._crypto_generichash_keybytes_max = function() {
                return (i4._crypto_generichash_keybytes_max = i4.asm.ma).apply(null, arguments);
              }, i4._crypto_generichash_keybytes = function() {
                return (i4._crypto_generichash_keybytes = i4.asm.na).apply(null, arguments);
              }, i4._crypto_generichash_statebytes = function() {
                return (i4._crypto_generichash_statebytes = i4.asm.oa).apply(null, arguments);
              }, i4._crypto_generichash = function() {
                return (i4._crypto_generichash = i4.asm.pa).apply(null, arguments);
              }, i4._crypto_generichash_init = function() {
                return (i4._crypto_generichash_init = i4.asm.qa).apply(null, arguments);
              }, i4._crypto_generichash_update = function() {
                return (i4._crypto_generichash_update = i4.asm.ra).apply(null, arguments);
              }, i4._crypto_generichash_final = function() {
                return (i4._crypto_generichash_final = i4.asm.sa).apply(null, arguments);
              }, i4._crypto_generichash_keygen = function() {
                return (i4._crypto_generichash_keygen = i4.asm.ta).apply(null, arguments);
              }, i4._crypto_hash_bytes = function() {
                return (i4._crypto_hash_bytes = i4.asm.ua).apply(null, arguments);
              }, i4._crypto_hash = function() {
                return (i4._crypto_hash = i4.asm.va).apply(null, arguments);
              }, i4._crypto_kdf_bytes_min = function() {
                return (i4._crypto_kdf_bytes_min = i4.asm.wa).apply(null, arguments);
              }, i4._crypto_kdf_bytes_max = function() {
                return (i4._crypto_kdf_bytes_max = i4.asm.xa).apply(null, arguments);
              }, i4._crypto_kdf_contextbytes = function() {
                return (i4._crypto_kdf_contextbytes = i4.asm.ya).apply(null, arguments);
              }, i4._crypto_kdf_keybytes = function() {
                return (i4._crypto_kdf_keybytes = i4.asm.za).apply(null, arguments);
              }, i4._crypto_kdf_derive_from_key = function() {
                return (i4._crypto_kdf_derive_from_key = i4.asm.Aa).apply(null, arguments);
              }, i4._crypto_kdf_keygen = function() {
                return (i4._crypto_kdf_keygen = i4.asm.Ba).apply(null, arguments);
              }, i4._crypto_kx_seed_keypair = function() {
                return (i4._crypto_kx_seed_keypair = i4.asm.Ca).apply(null, arguments);
              }, i4._crypto_kx_keypair = function() {
                return (i4._crypto_kx_keypair = i4.asm.Da).apply(null, arguments);
              }, i4._crypto_kx_client_session_keys = function() {
                return (i4._crypto_kx_client_session_keys = i4.asm.Ea).apply(null, arguments);
              }, i4._crypto_kx_server_session_keys = function() {
                return (i4._crypto_kx_server_session_keys = i4.asm.Fa).apply(null, arguments);
              }, i4._crypto_kx_publickeybytes = function() {
                return (i4._crypto_kx_publickeybytes = i4.asm.Ga).apply(null, arguments);
              }, i4._crypto_kx_secretkeybytes = function() {
                return (i4._crypto_kx_secretkeybytes = i4.asm.Ha).apply(null, arguments);
              }, i4._crypto_kx_seedbytes = function() {
                return (i4._crypto_kx_seedbytes = i4.asm.Ia).apply(null, arguments);
              }, i4._crypto_kx_sessionkeybytes = function() {
                return (i4._crypto_kx_sessionkeybytes = i4.asm.Ja).apply(null, arguments);
              }, i4._crypto_scalarmult_base = function() {
                return (i4._crypto_scalarmult_base = i4.asm.Ka).apply(null, arguments);
              }, i4._crypto_scalarmult = function() {
                return (i4._crypto_scalarmult = i4.asm.La).apply(null, arguments);
              }, i4._crypto_scalarmult_bytes = function() {
                return (i4._crypto_scalarmult_bytes = i4.asm.Ma).apply(null, arguments);
              }, i4._crypto_scalarmult_scalarbytes = function() {
                return (i4._crypto_scalarmult_scalarbytes = i4.asm.Na).apply(null, arguments);
              }, i4._crypto_secretbox_keybytes = function() {
                return (i4._crypto_secretbox_keybytes = i4.asm.Oa).apply(null, arguments);
              }, i4._crypto_secretbox_noncebytes = function() {
                return (i4._crypto_secretbox_noncebytes = i4.asm.Pa).apply(null, arguments);
              }, i4._crypto_secretbox_macbytes = function() {
                return (i4._crypto_secretbox_macbytes = i4.asm.Qa).apply(null, arguments);
              }, i4._crypto_secretbox_messagebytes_max = function() {
                return (i4._crypto_secretbox_messagebytes_max = i4.asm.Ra).apply(null, arguments);
              }, i4._crypto_secretbox_keygen = function() {
                return (i4._crypto_secretbox_keygen = i4.asm.Sa).apply(null, arguments);
              }, i4._crypto_secretbox_detached = function() {
                return (i4._crypto_secretbox_detached = i4.asm.Ta).apply(null, arguments);
              }, i4._crypto_secretbox_easy = function() {
                return (i4._crypto_secretbox_easy = i4.asm.Ua).apply(null, arguments);
              }, i4._crypto_secretbox_open_detached = function() {
                return (i4._crypto_secretbox_open_detached = i4.asm.Va).apply(null, arguments);
              }, i4._crypto_secretbox_open_easy = function() {
                return (i4._crypto_secretbox_open_easy = i4.asm.Wa).apply(null, arguments);
              }, i4._crypto_secretstream_xchacha20poly1305_keygen = function() {
                return (i4._crypto_secretstream_xchacha20poly1305_keygen = i4.asm.Xa).apply(null, arguments);
              }, i4._crypto_secretstream_xchacha20poly1305_init_push = function() {
                return (i4._crypto_secretstream_xchacha20poly1305_init_push = i4.asm.Ya).apply(null, arguments);
              }, i4._crypto_secretstream_xchacha20poly1305_init_pull = function() {
                return (i4._crypto_secretstream_xchacha20poly1305_init_pull = i4.asm.Za).apply(null, arguments);
              }, i4._crypto_secretstream_xchacha20poly1305_rekey = function() {
                return (i4._crypto_secretstream_xchacha20poly1305_rekey = i4.asm._a).apply(null, arguments);
              }, i4._crypto_secretstream_xchacha20poly1305_push = function() {
                return (i4._crypto_secretstream_xchacha20poly1305_push = i4.asm.$a).apply(null, arguments);
              }, i4._crypto_secretstream_xchacha20poly1305_pull = function() {
                return (i4._crypto_secretstream_xchacha20poly1305_pull = i4.asm.ab).apply(null, arguments);
              }, i4._crypto_secretstream_xchacha20poly1305_statebytes = function() {
                return (i4._crypto_secretstream_xchacha20poly1305_statebytes = i4.asm.bb).apply(null, arguments);
              }, i4._crypto_secretstream_xchacha20poly1305_abytes = function() {
                return (i4._crypto_secretstream_xchacha20poly1305_abytes = i4.asm.cb).apply(null, arguments);
              }, i4._crypto_secretstream_xchacha20poly1305_headerbytes = function() {
                return (i4._crypto_secretstream_xchacha20poly1305_headerbytes = i4.asm.db).apply(null, arguments);
              }, i4._crypto_secretstream_xchacha20poly1305_keybytes = function() {
                return (i4._crypto_secretstream_xchacha20poly1305_keybytes = i4.asm.eb).apply(null, arguments);
              }, i4._crypto_secretstream_xchacha20poly1305_messagebytes_max = function() {
                return (i4._crypto_secretstream_xchacha20poly1305_messagebytes_max = i4.asm.fb).apply(null, arguments);
              }, i4._crypto_secretstream_xchacha20poly1305_tag_message = function() {
                return (i4._crypto_secretstream_xchacha20poly1305_tag_message = i4.asm.gb).apply(null, arguments);
              }, i4._crypto_secretstream_xchacha20poly1305_tag_push = function() {
                return (i4._crypto_secretstream_xchacha20poly1305_tag_push = i4.asm.hb).apply(null, arguments);
              }, i4._crypto_secretstream_xchacha20poly1305_tag_rekey = function() {
                return (i4._crypto_secretstream_xchacha20poly1305_tag_rekey = i4.asm.ib).apply(null, arguments);
              }, i4._crypto_secretstream_xchacha20poly1305_tag_final = function() {
                return (i4._crypto_secretstream_xchacha20poly1305_tag_final = i4.asm.jb).apply(null, arguments);
              }, i4._crypto_shorthash_bytes = function() {
                return (i4._crypto_shorthash_bytes = i4.asm.kb).apply(null, arguments);
              }, i4._crypto_shorthash_keybytes = function() {
                return (i4._crypto_shorthash_keybytes = i4.asm.lb).apply(null, arguments);
              }, i4._crypto_shorthash = function() {
                return (i4._crypto_shorthash = i4.asm.mb).apply(null, arguments);
              }, i4._crypto_shorthash_keygen = function() {
                return (i4._crypto_shorthash_keygen = i4.asm.nb).apply(null, arguments);
              }, i4._crypto_sign_statebytes = function() {
                return (i4._crypto_sign_statebytes = i4.asm.ob).apply(null, arguments);
              }, i4._crypto_sign_bytes = function() {
                return (i4._crypto_sign_bytes = i4.asm.pb).apply(null, arguments);
              }, i4._crypto_sign_seedbytes = function() {
                return (i4._crypto_sign_seedbytes = i4.asm.qb).apply(null, arguments);
              }, i4._crypto_sign_publickeybytes = function() {
                return (i4._crypto_sign_publickeybytes = i4.asm.rb).apply(null, arguments);
              }, i4._crypto_sign_secretkeybytes = function() {
                return (i4._crypto_sign_secretkeybytes = i4.asm.sb).apply(null, arguments);
              }, i4._crypto_sign_messagebytes_max = function() {
                return (i4._crypto_sign_messagebytes_max = i4.asm.tb).apply(null, arguments);
              }, i4._crypto_sign_seed_keypair = function() {
                return (i4._crypto_sign_seed_keypair = i4.asm.ub).apply(null, arguments);
              }, i4._crypto_sign_keypair = function() {
                return (i4._crypto_sign_keypair = i4.asm.vb).apply(null, arguments);
              }, i4._crypto_sign = function() {
                return (i4._crypto_sign = i4.asm.wb).apply(null, arguments);
              }, i4._crypto_sign_open = function() {
                return (i4._crypto_sign_open = i4.asm.xb).apply(null, arguments);
              }, i4._crypto_sign_detached = function() {
                return (i4._crypto_sign_detached = i4.asm.yb).apply(null, arguments);
              }, i4._crypto_sign_verify_detached = function() {
                return (i4._crypto_sign_verify_detached = i4.asm.zb).apply(null, arguments);
              }, i4._crypto_sign_init = function() {
                return (i4._crypto_sign_init = i4.asm.Ab).apply(null, arguments);
              }, i4._crypto_sign_update = function() {
                return (i4._crypto_sign_update = i4.asm.Bb).apply(null, arguments);
              }, i4._crypto_sign_final_create = function() {
                return (i4._crypto_sign_final_create = i4.asm.Cb).apply(null, arguments);
              }, i4._crypto_sign_final_verify = function() {
                return (i4._crypto_sign_final_verify = i4.asm.Db).apply(null, arguments);
              }, i4._crypto_sign_ed25519_pk_to_curve25519 = function() {
                return (i4._crypto_sign_ed25519_pk_to_curve25519 = i4.asm.Eb).apply(null, arguments);
              }, i4._crypto_sign_ed25519_sk_to_curve25519 = function() {
                return (i4._crypto_sign_ed25519_sk_to_curve25519 = i4.asm.Fb).apply(null, arguments);
              }, i4._randombytes_random = function() {
                return (i4._randombytes_random = i4.asm.Gb).apply(null, arguments);
              }, i4._randombytes_stir = function() {
                return (i4._randombytes_stir = i4.asm.Hb).apply(null, arguments);
              }, i4._randombytes_uniform = function() {
                return (i4._randombytes_uniform = i4.asm.Ib).apply(null, arguments);
              }, i4._randombytes_buf = function() {
                return (i4._randombytes_buf = i4.asm.Jb).apply(null, arguments);
              }, i4._randombytes_buf_deterministic = function() {
                return (i4._randombytes_buf_deterministic = i4.asm.Kb).apply(null, arguments);
              }, i4._randombytes_seedbytes = function() {
                return (i4._randombytes_seedbytes = i4.asm.Lb).apply(null, arguments);
              }, i4._randombytes_close = function() {
                return (i4._randombytes_close = i4.asm.Mb).apply(null, arguments);
              }, i4._randombytes = function() {
                return (i4._randombytes = i4.asm.Nb).apply(null, arguments);
              }, i4._sodium_bin2hex = function() {
                return (i4._sodium_bin2hex = i4.asm.Ob).apply(null, arguments);
              }, i4._sodium_hex2bin = function() {
                return (i4._sodium_hex2bin = i4.asm.Pb).apply(null, arguments);
              }, i4._sodium_base64_encoded_len = function() {
                return (i4._sodium_base64_encoded_len = i4.asm.Qb).apply(null, arguments);
              }, i4._sodium_bin2base64 = function() {
                return (i4._sodium_bin2base64 = i4.asm.Rb).apply(null, arguments);
              }, i4._sodium_base642bin = function() {
                return (i4._sodium_base642bin = i4.asm.Sb).apply(null, arguments);
              }, i4._sodium_init = function() {
                return (i4._sodium_init = i4.asm.Tb).apply(null, arguments);
              }, i4._sodium_pad = function() {
                return (i4._sodium_pad = i4.asm.Ub).apply(null, arguments);
              }, i4._sodium_unpad = function() {
                return (i4._sodium_unpad = i4.asm.Vb).apply(null, arguments);
              }, i4._sodium_version_string = function() {
                return (i4._sodium_version_string = i4.asm.Wb).apply(null, arguments);
              }, i4._sodium_library_version_major = function() {
                return (i4._sodium_library_version_major = i4.asm.Xb).apply(null, arguments);
              }, i4._sodium_library_version_minor = function() {
                return (i4._sodium_library_version_minor = i4.asm.Yb).apply(null, arguments);
              }, i4._sodium_library_minimal = function() {
                return (i4._sodium_library_minimal = i4.asm.Zb).apply(null, arguments);
              }, i4._malloc = function() {
                return (i4._malloc = i4.asm._b).apply(null, arguments);
              }, i4._free = function() {
                return (i4._free = i4.asm.$b).apply(null, arguments);
              }, i4.UTF8ToString = H4, i4.setValue = function(A7, I7, g6 = "i8") {
                switch (g6.endsWith("*") && (g6 = "*"), g6) {
                  case "i1":
                  case "i8":
                    w3[A7 >> 0] = I7;
                    break;
                  case "i16":
                    s3[A7 >> 1] = I7;
                    break;
                  case "i32":
                    p4[A7 >> 2] = I7;
                    break;
                  case "i64":
                    d2 = [I7 >>> 0, (m3 = I7, +Math.abs(m3) >= 1 ? m3 > 0 ? (0 | Math.min(+Math.floor(m3 / 4294967296), 4294967295)) >>> 0 : ~~+Math.ceil((m3 - +(~~m3 >>> 0)) / 4294967296) >>> 0 : 0)], p4[A7 >> 2] = d2[0], p4[A7 + 4 >> 2] = d2[1];
                    break;
                  case "float":
                    k4[A7 >> 2] = I7;
                    break;
                  case "double":
                    F4[A7 >> 3] = I7;
                    break;
                  case "*":
                    u4[A7 >> 2] = I7;
                    break;
                  default:
                    K4("invalid type for setValue: " + g6);
                }
              }, i4.getValue = function(A7, I7 = "i8") {
                switch (I7.endsWith("*") && (I7 = "*"), I7) {
                  case "i1":
                  case "i8":
                    return w3[A7 >> 0];
                  case "i16":
                    return s3[A7 >> 1];
                  case "i32":
                  case "i64":
                    return p4[A7 >> 2];
                  case "float":
                    return k4[A7 >> 2];
                  case "double":
                    return F4[A7 >> 3];
                  case "*":
                    return u4[A7 >> 2];
                  default:
                    K4("invalid type for getValue: " + I7);
                }
                return null;
              }, _4 = function A7() {
                W4 || $3(), W4 || (_4 = A7);
              }, i4.preInit)
                for ("function" == typeof i4.preInit && (i4.preInit = [i4.preInit]); i4.preInit.length > 0; )
                  i4.preInit.pop()();
              $3();
            });
          };
          var g4, B3, Q3, i3 = void 0 !== i3 ? i3 : {}, E3 = Object.assign({}, i3), o2 = "object" == typeof window, a2 = "function" == typeof importScripts, n2 = "object" == typeof process && "object" == typeof process.versions && "string" == typeof process.versions.node, r = "";
          if (n2) {
            var f = require_fs(), t2 = require_path();
            r = a2 ? t2.dirname(r) + "/" : __dirname + "/", g4 = (A6, I6) => {
              var g5 = V3(A6);
              return g5 ? I6 ? g5 : g5.toString() : (A6 = L3(A6) ? new URL(A6) : t2.normalize(A6), f.readFileSync(A6, I6 ? void 0 : "utf8"));
            }, Q3 = (A6) => {
              var I6 = g4(A6, true);
              return I6.buffer || (I6 = new Uint8Array(I6)), I6;
            }, B3 = (A6, I6, g5) => {
              var C4 = V3(A6);
              C4 && I6(C4), A6 = L3(A6) ? new URL(A6) : t2.normalize(A6), f.readFile(A6, function(A7, C5) {
                A7 ? g5(A7) : I6(C5.buffer);
              });
            }, process.argv.length > 1 && process.argv[1].replace(/\\/g, "/"), process.argv.slice(2), "undefined" != typeof module && (module.exports = i3), i3.inspect = function() {
              return "[Emscripten Module object]";
            };
          } else
            (o2 || a2) && (a2 ? r = self.location.href : "undefined" != typeof document && document.currentScript && (r = document.currentScript.src), r = 0 !== r.indexOf("blob:") ? r.substr(0, r.replace(/[?#].*/, "").lastIndexOf("/") + 1) : "", g4 = (A6) => {
              try {
                var I6 = new XMLHttpRequest();
                return I6.open("GET", A6, false), I6.send(null), I6.responseText;
              } catch (I7) {
                var g5 = V3(A6);
                if (g5)
                  return function(A7) {
                    for (var I8 = [], g6 = 0; g6 < A7.length; g6++) {
                      var C4 = A7[g6];
                      C4 > 255 && (C4 &= 255), I8.push(String.fromCharCode(C4));
                    }
                    return I8.join("");
                  }(g5);
                throw I7;
              }
            }, a2 && (Q3 = (A6) => {
              try {
                var I6 = new XMLHttpRequest();
                return I6.open("GET", A6, false), I6.responseType = "arraybuffer", I6.send(null), new Uint8Array(I6.response);
              } catch (I7) {
                var g5 = V3(A6);
                if (g5)
                  return g5;
                throw I7;
              }
            }), B3 = (A6, I6, g5) => {
              var C4 = new XMLHttpRequest();
              C4.open("GET", A6, true), C4.responseType = "arraybuffer", C4.onload = () => {
                if (200 == C4.status || 0 == C4.status && C4.response)
                  I6(C4.response);
                else {
                  var B4 = V3(A6);
                  B4 ? I6(B4.buffer) : g5();
                }
              }, C4.onerror = g5, C4.send(null);
            });
          i3.print;
          var e2, c2, y3 = i3.printErr || void 0;
          Object.assign(i3, E3), E3 = null, i3.arguments && i3.arguments, i3.thisProgram && i3.thisProgram, i3.quit && i3.quit, i3.wasmBinary && (e2 = i3.wasmBinary), i3.noExitRuntime, "object" != typeof WebAssembly && b3("no native wasm support detected");
          var D2, w2, h2, s2, p3, u3, k3, F3 = false, l2 = "undefined" != typeof TextDecoder ? new TextDecoder("utf8") : void 0;
          function S3(A6, I6) {
            return A6 ? function(A7, I7, g5) {
              for (var C4 = I7 + g5, B4 = I7; A7[B4] && !(B4 >= C4); )
                ++B4;
              if (B4 - I7 > 16 && A7.buffer && l2)
                return l2.decode(A7.subarray(I7, B4));
              for (var Q4 = ""; I7 < B4; ) {
                var i4 = A7[I7++];
                if (128 & i4) {
                  var E4 = 63 & A7[I7++];
                  if (192 != (224 & i4)) {
                    var o3 = 63 & A7[I7++];
                    if ((i4 = 224 == (240 & i4) ? (15 & i4) << 12 | E4 << 6 | o3 : (7 & i4) << 18 | E4 << 12 | o3 << 6 | 63 & A7[I7++]) < 65536)
                      Q4 += String.fromCharCode(i4);
                    else {
                      var a3 = i4 - 65536;
                      Q4 += String.fromCharCode(55296 | a3 >> 10, 56320 | 1023 & a3);
                    }
                  } else
                    Q4 += String.fromCharCode((31 & i4) << 6 | E4);
                } else
                  Q4 += String.fromCharCode(i4);
              }
              return Q4;
            }(w2, A6, I6) : "";
          }
          function H3() {
            var A6 = c2.buffer;
            i3.HEAP8 = D2 = new Int8Array(A6), i3.HEAP16 = h2 = new Int16Array(A6), i3.HEAP32 = s2 = new Int32Array(A6), i3.HEAPU8 = w2 = new Uint8Array(A6), i3.HEAPU16 = new Uint16Array(A6), i3.HEAPU32 = p3 = new Uint32Array(A6), i3.HEAPF32 = u3 = new Float32Array(A6), i3.HEAPF64 = k3 = new Float64Array(A6);
          }
          var M3 = [], G3 = [], U3 = [], J3 = 0, N3 = null, Y2 = null;
          function b3(A6) {
            throw i3.onAbort && i3.onAbort(A6), y3(A6 = "Aborted(" + A6 + ")"), F3 = true, A6 += ". Build with -sASSERTIONS for more info.", new WebAssembly.RuntimeError(A6);
          }
          var _3, K3, P3, v3, m2 = "data:application/octet-stream;base64,";
          function d(A6) {
            return A6.startsWith(m2);
          }
          function L3(A6) {
            return A6.startsWith("file://");
          }
          function R3(A6) {
            try {
              if (A6 == _3 && e2)
                return new Uint8Array(e2);
              var I6 = V3(A6);
              if (I6)
                return I6;
              if (Q3)
                return Q3(A6);
              throw "both async and sync fetching of the wasm failed";
            } catch (A7) {
              b3(A7);
            }
          }
          d(_3 = "data:application/octet-stream;base64,") || (K3 = _3, _3 = i3.locateFile ? i3.locateFile(K3, r) : r + K3);
          var x3 = { 34904: () => i3.getRandomValue(), 34940: () => {
            if (void 0 === i3.getRandomValue)
              try {
                var A6 = "object" == typeof window ? window : self, I6 = void 0 !== A6.crypto ? A6.crypto : A6.msCrypto, g5 = function() {
                  var A7 = new Uint32Array(1);
                  return I6.getRandomValues(A7), A7[0] >>> 0;
                };
                g5(), i3.getRandomValue = g5;
              } catch (A7) {
                try {
                  var C4 = require_crypto(), B4 = function() {
                    var A8 = C4.randomBytes(4);
                    return (A8[0] << 24 | A8[1] << 16 | A8[2] << 8 | A8[3]) >>> 0;
                  };
                  B4(), i3.getRandomValue = B4;
                } catch (A8) {
                  throw "No secure random number generator found";
                }
              }
          } };
          function j2(A6) {
            for (; A6.length > 0; )
              A6.shift()(i3);
          }
          var X3 = [];
          function q2(A6) {
            var I6 = c2.buffer;
            try {
              return c2.grow(A6 - I6.byteLength + 65535 >>> 16), H3(), 1;
            } catch (A7) {
            }
          }
          var z3 = "function" == typeof atob ? atob : function(A6) {
            var I6, g5, C4, B4, Q4, i4, E4 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", o3 = "", a3 = 0;
            A6 = A6.replace(/[^A-Za-z0-9\+\/\=]/g, "");
            do {
              I6 = E4.indexOf(A6.charAt(a3++)) << 2 | (B4 = E4.indexOf(A6.charAt(a3++))) >> 4, g5 = (15 & B4) << 4 | (Q4 = E4.indexOf(A6.charAt(a3++))) >> 2, C4 = (3 & Q4) << 6 | (i4 = E4.indexOf(A6.charAt(a3++))), o3 += String.fromCharCode(I6), 64 !== Q4 && (o3 += String.fromCharCode(g5)), 64 !== i4 && (o3 += String.fromCharCode(C4));
            } while (a3 < A6.length);
            return o3;
          };
          function V3(A6) {
            if (d(A6))
              return function(A7) {
                if ("boolean" == typeof n2 && n2) {
                  var I6 = Buffer.from(A7, "base64");
                  return new Uint8Array(I6.buffer, I6.byteOffset, I6.byteLength);
                }
                try {
                  for (var g5 = z3(A7), C4 = new Uint8Array(g5.length), B4 = 0; B4 < g5.length; ++B4)
                    C4[B4] = g5.charCodeAt(B4);
                  return C4;
                } catch (A8) {
                  throw new Error("Converting base64 string to bytes failed.");
                }
              }(A6.slice(m2.length));
          }
          var O3, T3 = { b: function(A6, I6, g5, C4) {
            b3("Assertion failed: " + S3(A6) + ", at: " + [I6 ? S3(I6) : "unknown filename", g5, C4 ? S3(C4) : "unknown function"]);
          }, c: function() {
            b3("");
          }, a: function(A6, I6, g5) {
            return function(A7, I7, g6) {
              var C4 = function(A8, I8) {
                var g7;
                for (X3.length = 0, I8 >>= 2; g7 = w2[A8++]; )
                  I8 += 105 != g7 & I8, X3.push(105 == g7 ? s2[I8] : k3[I8++ >> 1]), ++I8;
                return X3;
              }(I7, g6);
              return x3[A7].apply(null, C4);
            }(A6, I6, g5);
          }, d: function(A6, I6, g5) {
            w2.copyWithin(A6, I6, I6 + g5);
          }, e: function(A6) {
            var I6, g5 = w2.length, C4 = 2147483648;
            if ((A6 >>>= 0) > C4)
              return false;
            for (var B4 = 1; B4 <= 4; B4 *= 2) {
              var Q4 = g5 * (1 + 0.2 / B4);
              if (Q4 = Math.min(Q4, A6 + 100663296), q2(Math.min(C4, (I6 = Math.max(A6, Q4)) + (65536 - I6 % 65536) % 65536)))
                return true;
            }
            return false;
          } };
          function W3() {
            function A6() {
              O3 || (O3 = true, i3.calledRun = true, F3 || (j2(G3), i3.onRuntimeInitialized && i3.onRuntimeInitialized(), function() {
                if (i3.postRun)
                  for ("function" == typeof i3.postRun && (i3.postRun = [i3.postRun]); i3.postRun.length; )
                    A7 = i3.postRun.shift(), U3.unshift(A7);
                var A7;
                j2(U3);
              }()));
            }
            J3 > 0 || (function() {
              if (i3.preRun)
                for ("function" == typeof i3.preRun && (i3.preRun = [i3.preRun]); i3.preRun.length; )
                  A7 = i3.preRun.shift(), M3.unshift(A7);
              var A7;
              j2(M3);
            }(), J3 > 0 || (i3.setStatus ? (i3.setStatus("Running..."), setTimeout(function() {
              setTimeout(function() {
                i3.setStatus("");
              }, 1), A6();
            }, 1)) : A6()));
          }
          if (function() {
            var A6 = { a: T3 };
            function I6(A7, I7) {
              var g6 = A7.exports;
              i3.asm = g6, c2 = i3.asm.f, H3(), i3.asm.ac, function(A8) {
                if (J3--, i3.monitorRunDependencies && i3.monitorRunDependencies(J3), 0 == J3 && (null !== N3 && (clearInterval(N3), N3 = null), Y2)) {
                  var I8 = Y2;
                  Y2 = null, I8();
                }
              }();
            }
            function g5(A7) {
              I6(A7.instance);
            }
            function C4(I7) {
              return function() {
                if (!e2 && (o2 || a2)) {
                  if ("function" == typeof fetch && !L3(_3))
                    return fetch(_3, { credentials: "same-origin" }).then(function(A7) {
                      if (!A7.ok)
                        throw "failed to load wasm binary file at '" + _3 + "'";
                      return A7.arrayBuffer();
                    }).catch(function() {
                      return R3(_3);
                    });
                  if (B3)
                    return new Promise(function(A7, I8) {
                      B3(_3, function(I9) {
                        A7(new Uint8Array(I9));
                      }, I8);
                    });
                }
                return Promise.resolve().then(function() {
                  return R3(_3);
                });
              }().then(function(I8) {
                return WebAssembly.instantiate(I8, A6);
              }).then(function(A7) {
                return A7;
              }).then(I7, function(A7) {
                y3("failed to asynchronously prepare wasm: " + A7), b3(A7);
              });
            }
            if (J3++, i3.monitorRunDependencies && i3.monitorRunDependencies(J3), i3.instantiateWasm)
              try {
                return i3.instantiateWasm(A6, I6);
              } catch (A7) {
                return y3("Module.instantiateWasm callback failed with error: " + A7), false;
              }
            e2 || "function" != typeof WebAssembly.instantiateStreaming || d(_3) || L3(_3) || n2 || "function" != typeof fetch ? C4(g5) : fetch(_3, { credentials: "same-origin" }).then(function(I7) {
              return WebAssembly.instantiateStreaming(I7, A6).then(g5, function(A7) {
                return y3("wasm streaming compile failed: " + A7), y3("falling back to ArrayBuffer instantiation"), C4(g5);
              });
            });
          }(), i3._crypto_aead_chacha20poly1305_encrypt_detached = function() {
            return (i3._crypto_aead_chacha20poly1305_encrypt_detached = i3.asm.g).apply(null, arguments);
          }, i3._crypto_aead_chacha20poly1305_encrypt = function() {
            return (i3._crypto_aead_chacha20poly1305_encrypt = i3.asm.h).apply(null, arguments);
          }, i3._crypto_aead_chacha20poly1305_ietf_encrypt_detached = function() {
            return (i3._crypto_aead_chacha20poly1305_ietf_encrypt_detached = i3.asm.i).apply(null, arguments);
          }, i3._crypto_aead_chacha20poly1305_ietf_encrypt = function() {
            return (i3._crypto_aead_chacha20poly1305_ietf_encrypt = i3.asm.j).apply(null, arguments);
          }, i3._crypto_aead_chacha20poly1305_decrypt_detached = function() {
            return (i3._crypto_aead_chacha20poly1305_decrypt_detached = i3.asm.k).apply(null, arguments);
          }, i3._crypto_aead_chacha20poly1305_decrypt = function() {
            return (i3._crypto_aead_chacha20poly1305_decrypt = i3.asm.l).apply(null, arguments);
          }, i3._crypto_aead_chacha20poly1305_ietf_decrypt_detached = function() {
            return (i3._crypto_aead_chacha20poly1305_ietf_decrypt_detached = i3.asm.m).apply(null, arguments);
          }, i3._crypto_aead_chacha20poly1305_ietf_decrypt = function() {
            return (i3._crypto_aead_chacha20poly1305_ietf_decrypt = i3.asm.n).apply(null, arguments);
          }, i3._crypto_aead_chacha20poly1305_ietf_keybytes = function() {
            return (i3._crypto_aead_chacha20poly1305_ietf_keybytes = i3.asm.o).apply(null, arguments);
          }, i3._crypto_aead_chacha20poly1305_ietf_npubbytes = function() {
            return (i3._crypto_aead_chacha20poly1305_ietf_npubbytes = i3.asm.p).apply(null, arguments);
          }, i3._crypto_aead_chacha20poly1305_ietf_nsecbytes = function() {
            return (i3._crypto_aead_chacha20poly1305_ietf_nsecbytes = i3.asm.q).apply(null, arguments);
          }, i3._crypto_aead_chacha20poly1305_ietf_abytes = function() {
            return (i3._crypto_aead_chacha20poly1305_ietf_abytes = i3.asm.r).apply(null, arguments);
          }, i3._crypto_aead_chacha20poly1305_ietf_messagebytes_max = function() {
            return (i3._crypto_aead_chacha20poly1305_ietf_messagebytes_max = i3.asm.s).apply(null, arguments);
          }, i3._crypto_aead_chacha20poly1305_ietf_keygen = function() {
            return (i3._crypto_aead_chacha20poly1305_ietf_keygen = i3.asm.t).apply(null, arguments);
          }, i3._crypto_aead_chacha20poly1305_keybytes = function() {
            return (i3._crypto_aead_chacha20poly1305_keybytes = i3.asm.u).apply(null, arguments);
          }, i3._crypto_aead_chacha20poly1305_npubbytes = function() {
            return (i3._crypto_aead_chacha20poly1305_npubbytes = i3.asm.v).apply(null, arguments);
          }, i3._crypto_aead_chacha20poly1305_nsecbytes = function() {
            return (i3._crypto_aead_chacha20poly1305_nsecbytes = i3.asm.w).apply(null, arguments);
          }, i3._crypto_aead_chacha20poly1305_abytes = function() {
            return (i3._crypto_aead_chacha20poly1305_abytes = i3.asm.x).apply(null, arguments);
          }, i3._crypto_aead_chacha20poly1305_messagebytes_max = function() {
            return (i3._crypto_aead_chacha20poly1305_messagebytes_max = i3.asm.y).apply(null, arguments);
          }, i3._crypto_aead_chacha20poly1305_keygen = function() {
            return (i3._crypto_aead_chacha20poly1305_keygen = i3.asm.z).apply(null, arguments);
          }, i3._crypto_aead_xchacha20poly1305_ietf_encrypt_detached = function() {
            return (i3._crypto_aead_xchacha20poly1305_ietf_encrypt_detached = i3.asm.A).apply(null, arguments);
          }, i3._crypto_aead_xchacha20poly1305_ietf_encrypt = function() {
            return (i3._crypto_aead_xchacha20poly1305_ietf_encrypt = i3.asm.B).apply(null, arguments);
          }, i3._crypto_aead_xchacha20poly1305_ietf_decrypt_detached = function() {
            return (i3._crypto_aead_xchacha20poly1305_ietf_decrypt_detached = i3.asm.C).apply(null, arguments);
          }, i3._crypto_aead_xchacha20poly1305_ietf_decrypt = function() {
            return (i3._crypto_aead_xchacha20poly1305_ietf_decrypt = i3.asm.D).apply(null, arguments);
          }, i3._crypto_aead_xchacha20poly1305_ietf_keybytes = function() {
            return (i3._crypto_aead_xchacha20poly1305_ietf_keybytes = i3.asm.E).apply(null, arguments);
          }, i3._crypto_aead_xchacha20poly1305_ietf_npubbytes = function() {
            return (i3._crypto_aead_xchacha20poly1305_ietf_npubbytes = i3.asm.F).apply(null, arguments);
          }, i3._crypto_aead_xchacha20poly1305_ietf_nsecbytes = function() {
            return (i3._crypto_aead_xchacha20poly1305_ietf_nsecbytes = i3.asm.G).apply(null, arguments);
          }, i3._crypto_aead_xchacha20poly1305_ietf_abytes = function() {
            return (i3._crypto_aead_xchacha20poly1305_ietf_abytes = i3.asm.H).apply(null, arguments);
          }, i3._crypto_aead_xchacha20poly1305_ietf_messagebytes_max = function() {
            return (i3._crypto_aead_xchacha20poly1305_ietf_messagebytes_max = i3.asm.I).apply(null, arguments);
          }, i3._crypto_aead_xchacha20poly1305_ietf_keygen = function() {
            return (i3._crypto_aead_xchacha20poly1305_ietf_keygen = i3.asm.J).apply(null, arguments);
          }, i3._crypto_auth_bytes = function() {
            return (i3._crypto_auth_bytes = i3.asm.K).apply(null, arguments);
          }, i3._crypto_auth_keybytes = function() {
            return (i3._crypto_auth_keybytes = i3.asm.L).apply(null, arguments);
          }, i3._crypto_auth = function() {
            return (i3._crypto_auth = i3.asm.M).apply(null, arguments);
          }, i3._crypto_auth_verify = function() {
            return (i3._crypto_auth_verify = i3.asm.N).apply(null, arguments);
          }, i3._crypto_auth_keygen = function() {
            return (i3._crypto_auth_keygen = i3.asm.O).apply(null, arguments);
          }, i3._crypto_box_seedbytes = function() {
            return (i3._crypto_box_seedbytes = i3.asm.P).apply(null, arguments);
          }, i3._crypto_box_publickeybytes = function() {
            return (i3._crypto_box_publickeybytes = i3.asm.Q).apply(null, arguments);
          }, i3._crypto_box_secretkeybytes = function() {
            return (i3._crypto_box_secretkeybytes = i3.asm.R).apply(null, arguments);
          }, i3._crypto_box_beforenmbytes = function() {
            return (i3._crypto_box_beforenmbytes = i3.asm.S).apply(null, arguments);
          }, i3._crypto_box_noncebytes = function() {
            return (i3._crypto_box_noncebytes = i3.asm.T).apply(null, arguments);
          }, i3._crypto_box_macbytes = function() {
            return (i3._crypto_box_macbytes = i3.asm.U).apply(null, arguments);
          }, i3._crypto_box_messagebytes_max = function() {
            return (i3._crypto_box_messagebytes_max = i3.asm.V).apply(null, arguments);
          }, i3._crypto_box_seed_keypair = function() {
            return (i3._crypto_box_seed_keypair = i3.asm.W).apply(null, arguments);
          }, i3._crypto_box_keypair = function() {
            return (i3._crypto_box_keypair = i3.asm.X).apply(null, arguments);
          }, i3._crypto_box_beforenm = function() {
            return (i3._crypto_box_beforenm = i3.asm.Y).apply(null, arguments);
          }, i3._crypto_box_detached_afternm = function() {
            return (i3._crypto_box_detached_afternm = i3.asm.Z).apply(null, arguments);
          }, i3._crypto_box_detached = function() {
            return (i3._crypto_box_detached = i3.asm._).apply(null, arguments);
          }, i3._crypto_box_easy_afternm = function() {
            return (i3._crypto_box_easy_afternm = i3.asm.$).apply(null, arguments);
          }, i3._crypto_box_easy = function() {
            return (i3._crypto_box_easy = i3.asm.aa).apply(null, arguments);
          }, i3._crypto_box_open_detached_afternm = function() {
            return (i3._crypto_box_open_detached_afternm = i3.asm.ba).apply(null, arguments);
          }, i3._crypto_box_open_detached = function() {
            return (i3._crypto_box_open_detached = i3.asm.ca).apply(null, arguments);
          }, i3._crypto_box_open_easy_afternm = function() {
            return (i3._crypto_box_open_easy_afternm = i3.asm.da).apply(null, arguments);
          }, i3._crypto_box_open_easy = function() {
            return (i3._crypto_box_open_easy = i3.asm.ea).apply(null, arguments);
          }, i3._crypto_box_seal = function() {
            return (i3._crypto_box_seal = i3.asm.fa).apply(null, arguments);
          }, i3._crypto_box_seal_open = function() {
            return (i3._crypto_box_seal_open = i3.asm.ga).apply(null, arguments);
          }, i3._crypto_box_sealbytes = function() {
            return (i3._crypto_box_sealbytes = i3.asm.ha).apply(null, arguments);
          }, i3._crypto_generichash_bytes_min = function() {
            return (i3._crypto_generichash_bytes_min = i3.asm.ia).apply(null, arguments);
          }, i3._crypto_generichash_bytes_max = function() {
            return (i3._crypto_generichash_bytes_max = i3.asm.ja).apply(null, arguments);
          }, i3._crypto_generichash_bytes = function() {
            return (i3._crypto_generichash_bytes = i3.asm.ka).apply(null, arguments);
          }, i3._crypto_generichash_keybytes_min = function() {
            return (i3._crypto_generichash_keybytes_min = i3.asm.la).apply(null, arguments);
          }, i3._crypto_generichash_keybytes_max = function() {
            return (i3._crypto_generichash_keybytes_max = i3.asm.ma).apply(null, arguments);
          }, i3._crypto_generichash_keybytes = function() {
            return (i3._crypto_generichash_keybytes = i3.asm.na).apply(null, arguments);
          }, i3._crypto_generichash_statebytes = function() {
            return (i3._crypto_generichash_statebytes = i3.asm.oa).apply(null, arguments);
          }, i3._crypto_generichash = function() {
            return (i3._crypto_generichash = i3.asm.pa).apply(null, arguments);
          }, i3._crypto_generichash_init = function() {
            return (i3._crypto_generichash_init = i3.asm.qa).apply(null, arguments);
          }, i3._crypto_generichash_update = function() {
            return (i3._crypto_generichash_update = i3.asm.ra).apply(null, arguments);
          }, i3._crypto_generichash_final = function() {
            return (i3._crypto_generichash_final = i3.asm.sa).apply(null, arguments);
          }, i3._crypto_generichash_keygen = function() {
            return (i3._crypto_generichash_keygen = i3.asm.ta).apply(null, arguments);
          }, i3._crypto_hash_bytes = function() {
            return (i3._crypto_hash_bytes = i3.asm.ua).apply(null, arguments);
          }, i3._crypto_hash = function() {
            return (i3._crypto_hash = i3.asm.va).apply(null, arguments);
          }, i3._crypto_kdf_bytes_min = function() {
            return (i3._crypto_kdf_bytes_min = i3.asm.wa).apply(null, arguments);
          }, i3._crypto_kdf_bytes_max = function() {
            return (i3._crypto_kdf_bytes_max = i3.asm.xa).apply(null, arguments);
          }, i3._crypto_kdf_contextbytes = function() {
            return (i3._crypto_kdf_contextbytes = i3.asm.ya).apply(null, arguments);
          }, i3._crypto_kdf_keybytes = function() {
            return (i3._crypto_kdf_keybytes = i3.asm.za).apply(null, arguments);
          }, i3._crypto_kdf_derive_from_key = function() {
            return (i3._crypto_kdf_derive_from_key = i3.asm.Aa).apply(null, arguments);
          }, i3._crypto_kdf_keygen = function() {
            return (i3._crypto_kdf_keygen = i3.asm.Ba).apply(null, arguments);
          }, i3._crypto_kx_seed_keypair = function() {
            return (i3._crypto_kx_seed_keypair = i3.asm.Ca).apply(null, arguments);
          }, i3._crypto_kx_keypair = function() {
            return (i3._crypto_kx_keypair = i3.asm.Da).apply(null, arguments);
          }, i3._crypto_kx_client_session_keys = function() {
            return (i3._crypto_kx_client_session_keys = i3.asm.Ea).apply(null, arguments);
          }, i3._crypto_kx_server_session_keys = function() {
            return (i3._crypto_kx_server_session_keys = i3.asm.Fa).apply(null, arguments);
          }, i3._crypto_kx_publickeybytes = function() {
            return (i3._crypto_kx_publickeybytes = i3.asm.Ga).apply(null, arguments);
          }, i3._crypto_kx_secretkeybytes = function() {
            return (i3._crypto_kx_secretkeybytes = i3.asm.Ha).apply(null, arguments);
          }, i3._crypto_kx_seedbytes = function() {
            return (i3._crypto_kx_seedbytes = i3.asm.Ia).apply(null, arguments);
          }, i3._crypto_kx_sessionkeybytes = function() {
            return (i3._crypto_kx_sessionkeybytes = i3.asm.Ja).apply(null, arguments);
          }, i3._crypto_scalarmult_base = function() {
            return (i3._crypto_scalarmult_base = i3.asm.Ka).apply(null, arguments);
          }, i3._crypto_scalarmult = function() {
            return (i3._crypto_scalarmult = i3.asm.La).apply(null, arguments);
          }, i3._crypto_scalarmult_bytes = function() {
            return (i3._crypto_scalarmult_bytes = i3.asm.Ma).apply(null, arguments);
          }, i3._crypto_scalarmult_scalarbytes = function() {
            return (i3._crypto_scalarmult_scalarbytes = i3.asm.Na).apply(null, arguments);
          }, i3._crypto_secretbox_keybytes = function() {
            return (i3._crypto_secretbox_keybytes = i3.asm.Oa).apply(null, arguments);
          }, i3._crypto_secretbox_noncebytes = function() {
            return (i3._crypto_secretbox_noncebytes = i3.asm.Pa).apply(null, arguments);
          }, i3._crypto_secretbox_macbytes = function() {
            return (i3._crypto_secretbox_macbytes = i3.asm.Qa).apply(null, arguments);
          }, i3._crypto_secretbox_messagebytes_max = function() {
            return (i3._crypto_secretbox_messagebytes_max = i3.asm.Ra).apply(null, arguments);
          }, i3._crypto_secretbox_keygen = function() {
            return (i3._crypto_secretbox_keygen = i3.asm.Sa).apply(null, arguments);
          }, i3._crypto_secretbox_detached = function() {
            return (i3._crypto_secretbox_detached = i3.asm.Ta).apply(null, arguments);
          }, i3._crypto_secretbox_easy = function() {
            return (i3._crypto_secretbox_easy = i3.asm.Ua).apply(null, arguments);
          }, i3._crypto_secretbox_open_detached = function() {
            return (i3._crypto_secretbox_open_detached = i3.asm.Va).apply(null, arguments);
          }, i3._crypto_secretbox_open_easy = function() {
            return (i3._crypto_secretbox_open_easy = i3.asm.Wa).apply(null, arguments);
          }, i3._crypto_secretstream_xchacha20poly1305_keygen = function() {
            return (i3._crypto_secretstream_xchacha20poly1305_keygen = i3.asm.Xa).apply(null, arguments);
          }, i3._crypto_secretstream_xchacha20poly1305_init_push = function() {
            return (i3._crypto_secretstream_xchacha20poly1305_init_push = i3.asm.Ya).apply(null, arguments);
          }, i3._crypto_secretstream_xchacha20poly1305_init_pull = function() {
            return (i3._crypto_secretstream_xchacha20poly1305_init_pull = i3.asm.Za).apply(null, arguments);
          }, i3._crypto_secretstream_xchacha20poly1305_rekey = function() {
            return (i3._crypto_secretstream_xchacha20poly1305_rekey = i3.asm._a).apply(null, arguments);
          }, i3._crypto_secretstream_xchacha20poly1305_push = function() {
            return (i3._crypto_secretstream_xchacha20poly1305_push = i3.asm.$a).apply(null, arguments);
          }, i3._crypto_secretstream_xchacha20poly1305_pull = function() {
            return (i3._crypto_secretstream_xchacha20poly1305_pull = i3.asm.ab).apply(null, arguments);
          }, i3._crypto_secretstream_xchacha20poly1305_statebytes = function() {
            return (i3._crypto_secretstream_xchacha20poly1305_statebytes = i3.asm.bb).apply(null, arguments);
          }, i3._crypto_secretstream_xchacha20poly1305_abytes = function() {
            return (i3._crypto_secretstream_xchacha20poly1305_abytes = i3.asm.cb).apply(null, arguments);
          }, i3._crypto_secretstream_xchacha20poly1305_headerbytes = function() {
            return (i3._crypto_secretstream_xchacha20poly1305_headerbytes = i3.asm.db).apply(null, arguments);
          }, i3._crypto_secretstream_xchacha20poly1305_keybytes = function() {
            return (i3._crypto_secretstream_xchacha20poly1305_keybytes = i3.asm.eb).apply(null, arguments);
          }, i3._crypto_secretstream_xchacha20poly1305_messagebytes_max = function() {
            return (i3._crypto_secretstream_xchacha20poly1305_messagebytes_max = i3.asm.fb).apply(null, arguments);
          }, i3._crypto_secretstream_xchacha20poly1305_tag_message = function() {
            return (i3._crypto_secretstream_xchacha20poly1305_tag_message = i3.asm.gb).apply(null, arguments);
          }, i3._crypto_secretstream_xchacha20poly1305_tag_push = function() {
            return (i3._crypto_secretstream_xchacha20poly1305_tag_push = i3.asm.hb).apply(null, arguments);
          }, i3._crypto_secretstream_xchacha20poly1305_tag_rekey = function() {
            return (i3._crypto_secretstream_xchacha20poly1305_tag_rekey = i3.asm.ib).apply(null, arguments);
          }, i3._crypto_secretstream_xchacha20poly1305_tag_final = function() {
            return (i3._crypto_secretstream_xchacha20poly1305_tag_final = i3.asm.jb).apply(null, arguments);
          }, i3._crypto_shorthash_bytes = function() {
            return (i3._crypto_shorthash_bytes = i3.asm.kb).apply(null, arguments);
          }, i3._crypto_shorthash_keybytes = function() {
            return (i3._crypto_shorthash_keybytes = i3.asm.lb).apply(null, arguments);
          }, i3._crypto_shorthash = function() {
            return (i3._crypto_shorthash = i3.asm.mb).apply(null, arguments);
          }, i3._crypto_shorthash_keygen = function() {
            return (i3._crypto_shorthash_keygen = i3.asm.nb).apply(null, arguments);
          }, i3._crypto_sign_statebytes = function() {
            return (i3._crypto_sign_statebytes = i3.asm.ob).apply(null, arguments);
          }, i3._crypto_sign_bytes = function() {
            return (i3._crypto_sign_bytes = i3.asm.pb).apply(null, arguments);
          }, i3._crypto_sign_seedbytes = function() {
            return (i3._crypto_sign_seedbytes = i3.asm.qb).apply(null, arguments);
          }, i3._crypto_sign_publickeybytes = function() {
            return (i3._crypto_sign_publickeybytes = i3.asm.rb).apply(null, arguments);
          }, i3._crypto_sign_secretkeybytes = function() {
            return (i3._crypto_sign_secretkeybytes = i3.asm.sb).apply(null, arguments);
          }, i3._crypto_sign_messagebytes_max = function() {
            return (i3._crypto_sign_messagebytes_max = i3.asm.tb).apply(null, arguments);
          }, i3._crypto_sign_seed_keypair = function() {
            return (i3._crypto_sign_seed_keypair = i3.asm.ub).apply(null, arguments);
          }, i3._crypto_sign_keypair = function() {
            return (i3._crypto_sign_keypair = i3.asm.vb).apply(null, arguments);
          }, i3._crypto_sign = function() {
            return (i3._crypto_sign = i3.asm.wb).apply(null, arguments);
          }, i3._crypto_sign_open = function() {
            return (i3._crypto_sign_open = i3.asm.xb).apply(null, arguments);
          }, i3._crypto_sign_detached = function() {
            return (i3._crypto_sign_detached = i3.asm.yb).apply(null, arguments);
          }, i3._crypto_sign_verify_detached = function() {
            return (i3._crypto_sign_verify_detached = i3.asm.zb).apply(null, arguments);
          }, i3._crypto_sign_init = function() {
            return (i3._crypto_sign_init = i3.asm.Ab).apply(null, arguments);
          }, i3._crypto_sign_update = function() {
            return (i3._crypto_sign_update = i3.asm.Bb).apply(null, arguments);
          }, i3._crypto_sign_final_create = function() {
            return (i3._crypto_sign_final_create = i3.asm.Cb).apply(null, arguments);
          }, i3._crypto_sign_final_verify = function() {
            return (i3._crypto_sign_final_verify = i3.asm.Db).apply(null, arguments);
          }, i3._crypto_sign_ed25519_pk_to_curve25519 = function() {
            return (i3._crypto_sign_ed25519_pk_to_curve25519 = i3.asm.Eb).apply(null, arguments);
          }, i3._crypto_sign_ed25519_sk_to_curve25519 = function() {
            return (i3._crypto_sign_ed25519_sk_to_curve25519 = i3.asm.Fb).apply(null, arguments);
          }, i3._randombytes_random = function() {
            return (i3._randombytes_random = i3.asm.Gb).apply(null, arguments);
          }, i3._randombytes_stir = function() {
            return (i3._randombytes_stir = i3.asm.Hb).apply(null, arguments);
          }, i3._randombytes_uniform = function() {
            return (i3._randombytes_uniform = i3.asm.Ib).apply(null, arguments);
          }, i3._randombytes_buf = function() {
            return (i3._randombytes_buf = i3.asm.Jb).apply(null, arguments);
          }, i3._randombytes_buf_deterministic = function() {
            return (i3._randombytes_buf_deterministic = i3.asm.Kb).apply(null, arguments);
          }, i3._randombytes_seedbytes = function() {
            return (i3._randombytes_seedbytes = i3.asm.Lb).apply(null, arguments);
          }, i3._randombytes_close = function() {
            return (i3._randombytes_close = i3.asm.Mb).apply(null, arguments);
          }, i3._randombytes = function() {
            return (i3._randombytes = i3.asm.Nb).apply(null, arguments);
          }, i3._sodium_bin2hex = function() {
            return (i3._sodium_bin2hex = i3.asm.Ob).apply(null, arguments);
          }, i3._sodium_hex2bin = function() {
            return (i3._sodium_hex2bin = i3.asm.Pb).apply(null, arguments);
          }, i3._sodium_base64_encoded_len = function() {
            return (i3._sodium_base64_encoded_len = i3.asm.Qb).apply(null, arguments);
          }, i3._sodium_bin2base64 = function() {
            return (i3._sodium_bin2base64 = i3.asm.Rb).apply(null, arguments);
          }, i3._sodium_base642bin = function() {
            return (i3._sodium_base642bin = i3.asm.Sb).apply(null, arguments);
          }, i3._sodium_init = function() {
            return (i3._sodium_init = i3.asm.Tb).apply(null, arguments);
          }, i3._sodium_pad = function() {
            return (i3._sodium_pad = i3.asm.Ub).apply(null, arguments);
          }, i3._sodium_unpad = function() {
            return (i3._sodium_unpad = i3.asm.Vb).apply(null, arguments);
          }, i3._sodium_version_string = function() {
            return (i3._sodium_version_string = i3.asm.Wb).apply(null, arguments);
          }, i3._sodium_library_version_major = function() {
            return (i3._sodium_library_version_major = i3.asm.Xb).apply(null, arguments);
          }, i3._sodium_library_version_minor = function() {
            return (i3._sodium_library_version_minor = i3.asm.Yb).apply(null, arguments);
          }, i3._sodium_library_minimal = function() {
            return (i3._sodium_library_minimal = i3.asm.Zb).apply(null, arguments);
          }, i3._malloc = function() {
            return (i3._malloc = i3.asm._b).apply(null, arguments);
          }, i3._free = function() {
            return (i3._free = i3.asm.$b).apply(null, arguments);
          }, i3.UTF8ToString = S3, i3.setValue = function(A6, I6, g5 = "i8") {
            switch (g5.endsWith("*") && (g5 = "*"), g5) {
              case "i1":
              case "i8":
                D2[A6 >> 0] = I6;
                break;
              case "i16":
                h2[A6 >> 1] = I6;
                break;
              case "i32":
                s2[A6 >> 2] = I6;
                break;
              case "i64":
                v3 = [I6 >>> 0, (P3 = I6, +Math.abs(P3) >= 1 ? P3 > 0 ? (0 | Math.min(+Math.floor(P3 / 4294967296), 4294967295)) >>> 0 : ~~+Math.ceil((P3 - +(~~P3 >>> 0)) / 4294967296) >>> 0 : 0)], s2[A6 >> 2] = v3[0], s2[A6 + 4 >> 2] = v3[1];
                break;
              case "float":
                u3[A6 >> 2] = I6;
                break;
              case "double":
                k3[A6 >> 3] = I6;
                break;
              case "*":
                p3[A6 >> 2] = I6;
                break;
              default:
                b3("invalid type for setValue: " + g5);
            }
          }, i3.getValue = function(A6, I6 = "i8") {
            switch (I6.endsWith("*") && (I6 = "*"), I6) {
              case "i1":
              case "i8":
                return D2[A6 >> 0];
              case "i16":
                return h2[A6 >> 1];
              case "i32":
              case "i64":
                return s2[A6 >> 2];
              case "float":
                return u3[A6 >> 2];
              case "double":
                return k3[A6 >> 3];
              case "*":
                return p3[A6 >> 2];
              default:
                b3("invalid type for getValue: " + I6);
            }
            return null;
          }, Y2 = function A6() {
            O3 || W3(), O3 || (Y2 = A6);
          }, i3.preInit)
            for ("function" == typeof i3.preInit && (i3.preInit = [i3.preInit]); i3.preInit.length > 0; )
              i3.preInit.pop()();
          W3();
        }).catch(function() {
          return C3.useBackupModule();
        }), I4;
      }
      "function" == typeof define && define.amd ? define(["exports"], I3) : "object" == typeof exports && "string" != typeof exports.nodeName ? I3(exports) : A3.libsodium = I3(A3.libsodium_mod || (A3.commonJsStrict = {}));
    }(exports);
  }
});

// node_modules/libsodium-wrappers/dist/modules/libsodium-wrappers.js
var require_libsodium_wrappers = __commonJS({
  "node_modules/libsodium-wrappers/dist/modules/libsodium-wrappers.js"(exports) {
    !function(e2) {
      function r(e3, r2) {
        "use strict";
        var t3, a2 = "uint8array", _3 = r2.ready.then(function() {
          function a3() {
            if (0 !== t3._sodium_init())
              throw new Error("libsodium was not correctly initialized.");
            for (var r3 = ["crypto_aead_chacha20poly1305_decrypt", "crypto_aead_chacha20poly1305_decrypt_detached", "crypto_aead_chacha20poly1305_encrypt", "crypto_aead_chacha20poly1305_encrypt_detached", "crypto_aead_chacha20poly1305_ietf_decrypt", "crypto_aead_chacha20poly1305_ietf_decrypt_detached", "crypto_aead_chacha20poly1305_ietf_encrypt", "crypto_aead_chacha20poly1305_ietf_encrypt_detached", "crypto_aead_chacha20poly1305_ietf_keygen", "crypto_aead_chacha20poly1305_keygen", "crypto_aead_xchacha20poly1305_ietf_decrypt", "crypto_aead_xchacha20poly1305_ietf_decrypt_detached", "crypto_aead_xchacha20poly1305_ietf_encrypt", "crypto_aead_xchacha20poly1305_ietf_encrypt_detached", "crypto_aead_xchacha20poly1305_ietf_keygen", "crypto_auth", "crypto_auth_hmacsha256", "crypto_auth_hmacsha256_final", "crypto_auth_hmacsha256_init", "crypto_auth_hmacsha256_keygen", "crypto_auth_hmacsha256_update", "crypto_auth_hmacsha256_verify", "crypto_auth_hmacsha512", "crypto_auth_hmacsha512_final", "crypto_auth_hmacsha512_init", "crypto_auth_hmacsha512_keygen", "crypto_auth_hmacsha512_update", "crypto_auth_hmacsha512_verify", "crypto_auth_keygen", "crypto_auth_verify", "crypto_box_beforenm", "crypto_box_curve25519xchacha20poly1305_keypair", "crypto_box_curve25519xchacha20poly1305_seal", "crypto_box_curve25519xchacha20poly1305_seal_open", "crypto_box_detached", "crypto_box_easy", "crypto_box_easy_afternm", "crypto_box_keypair", "crypto_box_open_detached", "crypto_box_open_easy", "crypto_box_open_easy_afternm", "crypto_box_seal", "crypto_box_seal_open", "crypto_box_seed_keypair", "crypto_core_ed25519_add", "crypto_core_ed25519_from_hash", "crypto_core_ed25519_from_uniform", "crypto_core_ed25519_is_valid_point", "crypto_core_ed25519_random", "crypto_core_ed25519_scalar_add", "crypto_core_ed25519_scalar_complement", "crypto_core_ed25519_scalar_invert", "crypto_core_ed25519_scalar_mul", "crypto_core_ed25519_scalar_negate", "crypto_core_ed25519_scalar_random", "crypto_core_ed25519_scalar_reduce", "crypto_core_ed25519_scalar_sub", "crypto_core_ed25519_sub", "crypto_core_hchacha20", "crypto_core_hsalsa20", "crypto_core_ristretto255_add", "crypto_core_ristretto255_from_hash", "crypto_core_ristretto255_is_valid_point", "crypto_core_ristretto255_random", "crypto_core_ristretto255_scalar_add", "crypto_core_ristretto255_scalar_complement", "crypto_core_ristretto255_scalar_invert", "crypto_core_ristretto255_scalar_mul", "crypto_core_ristretto255_scalar_negate", "crypto_core_ristretto255_scalar_random", "crypto_core_ristretto255_scalar_reduce", "crypto_core_ristretto255_scalar_sub", "crypto_core_ristretto255_sub", "crypto_generichash", "crypto_generichash_blake2b_salt_personal", "crypto_generichash_final", "crypto_generichash_init", "crypto_generichash_keygen", "crypto_generichash_update", "crypto_hash", "crypto_hash_sha256", "crypto_hash_sha256_final", "crypto_hash_sha256_init", "crypto_hash_sha256_update", "crypto_hash_sha512", "crypto_hash_sha512_final", "crypto_hash_sha512_init", "crypto_hash_sha512_update", "crypto_kdf_derive_from_key", "crypto_kdf_keygen", "crypto_kx_client_session_keys", "crypto_kx_keypair", "crypto_kx_seed_keypair", "crypto_kx_server_session_keys", "crypto_onetimeauth", "crypto_onetimeauth_final", "crypto_onetimeauth_init", "crypto_onetimeauth_keygen", "crypto_onetimeauth_update", "crypto_onetimeauth_verify", "crypto_pwhash", "crypto_pwhash_scryptsalsa208sha256", "crypto_pwhash_scryptsalsa208sha256_ll", "crypto_pwhash_scryptsalsa208sha256_str", "crypto_pwhash_scryptsalsa208sha256_str_verify", "crypto_pwhash_str", "crypto_pwhash_str_needs_rehash", "crypto_pwhash_str_verify", "crypto_scalarmult", "crypto_scalarmult_base", "crypto_scalarmult_ed25519", "crypto_scalarmult_ed25519_base", "crypto_scalarmult_ed25519_base_noclamp", "crypto_scalarmult_ed25519_noclamp", "crypto_scalarmult_ristretto255", "crypto_scalarmult_ristretto255_base", "crypto_secretbox_detached", "crypto_secretbox_easy", "crypto_secretbox_keygen", "crypto_secretbox_open_detached", "crypto_secretbox_open_easy", "crypto_secretstream_xchacha20poly1305_init_pull", "crypto_secretstream_xchacha20poly1305_init_push", "crypto_secretstream_xchacha20poly1305_keygen", "crypto_secretstream_xchacha20poly1305_pull", "crypto_secretstream_xchacha20poly1305_push", "crypto_secretstream_xchacha20poly1305_rekey", "crypto_shorthash", "crypto_shorthash_keygen", "crypto_shorthash_siphashx24", "crypto_sign", "crypto_sign_detached", "crypto_sign_ed25519_pk_to_curve25519", "crypto_sign_ed25519_sk_to_curve25519", "crypto_sign_ed25519_sk_to_pk", "crypto_sign_ed25519_sk_to_seed", "crypto_sign_final_create", "crypto_sign_final_verify", "crypto_sign_init", "crypto_sign_keypair", "crypto_sign_open", "crypto_sign_seed_keypair", "crypto_sign_update", "crypto_sign_verify_detached", "crypto_stream_chacha20", "crypto_stream_chacha20_ietf_xor", "crypto_stream_chacha20_ietf_xor_ic", "crypto_stream_chacha20_keygen", "crypto_stream_chacha20_xor", "crypto_stream_chacha20_xor_ic", "crypto_stream_keygen", "crypto_stream_xchacha20_keygen", "crypto_stream_xchacha20_xor", "crypto_stream_xchacha20_xor_ic", "randombytes_buf", "randombytes_buf_deterministic", "randombytes_close", "randombytes_random", "randombytes_set_implementation", "randombytes_stir", "randombytes_uniform", "sodium_version_string"], a4 = [x3, k3, S3, T3, w2, Y2, B3, A3, K3, M3, I3, N3, L3, U3, O3, C3, R3, P3, G3, X3, D2, F3, V3, H3, q2, j2, z3, W3, J3, Q3, Z3, $3, ee2, re2, te2, ae2, _e, se2, ne2, ce2, oe2, he2, pe2, ye2, ie2, le2, ue2, de2, ve2, ge2, be, fe2, me2, Ee, xe2, ke, Se, Te, we2, Ye, Be, Ae2, Ke, Me, Ie, Ne2, Le, Ue, Oe2, Ce2, Re, Pe, Ge, Xe, De2, Fe, Ve, He, qe2, je2, ze, We, Je, Qe, Ze, $e, er, rr, tr, ar, _r, sr, nr, cr, or, hr, pr, yr, ir, lr, ur, dr, vr, gr, br, fr, mr, Er, xr, kr, Sr, Tr, wr, Yr, Br, Ar, Kr, Mr, Ir, Nr, Lr, Ur, Or, Cr, Rr, Pr, Gr, Xr, Dr, Fr, Vr, Hr, qr, jr, zr, Wr, Jr, Qr, Zr, $r, et2, rt2, tt2, at2, _t, st2, nt2, ct2, ot2, ht, pt, yt, it2, lt2, ut2, dt, vt, gt, bt, ft2, mt2, Et], _5 = 0; _5 < a4.length; _5++)
              "function" == typeof t3["_" + r3[_5]] && (e3[r3[_5]] = a4[_5]);
            var s4 = ["SODIUM_LIBRARY_VERSION_MAJOR", "SODIUM_LIBRARY_VERSION_MINOR", "crypto_aead_chacha20poly1305_ABYTES", "crypto_aead_chacha20poly1305_IETF_ABYTES", "crypto_aead_chacha20poly1305_IETF_KEYBYTES", "crypto_aead_chacha20poly1305_IETF_MESSAGEBYTES_MAX", "crypto_aead_chacha20poly1305_IETF_NPUBBYTES", "crypto_aead_chacha20poly1305_IETF_NSECBYTES", "crypto_aead_chacha20poly1305_KEYBYTES", "crypto_aead_chacha20poly1305_MESSAGEBYTES_MAX", "crypto_aead_chacha20poly1305_NPUBBYTES", "crypto_aead_chacha20poly1305_NSECBYTES", "crypto_aead_chacha20poly1305_ietf_ABYTES", "crypto_aead_chacha20poly1305_ietf_KEYBYTES", "crypto_aead_chacha20poly1305_ietf_MESSAGEBYTES_MAX", "crypto_aead_chacha20poly1305_ietf_NPUBBYTES", "crypto_aead_chacha20poly1305_ietf_NSECBYTES", "crypto_aead_xchacha20poly1305_IETF_ABYTES", "crypto_aead_xchacha20poly1305_IETF_KEYBYTES", "crypto_aead_xchacha20poly1305_IETF_MESSAGEBYTES_MAX", "crypto_aead_xchacha20poly1305_IETF_NPUBBYTES", "crypto_aead_xchacha20poly1305_IETF_NSECBYTES", "crypto_aead_xchacha20poly1305_ietf_ABYTES", "crypto_aead_xchacha20poly1305_ietf_KEYBYTES", "crypto_aead_xchacha20poly1305_ietf_MESSAGEBYTES_MAX", "crypto_aead_xchacha20poly1305_ietf_NPUBBYTES", "crypto_aead_xchacha20poly1305_ietf_NSECBYTES", "crypto_auth_BYTES", "crypto_auth_KEYBYTES", "crypto_auth_hmacsha256_BYTES", "crypto_auth_hmacsha256_KEYBYTES", "crypto_auth_hmacsha512256_BYTES", "crypto_auth_hmacsha512256_KEYBYTES", "crypto_auth_hmacsha512_BYTES", "crypto_auth_hmacsha512_KEYBYTES", "crypto_box_BEFORENMBYTES", "crypto_box_MACBYTES", "crypto_box_MESSAGEBYTES_MAX", "crypto_box_NONCEBYTES", "crypto_box_PUBLICKEYBYTES", "crypto_box_SEALBYTES", "crypto_box_SECRETKEYBYTES", "crypto_box_SEEDBYTES", "crypto_box_curve25519xchacha20poly1305_BEFORENMBYTES", "crypto_box_curve25519xchacha20poly1305_MACBYTES", "crypto_box_curve25519xchacha20poly1305_MESSAGEBYTES_MAX", "crypto_box_curve25519xchacha20poly1305_NONCEBYTES", "crypto_box_curve25519xchacha20poly1305_PUBLICKEYBYTES", "crypto_box_curve25519xchacha20poly1305_SEALBYTES", "crypto_box_curve25519xchacha20poly1305_SECRETKEYBYTES", "crypto_box_curve25519xchacha20poly1305_SEEDBYTES", "crypto_box_curve25519xsalsa20poly1305_BEFORENMBYTES", "crypto_box_curve25519xsalsa20poly1305_MACBYTES", "crypto_box_curve25519xsalsa20poly1305_MESSAGEBYTES_MAX", "crypto_box_curve25519xsalsa20poly1305_NONCEBYTES", "crypto_box_curve25519xsalsa20poly1305_PUBLICKEYBYTES", "crypto_box_curve25519xsalsa20poly1305_SECRETKEYBYTES", "crypto_box_curve25519xsalsa20poly1305_SEEDBYTES", "crypto_core_ed25519_BYTES", "crypto_core_ed25519_HASHBYTES", "crypto_core_ed25519_NONREDUCEDSCALARBYTES", "crypto_core_ed25519_SCALARBYTES", "crypto_core_ed25519_UNIFORMBYTES", "crypto_core_hchacha20_CONSTBYTES", "crypto_core_hchacha20_INPUTBYTES", "crypto_core_hchacha20_KEYBYTES", "crypto_core_hchacha20_OUTPUTBYTES", "crypto_core_hsalsa20_CONSTBYTES", "crypto_core_hsalsa20_INPUTBYTES", "crypto_core_hsalsa20_KEYBYTES", "crypto_core_hsalsa20_OUTPUTBYTES", "crypto_core_ristretto255_BYTES", "crypto_core_ristretto255_HASHBYTES", "crypto_core_ristretto255_NONREDUCEDSCALARBYTES", "crypto_core_ristretto255_SCALARBYTES", "crypto_core_salsa2012_CONSTBYTES", "crypto_core_salsa2012_INPUTBYTES", "crypto_core_salsa2012_KEYBYTES", "crypto_core_salsa2012_OUTPUTBYTES", "crypto_core_salsa20_CONSTBYTES", "crypto_core_salsa20_INPUTBYTES", "crypto_core_salsa20_KEYBYTES", "crypto_core_salsa20_OUTPUTBYTES", "crypto_generichash_BYTES", "crypto_generichash_BYTES_MAX", "crypto_generichash_BYTES_MIN", "crypto_generichash_KEYBYTES", "crypto_generichash_KEYBYTES_MAX", "crypto_generichash_KEYBYTES_MIN", "crypto_generichash_blake2b_BYTES", "crypto_generichash_blake2b_BYTES_MAX", "crypto_generichash_blake2b_BYTES_MIN", "crypto_generichash_blake2b_KEYBYTES", "crypto_generichash_blake2b_KEYBYTES_MAX", "crypto_generichash_blake2b_KEYBYTES_MIN", "crypto_generichash_blake2b_PERSONALBYTES", "crypto_generichash_blake2b_SALTBYTES", "crypto_hash_BYTES", "crypto_hash_sha256_BYTES", "crypto_hash_sha512_BYTES", "crypto_kdf_BYTES_MAX", "crypto_kdf_BYTES_MIN", "crypto_kdf_CONTEXTBYTES", "crypto_kdf_KEYBYTES", "crypto_kdf_blake2b_BYTES_MAX", "crypto_kdf_blake2b_BYTES_MIN", "crypto_kdf_blake2b_CONTEXTBYTES", "crypto_kdf_blake2b_KEYBYTES", "crypto_kx_PUBLICKEYBYTES", "crypto_kx_SECRETKEYBYTES", "crypto_kx_SEEDBYTES", "crypto_kx_SESSIONKEYBYTES", "crypto_onetimeauth_BYTES", "crypto_onetimeauth_KEYBYTES", "crypto_onetimeauth_poly1305_BYTES", "crypto_onetimeauth_poly1305_KEYBYTES", "crypto_pwhash_ALG_ARGON2I13", "crypto_pwhash_ALG_ARGON2ID13", "crypto_pwhash_ALG_DEFAULT", "crypto_pwhash_BYTES_MAX", "crypto_pwhash_BYTES_MIN", "crypto_pwhash_MEMLIMIT_INTERACTIVE", "crypto_pwhash_MEMLIMIT_MAX", "crypto_pwhash_MEMLIMIT_MIN", "crypto_pwhash_MEMLIMIT_MODERATE", "crypto_pwhash_MEMLIMIT_SENSITIVE", "crypto_pwhash_OPSLIMIT_INTERACTIVE", "crypto_pwhash_OPSLIMIT_MAX", "crypto_pwhash_OPSLIMIT_MIN", "crypto_pwhash_OPSLIMIT_MODERATE", "crypto_pwhash_OPSLIMIT_SENSITIVE", "crypto_pwhash_PASSWD_MAX", "crypto_pwhash_PASSWD_MIN", "crypto_pwhash_SALTBYTES", "crypto_pwhash_STRBYTES", "crypto_pwhash_argon2i_BYTES_MAX", "crypto_pwhash_argon2i_BYTES_MIN", "crypto_pwhash_argon2i_SALTBYTES", "crypto_pwhash_argon2i_STRBYTES", "crypto_pwhash_argon2id_BYTES_MAX", "crypto_pwhash_argon2id_BYTES_MIN", "crypto_pwhash_argon2id_SALTBYTES", "crypto_pwhash_argon2id_STRBYTES", "crypto_pwhash_scryptsalsa208sha256_BYTES_MAX", "crypto_pwhash_scryptsalsa208sha256_BYTES_MIN", "crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_INTERACTIVE", "crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_MAX", "crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_MIN", "crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_SENSITIVE", "crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_INTERACTIVE", "crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_MAX", "crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_MIN", "crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_SENSITIVE", "crypto_pwhash_scryptsalsa208sha256_SALTBYTES", "crypto_pwhash_scryptsalsa208sha256_STRBYTES", "crypto_scalarmult_BYTES", "crypto_scalarmult_SCALARBYTES", "crypto_scalarmult_curve25519_BYTES", "crypto_scalarmult_curve25519_SCALARBYTES", "crypto_scalarmult_ed25519_BYTES", "crypto_scalarmult_ed25519_SCALARBYTES", "crypto_scalarmult_ristretto255_BYTES", "crypto_scalarmult_ristretto255_SCALARBYTES", "crypto_secretbox_KEYBYTES", "crypto_secretbox_MACBYTES", "crypto_secretbox_MESSAGEBYTES_MAX", "crypto_secretbox_NONCEBYTES", "crypto_secretbox_xchacha20poly1305_KEYBYTES", "crypto_secretbox_xchacha20poly1305_MACBYTES", "crypto_secretbox_xchacha20poly1305_MESSAGEBYTES_MAX", "crypto_secretbox_xchacha20poly1305_NONCEBYTES", "crypto_secretbox_xsalsa20poly1305_KEYBYTES", "crypto_secretbox_xsalsa20poly1305_MACBYTES", "crypto_secretbox_xsalsa20poly1305_MESSAGEBYTES_MAX", "crypto_secretbox_xsalsa20poly1305_NONCEBYTES", "crypto_secretstream_xchacha20poly1305_ABYTES", "crypto_secretstream_xchacha20poly1305_HEADERBYTES", "crypto_secretstream_xchacha20poly1305_KEYBYTES", "crypto_secretstream_xchacha20poly1305_MESSAGEBYTES_MAX", "crypto_secretstream_xchacha20poly1305_TAG_FINAL", "crypto_secretstream_xchacha20poly1305_TAG_MESSAGE", "crypto_secretstream_xchacha20poly1305_TAG_PUSH", "crypto_secretstream_xchacha20poly1305_TAG_REKEY", "crypto_shorthash_BYTES", "crypto_shorthash_KEYBYTES", "crypto_shorthash_siphash24_BYTES", "crypto_shorthash_siphash24_KEYBYTES", "crypto_shorthash_siphashx24_BYTES", "crypto_shorthash_siphashx24_KEYBYTES", "crypto_sign_BYTES", "crypto_sign_MESSAGEBYTES_MAX", "crypto_sign_PUBLICKEYBYTES", "crypto_sign_SECRETKEYBYTES", "crypto_sign_SEEDBYTES", "crypto_sign_ed25519_BYTES", "crypto_sign_ed25519_MESSAGEBYTES_MAX", "crypto_sign_ed25519_PUBLICKEYBYTES", "crypto_sign_ed25519_SECRETKEYBYTES", "crypto_sign_ed25519_SEEDBYTES", "crypto_stream_KEYBYTES", "crypto_stream_MESSAGEBYTES_MAX", "crypto_stream_NONCEBYTES", "crypto_stream_chacha20_IETF_KEYBYTES", "crypto_stream_chacha20_IETF_MESSAGEBYTES_MAX", "crypto_stream_chacha20_IETF_NONCEBYTES", "crypto_stream_chacha20_KEYBYTES", "crypto_stream_chacha20_MESSAGEBYTES_MAX", "crypto_stream_chacha20_NONCEBYTES", "crypto_stream_chacha20_ietf_KEYBYTES", "crypto_stream_chacha20_ietf_MESSAGEBYTES_MAX", "crypto_stream_chacha20_ietf_NONCEBYTES", "crypto_stream_salsa2012_KEYBYTES", "crypto_stream_salsa2012_MESSAGEBYTES_MAX", "crypto_stream_salsa2012_NONCEBYTES", "crypto_stream_salsa208_KEYBYTES", "crypto_stream_salsa208_MESSAGEBYTES_MAX", "crypto_stream_salsa208_NONCEBYTES", "crypto_stream_salsa20_KEYBYTES", "crypto_stream_salsa20_MESSAGEBYTES_MAX", "crypto_stream_salsa20_NONCEBYTES", "crypto_stream_xchacha20_KEYBYTES", "crypto_stream_xchacha20_MESSAGEBYTES_MAX", "crypto_stream_xchacha20_NONCEBYTES", "crypto_stream_xsalsa20_KEYBYTES", "crypto_stream_xsalsa20_MESSAGEBYTES_MAX", "crypto_stream_xsalsa20_NONCEBYTES", "crypto_verify_16_BYTES", "crypto_verify_32_BYTES", "crypto_verify_64_BYTES"];
            for (_5 = 0; _5 < s4.length; _5++)
              "function" == typeof (c4 = t3["_" + s4[_5].toLowerCase()]) && (e3[s4[_5]] = c4());
            var n4 = ["SODIUM_VERSION_STRING", "crypto_pwhash_STRPREFIX", "crypto_pwhash_scryptsalsa208sha256_STRPREFIX"];
            for (_5 = 0; _5 < n4.length; _5++) {
              var c4;
              "function" == typeof (c4 = t3["_" + n4[_5].toLowerCase()]) && (e3[n4[_5]] = t3.UTF8ToString(c4()));
            }
          }
          t3 = r2;
          try {
            a3();
            var _4 = new Uint8Array([98, 97, 108, 108, 115]), s3 = e3.randombytes_buf(e3.crypto_secretbox_NONCEBYTES), n3 = e3.randombytes_buf(e3.crypto_secretbox_KEYBYTES), c3 = e3.crypto_secretbox_easy(_4, s3, n3), o3 = e3.crypto_secretbox_open_easy(c3, s3, n3);
            if (e3.memcmp(_4, o3))
              return;
          } catch (e4) {
            if (null == t3.useBackupModule)
              throw new Error("Both wasm and asm failed to load" + e4);
          }
          t3.useBackupModule(), a3();
        });
        function s2(e4) {
          if ("function" == typeof TextEncoder)
            return new TextEncoder().encode(e4);
          e4 = unescape(encodeURIComponent(e4));
          for (var r3 = new Uint8Array(e4.length), t4 = 0, a3 = e4.length; t4 < a3; t4++)
            r3[t4] = e4.charCodeAt(t4);
          return r3;
        }
        function n2(e4) {
          if ("function" == typeof TextDecoder)
            return new TextDecoder("utf-8", { fatal: true }).decode(e4);
          var r3 = 8192, t4 = Math.ceil(e4.length / r3);
          if (t4 <= 1)
            try {
              return decodeURIComponent(escape(String.fromCharCode.apply(null, e4)));
            } catch (e5) {
              throw new TypeError("The encoded data was not valid.");
            }
          for (var a3 = "", _4 = 0, s3 = 0; s3 < t4; s3++) {
            var c3 = Array.prototype.slice.call(e4, s3 * r3 + _4, (s3 + 1) * r3 + _4);
            if (0 != c3.length) {
              var o3, h3 = c3.length, p4 = 0;
              do {
                var y4 = c3[--h3];
                y4 >= 240 ? (p4 = 4, o3 = true) : y4 >= 224 ? (p4 = 3, o3 = true) : y4 >= 192 ? (p4 = 2, o3 = true) : y4 < 128 && (p4 = 1, o3 = true);
              } while (!o3);
              for (var i4 = p4 - (c3.length - h3), l3 = 0; l3 < i4; l3++)
                _4--, c3.pop();
              a3 += n2(c3);
            }
          }
          return a3;
        }
        function c2(e4) {
          e4 = E3(null, e4, "input");
          for (var r3, t4, a3, _4 = "", s3 = 0; s3 < e4.length; s3++)
            a3 = 87 + (t4 = 15 & e4[s3]) + (t4 - 10 >> 8 & -39) << 8 | 87 + (r3 = e4[s3] >>> 4) + (r3 - 10 >> 8 & -39), _4 += String.fromCharCode(255 & a3) + String.fromCharCode(a3 >>> 8);
          return _4;
        }
        var o2 = { ORIGINAL: 1, ORIGINAL_NO_PADDING: 3, URLSAFE: 5, URLSAFE_NO_PADDING: 7 };
        function h2(e4) {
          if (null == e4)
            return o2.URLSAFE_NO_PADDING;
          if (e4 !== o2.ORIGINAL && e4 !== o2.ORIGINAL_NO_PADDING && e4 !== o2.URLSAFE && e4 != o2.URLSAFE_NO_PADDING)
            throw new Error("unsupported base64 variant");
          return e4;
        }
        function p3(e4, r3) {
          r3 = h2(r3), e4 = E3(_4, e4, "input");
          var a3, _4 = [], s3 = 0 | Math.floor(e4.length / 3), c3 = e4.length - 3 * s3, o3 = 4 * s3 + (0 !== c3 ? 0 == (2 & r3) ? 4 : 2 + (c3 >>> 1) : 0), p4 = new u3(o3 + 1), y4 = d(e4);
          return _4.push(y4), _4.push(p4.address), 0 === t3._sodium_bin2base64(p4.address, p4.length, y4, e4.length, r3) && b3(_4, "conversion failed"), p4.length = o3, a3 = n2(p4.to_Uint8Array()), g3(_4), a3;
        }
        function y3(e4, r3) {
          var t4 = r3 || a2;
          if (!i3(t4))
            throw new Error(t4 + " output format is not available");
          if (e4 instanceof u3) {
            if ("uint8array" === t4)
              return e4.to_Uint8Array();
            if ("text" === t4)
              return n2(e4.to_Uint8Array());
            if ("hex" === t4)
              return c2(e4.to_Uint8Array());
            if ("base64" === t4)
              return p3(e4.to_Uint8Array(), o2.URLSAFE_NO_PADDING);
            throw new Error('What is output format "' + t4 + '"?');
          }
          if ("object" == typeof e4) {
            for (var _4 = Object.keys(e4), s3 = {}, h3 = 0; h3 < _4.length; h3++)
              s3[_4[h3]] = y3(e4[_4[h3]], t4);
            return s3;
          }
          if ("string" == typeof e4)
            return e4;
          throw new TypeError("Cannot format output");
        }
        function i3(e4) {
          for (var r3 = ["uint8array", "text", "hex", "base64"], t4 = 0; t4 < r3.length; t4++)
            if (r3[t4] === e4)
              return true;
          return false;
        }
        function l2(e4) {
          if (e4) {
            if ("string" != typeof e4)
              throw new TypeError("When defined, the output format must be a string");
            if (!i3(e4))
              throw new Error(e4 + " is not a supported output format");
          }
        }
        function u3(e4) {
          this.length = e4, this.address = v3(e4);
        }
        function d(e4) {
          var r3 = v3(e4.length);
          return t3.HEAPU8.set(e4, r3), r3;
        }
        function v3(e4) {
          var r3 = t3._malloc(e4);
          if (0 === r3)
            throw { message: "_malloc() failed", length: e4 };
          return r3;
        }
        function g3(e4) {
          if (e4)
            for (var r3 = 0; r3 < e4.length; r3++)
              a3 = e4[r3], t3._free(a3);
          var a3;
        }
        function b3(e4, r3) {
          throw g3(e4), new Error(r3);
        }
        function f(e4, r3) {
          throw g3(e4), new TypeError(r3);
        }
        function m2(e4, r3, t4) {
          null == r3 && f(e4, t4 + " cannot be null or undefined");
        }
        function E3(e4, r3, t4) {
          return m2(e4, r3, t4), r3 instanceof Uint8Array ? r3 : "string" == typeof r3 ? s2(r3) : void f(e4, "unsupported input type for " + t4);
        }
        function x3(e4, r3, a3, _4, s3, n3) {
          var c3 = [];
          l2(n3);
          var o3 = null;
          null != e4 && (o3 = d(e4 = E3(c3, e4, "secret_nonce")), e4.length, c3.push(o3)), r3 = E3(c3, r3, "ciphertext");
          var h3, p4 = t3._crypto_aead_chacha20poly1305_abytes(), i4 = r3.length;
          i4 < p4 && f(c3, "ciphertext is too short"), h3 = d(r3), c3.push(h3);
          var v4 = null, m3 = 0;
          null != a3 && (v4 = d(a3 = E3(c3, a3, "additional_data")), m3 = a3.length, c3.push(v4)), _4 = E3(c3, _4, "public_nonce");
          var x4, k4 = 0 | t3._crypto_aead_chacha20poly1305_npubbytes();
          _4.length !== k4 && f(c3, "invalid public_nonce length"), x4 = d(_4), c3.push(x4), s3 = E3(c3, s3, "key");
          var S4, T4 = 0 | t3._crypto_aead_chacha20poly1305_keybytes();
          s3.length !== T4 && f(c3, "invalid key length"), S4 = d(s3), c3.push(S4);
          var w3 = new u3(i4 - t3._crypto_aead_chacha20poly1305_abytes() | 0), Y3 = w3.address;
          if (c3.push(Y3), 0 === t3._crypto_aead_chacha20poly1305_decrypt(Y3, null, o3, h3, i4, 0, v4, m3, 0, x4, S4)) {
            var B4 = y3(w3, n3);
            return g3(c3), B4;
          }
          b3(c3, "ciphertext cannot be decrypted using that key");
        }
        function k3(e4, r3, a3, _4, s3, n3, c3) {
          var o3 = [];
          l2(c3);
          var h3 = null;
          null != e4 && (h3 = d(e4 = E3(o3, e4, "secret_nonce")), e4.length, o3.push(h3));
          var p4 = d(r3 = E3(o3, r3, "ciphertext")), i4 = r3.length;
          o3.push(p4), a3 = E3(o3, a3, "mac");
          var v4, m3 = 0 | t3._crypto_box_macbytes();
          a3.length !== m3 && f(o3, "invalid mac length"), v4 = d(a3), o3.push(v4);
          var x4 = null, k4 = 0;
          null != _4 && (x4 = d(_4 = E3(o3, _4, "additional_data")), k4 = _4.length, o3.push(x4)), s3 = E3(o3, s3, "public_nonce");
          var S4, T4 = 0 | t3._crypto_aead_chacha20poly1305_npubbytes();
          s3.length !== T4 && f(o3, "invalid public_nonce length"), S4 = d(s3), o3.push(S4), n3 = E3(o3, n3, "key");
          var w3, Y3 = 0 | t3._crypto_aead_chacha20poly1305_keybytes();
          n3.length !== Y3 && f(o3, "invalid key length"), w3 = d(n3), o3.push(w3);
          var B4 = new u3(0 | i4), A4 = B4.address;
          if (o3.push(A4), 0 === t3._crypto_aead_chacha20poly1305_decrypt_detached(A4, h3, p4, i4, 0, v4, x4, k4, 0, S4, w3)) {
            var K4 = y3(B4, c3);
            return g3(o3), K4;
          }
          b3(o3, "ciphertext cannot be decrypted using that key");
        }
        function S3(e4, r3, a3, _4, s3, n3) {
          var c3 = [];
          l2(n3);
          var o3 = d(e4 = E3(c3, e4, "message")), h3 = e4.length;
          c3.push(o3);
          var p4 = null, i4 = 0;
          null != r3 && (p4 = d(r3 = E3(c3, r3, "additional_data")), i4 = r3.length, c3.push(p4));
          var v4 = null;
          null != a3 && (v4 = d(a3 = E3(c3, a3, "secret_nonce")), a3.length, c3.push(v4)), _4 = E3(c3, _4, "public_nonce");
          var m3, x4 = 0 | t3._crypto_aead_chacha20poly1305_npubbytes();
          _4.length !== x4 && f(c3, "invalid public_nonce length"), m3 = d(_4), c3.push(m3), s3 = E3(c3, s3, "key");
          var k4, S4 = 0 | t3._crypto_aead_chacha20poly1305_keybytes();
          s3.length !== S4 && f(c3, "invalid key length"), k4 = d(s3), c3.push(k4);
          var T4 = new u3(h3 + t3._crypto_aead_chacha20poly1305_abytes() | 0), w3 = T4.address;
          if (c3.push(w3), 0 === t3._crypto_aead_chacha20poly1305_encrypt(w3, null, o3, h3, 0, p4, i4, 0, v4, m3, k4)) {
            var Y3 = y3(T4, n3);
            return g3(c3), Y3;
          }
          b3(c3, "invalid usage");
        }
        function T3(e4, r3, a3, _4, s3, n3) {
          var c3 = [];
          l2(n3);
          var o3 = d(e4 = E3(c3, e4, "message")), h3 = e4.length;
          c3.push(o3);
          var p4 = null, i4 = 0;
          null != r3 && (p4 = d(r3 = E3(c3, r3, "additional_data")), i4 = r3.length, c3.push(p4));
          var v4 = null;
          null != a3 && (v4 = d(a3 = E3(c3, a3, "secret_nonce")), a3.length, c3.push(v4)), _4 = E3(c3, _4, "public_nonce");
          var m3, x4 = 0 | t3._crypto_aead_chacha20poly1305_npubbytes();
          _4.length !== x4 && f(c3, "invalid public_nonce length"), m3 = d(_4), c3.push(m3), s3 = E3(c3, s3, "key");
          var k4, S4 = 0 | t3._crypto_aead_chacha20poly1305_keybytes();
          s3.length !== S4 && f(c3, "invalid key length"), k4 = d(s3), c3.push(k4);
          var T4 = new u3(0 | h3), w3 = T4.address;
          c3.push(w3);
          var Y3 = new u3(0 | t3._crypto_aead_chacha20poly1305_abytes()), B4 = Y3.address;
          if (c3.push(B4), 0 === t3._crypto_aead_chacha20poly1305_encrypt_detached(w3, B4, null, o3, h3, 0, p4, i4, 0, v4, m3, k4)) {
            var A4 = y3({ ciphertext: T4, mac: Y3 }, n3);
            return g3(c3), A4;
          }
          b3(c3, "invalid usage");
        }
        function w2(e4, r3, a3, _4, s3, n3) {
          var c3 = [];
          l2(n3);
          var o3 = null;
          null != e4 && (o3 = d(e4 = E3(c3, e4, "secret_nonce")), e4.length, c3.push(o3)), r3 = E3(c3, r3, "ciphertext");
          var h3, p4 = t3._crypto_aead_chacha20poly1305_ietf_abytes(), i4 = r3.length;
          i4 < p4 && f(c3, "ciphertext is too short"), h3 = d(r3), c3.push(h3);
          var v4 = null, m3 = 0;
          null != a3 && (v4 = d(a3 = E3(c3, a3, "additional_data")), m3 = a3.length, c3.push(v4)), _4 = E3(c3, _4, "public_nonce");
          var x4, k4 = 0 | t3._crypto_aead_chacha20poly1305_ietf_npubbytes();
          _4.length !== k4 && f(c3, "invalid public_nonce length"), x4 = d(_4), c3.push(x4), s3 = E3(c3, s3, "key");
          var S4, T4 = 0 | t3._crypto_aead_chacha20poly1305_ietf_keybytes();
          s3.length !== T4 && f(c3, "invalid key length"), S4 = d(s3), c3.push(S4);
          var w3 = new u3(i4 - t3._crypto_aead_chacha20poly1305_ietf_abytes() | 0), Y3 = w3.address;
          if (c3.push(Y3), 0 === t3._crypto_aead_chacha20poly1305_ietf_decrypt(Y3, null, o3, h3, i4, 0, v4, m3, 0, x4, S4)) {
            var B4 = y3(w3, n3);
            return g3(c3), B4;
          }
          b3(c3, "ciphertext cannot be decrypted using that key");
        }
        function Y2(e4, r3, a3, _4, s3, n3, c3) {
          var o3 = [];
          l2(c3);
          var h3 = null;
          null != e4 && (h3 = d(e4 = E3(o3, e4, "secret_nonce")), e4.length, o3.push(h3));
          var p4 = d(r3 = E3(o3, r3, "ciphertext")), i4 = r3.length;
          o3.push(p4), a3 = E3(o3, a3, "mac");
          var v4, m3 = 0 | t3._crypto_box_macbytes();
          a3.length !== m3 && f(o3, "invalid mac length"), v4 = d(a3), o3.push(v4);
          var x4 = null, k4 = 0;
          null != _4 && (x4 = d(_4 = E3(o3, _4, "additional_data")), k4 = _4.length, o3.push(x4)), s3 = E3(o3, s3, "public_nonce");
          var S4, T4 = 0 | t3._crypto_aead_chacha20poly1305_ietf_npubbytes();
          s3.length !== T4 && f(o3, "invalid public_nonce length"), S4 = d(s3), o3.push(S4), n3 = E3(o3, n3, "key");
          var w3, Y3 = 0 | t3._crypto_aead_chacha20poly1305_ietf_keybytes();
          n3.length !== Y3 && f(o3, "invalid key length"), w3 = d(n3), o3.push(w3);
          var B4 = new u3(0 | i4), A4 = B4.address;
          if (o3.push(A4), 0 === t3._crypto_aead_chacha20poly1305_ietf_decrypt_detached(A4, h3, p4, i4, 0, v4, x4, k4, 0, S4, w3)) {
            var K4 = y3(B4, c3);
            return g3(o3), K4;
          }
          b3(o3, "ciphertext cannot be decrypted using that key");
        }
        function B3(e4, r3, a3, _4, s3, n3) {
          var c3 = [];
          l2(n3);
          var o3 = d(e4 = E3(c3, e4, "message")), h3 = e4.length;
          c3.push(o3);
          var p4 = null, i4 = 0;
          null != r3 && (p4 = d(r3 = E3(c3, r3, "additional_data")), i4 = r3.length, c3.push(p4));
          var v4 = null;
          null != a3 && (v4 = d(a3 = E3(c3, a3, "secret_nonce")), a3.length, c3.push(v4)), _4 = E3(c3, _4, "public_nonce");
          var m3, x4 = 0 | t3._crypto_aead_chacha20poly1305_ietf_npubbytes();
          _4.length !== x4 && f(c3, "invalid public_nonce length"), m3 = d(_4), c3.push(m3), s3 = E3(c3, s3, "key");
          var k4, S4 = 0 | t3._crypto_aead_chacha20poly1305_ietf_keybytes();
          s3.length !== S4 && f(c3, "invalid key length"), k4 = d(s3), c3.push(k4);
          var T4 = new u3(h3 + t3._crypto_aead_chacha20poly1305_ietf_abytes() | 0), w3 = T4.address;
          if (c3.push(w3), 0 === t3._crypto_aead_chacha20poly1305_ietf_encrypt(w3, null, o3, h3, 0, p4, i4, 0, v4, m3, k4)) {
            var Y3 = y3(T4, n3);
            return g3(c3), Y3;
          }
          b3(c3, "invalid usage");
        }
        function A3(e4, r3, a3, _4, s3, n3) {
          var c3 = [];
          l2(n3);
          var o3 = d(e4 = E3(c3, e4, "message")), h3 = e4.length;
          c3.push(o3);
          var p4 = null, i4 = 0;
          null != r3 && (p4 = d(r3 = E3(c3, r3, "additional_data")), i4 = r3.length, c3.push(p4));
          var v4 = null;
          null != a3 && (v4 = d(a3 = E3(c3, a3, "secret_nonce")), a3.length, c3.push(v4)), _4 = E3(c3, _4, "public_nonce");
          var m3, x4 = 0 | t3._crypto_aead_chacha20poly1305_ietf_npubbytes();
          _4.length !== x4 && f(c3, "invalid public_nonce length"), m3 = d(_4), c3.push(m3), s3 = E3(c3, s3, "key");
          var k4, S4 = 0 | t3._crypto_aead_chacha20poly1305_ietf_keybytes();
          s3.length !== S4 && f(c3, "invalid key length"), k4 = d(s3), c3.push(k4);
          var T4 = new u3(0 | h3), w3 = T4.address;
          c3.push(w3);
          var Y3 = new u3(0 | t3._crypto_aead_chacha20poly1305_ietf_abytes()), B4 = Y3.address;
          if (c3.push(B4), 0 === t3._crypto_aead_chacha20poly1305_ietf_encrypt_detached(w3, B4, null, o3, h3, 0, p4, i4, 0, v4, m3, k4)) {
            var A4 = y3({ ciphertext: T4, mac: Y3 }, n3);
            return g3(c3), A4;
          }
          b3(c3, "invalid usage");
        }
        function K3(e4) {
          var r3 = [];
          l2(e4);
          var a3 = new u3(0 | t3._crypto_aead_chacha20poly1305_ietf_keybytes()), _4 = a3.address;
          r3.push(_4), t3._crypto_aead_chacha20poly1305_ietf_keygen(_4);
          var s3 = y3(a3, e4);
          return g3(r3), s3;
        }
        function M3(e4) {
          var r3 = [];
          l2(e4);
          var a3 = new u3(0 | t3._crypto_aead_chacha20poly1305_keybytes()), _4 = a3.address;
          r3.push(_4), t3._crypto_aead_chacha20poly1305_keygen(_4);
          var s3 = y3(a3, e4);
          return g3(r3), s3;
        }
        function I3(e4, r3, a3, _4, s3, n3) {
          var c3 = [];
          l2(n3);
          var o3 = null;
          null != e4 && (o3 = d(e4 = E3(c3, e4, "secret_nonce")), e4.length, c3.push(o3)), r3 = E3(c3, r3, "ciphertext");
          var h3, p4 = t3._crypto_aead_xchacha20poly1305_ietf_abytes(), i4 = r3.length;
          i4 < p4 && f(c3, "ciphertext is too short"), h3 = d(r3), c3.push(h3);
          var v4 = null, m3 = 0;
          null != a3 && (v4 = d(a3 = E3(c3, a3, "additional_data")), m3 = a3.length, c3.push(v4)), _4 = E3(c3, _4, "public_nonce");
          var x4, k4 = 0 | t3._crypto_aead_xchacha20poly1305_ietf_npubbytes();
          _4.length !== k4 && f(c3, "invalid public_nonce length"), x4 = d(_4), c3.push(x4), s3 = E3(c3, s3, "key");
          var S4, T4 = 0 | t3._crypto_aead_xchacha20poly1305_ietf_keybytes();
          s3.length !== T4 && f(c3, "invalid key length"), S4 = d(s3), c3.push(S4);
          var w3 = new u3(i4 - t3._crypto_aead_xchacha20poly1305_ietf_abytes() | 0), Y3 = w3.address;
          if (c3.push(Y3), 0 === t3._crypto_aead_xchacha20poly1305_ietf_decrypt(Y3, null, o3, h3, i4, 0, v4, m3, 0, x4, S4)) {
            var B4 = y3(w3, n3);
            return g3(c3), B4;
          }
          b3(c3, "ciphertext cannot be decrypted using that key");
        }
        function N3(e4, r3, a3, _4, s3, n3, c3) {
          var o3 = [];
          l2(c3);
          var h3 = null;
          null != e4 && (h3 = d(e4 = E3(o3, e4, "secret_nonce")), e4.length, o3.push(h3));
          var p4 = d(r3 = E3(o3, r3, "ciphertext")), i4 = r3.length;
          o3.push(p4), a3 = E3(o3, a3, "mac");
          var v4, m3 = 0 | t3._crypto_box_macbytes();
          a3.length !== m3 && f(o3, "invalid mac length"), v4 = d(a3), o3.push(v4);
          var x4 = null, k4 = 0;
          null != _4 && (x4 = d(_4 = E3(o3, _4, "additional_data")), k4 = _4.length, o3.push(x4)), s3 = E3(o3, s3, "public_nonce");
          var S4, T4 = 0 | t3._crypto_aead_xchacha20poly1305_ietf_npubbytes();
          s3.length !== T4 && f(o3, "invalid public_nonce length"), S4 = d(s3), o3.push(S4), n3 = E3(o3, n3, "key");
          var w3, Y3 = 0 | t3._crypto_aead_xchacha20poly1305_ietf_keybytes();
          n3.length !== Y3 && f(o3, "invalid key length"), w3 = d(n3), o3.push(w3);
          var B4 = new u3(0 | i4), A4 = B4.address;
          if (o3.push(A4), 0 === t3._crypto_aead_xchacha20poly1305_ietf_decrypt_detached(A4, h3, p4, i4, 0, v4, x4, k4, 0, S4, w3)) {
            var K4 = y3(B4, c3);
            return g3(o3), K4;
          }
          b3(o3, "ciphertext cannot be decrypted using that key");
        }
        function L3(e4, r3, a3, _4, s3, n3) {
          var c3 = [];
          l2(n3);
          var o3 = d(e4 = E3(c3, e4, "message")), h3 = e4.length;
          c3.push(o3);
          var p4 = null, i4 = 0;
          null != r3 && (p4 = d(r3 = E3(c3, r3, "additional_data")), i4 = r3.length, c3.push(p4));
          var v4 = null;
          null != a3 && (v4 = d(a3 = E3(c3, a3, "secret_nonce")), a3.length, c3.push(v4)), _4 = E3(c3, _4, "public_nonce");
          var m3, x4 = 0 | t3._crypto_aead_xchacha20poly1305_ietf_npubbytes();
          _4.length !== x4 && f(c3, "invalid public_nonce length"), m3 = d(_4), c3.push(m3), s3 = E3(c3, s3, "key");
          var k4, S4 = 0 | t3._crypto_aead_xchacha20poly1305_ietf_keybytes();
          s3.length !== S4 && f(c3, "invalid key length"), k4 = d(s3), c3.push(k4);
          var T4 = new u3(h3 + t3._crypto_aead_xchacha20poly1305_ietf_abytes() | 0), w3 = T4.address;
          if (c3.push(w3), 0 === t3._crypto_aead_xchacha20poly1305_ietf_encrypt(w3, null, o3, h3, 0, p4, i4, 0, v4, m3, k4)) {
            var Y3 = y3(T4, n3);
            return g3(c3), Y3;
          }
          b3(c3, "invalid usage");
        }
        function U3(e4, r3, a3, _4, s3, n3) {
          var c3 = [];
          l2(n3);
          var o3 = d(e4 = E3(c3, e4, "message")), h3 = e4.length;
          c3.push(o3);
          var p4 = null, i4 = 0;
          null != r3 && (p4 = d(r3 = E3(c3, r3, "additional_data")), i4 = r3.length, c3.push(p4));
          var v4 = null;
          null != a3 && (v4 = d(a3 = E3(c3, a3, "secret_nonce")), a3.length, c3.push(v4)), _4 = E3(c3, _4, "public_nonce");
          var m3, x4 = 0 | t3._crypto_aead_xchacha20poly1305_ietf_npubbytes();
          _4.length !== x4 && f(c3, "invalid public_nonce length"), m3 = d(_4), c3.push(m3), s3 = E3(c3, s3, "key");
          var k4, S4 = 0 | t3._crypto_aead_xchacha20poly1305_ietf_keybytes();
          s3.length !== S4 && f(c3, "invalid key length"), k4 = d(s3), c3.push(k4);
          var T4 = new u3(0 | h3), w3 = T4.address;
          c3.push(w3);
          var Y3 = new u3(0 | t3._crypto_aead_xchacha20poly1305_ietf_abytes()), B4 = Y3.address;
          if (c3.push(B4), 0 === t3._crypto_aead_xchacha20poly1305_ietf_encrypt_detached(w3, B4, null, o3, h3, 0, p4, i4, 0, v4, m3, k4)) {
            var A4 = y3({ ciphertext: T4, mac: Y3 }, n3);
            return g3(c3), A4;
          }
          b3(c3, "invalid usage");
        }
        function O3(e4) {
          var r3 = [];
          l2(e4);
          var a3 = new u3(0 | t3._crypto_aead_xchacha20poly1305_ietf_keybytes()), _4 = a3.address;
          r3.push(_4), t3._crypto_aead_xchacha20poly1305_ietf_keygen(_4);
          var s3 = y3(a3, e4);
          return g3(r3), s3;
        }
        function C3(e4, r3, a3) {
          var _4 = [];
          l2(a3);
          var s3 = d(e4 = E3(_4, e4, "message")), n3 = e4.length;
          _4.push(s3), r3 = E3(_4, r3, "key");
          var c3, o3 = 0 | t3._crypto_auth_keybytes();
          r3.length !== o3 && f(_4, "invalid key length"), c3 = d(r3), _4.push(c3);
          var h3 = new u3(0 | t3._crypto_auth_bytes()), p4 = h3.address;
          if (_4.push(p4), 0 == (0 | t3._crypto_auth(p4, s3, n3, 0, c3))) {
            var i4 = y3(h3, a3);
            return g3(_4), i4;
          }
          b3(_4, "invalid usage");
        }
        function R3(e4, r3, a3) {
          var _4 = [];
          l2(a3);
          var s3 = d(e4 = E3(_4, e4, "message")), n3 = e4.length;
          _4.push(s3), r3 = E3(_4, r3, "key");
          var c3, o3 = 0 | t3._crypto_auth_hmacsha256_keybytes();
          r3.length !== o3 && f(_4, "invalid key length"), c3 = d(r3), _4.push(c3);
          var h3 = new u3(0 | t3._crypto_auth_hmacsha256_bytes()), p4 = h3.address;
          if (_4.push(p4), 0 == (0 | t3._crypto_auth_hmacsha256(p4, s3, n3, 0, c3))) {
            var i4 = y3(h3, a3);
            return g3(_4), i4;
          }
          b3(_4, "invalid usage");
        }
        function P3(e4, r3) {
          var a3 = [];
          l2(r3), m2(a3, e4, "state_address");
          var _4 = new u3(0 | t3._crypto_auth_hmacsha256_bytes()), s3 = _4.address;
          if (a3.push(s3), 0 == (0 | t3._crypto_auth_hmacsha256_final(e4, s3))) {
            var n3 = (t3._free(e4), y3(_4, r3));
            return g3(a3), n3;
          }
          b3(a3, "invalid usage");
        }
        function G3(e4, r3) {
          var a3 = [];
          l2(r3);
          var _4 = null, s3 = 0;
          null != e4 && (_4 = d(e4 = E3(a3, e4, "key")), s3 = e4.length, a3.push(_4));
          var n3 = new u3(208).address;
          if (0 == (0 | t3._crypto_auth_hmacsha256_init(n3, _4, s3))) {
            var c3 = n3;
            return g3(a3), c3;
          }
          b3(a3, "invalid usage");
        }
        function X3(e4) {
          var r3 = [];
          l2(e4);
          var a3 = new u3(0 | t3._crypto_auth_hmacsha256_keybytes()), _4 = a3.address;
          r3.push(_4), t3._crypto_auth_hmacsha256_keygen(_4);
          var s3 = y3(a3, e4);
          return g3(r3), s3;
        }
        function D2(e4, r3, a3) {
          var _4 = [];
          l2(a3), m2(_4, e4, "state_address");
          var s3 = d(r3 = E3(_4, r3, "message_chunk")), n3 = r3.length;
          _4.push(s3), 0 != (0 | t3._crypto_auth_hmacsha256_update(e4, s3, n3)) && b3(_4, "invalid usage"), g3(_4);
        }
        function F3(e4, r3, a3) {
          var _4 = [];
          e4 = E3(_4, e4, "tag");
          var s3, n3 = 0 | t3._crypto_auth_hmacsha256_bytes();
          e4.length !== n3 && f(_4, "invalid tag length"), s3 = d(e4), _4.push(s3);
          var c3 = d(r3 = E3(_4, r3, "message")), o3 = r3.length;
          _4.push(c3), a3 = E3(_4, a3, "key");
          var h3, p4 = 0 | t3._crypto_auth_hmacsha256_keybytes();
          a3.length !== p4 && f(_4, "invalid key length"), h3 = d(a3), _4.push(h3);
          var y4 = 0 == (0 | t3._crypto_auth_hmacsha256_verify(s3, c3, o3, 0, h3));
          return g3(_4), y4;
        }
        function V3(e4, r3, a3) {
          var _4 = [];
          l2(a3);
          var s3 = d(e4 = E3(_4, e4, "message")), n3 = e4.length;
          _4.push(s3), r3 = E3(_4, r3, "key");
          var c3, o3 = 0 | t3._crypto_auth_hmacsha512_keybytes();
          r3.length !== o3 && f(_4, "invalid key length"), c3 = d(r3), _4.push(c3);
          var h3 = new u3(0 | t3._crypto_auth_hmacsha512_bytes()), p4 = h3.address;
          if (_4.push(p4), 0 == (0 | t3._crypto_auth_hmacsha512(p4, s3, n3, 0, c3))) {
            var i4 = y3(h3, a3);
            return g3(_4), i4;
          }
          b3(_4, "invalid usage");
        }
        function H3(e4, r3) {
          var a3 = [];
          l2(r3), m2(a3, e4, "state_address");
          var _4 = new u3(0 | t3._crypto_auth_hmacsha512_bytes()), s3 = _4.address;
          if (a3.push(s3), 0 == (0 | t3._crypto_auth_hmacsha512_final(e4, s3))) {
            var n3 = (t3._free(e4), y3(_4, r3));
            return g3(a3), n3;
          }
          b3(a3, "invalid usage");
        }
        function q2(e4, r3) {
          var a3 = [];
          l2(r3);
          var _4 = null, s3 = 0;
          null != e4 && (_4 = d(e4 = E3(a3, e4, "key")), s3 = e4.length, a3.push(_4));
          var n3 = new u3(416).address;
          if (0 == (0 | t3._crypto_auth_hmacsha512_init(n3, _4, s3))) {
            var c3 = n3;
            return g3(a3), c3;
          }
          b3(a3, "invalid usage");
        }
        function j2(e4) {
          var r3 = [];
          l2(e4);
          var a3 = new u3(0 | t3._crypto_auth_hmacsha512_keybytes()), _4 = a3.address;
          r3.push(_4), t3._crypto_auth_hmacsha512_keygen(_4);
          var s3 = y3(a3, e4);
          return g3(r3), s3;
        }
        function z3(e4, r3, a3) {
          var _4 = [];
          l2(a3), m2(_4, e4, "state_address");
          var s3 = d(r3 = E3(_4, r3, "message_chunk")), n3 = r3.length;
          _4.push(s3), 0 != (0 | t3._crypto_auth_hmacsha512_update(e4, s3, n3)) && b3(_4, "invalid usage"), g3(_4);
        }
        function W3(e4, r3, a3) {
          var _4 = [];
          e4 = E3(_4, e4, "tag");
          var s3, n3 = 0 | t3._crypto_auth_hmacsha512_bytes();
          e4.length !== n3 && f(_4, "invalid tag length"), s3 = d(e4), _4.push(s3);
          var c3 = d(r3 = E3(_4, r3, "message")), o3 = r3.length;
          _4.push(c3), a3 = E3(_4, a3, "key");
          var h3, p4 = 0 | t3._crypto_auth_hmacsha512_keybytes();
          a3.length !== p4 && f(_4, "invalid key length"), h3 = d(a3), _4.push(h3);
          var y4 = 0 == (0 | t3._crypto_auth_hmacsha512_verify(s3, c3, o3, 0, h3));
          return g3(_4), y4;
        }
        function J3(e4) {
          var r3 = [];
          l2(e4);
          var a3 = new u3(0 | t3._crypto_auth_keybytes()), _4 = a3.address;
          r3.push(_4), t3._crypto_auth_keygen(_4);
          var s3 = y3(a3, e4);
          return g3(r3), s3;
        }
        function Q3(e4, r3, a3) {
          var _4 = [];
          e4 = E3(_4, e4, "tag");
          var s3, n3 = 0 | t3._crypto_auth_bytes();
          e4.length !== n3 && f(_4, "invalid tag length"), s3 = d(e4), _4.push(s3);
          var c3 = d(r3 = E3(_4, r3, "message")), o3 = r3.length;
          _4.push(c3), a3 = E3(_4, a3, "key");
          var h3, p4 = 0 | t3._crypto_auth_keybytes();
          a3.length !== p4 && f(_4, "invalid key length"), h3 = d(a3), _4.push(h3);
          var y4 = 0 == (0 | t3._crypto_auth_verify(s3, c3, o3, 0, h3));
          return g3(_4), y4;
        }
        function Z3(e4, r3, a3) {
          var _4 = [];
          l2(a3), e4 = E3(_4, e4, "publicKey");
          var s3, n3 = 0 | t3._crypto_box_publickeybytes();
          e4.length !== n3 && f(_4, "invalid publicKey length"), s3 = d(e4), _4.push(s3), r3 = E3(_4, r3, "privateKey");
          var c3, o3 = 0 | t3._crypto_box_secretkeybytes();
          r3.length !== o3 && f(_4, "invalid privateKey length"), c3 = d(r3), _4.push(c3);
          var h3 = new u3(0 | t3._crypto_box_beforenmbytes()), p4 = h3.address;
          if (_4.push(p4), 0 == (0 | t3._crypto_box_beforenm(p4, s3, c3))) {
            var i4 = y3(h3, a3);
            return g3(_4), i4;
          }
          b3(_4, "invalid usage");
        }
        function $3(e4) {
          var r3 = [];
          l2(e4);
          var a3 = new u3(0 | t3._crypto_box_curve25519xchacha20poly1305_publickeybytes()), _4 = a3.address;
          r3.push(_4);
          var s3 = new u3(0 | t3._crypto_box_curve25519xchacha20poly1305_secretkeybytes()), n3 = s3.address;
          r3.push(n3), t3._crypto_box_curve25519xchacha20poly1305_keypair(_4, n3);
          var c3 = y3({ publicKey: a3, privateKey: s3, keyType: "curve25519" }, e4);
          return g3(r3), c3;
        }
        function ee2(e4, r3, a3) {
          var _4 = [];
          l2(a3);
          var s3 = d(e4 = E3(_4, e4, "message")), n3 = e4.length;
          _4.push(s3), r3 = E3(_4, r3, "publicKey");
          var c3, o3 = 0 | t3._crypto_box_curve25519xchacha20poly1305_publickeybytes();
          r3.length !== o3 && f(_4, "invalid publicKey length"), c3 = d(r3), _4.push(c3);
          var h3 = new u3(n3 + t3._crypto_box_curve25519xchacha20poly1305_sealbytes() | 0), p4 = h3.address;
          _4.push(p4), t3._crypto_box_curve25519xchacha20poly1305_seal(p4, s3, n3, 0, c3);
          var i4 = y3(h3, a3);
          return g3(_4), i4;
        }
        function re2(e4, r3, a3, _4) {
          var s3 = [];
          l2(_4), e4 = E3(s3, e4, "ciphertext");
          var n3, c3 = t3._crypto_box_curve25519xchacha20poly1305_sealbytes(), o3 = e4.length;
          o3 < c3 && f(s3, "ciphertext is too short"), n3 = d(e4), s3.push(n3), r3 = E3(s3, r3, "publicKey");
          var h3, p4 = 0 | t3._crypto_box_curve25519xchacha20poly1305_publickeybytes();
          r3.length !== p4 && f(s3, "invalid publicKey length"), h3 = d(r3), s3.push(h3), a3 = E3(s3, a3, "secretKey");
          var i4, v4 = 0 | t3._crypto_box_curve25519xchacha20poly1305_secretkeybytes();
          a3.length !== v4 && f(s3, "invalid secretKey length"), i4 = d(a3), s3.push(i4);
          var b4 = new u3(o3 - t3._crypto_box_curve25519xchacha20poly1305_sealbytes() | 0), m3 = b4.address;
          s3.push(m3), t3._crypto_box_curve25519xchacha20poly1305_seal_open(m3, n3, o3, 0, h3, i4);
          var x4 = y3(b4, _4);
          return g3(s3), x4;
        }
        function te2(e4, r3, a3, _4, s3) {
          var n3 = [];
          l2(s3);
          var c3 = d(e4 = E3(n3, e4, "message")), o3 = e4.length;
          n3.push(c3), r3 = E3(n3, r3, "nonce");
          var h3, p4 = 0 | t3._crypto_box_noncebytes();
          r3.length !== p4 && f(n3, "invalid nonce length"), h3 = d(r3), n3.push(h3), a3 = E3(n3, a3, "publicKey");
          var i4, v4 = 0 | t3._crypto_box_publickeybytes();
          a3.length !== v4 && f(n3, "invalid publicKey length"), i4 = d(a3), n3.push(i4), _4 = E3(n3, _4, "privateKey");
          var m3, x4 = 0 | t3._crypto_box_secretkeybytes();
          _4.length !== x4 && f(n3, "invalid privateKey length"), m3 = d(_4), n3.push(m3);
          var k4 = new u3(0 | o3), S4 = k4.address;
          n3.push(S4);
          var T4 = new u3(0 | t3._crypto_box_macbytes()), w3 = T4.address;
          if (n3.push(w3), 0 == (0 | t3._crypto_box_detached(S4, w3, c3, o3, 0, h3, i4, m3))) {
            var Y3 = y3({ ciphertext: k4, mac: T4 }, s3);
            return g3(n3), Y3;
          }
          b3(n3, "invalid usage");
        }
        function ae2(e4, r3, a3, _4, s3) {
          var n3 = [];
          l2(s3);
          var c3 = d(e4 = E3(n3, e4, "message")), o3 = e4.length;
          n3.push(c3), r3 = E3(n3, r3, "nonce");
          var h3, p4 = 0 | t3._crypto_box_noncebytes();
          r3.length !== p4 && f(n3, "invalid nonce length"), h3 = d(r3), n3.push(h3), a3 = E3(n3, a3, "publicKey");
          var i4, v4 = 0 | t3._crypto_box_publickeybytes();
          a3.length !== v4 && f(n3, "invalid publicKey length"), i4 = d(a3), n3.push(i4), _4 = E3(n3, _4, "privateKey");
          var m3, x4 = 0 | t3._crypto_box_secretkeybytes();
          _4.length !== x4 && f(n3, "invalid privateKey length"), m3 = d(_4), n3.push(m3);
          var k4 = new u3(o3 + t3._crypto_box_macbytes() | 0), S4 = k4.address;
          if (n3.push(S4), 0 == (0 | t3._crypto_box_easy(S4, c3, o3, 0, h3, i4, m3))) {
            var T4 = y3(k4, s3);
            return g3(n3), T4;
          }
          b3(n3, "invalid usage");
        }
        function _e(e4, r3, a3, _4) {
          var s3 = [];
          l2(_4);
          var n3 = d(e4 = E3(s3, e4, "message")), c3 = e4.length;
          s3.push(n3), r3 = E3(s3, r3, "nonce");
          var o3, h3 = 0 | t3._crypto_box_noncebytes();
          r3.length !== h3 && f(s3, "invalid nonce length"), o3 = d(r3), s3.push(o3), a3 = E3(s3, a3, "sharedKey");
          var p4, i4 = 0 | t3._crypto_box_beforenmbytes();
          a3.length !== i4 && f(s3, "invalid sharedKey length"), p4 = d(a3), s3.push(p4);
          var v4 = new u3(c3 + t3._crypto_box_macbytes() | 0), m3 = v4.address;
          if (s3.push(m3), 0 == (0 | t3._crypto_box_easy_afternm(m3, n3, c3, 0, o3, p4))) {
            var x4 = y3(v4, _4);
            return g3(s3), x4;
          }
          b3(s3, "invalid usage");
        }
        function se2(e4) {
          var r3 = [];
          l2(e4);
          var a3 = new u3(0 | t3._crypto_box_publickeybytes()), _4 = a3.address;
          r3.push(_4);
          var s3 = new u3(0 | t3._crypto_box_secretkeybytes()), n3 = s3.address;
          if (r3.push(n3), 0 == (0 | t3._crypto_box_keypair(_4, n3))) {
            var c3 = { publicKey: y3(a3, e4), privateKey: y3(s3, e4), keyType: "x25519" };
            return g3(r3), c3;
          }
          b3(r3, "internal error");
        }
        function ne2(e4, r3, a3, _4, s3, n3) {
          var c3 = [];
          l2(n3);
          var o3 = d(e4 = E3(c3, e4, "ciphertext")), h3 = e4.length;
          c3.push(o3), r3 = E3(c3, r3, "mac");
          var p4, i4 = 0 | t3._crypto_box_macbytes();
          r3.length !== i4 && f(c3, "invalid mac length"), p4 = d(r3), c3.push(p4), a3 = E3(c3, a3, "nonce");
          var v4, m3 = 0 | t3._crypto_box_noncebytes();
          a3.length !== m3 && f(c3, "invalid nonce length"), v4 = d(a3), c3.push(v4), _4 = E3(c3, _4, "publicKey");
          var x4, k4 = 0 | t3._crypto_box_publickeybytes();
          _4.length !== k4 && f(c3, "invalid publicKey length"), x4 = d(_4), c3.push(x4), s3 = E3(c3, s3, "privateKey");
          var S4, T4 = 0 | t3._crypto_box_secretkeybytes();
          s3.length !== T4 && f(c3, "invalid privateKey length"), S4 = d(s3), c3.push(S4);
          var w3 = new u3(0 | h3), Y3 = w3.address;
          if (c3.push(Y3), 0 == (0 | t3._crypto_box_open_detached(Y3, o3, p4, h3, 0, v4, x4, S4))) {
            var B4 = y3(w3, n3);
            return g3(c3), B4;
          }
          b3(c3, "incorrect key pair for the given ciphertext");
        }
        function ce2(e4, r3, a3, _4, s3) {
          var n3 = [];
          l2(s3), e4 = E3(n3, e4, "ciphertext");
          var c3, o3 = t3._crypto_box_macbytes(), h3 = e4.length;
          h3 < o3 && f(n3, "ciphertext is too short"), c3 = d(e4), n3.push(c3), r3 = E3(n3, r3, "nonce");
          var p4, i4 = 0 | t3._crypto_box_noncebytes();
          r3.length !== i4 && f(n3, "invalid nonce length"), p4 = d(r3), n3.push(p4), a3 = E3(n3, a3, "publicKey");
          var v4, m3 = 0 | t3._crypto_box_publickeybytes();
          a3.length !== m3 && f(n3, "invalid publicKey length"), v4 = d(a3), n3.push(v4), _4 = E3(n3, _4, "privateKey");
          var x4, k4 = 0 | t3._crypto_box_secretkeybytes();
          _4.length !== k4 && f(n3, "invalid privateKey length"), x4 = d(_4), n3.push(x4);
          var S4 = new u3(h3 - t3._crypto_box_macbytes() | 0), T4 = S4.address;
          if (n3.push(T4), 0 == (0 | t3._crypto_box_open_easy(T4, c3, h3, 0, p4, v4, x4))) {
            var w3 = y3(S4, s3);
            return g3(n3), w3;
          }
          b3(n3, "incorrect key pair for the given ciphertext");
        }
        function oe2(e4, r3, a3, _4) {
          var s3 = [];
          l2(_4);
          var n3 = d(e4 = E3(s3, e4, "ciphertext")), c3 = e4.length;
          s3.push(n3), r3 = E3(s3, r3, "nonce");
          var o3, h3 = 0 | t3._crypto_box_noncebytes();
          r3.length !== h3 && f(s3, "invalid nonce length"), o3 = d(r3), s3.push(o3), a3 = E3(s3, a3, "sharedKey");
          var p4, i4 = 0 | t3._crypto_box_beforenmbytes();
          a3.length !== i4 && f(s3, "invalid sharedKey length"), p4 = d(a3), s3.push(p4);
          var v4 = new u3(c3 - t3._crypto_box_macbytes() | 0), m3 = v4.address;
          if (s3.push(m3), 0 == (0 | t3._crypto_box_open_easy_afternm(m3, n3, c3, 0, o3, p4))) {
            var x4 = y3(v4, _4);
            return g3(s3), x4;
          }
          b3(s3, "incorrect secret key for the given ciphertext");
        }
        function he2(e4, r3, a3) {
          var _4 = [];
          l2(a3);
          var s3 = d(e4 = E3(_4, e4, "message")), n3 = e4.length;
          _4.push(s3), r3 = E3(_4, r3, "publicKey");
          var c3, o3 = 0 | t3._crypto_box_publickeybytes();
          r3.length !== o3 && f(_4, "invalid publicKey length"), c3 = d(r3), _4.push(c3);
          var h3 = new u3(n3 + t3._crypto_box_sealbytes() | 0), p4 = h3.address;
          if (_4.push(p4), 0 == (0 | t3._crypto_box_seal(p4, s3, n3, 0, c3))) {
            var i4 = y3(h3, a3);
            return g3(_4), i4;
          }
          b3(_4, "invalid usage");
        }
        function pe2(e4, r3, a3, _4) {
          var s3 = [];
          l2(_4), e4 = E3(s3, e4, "ciphertext");
          var n3, c3 = t3._crypto_box_sealbytes(), o3 = e4.length;
          o3 < c3 && f(s3, "ciphertext is too short"), n3 = d(e4), s3.push(n3), r3 = E3(s3, r3, "publicKey");
          var h3, p4 = 0 | t3._crypto_box_publickeybytes();
          r3.length !== p4 && f(s3, "invalid publicKey length"), h3 = d(r3), s3.push(h3), a3 = E3(s3, a3, "privateKey");
          var i4, v4 = 0 | t3._crypto_box_secretkeybytes();
          a3.length !== v4 && f(s3, "invalid privateKey length"), i4 = d(a3), s3.push(i4);
          var m3 = new u3(o3 - t3._crypto_box_sealbytes() | 0), x4 = m3.address;
          if (s3.push(x4), 0 == (0 | t3._crypto_box_seal_open(x4, n3, o3, 0, h3, i4))) {
            var k4 = y3(m3, _4);
            return g3(s3), k4;
          }
          b3(s3, "incorrect key pair for the given ciphertext");
        }
        function ye2(e4, r3) {
          var a3 = [];
          l2(r3), e4 = E3(a3, e4, "seed");
          var _4, s3 = 0 | t3._crypto_box_seedbytes();
          e4.length !== s3 && f(a3, "invalid seed length"), _4 = d(e4), a3.push(_4);
          var n3 = new u3(0 | t3._crypto_box_publickeybytes()), c3 = n3.address;
          a3.push(c3);
          var o3 = new u3(0 | t3._crypto_box_secretkeybytes()), h3 = o3.address;
          if (a3.push(h3), 0 == (0 | t3._crypto_box_seed_keypair(c3, h3, _4))) {
            var p4 = { publicKey: y3(n3, r3), privateKey: y3(o3, r3), keyType: "x25519" };
            return g3(a3), p4;
          }
          b3(a3, "invalid usage");
        }
        function ie2(e4, r3, a3) {
          var _4 = [];
          l2(a3), e4 = E3(_4, e4, "p");
          var s3, n3 = 0 | t3._crypto_core_ed25519_bytes();
          e4.length !== n3 && f(_4, "invalid p length"), s3 = d(e4), _4.push(s3), r3 = E3(_4, r3, "q");
          var c3, o3 = 0 | t3._crypto_core_ed25519_bytes();
          r3.length !== o3 && f(_4, "invalid q length"), c3 = d(r3), _4.push(c3);
          var h3 = new u3(0 | t3._crypto_core_ed25519_bytes()), p4 = h3.address;
          if (_4.push(p4), 0 == (0 | t3._crypto_core_ed25519_add(p4, s3, c3))) {
            var i4 = y3(h3, a3);
            return g3(_4), i4;
          }
          b3(_4, "input is an invalid element");
        }
        function le2(e4, r3) {
          var a3 = [];
          l2(r3);
          var _4 = d(e4 = E3(a3, e4, "r"));
          e4.length, a3.push(_4);
          var s3 = new u3(0 | t3._crypto_core_ed25519_bytes()), n3 = s3.address;
          if (a3.push(n3), 0 == (0 | t3._crypto_core_ed25519_from_hash(n3, _4))) {
            var c3 = y3(s3, r3);
            return g3(a3), c3;
          }
          b3(a3, "invalid usage");
        }
        function ue2(e4, r3) {
          var a3 = [];
          l2(r3);
          var _4 = d(e4 = E3(a3, e4, "r"));
          e4.length, a3.push(_4);
          var s3 = new u3(0 | t3._crypto_core_ed25519_bytes()), n3 = s3.address;
          if (a3.push(n3), 0 == (0 | t3._crypto_core_ed25519_from_uniform(n3, _4))) {
            var c3 = y3(s3, r3);
            return g3(a3), c3;
          }
          b3(a3, "invalid usage");
        }
        function de2(e4, r3) {
          var a3 = [];
          l2(r3), e4 = E3(a3, e4, "repr");
          var _4, s3 = 0 | t3._crypto_core_ed25519_bytes();
          e4.length !== s3 && f(a3, "invalid repr length"), _4 = d(e4), a3.push(_4);
          var n3 = 1 == (0 | t3._crypto_core_ed25519_is_valid_point(_4));
          return g3(a3), n3;
        }
        function ve2(e4) {
          var r3 = [];
          l2(e4);
          var a3 = new u3(0 | t3._crypto_core_ed25519_bytes()), _4 = a3.address;
          r3.push(_4), t3._crypto_core_ed25519_random(_4);
          var s3 = y3(a3, e4);
          return g3(r3), s3;
        }
        function ge2(e4, r3, a3) {
          var _4 = [];
          l2(a3), e4 = E3(_4, e4, "x");
          var s3, n3 = 0 | t3._crypto_core_ed25519_scalarbytes();
          e4.length !== n3 && f(_4, "invalid x length"), s3 = d(e4), _4.push(s3), r3 = E3(_4, r3, "y");
          var c3, o3 = 0 | t3._crypto_core_ed25519_scalarbytes();
          r3.length !== o3 && f(_4, "invalid y length"), c3 = d(r3), _4.push(c3);
          var h3 = new u3(0 | t3._crypto_core_ed25519_scalarbytes()), p4 = h3.address;
          _4.push(p4), t3._crypto_core_ed25519_scalar_add(p4, s3, c3);
          var i4 = y3(h3, a3);
          return g3(_4), i4;
        }
        function be(e4, r3) {
          var a3 = [];
          l2(r3), e4 = E3(a3, e4, "s");
          var _4, s3 = 0 | t3._crypto_core_ed25519_scalarbytes();
          e4.length !== s3 && f(a3, "invalid s length"), _4 = d(e4), a3.push(_4);
          var n3 = new u3(0 | t3._crypto_core_ed25519_scalarbytes()), c3 = n3.address;
          a3.push(c3), t3._crypto_core_ed25519_scalar_complement(c3, _4);
          var o3 = y3(n3, r3);
          return g3(a3), o3;
        }
        function fe2(e4, r3) {
          var a3 = [];
          l2(r3), e4 = E3(a3, e4, "s");
          var _4, s3 = 0 | t3._crypto_core_ed25519_scalarbytes();
          e4.length !== s3 && f(a3, "invalid s length"), _4 = d(e4), a3.push(_4);
          var n3 = new u3(0 | t3._crypto_core_ed25519_scalarbytes()), c3 = n3.address;
          if (a3.push(c3), 0 == (0 | t3._crypto_core_ed25519_scalar_invert(c3, _4))) {
            var o3 = y3(n3, r3);
            return g3(a3), o3;
          }
          b3(a3, "invalid reciprocate");
        }
        function me2(e4, r3, a3) {
          var _4 = [];
          l2(a3), e4 = E3(_4, e4, "x");
          var s3, n3 = 0 | t3._crypto_core_ed25519_scalarbytes();
          e4.length !== n3 && f(_4, "invalid x length"), s3 = d(e4), _4.push(s3), r3 = E3(_4, r3, "y");
          var c3, o3 = 0 | t3._crypto_core_ed25519_scalarbytes();
          r3.length !== o3 && f(_4, "invalid y length"), c3 = d(r3), _4.push(c3);
          var h3 = new u3(0 | t3._crypto_core_ed25519_scalarbytes()), p4 = h3.address;
          _4.push(p4), t3._crypto_core_ed25519_scalar_mul(p4, s3, c3);
          var i4 = y3(h3, a3);
          return g3(_4), i4;
        }
        function Ee(e4, r3) {
          var a3 = [];
          l2(r3), e4 = E3(a3, e4, "s");
          var _4, s3 = 0 | t3._crypto_core_ed25519_scalarbytes();
          e4.length !== s3 && f(a3, "invalid s length"), _4 = d(e4), a3.push(_4);
          var n3 = new u3(0 | t3._crypto_core_ed25519_scalarbytes()), c3 = n3.address;
          a3.push(c3), t3._crypto_core_ed25519_scalar_negate(c3, _4);
          var o3 = y3(n3, r3);
          return g3(a3), o3;
        }
        function xe2(e4) {
          var r3 = [];
          l2(e4);
          var a3 = new u3(0 | t3._crypto_core_ed25519_scalarbytes()), _4 = a3.address;
          r3.push(_4), t3._crypto_core_ed25519_scalar_random(_4);
          var s3 = y3(a3, e4);
          return g3(r3), s3;
        }
        function ke(e4, r3) {
          var a3 = [];
          l2(r3), e4 = E3(a3, e4, "sample");
          var _4, s3 = 0 | t3._crypto_core_ed25519_nonreducedscalarbytes();
          e4.length !== s3 && f(a3, "invalid sample length"), _4 = d(e4), a3.push(_4);
          var n3 = new u3(0 | t3._crypto_core_ed25519_scalarbytes()), c3 = n3.address;
          a3.push(c3), t3._crypto_core_ed25519_scalar_reduce(c3, _4);
          var o3 = y3(n3, r3);
          return g3(a3), o3;
        }
        function Se(e4, r3, a3) {
          var _4 = [];
          l2(a3), e4 = E3(_4, e4, "x");
          var s3, n3 = 0 | t3._crypto_core_ed25519_scalarbytes();
          e4.length !== n3 && f(_4, "invalid x length"), s3 = d(e4), _4.push(s3), r3 = E3(_4, r3, "y");
          var c3, o3 = 0 | t3._crypto_core_ed25519_scalarbytes();
          r3.length !== o3 && f(_4, "invalid y length"), c3 = d(r3), _4.push(c3);
          var h3 = new u3(0 | t3._crypto_core_ed25519_scalarbytes()), p4 = h3.address;
          _4.push(p4), t3._crypto_core_ed25519_scalar_sub(p4, s3, c3);
          var i4 = y3(h3, a3);
          return g3(_4), i4;
        }
        function Te(e4, r3, a3) {
          var _4 = [];
          l2(a3), e4 = E3(_4, e4, "p");
          var s3, n3 = 0 | t3._crypto_core_ed25519_bytes();
          e4.length !== n3 && f(_4, "invalid p length"), s3 = d(e4), _4.push(s3), r3 = E3(_4, r3, "q");
          var c3, o3 = 0 | t3._crypto_core_ed25519_bytes();
          r3.length !== o3 && f(_4, "invalid q length"), c3 = d(r3), _4.push(c3);
          var h3 = new u3(0 | t3._crypto_core_ed25519_bytes()), p4 = h3.address;
          if (_4.push(p4), 0 == (0 | t3._crypto_core_ed25519_sub(p4, s3, c3))) {
            var i4 = y3(h3, a3);
            return g3(_4), i4;
          }
          b3(_4, "input is an invalid element");
        }
        function we2(e4, r3, a3, _4) {
          var s3 = [];
          l2(_4), e4 = E3(s3, e4, "input");
          var n3, c3 = 0 | t3._crypto_core_hchacha20_inputbytes();
          e4.length !== c3 && f(s3, "invalid input length"), n3 = d(e4), s3.push(n3), r3 = E3(s3, r3, "privateKey");
          var o3, h3 = 0 | t3._crypto_core_hchacha20_keybytes();
          r3.length !== h3 && f(s3, "invalid privateKey length"), o3 = d(r3), s3.push(o3);
          var p4 = null;
          null != a3 && (p4 = d(a3 = E3(s3, a3, "constant")), a3.length, s3.push(p4));
          var i4 = new u3(0 | t3._crypto_core_hchacha20_outputbytes()), v4 = i4.address;
          if (s3.push(v4), 0 == (0 | t3._crypto_core_hchacha20(v4, n3, o3, p4))) {
            var m3 = y3(i4, _4);
            return g3(s3), m3;
          }
          b3(s3, "invalid usage");
        }
        function Ye(e4, r3, a3, _4) {
          var s3 = [];
          l2(_4), e4 = E3(s3, e4, "input");
          var n3, c3 = 0 | t3._crypto_core_hsalsa20_inputbytes();
          e4.length !== c3 && f(s3, "invalid input length"), n3 = d(e4), s3.push(n3), r3 = E3(s3, r3, "privateKey");
          var o3, h3 = 0 | t3._crypto_core_hsalsa20_keybytes();
          r3.length !== h3 && f(s3, "invalid privateKey length"), o3 = d(r3), s3.push(o3);
          var p4 = null;
          null != a3 && (p4 = d(a3 = E3(s3, a3, "constant")), a3.length, s3.push(p4));
          var i4 = new u3(0 | t3._crypto_core_hsalsa20_outputbytes()), v4 = i4.address;
          if (s3.push(v4), 0 == (0 | t3._crypto_core_hsalsa20(v4, n3, o3, p4))) {
            var m3 = y3(i4, _4);
            return g3(s3), m3;
          }
          b3(s3, "invalid usage");
        }
        function Be(e4, r3, a3) {
          var _4 = [];
          l2(a3), e4 = E3(_4, e4, "p");
          var s3, n3 = 0 | t3._crypto_core_ristretto255_bytes();
          e4.length !== n3 && f(_4, "invalid p length"), s3 = d(e4), _4.push(s3), r3 = E3(_4, r3, "q");
          var c3, o3 = 0 | t3._crypto_core_ristretto255_bytes();
          r3.length !== o3 && f(_4, "invalid q length"), c3 = d(r3), _4.push(c3);
          var h3 = new u3(0 | t3._crypto_core_ristretto255_bytes()), p4 = h3.address;
          if (_4.push(p4), 0 == (0 | t3._crypto_core_ristretto255_add(p4, s3, c3))) {
            var i4 = y3(h3, a3);
            return g3(_4), i4;
          }
          b3(_4, "input is an invalid element");
        }
        function Ae2(e4, r3) {
          var a3 = [];
          l2(r3);
          var _4 = d(e4 = E3(a3, e4, "r"));
          e4.length, a3.push(_4);
          var s3 = new u3(0 | t3._crypto_core_ristretto255_bytes()), n3 = s3.address;
          if (a3.push(n3), 0 == (0 | t3._crypto_core_ristretto255_from_hash(n3, _4))) {
            var c3 = y3(s3, r3);
            return g3(a3), c3;
          }
          b3(a3, "invalid usage");
        }
        function Ke(e4, r3) {
          var a3 = [];
          l2(r3), e4 = E3(a3, e4, "repr");
          var _4, s3 = 0 | t3._crypto_core_ristretto255_bytes();
          e4.length !== s3 && f(a3, "invalid repr length"), _4 = d(e4), a3.push(_4);
          var n3 = 1 == (0 | t3._crypto_core_ristretto255_is_valid_point(_4));
          return g3(a3), n3;
        }
        function Me(e4) {
          var r3 = [];
          l2(e4);
          var a3 = new u3(0 | t3._crypto_core_ristretto255_bytes()), _4 = a3.address;
          r3.push(_4), t3._crypto_core_ristretto255_random(_4);
          var s3 = y3(a3, e4);
          return g3(r3), s3;
        }
        function Ie(e4, r3, a3) {
          var _4 = [];
          l2(a3), e4 = E3(_4, e4, "x");
          var s3, n3 = 0 | t3._crypto_core_ristretto255_scalarbytes();
          e4.length !== n3 && f(_4, "invalid x length"), s3 = d(e4), _4.push(s3), r3 = E3(_4, r3, "y");
          var c3, o3 = 0 | t3._crypto_core_ristretto255_scalarbytes();
          r3.length !== o3 && f(_4, "invalid y length"), c3 = d(r3), _4.push(c3);
          var h3 = new u3(0 | t3._crypto_core_ristretto255_scalarbytes()), p4 = h3.address;
          _4.push(p4), t3._crypto_core_ristretto255_scalar_add(p4, s3, c3);
          var i4 = y3(h3, a3);
          return g3(_4), i4;
        }
        function Ne2(e4, r3) {
          var a3 = [];
          l2(r3), e4 = E3(a3, e4, "s");
          var _4, s3 = 0 | t3._crypto_core_ristretto255_scalarbytes();
          e4.length !== s3 && f(a3, "invalid s length"), _4 = d(e4), a3.push(_4);
          var n3 = new u3(0 | t3._crypto_core_ristretto255_scalarbytes()), c3 = n3.address;
          a3.push(c3), t3._crypto_core_ristretto255_scalar_complement(c3, _4);
          var o3 = y3(n3, r3);
          return g3(a3), o3;
        }
        function Le(e4, r3) {
          var a3 = [];
          l2(r3), e4 = E3(a3, e4, "s");
          var _4, s3 = 0 | t3._crypto_core_ristretto255_scalarbytes();
          e4.length !== s3 && f(a3, "invalid s length"), _4 = d(e4), a3.push(_4);
          var n3 = new u3(0 | t3._crypto_core_ristretto255_scalarbytes()), c3 = n3.address;
          if (a3.push(c3), 0 == (0 | t3._crypto_core_ristretto255_scalar_invert(c3, _4))) {
            var o3 = y3(n3, r3);
            return g3(a3), o3;
          }
          b3(a3, "invalid reciprocate");
        }
        function Ue(e4, r3, a3) {
          var _4 = [];
          l2(a3), e4 = E3(_4, e4, "x");
          var s3, n3 = 0 | t3._crypto_core_ristretto255_scalarbytes();
          e4.length !== n3 && f(_4, "invalid x length"), s3 = d(e4), _4.push(s3), r3 = E3(_4, r3, "y");
          var c3, o3 = 0 | t3._crypto_core_ristretto255_scalarbytes();
          r3.length !== o3 && f(_4, "invalid y length"), c3 = d(r3), _4.push(c3);
          var h3 = new u3(0 | t3._crypto_core_ristretto255_scalarbytes()), p4 = h3.address;
          _4.push(p4), t3._crypto_core_ristretto255_scalar_mul(p4, s3, c3);
          var i4 = y3(h3, a3);
          return g3(_4), i4;
        }
        function Oe2(e4, r3) {
          var a3 = [];
          l2(r3), e4 = E3(a3, e4, "s");
          var _4, s3 = 0 | t3._crypto_core_ristretto255_scalarbytes();
          e4.length !== s3 && f(a3, "invalid s length"), _4 = d(e4), a3.push(_4);
          var n3 = new u3(0 | t3._crypto_core_ristretto255_scalarbytes()), c3 = n3.address;
          a3.push(c3), t3._crypto_core_ristretto255_scalar_negate(c3, _4);
          var o3 = y3(n3, r3);
          return g3(a3), o3;
        }
        function Ce2(e4) {
          var r3 = [];
          l2(e4);
          var a3 = new u3(0 | t3._crypto_core_ristretto255_scalarbytes()), _4 = a3.address;
          r3.push(_4), t3._crypto_core_ristretto255_scalar_random(_4);
          var s3 = y3(a3, e4);
          return g3(r3), s3;
        }
        function Re(e4, r3) {
          var a3 = [];
          l2(r3), e4 = E3(a3, e4, "sample");
          var _4, s3 = 0 | t3._crypto_core_ristretto255_nonreducedscalarbytes();
          e4.length !== s3 && f(a3, "invalid sample length"), _4 = d(e4), a3.push(_4);
          var n3 = new u3(0 | t3._crypto_core_ristretto255_scalarbytes()), c3 = n3.address;
          a3.push(c3), t3._crypto_core_ristretto255_scalar_reduce(c3, _4);
          var o3 = y3(n3, r3);
          return g3(a3), o3;
        }
        function Pe(e4, r3, a3) {
          var _4 = [];
          l2(a3), e4 = E3(_4, e4, "x");
          var s3, n3 = 0 | t3._crypto_core_ristretto255_scalarbytes();
          e4.length !== n3 && f(_4, "invalid x length"), s3 = d(e4), _4.push(s3), r3 = E3(_4, r3, "y");
          var c3, o3 = 0 | t3._crypto_core_ristretto255_scalarbytes();
          r3.length !== o3 && f(_4, "invalid y length"), c3 = d(r3), _4.push(c3);
          var h3 = new u3(0 | t3._crypto_core_ristretto255_scalarbytes()), p4 = h3.address;
          _4.push(p4), t3._crypto_core_ristretto255_scalar_sub(p4, s3, c3);
          var i4 = y3(h3, a3);
          return g3(_4), i4;
        }
        function Ge(e4, r3, a3) {
          var _4 = [];
          l2(a3), e4 = E3(_4, e4, "p");
          var s3, n3 = 0 | t3._crypto_core_ristretto255_bytes();
          e4.length !== n3 && f(_4, "invalid p length"), s3 = d(e4), _4.push(s3), r3 = E3(_4, r3, "q");
          var c3, o3 = 0 | t3._crypto_core_ristretto255_bytes();
          r3.length !== o3 && f(_4, "invalid q length"), c3 = d(r3), _4.push(c3);
          var h3 = new u3(0 | t3._crypto_core_ristretto255_bytes()), p4 = h3.address;
          if (_4.push(p4), 0 == (0 | t3._crypto_core_ristretto255_sub(p4, s3, c3))) {
            var i4 = y3(h3, a3);
            return g3(_4), i4;
          }
          b3(_4, "input is an invalid element");
        }
        function Xe(e4, r3, a3, _4) {
          var s3 = [];
          l2(_4), m2(s3, e4, "hash_length"), ("number" != typeof e4 || (0 | e4) !== e4 || e4 < 0) && f(s3, "hash_length must be an unsigned integer");
          var n3 = d(r3 = E3(s3, r3, "message")), c3 = r3.length;
          s3.push(n3);
          var o3 = null, h3 = 0;
          null != a3 && (o3 = d(a3 = E3(s3, a3, "key")), h3 = a3.length, s3.push(o3));
          var p4 = new u3(e4 |= 0), i4 = p4.address;
          if (s3.push(i4), 0 == (0 | t3._crypto_generichash(i4, e4, n3, c3, 0, o3, h3))) {
            var v4 = y3(p4, _4);
            return g3(s3), v4;
          }
          b3(s3, "invalid usage");
        }
        function De2(e4, r3, a3, _4, s3) {
          var n3 = [];
          l2(s3), m2(n3, e4, "subkey_len"), ("number" != typeof e4 || (0 | e4) !== e4 || e4 < 0) && f(n3, "subkey_len must be an unsigned integer");
          var c3 = null, o3 = 0;
          null != r3 && (c3 = d(r3 = E3(n3, r3, "key")), o3 = r3.length, n3.push(c3));
          var h3 = null, p4 = 0;
          null != a3 && (a3 = E3(n3, a3, "id"), p4 = 0 | t3._crypto_generichash_blake2b_saltbytes(), a3.length !== p4 && f(n3, "invalid id length"), h3 = d(a3), n3.push(h3));
          var i4 = null, v4 = 0;
          null != _4 && (_4 = E3(n3, _4, "ctx"), v4 = 0 | t3._crypto_generichash_blake2b_personalbytes(), _4.length !== v4 && f(n3, "invalid ctx length"), i4 = d(_4), n3.push(i4));
          var x4 = new u3(0 | e4), k4 = x4.address;
          if (n3.push(k4), 0 == (0 | t3._crypto_generichash_blake2b_salt_personal(k4, e4, null, 0, 0, c3, o3, h3, i4))) {
            var S4 = y3(x4, s3);
            return g3(n3), S4;
          }
          b3(n3, "invalid usage");
        }
        function Fe(e4, r3, a3) {
          var _4 = [];
          l2(a3), m2(_4, e4, "state_address"), m2(_4, r3, "hash_length"), ("number" != typeof r3 || (0 | r3) !== r3 || r3 < 0) && f(_4, "hash_length must be an unsigned integer");
          var s3 = new u3(r3 |= 0), n3 = s3.address;
          if (_4.push(n3), 0 == (0 | t3._crypto_generichash_final(e4, n3, r3))) {
            var c3 = (t3._free(e4), y3(s3, a3));
            return g3(_4), c3;
          }
          b3(_4, "invalid usage");
        }
        function Ve(e4, r3, a3) {
          var _4 = [];
          l2(a3);
          var s3 = null, n3 = 0;
          null != e4 && (s3 = d(e4 = E3(_4, e4, "key")), n3 = e4.length, _4.push(s3)), m2(_4, r3, "hash_length"), ("number" != typeof r3 || (0 | r3) !== r3 || r3 < 0) && f(_4, "hash_length must be an unsigned integer");
          var c3 = new u3(357).address;
          if (0 == (0 | t3._crypto_generichash_init(c3, s3, n3, r3))) {
            var o3 = c3;
            return g3(_4), o3;
          }
          b3(_4, "invalid usage");
        }
        function He(e4) {
          var r3 = [];
          l2(e4);
          var a3 = new u3(0 | t3._crypto_generichash_keybytes()), _4 = a3.address;
          r3.push(_4), t3._crypto_generichash_keygen(_4);
          var s3 = y3(a3, e4);
          return g3(r3), s3;
        }
        function qe2(e4, r3, a3) {
          var _4 = [];
          l2(a3), m2(_4, e4, "state_address");
          var s3 = d(r3 = E3(_4, r3, "message_chunk")), n3 = r3.length;
          _4.push(s3), 0 != (0 | t3._crypto_generichash_update(e4, s3, n3)) && b3(_4, "invalid usage"), g3(_4);
        }
        function je2(e4, r3) {
          var a3 = [];
          l2(r3);
          var _4 = d(e4 = E3(a3, e4, "message")), s3 = e4.length;
          a3.push(_4);
          var n3 = new u3(0 | t3._crypto_hash_bytes()), c3 = n3.address;
          if (a3.push(c3), 0 == (0 | t3._crypto_hash(c3, _4, s3, 0))) {
            var o3 = y3(n3, r3);
            return g3(a3), o3;
          }
          b3(a3, "invalid usage");
        }
        function ze(e4, r3) {
          var a3 = [];
          l2(r3);
          var _4 = d(e4 = E3(a3, e4, "message")), s3 = e4.length;
          a3.push(_4);
          var n3 = new u3(0 | t3._crypto_hash_sha256_bytes()), c3 = n3.address;
          if (a3.push(c3), 0 == (0 | t3._crypto_hash_sha256(c3, _4, s3, 0))) {
            var o3 = y3(n3, r3);
            return g3(a3), o3;
          }
          b3(a3, "invalid usage");
        }
        function We(e4, r3) {
          var a3 = [];
          l2(r3), m2(a3, e4, "state_address");
          var _4 = new u3(0 | t3._crypto_hash_sha256_bytes()), s3 = _4.address;
          if (a3.push(s3), 0 == (0 | t3._crypto_hash_sha256_final(e4, s3))) {
            var n3 = (t3._free(e4), y3(_4, r3));
            return g3(a3), n3;
          }
          b3(a3, "invalid usage");
        }
        function Je(e4) {
          var r3 = [];
          l2(e4);
          var a3 = new u3(104).address;
          if (0 == (0 | t3._crypto_hash_sha256_init(a3))) {
            var _4 = a3;
            return g3(r3), _4;
          }
          b3(r3, "invalid usage");
        }
        function Qe(e4, r3, a3) {
          var _4 = [];
          l2(a3), m2(_4, e4, "state_address");
          var s3 = d(r3 = E3(_4, r3, "message_chunk")), n3 = r3.length;
          _4.push(s3), 0 != (0 | t3._crypto_hash_sha256_update(e4, s3, n3)) && b3(_4, "invalid usage"), g3(_4);
        }
        function Ze(e4, r3) {
          var a3 = [];
          l2(r3);
          var _4 = d(e4 = E3(a3, e4, "message")), s3 = e4.length;
          a3.push(_4);
          var n3 = new u3(0 | t3._crypto_hash_sha512_bytes()), c3 = n3.address;
          if (a3.push(c3), 0 == (0 | t3._crypto_hash_sha512(c3, _4, s3, 0))) {
            var o3 = y3(n3, r3);
            return g3(a3), o3;
          }
          b3(a3, "invalid usage");
        }
        function $e(e4, r3) {
          var a3 = [];
          l2(r3), m2(a3, e4, "state_address");
          var _4 = new u3(0 | t3._crypto_hash_sha512_bytes()), s3 = _4.address;
          if (a3.push(s3), 0 == (0 | t3._crypto_hash_sha512_final(e4, s3))) {
            var n3 = (t3._free(e4), y3(_4, r3));
            return g3(a3), n3;
          }
          b3(a3, "invalid usage");
        }
        function er(e4) {
          var r3 = [];
          l2(e4);
          var a3 = new u3(208).address;
          if (0 == (0 | t3._crypto_hash_sha512_init(a3))) {
            var _4 = a3;
            return g3(r3), _4;
          }
          b3(r3, "invalid usage");
        }
        function rr(e4, r3, a3) {
          var _4 = [];
          l2(a3), m2(_4, e4, "state_address");
          var s3 = d(r3 = E3(_4, r3, "message_chunk")), n3 = r3.length;
          _4.push(s3), 0 != (0 | t3._crypto_hash_sha512_update(e4, s3, n3)) && b3(_4, "invalid usage"), g3(_4);
        }
        function tr(e4, r3, a3, _4, n3) {
          var c3 = [];
          l2(n3), m2(c3, e4, "subkey_len"), ("number" != typeof e4 || (0 | e4) !== e4 || e4 < 0) && f(c3, "subkey_len must be an unsigned integer"), m2(c3, r3, "subkey_id"), ("number" != typeof r3 || (0 | r3) !== r3 || r3 < 0) && f(c3, "subkey_id must be an unsigned integer"), "string" != typeof a3 && f(c3, "ctx must be a string"), a3 = s2(a3 + "\0"), null != h3 && a3.length - 1 !== h3 && f(c3, "invalid ctx length");
          var o3 = d(a3), h3 = a3.length - 1;
          c3.push(o3), _4 = E3(c3, _4, "key");
          var p4, i4 = 0 | t3._crypto_kdf_keybytes();
          _4.length !== i4 && f(c3, "invalid key length"), p4 = d(_4), c3.push(p4);
          var v4 = new u3(0 | e4), b4 = v4.address;
          c3.push(b4), t3._crypto_kdf_derive_from_key(b4, e4, r3, r3 >>> 24 >>> 8, o3, p4);
          var x4 = y3(v4, n3);
          return g3(c3), x4;
        }
        function ar(e4) {
          var r3 = [];
          l2(e4);
          var a3 = new u3(0 | t3._crypto_kdf_keybytes()), _4 = a3.address;
          r3.push(_4), t3._crypto_kdf_keygen(_4);
          var s3 = y3(a3, e4);
          return g3(r3), s3;
        }
        function _r(e4, r3, a3, _4) {
          var s3 = [];
          l2(_4), e4 = E3(s3, e4, "clientPublicKey");
          var n3, c3 = 0 | t3._crypto_kx_publickeybytes();
          e4.length !== c3 && f(s3, "invalid clientPublicKey length"), n3 = d(e4), s3.push(n3), r3 = E3(s3, r3, "clientSecretKey");
          var o3, h3 = 0 | t3._crypto_kx_secretkeybytes();
          r3.length !== h3 && f(s3, "invalid clientSecretKey length"), o3 = d(r3), s3.push(o3), a3 = E3(s3, a3, "serverPublicKey");
          var p4, i4 = 0 | t3._crypto_kx_publickeybytes();
          a3.length !== i4 && f(s3, "invalid serverPublicKey length"), p4 = d(a3), s3.push(p4);
          var v4 = new u3(0 | t3._crypto_kx_sessionkeybytes()), m3 = v4.address;
          s3.push(m3);
          var x4 = new u3(0 | t3._crypto_kx_sessionkeybytes()), k4 = x4.address;
          if (s3.push(k4), 0 == (0 | t3._crypto_kx_client_session_keys(m3, k4, n3, o3, p4))) {
            var S4 = y3({ sharedRx: v4, sharedTx: x4 }, _4);
            return g3(s3), S4;
          }
          b3(s3, "invalid usage");
        }
        function sr(e4) {
          var r3 = [];
          l2(e4);
          var a3 = new u3(0 | t3._crypto_kx_publickeybytes()), _4 = a3.address;
          r3.push(_4);
          var s3 = new u3(0 | t3._crypto_kx_secretkeybytes()), n3 = s3.address;
          if (r3.push(n3), 0 == (0 | t3._crypto_kx_keypair(_4, n3))) {
            var c3 = { publicKey: y3(a3, e4), privateKey: y3(s3, e4), keyType: "x25519" };
            return g3(r3), c3;
          }
          b3(r3, "internal error");
        }
        function nr(e4, r3) {
          var a3 = [];
          l2(r3), e4 = E3(a3, e4, "seed");
          var _4, s3 = 0 | t3._crypto_kx_seedbytes();
          e4.length !== s3 && f(a3, "invalid seed length"), _4 = d(e4), a3.push(_4);
          var n3 = new u3(0 | t3._crypto_kx_publickeybytes()), c3 = n3.address;
          a3.push(c3);
          var o3 = new u3(0 | t3._crypto_kx_secretkeybytes()), h3 = o3.address;
          if (a3.push(h3), 0 == (0 | t3._crypto_kx_seed_keypair(c3, h3, _4))) {
            var p4 = { publicKey: y3(n3, r3), privateKey: y3(o3, r3), keyType: "x25519" };
            return g3(a3), p4;
          }
          b3(a3, "internal error");
        }
        function cr(e4, r3, a3, _4) {
          var s3 = [];
          l2(_4), e4 = E3(s3, e4, "serverPublicKey");
          var n3, c3 = 0 | t3._crypto_kx_publickeybytes();
          e4.length !== c3 && f(s3, "invalid serverPublicKey length"), n3 = d(e4), s3.push(n3), r3 = E3(s3, r3, "serverSecretKey");
          var o3, h3 = 0 | t3._crypto_kx_secretkeybytes();
          r3.length !== h3 && f(s3, "invalid serverSecretKey length"), o3 = d(r3), s3.push(o3), a3 = E3(s3, a3, "clientPublicKey");
          var p4, i4 = 0 | t3._crypto_kx_publickeybytes();
          a3.length !== i4 && f(s3, "invalid clientPublicKey length"), p4 = d(a3), s3.push(p4);
          var v4 = new u3(0 | t3._crypto_kx_sessionkeybytes()), m3 = v4.address;
          s3.push(m3);
          var x4 = new u3(0 | t3._crypto_kx_sessionkeybytes()), k4 = x4.address;
          if (s3.push(k4), 0 == (0 | t3._crypto_kx_server_session_keys(m3, k4, n3, o3, p4))) {
            var S4 = y3({ sharedRx: v4, sharedTx: x4 }, _4);
            return g3(s3), S4;
          }
          b3(s3, "invalid usage");
        }
        function or(e4, r3, a3) {
          var _4 = [];
          l2(a3);
          var s3 = d(e4 = E3(_4, e4, "message")), n3 = e4.length;
          _4.push(s3), r3 = E3(_4, r3, "key");
          var c3, o3 = 0 | t3._crypto_onetimeauth_keybytes();
          r3.length !== o3 && f(_4, "invalid key length"), c3 = d(r3), _4.push(c3);
          var h3 = new u3(0 | t3._crypto_onetimeauth_bytes()), p4 = h3.address;
          if (_4.push(p4), 0 == (0 | t3._crypto_onetimeauth(p4, s3, n3, 0, c3))) {
            var i4 = y3(h3, a3);
            return g3(_4), i4;
          }
          b3(_4, "invalid usage");
        }
        function hr(e4, r3) {
          var a3 = [];
          l2(r3), m2(a3, e4, "state_address");
          var _4 = new u3(0 | t3._crypto_onetimeauth_bytes()), s3 = _4.address;
          if (a3.push(s3), 0 == (0 | t3._crypto_onetimeauth_final(e4, s3))) {
            var n3 = (t3._free(e4), y3(_4, r3));
            return g3(a3), n3;
          }
          b3(a3, "invalid usage");
        }
        function pr(e4, r3) {
          var a3 = [];
          l2(r3);
          var _4 = null;
          null != e4 && (_4 = d(e4 = E3(a3, e4, "key")), e4.length, a3.push(_4));
          var s3 = new u3(144).address;
          if (0 == (0 | t3._crypto_onetimeauth_init(s3, _4))) {
            var n3 = s3;
            return g3(a3), n3;
          }
          b3(a3, "invalid usage");
        }
        function yr(e4) {
          var r3 = [];
          l2(e4);
          var a3 = new u3(0 | t3._crypto_onetimeauth_keybytes()), _4 = a3.address;
          r3.push(_4), t3._crypto_onetimeauth_keygen(_4);
          var s3 = y3(a3, e4);
          return g3(r3), s3;
        }
        function ir(e4, r3, a3) {
          var _4 = [];
          l2(a3), m2(_4, e4, "state_address");
          var s3 = d(r3 = E3(_4, r3, "message_chunk")), n3 = r3.length;
          _4.push(s3), 0 != (0 | t3._crypto_onetimeauth_update(e4, s3, n3)) && b3(_4, "invalid usage"), g3(_4);
        }
        function lr(e4, r3, a3) {
          var _4 = [];
          e4 = E3(_4, e4, "hash");
          var s3, n3 = 0 | t3._crypto_onetimeauth_bytes();
          e4.length !== n3 && f(_4, "invalid hash length"), s3 = d(e4), _4.push(s3);
          var c3 = d(r3 = E3(_4, r3, "message")), o3 = r3.length;
          _4.push(c3), a3 = E3(_4, a3, "key");
          var h3, p4 = 0 | t3._crypto_onetimeauth_keybytes();
          a3.length !== p4 && f(_4, "invalid key length"), h3 = d(a3), _4.push(h3);
          var y4 = 0 == (0 | t3._crypto_onetimeauth_verify(s3, c3, o3, 0, h3));
          return g3(_4), y4;
        }
        function ur(e4, r3, a3, _4, s3, n3, c3) {
          var o3 = [];
          l2(c3), m2(o3, e4, "keyLength"), ("number" != typeof e4 || (0 | e4) !== e4 || e4 < 0) && f(o3, "keyLength must be an unsigned integer");
          var h3 = d(r3 = E3(o3, r3, "password")), p4 = r3.length;
          o3.push(h3), a3 = E3(o3, a3, "salt");
          var i4, v4 = 0 | t3._crypto_pwhash_saltbytes();
          a3.length !== v4 && f(o3, "invalid salt length"), i4 = d(a3), o3.push(i4), m2(o3, _4, "opsLimit"), ("number" != typeof _4 || (0 | _4) !== _4 || _4 < 0) && f(o3, "opsLimit must be an unsigned integer"), m2(o3, s3, "memLimit"), ("number" != typeof s3 || (0 | s3) !== s3 || s3 < 0) && f(o3, "memLimit must be an unsigned integer"), m2(o3, n3, "algorithm"), ("number" != typeof n3 || (0 | n3) !== n3 || n3 < 0) && f(o3, "algorithm must be an unsigned integer");
          var x4 = new u3(0 | e4), k4 = x4.address;
          if (o3.push(k4), 0 == (0 | t3._crypto_pwhash(k4, e4, 0, h3, p4, 0, i4, _4, 0, s3, n3))) {
            var S4 = y3(x4, c3);
            return g3(o3), S4;
          }
          b3(o3, "invalid usage");
        }
        function dr(e4, r3, a3, _4, s3, n3) {
          var c3 = [];
          l2(n3), m2(c3, e4, "keyLength"), ("number" != typeof e4 || (0 | e4) !== e4 || e4 < 0) && f(c3, "keyLength must be an unsigned integer");
          var o3 = d(r3 = E3(c3, r3, "password")), h3 = r3.length;
          c3.push(o3), a3 = E3(c3, a3, "salt");
          var p4, i4 = 0 | t3._crypto_pwhash_scryptsalsa208sha256_saltbytes();
          a3.length !== i4 && f(c3, "invalid salt length"), p4 = d(a3), c3.push(p4), m2(c3, _4, "opsLimit"), ("number" != typeof _4 || (0 | _4) !== _4 || _4 < 0) && f(c3, "opsLimit must be an unsigned integer"), m2(c3, s3, "memLimit"), ("number" != typeof s3 || (0 | s3) !== s3 || s3 < 0) && f(c3, "memLimit must be an unsigned integer");
          var v4 = new u3(0 | e4), x4 = v4.address;
          if (c3.push(x4), 0 == (0 | t3._crypto_pwhash_scryptsalsa208sha256(x4, e4, 0, o3, h3, 0, p4, _4, 0, s3))) {
            var k4 = y3(v4, n3);
            return g3(c3), k4;
          }
          b3(c3, "invalid usage");
        }
        function vr(e4, r3, a3, _4, s3, n3, c3) {
          var o3 = [];
          l2(c3);
          var h3 = d(e4 = E3(o3, e4, "password")), p4 = e4.length;
          o3.push(h3);
          var i4 = d(r3 = E3(o3, r3, "salt")), v4 = r3.length;
          o3.push(i4), m2(o3, a3, "opsLimit"), ("number" != typeof a3 || (0 | a3) !== a3 || a3 < 0) && f(o3, "opsLimit must be an unsigned integer"), m2(o3, _4, "r"), ("number" != typeof _4 || (0 | _4) !== _4 || _4 < 0) && f(o3, "r must be an unsigned integer"), m2(o3, s3, "p"), ("number" != typeof s3 || (0 | s3) !== s3 || s3 < 0) && f(o3, "p must be an unsigned integer"), m2(o3, n3, "keyLength"), ("number" != typeof n3 || (0 | n3) !== n3 || n3 < 0) && f(o3, "keyLength must be an unsigned integer");
          var x4 = new u3(0 | n3), k4 = x4.address;
          if (o3.push(k4), 0 == (0 | t3._crypto_pwhash_scryptsalsa208sha256_ll(h3, p4, i4, v4, a3, 0, _4, s3, k4, n3))) {
            var S4 = y3(x4, c3);
            return g3(o3), S4;
          }
          b3(o3, "invalid usage");
        }
        function gr(e4, r3, a3, _4) {
          var s3 = [];
          l2(_4);
          var n3 = d(e4 = E3(s3, e4, "password")), c3 = e4.length;
          s3.push(n3), m2(s3, r3, "opsLimit"), ("number" != typeof r3 || (0 | r3) !== r3 || r3 < 0) && f(s3, "opsLimit must be an unsigned integer"), m2(s3, a3, "memLimit"), ("number" != typeof a3 || (0 | a3) !== a3 || a3 < 0) && f(s3, "memLimit must be an unsigned integer");
          var o3 = new u3(0 | t3._crypto_pwhash_scryptsalsa208sha256_strbytes()).address;
          if (s3.push(o3), 0 == (0 | t3._crypto_pwhash_scryptsalsa208sha256_str(o3, n3, c3, 0, r3, 0, a3))) {
            var h3 = t3.UTF8ToString(o3);
            return g3(s3), h3;
          }
          b3(s3, "invalid usage");
        }
        function br(e4, r3, a3) {
          var _4 = [];
          l2(a3), "string" != typeof e4 && f(_4, "hashed_password must be a string"), e4 = s2(e4 + "\0"), null != c3 && e4.length - 1 !== c3 && f(_4, "invalid hashed_password length");
          var n3 = d(e4), c3 = e4.length - 1;
          _4.push(n3);
          var o3 = d(r3 = E3(_4, r3, "password")), h3 = r3.length;
          _4.push(o3);
          var p4 = 0 == (0 | t3._crypto_pwhash_scryptsalsa208sha256_str_verify(n3, o3, h3, 0));
          return g3(_4), p4;
        }
        function fr(e4, r3, a3, _4) {
          var s3 = [];
          l2(_4);
          var n3 = d(e4 = E3(s3, e4, "password")), c3 = e4.length;
          s3.push(n3), m2(s3, r3, "opsLimit"), ("number" != typeof r3 || (0 | r3) !== r3 || r3 < 0) && f(s3, "opsLimit must be an unsigned integer"), m2(s3, a3, "memLimit"), ("number" != typeof a3 || (0 | a3) !== a3 || a3 < 0) && f(s3, "memLimit must be an unsigned integer");
          var o3 = new u3(0 | t3._crypto_pwhash_strbytes()).address;
          if (s3.push(o3), 0 == (0 | t3._crypto_pwhash_str(o3, n3, c3, 0, r3, 0, a3))) {
            var h3 = t3.UTF8ToString(o3);
            return g3(s3), h3;
          }
          b3(s3, "invalid usage");
        }
        function mr(e4, r3, a3, _4) {
          var n3 = [];
          l2(_4), "string" != typeof e4 && f(n3, "hashed_password must be a string"), e4 = s2(e4 + "\0"), null != o3 && e4.length - 1 !== o3 && f(n3, "invalid hashed_password length");
          var c3 = d(e4), o3 = e4.length - 1;
          n3.push(c3), m2(n3, r3, "opsLimit"), ("number" != typeof r3 || (0 | r3) !== r3 || r3 < 0) && f(n3, "opsLimit must be an unsigned integer"), m2(n3, a3, "memLimit"), ("number" != typeof a3 || (0 | a3) !== a3 || a3 < 0) && f(n3, "memLimit must be an unsigned integer");
          var h3 = 0 != (0 | t3._crypto_pwhash_str_needs_rehash(c3, r3, 0, a3));
          return g3(n3), h3;
        }
        function Er(e4, r3, a3) {
          var _4 = [];
          l2(a3), "string" != typeof e4 && f(_4, "hashed_password must be a string"), e4 = s2(e4 + "\0"), null != c3 && e4.length - 1 !== c3 && f(_4, "invalid hashed_password length");
          var n3 = d(e4), c3 = e4.length - 1;
          _4.push(n3);
          var o3 = d(r3 = E3(_4, r3, "password")), h3 = r3.length;
          _4.push(o3);
          var p4 = 0 == (0 | t3._crypto_pwhash_str_verify(n3, o3, h3, 0));
          return g3(_4), p4;
        }
        function xr(e4, r3, a3) {
          var _4 = [];
          l2(a3), e4 = E3(_4, e4, "privateKey");
          var s3, n3 = 0 | t3._crypto_scalarmult_scalarbytes();
          e4.length !== n3 && f(_4, "invalid privateKey length"), s3 = d(e4), _4.push(s3), r3 = E3(_4, r3, "publicKey");
          var c3, o3 = 0 | t3._crypto_scalarmult_bytes();
          r3.length !== o3 && f(_4, "invalid publicKey length"), c3 = d(r3), _4.push(c3);
          var h3 = new u3(0 | t3._crypto_scalarmult_bytes()), p4 = h3.address;
          if (_4.push(p4), 0 == (0 | t3._crypto_scalarmult(p4, s3, c3))) {
            var i4 = y3(h3, a3);
            return g3(_4), i4;
          }
          b3(_4, "weak public key");
        }
        function kr(e4, r3) {
          var a3 = [];
          l2(r3), e4 = E3(a3, e4, "privateKey");
          var _4, s3 = 0 | t3._crypto_scalarmult_scalarbytes();
          e4.length !== s3 && f(a3, "invalid privateKey length"), _4 = d(e4), a3.push(_4);
          var n3 = new u3(0 | t3._crypto_scalarmult_bytes()), c3 = n3.address;
          if (a3.push(c3), 0 == (0 | t3._crypto_scalarmult_base(c3, _4))) {
            var o3 = y3(n3, r3);
            return g3(a3), o3;
          }
          b3(a3, "unknown error");
        }
        function Sr(e4, r3, a3) {
          var _4 = [];
          l2(a3), e4 = E3(_4, e4, "n");
          var s3, n3 = 0 | t3._crypto_scalarmult_ed25519_scalarbytes();
          e4.length !== n3 && f(_4, "invalid n length"), s3 = d(e4), _4.push(s3), r3 = E3(_4, r3, "p");
          var c3, o3 = 0 | t3._crypto_scalarmult_ed25519_bytes();
          r3.length !== o3 && f(_4, "invalid p length"), c3 = d(r3), _4.push(c3);
          var h3 = new u3(0 | t3._crypto_scalarmult_ed25519_bytes()), p4 = h3.address;
          if (_4.push(p4), 0 == (0 | t3._crypto_scalarmult_ed25519(p4, s3, c3))) {
            var i4 = y3(h3, a3);
            return g3(_4), i4;
          }
          b3(_4, "invalid point or scalar is 0");
        }
        function Tr(e4, r3) {
          var a3 = [];
          l2(r3), e4 = E3(a3, e4, "scalar");
          var _4, s3 = 0 | t3._crypto_scalarmult_ed25519_scalarbytes();
          e4.length !== s3 && f(a3, "invalid scalar length"), _4 = d(e4), a3.push(_4);
          var n3 = new u3(0 | t3._crypto_scalarmult_ed25519_bytes()), c3 = n3.address;
          if (a3.push(c3), 0 == (0 | t3._crypto_scalarmult_ed25519_base(c3, _4))) {
            var o3 = y3(n3, r3);
            return g3(a3), o3;
          }
          b3(a3, "scalar is 0");
        }
        function wr(e4, r3) {
          var a3 = [];
          l2(r3), e4 = E3(a3, e4, "scalar");
          var _4, s3 = 0 | t3._crypto_scalarmult_ed25519_scalarbytes();
          e4.length !== s3 && f(a3, "invalid scalar length"), _4 = d(e4), a3.push(_4);
          var n3 = new u3(0 | t3._crypto_scalarmult_ed25519_bytes()), c3 = n3.address;
          if (a3.push(c3), 0 == (0 | t3._crypto_scalarmult_ed25519_base_noclamp(c3, _4))) {
            var o3 = y3(n3, r3);
            return g3(a3), o3;
          }
          b3(a3, "scalar is 0");
        }
        function Yr(e4, r3, a3) {
          var _4 = [];
          l2(a3), e4 = E3(_4, e4, "n");
          var s3, n3 = 0 | t3._crypto_scalarmult_ed25519_scalarbytes();
          e4.length !== n3 && f(_4, "invalid n length"), s3 = d(e4), _4.push(s3), r3 = E3(_4, r3, "p");
          var c3, o3 = 0 | t3._crypto_scalarmult_ed25519_bytes();
          r3.length !== o3 && f(_4, "invalid p length"), c3 = d(r3), _4.push(c3);
          var h3 = new u3(0 | t3._crypto_scalarmult_ed25519_bytes()), p4 = h3.address;
          if (_4.push(p4), 0 == (0 | t3._crypto_scalarmult_ed25519_noclamp(p4, s3, c3))) {
            var i4 = y3(h3, a3);
            return g3(_4), i4;
          }
          b3(_4, "invalid point or scalar is 0");
        }
        function Br(e4, r3, a3) {
          var _4 = [];
          l2(a3), e4 = E3(_4, e4, "scalar");
          var s3, n3 = 0 | t3._crypto_scalarmult_ristretto255_scalarbytes();
          e4.length !== n3 && f(_4, "invalid scalar length"), s3 = d(e4), _4.push(s3), r3 = E3(_4, r3, "element");
          var c3, o3 = 0 | t3._crypto_scalarmult_ristretto255_bytes();
          r3.length !== o3 && f(_4, "invalid element length"), c3 = d(r3), _4.push(c3);
          var h3 = new u3(0 | t3._crypto_scalarmult_ristretto255_bytes()), p4 = h3.address;
          if (_4.push(p4), 0 == (0 | t3._crypto_scalarmult_ristretto255(p4, s3, c3))) {
            var i4 = y3(h3, a3);
            return g3(_4), i4;
          }
          b3(_4, "result is identity element");
        }
        function Ar(e4, r3) {
          var a3 = [];
          l2(r3), e4 = E3(a3, e4, "scalar");
          var _4, s3 = 0 | t3._crypto_core_ristretto255_scalarbytes();
          e4.length !== s3 && f(a3, "invalid scalar length"), _4 = d(e4), a3.push(_4);
          var n3 = new u3(0 | t3._crypto_core_ristretto255_bytes()), c3 = n3.address;
          if (a3.push(c3), 0 == (0 | t3._crypto_scalarmult_ristretto255_base(c3, _4))) {
            var o3 = y3(n3, r3);
            return g3(a3), o3;
          }
          b3(a3, "scalar is 0");
        }
        function Kr(e4, r3, a3, _4) {
          var s3 = [];
          l2(_4);
          var n3 = d(e4 = E3(s3, e4, "message")), c3 = e4.length;
          s3.push(n3), r3 = E3(s3, r3, "nonce");
          var o3, h3 = 0 | t3._crypto_secretbox_noncebytes();
          r3.length !== h3 && f(s3, "invalid nonce length"), o3 = d(r3), s3.push(o3), a3 = E3(s3, a3, "key");
          var p4, i4 = 0 | t3._crypto_secretbox_keybytes();
          a3.length !== i4 && f(s3, "invalid key length"), p4 = d(a3), s3.push(p4);
          var v4 = new u3(0 | c3), m3 = v4.address;
          s3.push(m3);
          var x4 = new u3(0 | t3._crypto_secretbox_macbytes()), k4 = x4.address;
          if (s3.push(k4), 0 == (0 | t3._crypto_secretbox_detached(m3, k4, n3, c3, 0, o3, p4))) {
            var S4 = y3({ mac: x4, cipher: v4 }, _4);
            return g3(s3), S4;
          }
          b3(s3, "invalid usage");
        }
        function Mr(e4, r3, a3, _4) {
          var s3 = [];
          l2(_4);
          var n3 = d(e4 = E3(s3, e4, "message")), c3 = e4.length;
          s3.push(n3), r3 = E3(s3, r3, "nonce");
          var o3, h3 = 0 | t3._crypto_secretbox_noncebytes();
          r3.length !== h3 && f(s3, "invalid nonce length"), o3 = d(r3), s3.push(o3), a3 = E3(s3, a3, "key");
          var p4, i4 = 0 | t3._crypto_secretbox_keybytes();
          a3.length !== i4 && f(s3, "invalid key length"), p4 = d(a3), s3.push(p4);
          var v4 = new u3(c3 + t3._crypto_secretbox_macbytes() | 0), m3 = v4.address;
          if (s3.push(m3), 0 == (0 | t3._crypto_secretbox_easy(m3, n3, c3, 0, o3, p4))) {
            var x4 = y3(v4, _4);
            return g3(s3), x4;
          }
          b3(s3, "invalid usage");
        }
        function Ir(e4) {
          var r3 = [];
          l2(e4);
          var a3 = new u3(0 | t3._crypto_secretbox_keybytes()), _4 = a3.address;
          r3.push(_4), t3._crypto_secretbox_keygen(_4);
          var s3 = y3(a3, e4);
          return g3(r3), s3;
        }
        function Nr(e4, r3, a3, _4, s3) {
          var n3 = [];
          l2(s3);
          var c3 = d(e4 = E3(n3, e4, "ciphertext")), o3 = e4.length;
          n3.push(c3), r3 = E3(n3, r3, "mac");
          var h3, p4 = 0 | t3._crypto_secretbox_macbytes();
          r3.length !== p4 && f(n3, "invalid mac length"), h3 = d(r3), n3.push(h3), a3 = E3(n3, a3, "nonce");
          var i4, v4 = 0 | t3._crypto_secretbox_noncebytes();
          a3.length !== v4 && f(n3, "invalid nonce length"), i4 = d(a3), n3.push(i4), _4 = E3(n3, _4, "key");
          var m3, x4 = 0 | t3._crypto_secretbox_keybytes();
          _4.length !== x4 && f(n3, "invalid key length"), m3 = d(_4), n3.push(m3);
          var k4 = new u3(0 | o3), S4 = k4.address;
          if (n3.push(S4), 0 == (0 | t3._crypto_secretbox_open_detached(S4, c3, h3, o3, 0, i4, m3))) {
            var T4 = y3(k4, s3);
            return g3(n3), T4;
          }
          b3(n3, "wrong secret key for the given ciphertext");
        }
        function Lr(e4, r3, a3, _4) {
          var s3 = [];
          l2(_4), e4 = E3(s3, e4, "ciphertext");
          var n3, c3 = t3._crypto_secretbox_macbytes(), o3 = e4.length;
          o3 < c3 && f(s3, "ciphertext is too short"), n3 = d(e4), s3.push(n3), r3 = E3(s3, r3, "nonce");
          var h3, p4 = 0 | t3._crypto_secretbox_noncebytes();
          r3.length !== p4 && f(s3, "invalid nonce length"), h3 = d(r3), s3.push(h3), a3 = E3(s3, a3, "key");
          var i4, v4 = 0 | t3._crypto_secretbox_keybytes();
          a3.length !== v4 && f(s3, "invalid key length"), i4 = d(a3), s3.push(i4);
          var m3 = new u3(o3 - t3._crypto_secretbox_macbytes() | 0), x4 = m3.address;
          if (s3.push(x4), 0 == (0 | t3._crypto_secretbox_open_easy(x4, n3, o3, 0, h3, i4))) {
            var k4 = y3(m3, _4);
            return g3(s3), k4;
          }
          b3(s3, "wrong secret key for the given ciphertext");
        }
        function Ur(e4, r3, a3) {
          var _4 = [];
          l2(a3), e4 = E3(_4, e4, "header");
          var s3, n3 = 0 | t3._crypto_secretstream_xchacha20poly1305_headerbytes();
          e4.length !== n3 && f(_4, "invalid header length"), s3 = d(e4), _4.push(s3), r3 = E3(_4, r3, "key");
          var c3, o3 = 0 | t3._crypto_secretstream_xchacha20poly1305_keybytes();
          r3.length !== o3 && f(_4, "invalid key length"), c3 = d(r3), _4.push(c3);
          var h3 = new u3(52).address;
          if (0 == (0 | t3._crypto_secretstream_xchacha20poly1305_init_pull(h3, s3, c3))) {
            var p4 = h3;
            return g3(_4), p4;
          }
          b3(_4, "invalid usage");
        }
        function Or(e4, r3) {
          var a3 = [];
          l2(r3), e4 = E3(a3, e4, "key");
          var _4, s3 = 0 | t3._crypto_secretstream_xchacha20poly1305_keybytes();
          e4.length !== s3 && f(a3, "invalid key length"), _4 = d(e4), a3.push(_4);
          var n3 = new u3(52).address, c3 = new u3(0 | t3._crypto_secretstream_xchacha20poly1305_headerbytes()), o3 = c3.address;
          if (a3.push(o3), 0 == (0 | t3._crypto_secretstream_xchacha20poly1305_init_push(n3, o3, _4))) {
            var h3 = { state: n3, header: y3(c3, r3) };
            return g3(a3), h3;
          }
          b3(a3, "invalid usage");
        }
        function Cr(e4) {
          var r3 = [];
          l2(e4);
          var a3 = new u3(0 | t3._crypto_secretstream_xchacha20poly1305_keybytes()), _4 = a3.address;
          r3.push(_4), t3._crypto_secretstream_xchacha20poly1305_keygen(_4);
          var s3 = y3(a3, e4);
          return g3(r3), s3;
        }
        function Rr(e4, r3, a3, _4) {
          var s3 = [];
          l2(_4), m2(s3, e4, "state_address"), r3 = E3(s3, r3, "cipher");
          var n3, c3 = t3._crypto_secretstream_xchacha20poly1305_abytes(), o3 = r3.length;
          o3 < c3 && f(s3, "cipher is too short"), n3 = d(r3), s3.push(n3);
          var h3 = null, p4 = 0;
          null != a3 && (h3 = d(a3 = E3(s3, a3, "ad")), p4 = a3.length, s3.push(h3));
          var i4 = new u3(o3 - t3._crypto_secretstream_xchacha20poly1305_abytes() | 0), b4 = i4.address;
          s3.push(b4);
          var x4, k4 = (x4 = v3(1), s3.push(x4), (k4 = 0 === t3._crypto_secretstream_xchacha20poly1305_pull(e4, b4, 0, x4, n3, o3, 0, h3, p4) && { tag: t3.HEAPU8[x4], message: i4 }) && { message: y3(k4.message, _4), tag: k4.tag });
          return g3(s3), k4;
        }
        function Pr(e4, r3, a3, _4, s3) {
          var n3 = [];
          l2(s3), m2(n3, e4, "state_address");
          var c3 = d(r3 = E3(n3, r3, "message_chunk")), o3 = r3.length;
          n3.push(c3);
          var h3 = null, p4 = 0;
          null != a3 && (h3 = d(a3 = E3(n3, a3, "ad")), p4 = a3.length, n3.push(h3)), m2(n3, _4, "tag"), ("number" != typeof _4 || (0 | _4) !== _4 || _4 < 0) && f(n3, "tag must be an unsigned integer");
          var i4 = new u3(o3 + t3._crypto_secretstream_xchacha20poly1305_abytes() | 0), v4 = i4.address;
          if (n3.push(v4), 0 == (0 | t3._crypto_secretstream_xchacha20poly1305_push(e4, v4, 0, c3, o3, 0, h3, p4, 0, _4))) {
            var x4 = y3(i4, s3);
            return g3(n3), x4;
          }
          b3(n3, "invalid usage");
        }
        function Gr(e4, r3) {
          var a3 = [];
          return l2(r3), m2(a3, e4, "state_address"), t3._crypto_secretstream_xchacha20poly1305_rekey(e4), g3(a3), true;
        }
        function Xr(e4, r3, a3) {
          var _4 = [];
          l2(a3);
          var s3 = d(e4 = E3(_4, e4, "message")), n3 = e4.length;
          _4.push(s3), r3 = E3(_4, r3, "key");
          var c3, o3 = 0 | t3._crypto_shorthash_keybytes();
          r3.length !== o3 && f(_4, "invalid key length"), c3 = d(r3), _4.push(c3);
          var h3 = new u3(0 | t3._crypto_shorthash_bytes()), p4 = h3.address;
          if (_4.push(p4), 0 == (0 | t3._crypto_shorthash(p4, s3, n3, 0, c3))) {
            var i4 = y3(h3, a3);
            return g3(_4), i4;
          }
          b3(_4, "invalid usage");
        }
        function Dr(e4) {
          var r3 = [];
          l2(e4);
          var a3 = new u3(0 | t3._crypto_shorthash_keybytes()), _4 = a3.address;
          r3.push(_4), t3._crypto_shorthash_keygen(_4);
          var s3 = y3(a3, e4);
          return g3(r3), s3;
        }
        function Fr(e4, r3, a3) {
          var _4 = [];
          l2(a3);
          var s3 = d(e4 = E3(_4, e4, "message")), n3 = e4.length;
          _4.push(s3), r3 = E3(_4, r3, "key");
          var c3, o3 = 0 | t3._crypto_shorthash_siphashx24_keybytes();
          r3.length !== o3 && f(_4, "invalid key length"), c3 = d(r3), _4.push(c3);
          var h3 = new u3(0 | t3._crypto_shorthash_siphashx24_bytes()), p4 = h3.address;
          if (_4.push(p4), 0 == (0 | t3._crypto_shorthash_siphashx24(p4, s3, n3, 0, c3))) {
            var i4 = y3(h3, a3);
            return g3(_4), i4;
          }
          b3(_4, "invalid usage");
        }
        function Vr(e4, r3, a3) {
          var _4 = [];
          l2(a3);
          var s3 = d(e4 = E3(_4, e4, "message")), n3 = e4.length;
          _4.push(s3), r3 = E3(_4, r3, "privateKey");
          var c3, o3 = 0 | t3._crypto_sign_secretkeybytes();
          r3.length !== o3 && f(_4, "invalid privateKey length"), c3 = d(r3), _4.push(c3);
          var h3 = new u3(e4.length + t3._crypto_sign_bytes() | 0), p4 = h3.address;
          if (_4.push(p4), 0 == (0 | t3._crypto_sign(p4, null, s3, n3, 0, c3))) {
            var i4 = y3(h3, a3);
            return g3(_4), i4;
          }
          b3(_4, "invalid usage");
        }
        function Hr(e4, r3, a3) {
          var _4 = [];
          l2(a3);
          var s3 = d(e4 = E3(_4, e4, "message")), n3 = e4.length;
          _4.push(s3), r3 = E3(_4, r3, "privateKey");
          var c3, o3 = 0 | t3._crypto_sign_secretkeybytes();
          r3.length !== o3 && f(_4, "invalid privateKey length"), c3 = d(r3), _4.push(c3);
          var h3 = new u3(0 | t3._crypto_sign_bytes()), p4 = h3.address;
          if (_4.push(p4), 0 == (0 | t3._crypto_sign_detached(p4, null, s3, n3, 0, c3))) {
            var i4 = y3(h3, a3);
            return g3(_4), i4;
          }
          b3(_4, "invalid usage");
        }
        function qr(e4, r3) {
          var a3 = [];
          l2(r3), e4 = E3(a3, e4, "edPk");
          var _4, s3 = 0 | t3._crypto_sign_publickeybytes();
          e4.length !== s3 && f(a3, "invalid edPk length"), _4 = d(e4), a3.push(_4);
          var n3 = new u3(0 | t3._crypto_scalarmult_scalarbytes()), c3 = n3.address;
          if (a3.push(c3), 0 == (0 | t3._crypto_sign_ed25519_pk_to_curve25519(c3, _4))) {
            var o3 = y3(n3, r3);
            return g3(a3), o3;
          }
          b3(a3, "invalid key");
        }
        function jr(e4, r3) {
          var a3 = [];
          l2(r3), e4 = E3(a3, e4, "edSk");
          var _4, s3 = 0 | t3._crypto_sign_secretkeybytes();
          e4.length !== s3 && f(a3, "invalid edSk length"), _4 = d(e4), a3.push(_4);
          var n3 = new u3(0 | t3._crypto_scalarmult_scalarbytes()), c3 = n3.address;
          if (a3.push(c3), 0 == (0 | t3._crypto_sign_ed25519_sk_to_curve25519(c3, _4))) {
            var o3 = y3(n3, r3);
            return g3(a3), o3;
          }
          b3(a3, "invalid key");
        }
        function zr(e4, r3) {
          var a3 = [];
          l2(r3), e4 = E3(a3, e4, "privateKey");
          var _4, s3 = 0 | t3._crypto_sign_secretkeybytes();
          e4.length !== s3 && f(a3, "invalid privateKey length"), _4 = d(e4), a3.push(_4);
          var n3 = new u3(0 | t3._crypto_sign_publickeybytes()), c3 = n3.address;
          if (a3.push(c3), 0 == (0 | t3._crypto_sign_ed25519_sk_to_pk(c3, _4))) {
            var o3 = y3(n3, r3);
            return g3(a3), o3;
          }
          b3(a3, "invalid key");
        }
        function Wr(e4, r3) {
          var a3 = [];
          l2(r3), e4 = E3(a3, e4, "privateKey");
          var _4, s3 = 0 | t3._crypto_sign_secretkeybytes();
          e4.length !== s3 && f(a3, "invalid privateKey length"), _4 = d(e4), a3.push(_4);
          var n3 = new u3(0 | t3._crypto_sign_seedbytes()), c3 = n3.address;
          if (a3.push(c3), 0 == (0 | t3._crypto_sign_ed25519_sk_to_seed(c3, _4))) {
            var o3 = y3(n3, r3);
            return g3(a3), o3;
          }
          b3(a3, "invalid key");
        }
        function Jr(e4, r3, a3) {
          var _4 = [];
          l2(a3), m2(_4, e4, "state_address"), r3 = E3(_4, r3, "privateKey");
          var s3, n3 = 0 | t3._crypto_sign_secretkeybytes();
          r3.length !== n3 && f(_4, "invalid privateKey length"), s3 = d(r3), _4.push(s3);
          var c3 = new u3(0 | t3._crypto_sign_bytes()), o3 = c3.address;
          if (_4.push(o3), 0 == (0 | t3._crypto_sign_final_create(e4, o3, null, s3))) {
            var h3 = (t3._free(e4), y3(c3, a3));
            return g3(_4), h3;
          }
          b3(_4, "invalid usage");
        }
        function Qr(e4, r3, a3, _4) {
          var s3 = [];
          l2(_4), m2(s3, e4, "state_address"), r3 = E3(s3, r3, "signature");
          var n3, c3 = 0 | t3._crypto_sign_bytes();
          r3.length !== c3 && f(s3, "invalid signature length"), n3 = d(r3), s3.push(n3), a3 = E3(s3, a3, "publicKey");
          var o3, h3 = 0 | t3._crypto_sign_publickeybytes();
          a3.length !== h3 && f(s3, "invalid publicKey length"), o3 = d(a3), s3.push(o3);
          var p4 = 0 == (0 | t3._crypto_sign_final_verify(e4, n3, o3));
          return g3(s3), p4;
        }
        function Zr(e4) {
          var r3 = [];
          l2(e4);
          var a3 = new u3(208).address;
          if (0 == (0 | t3._crypto_sign_init(a3))) {
            var _4 = a3;
            return g3(r3), _4;
          }
          b3(r3, "internal error");
        }
        function $r(e4) {
          var r3 = [];
          l2(e4);
          var a3 = new u3(0 | t3._crypto_sign_publickeybytes()), _4 = a3.address;
          r3.push(_4);
          var s3 = new u3(0 | t3._crypto_sign_secretkeybytes()), n3 = s3.address;
          if (r3.push(n3), 0 == (0 | t3._crypto_sign_keypair(_4, n3))) {
            var c3 = { publicKey: y3(a3, e4), privateKey: y3(s3, e4), keyType: "ed25519" };
            return g3(r3), c3;
          }
          b3(r3, "internal error");
        }
        function et2(e4, r3, a3) {
          var _4 = [];
          l2(a3), e4 = E3(_4, e4, "signedMessage");
          var s3, n3 = t3._crypto_sign_bytes(), c3 = e4.length;
          c3 < n3 && f(_4, "signedMessage is too short"), s3 = d(e4), _4.push(s3), r3 = E3(_4, r3, "publicKey");
          var o3, h3 = 0 | t3._crypto_sign_publickeybytes();
          r3.length !== h3 && f(_4, "invalid publicKey length"), o3 = d(r3), _4.push(o3);
          var p4 = new u3(c3 - t3._crypto_sign_bytes() | 0), i4 = p4.address;
          if (_4.push(i4), 0 == (0 | t3._crypto_sign_open(i4, null, s3, c3, 0, o3))) {
            var v4 = y3(p4, a3);
            return g3(_4), v4;
          }
          b3(_4, "incorrect signature for the given public key");
        }
        function rt2(e4, r3) {
          var a3 = [];
          l2(r3), e4 = E3(a3, e4, "seed");
          var _4, s3 = 0 | t3._crypto_sign_seedbytes();
          e4.length !== s3 && f(a3, "invalid seed length"), _4 = d(e4), a3.push(_4);
          var n3 = new u3(0 | t3._crypto_sign_publickeybytes()), c3 = n3.address;
          a3.push(c3);
          var o3 = new u3(0 | t3._crypto_sign_secretkeybytes()), h3 = o3.address;
          if (a3.push(h3), 0 == (0 | t3._crypto_sign_seed_keypair(c3, h3, _4))) {
            var p4 = { publicKey: y3(n3, r3), privateKey: y3(o3, r3), keyType: "ed25519" };
            return g3(a3), p4;
          }
          b3(a3, "invalid usage");
        }
        function tt2(e4, r3, a3) {
          var _4 = [];
          l2(a3), m2(_4, e4, "state_address");
          var s3 = d(r3 = E3(_4, r3, "message_chunk")), n3 = r3.length;
          _4.push(s3), 0 != (0 | t3._crypto_sign_update(e4, s3, n3, 0)) && b3(_4, "invalid usage"), g3(_4);
        }
        function at2(e4, r3, a3) {
          var _4 = [];
          e4 = E3(_4, e4, "signature");
          var s3, n3 = 0 | t3._crypto_sign_bytes();
          e4.length !== n3 && f(_4, "invalid signature length"), s3 = d(e4), _4.push(s3);
          var c3 = d(r3 = E3(_4, r3, "message")), o3 = r3.length;
          _4.push(c3), a3 = E3(_4, a3, "publicKey");
          var h3, p4 = 0 | t3._crypto_sign_publickeybytes();
          a3.length !== p4 && f(_4, "invalid publicKey length"), h3 = d(a3), _4.push(h3);
          var y4 = 0 == (0 | t3._crypto_sign_verify_detached(s3, c3, o3, 0, h3));
          return g3(_4), y4;
        }
        function _t(e4, r3, a3, _4) {
          var s3 = [];
          l2(_4), m2(s3, e4, "outLength"), ("number" != typeof e4 || (0 | e4) !== e4 || e4 < 0) && f(s3, "outLength must be an unsigned integer"), r3 = E3(s3, r3, "key");
          var n3, c3 = 0 | t3._crypto_stream_chacha20_keybytes();
          r3.length !== c3 && f(s3, "invalid key length"), n3 = d(r3), s3.push(n3), a3 = E3(s3, a3, "nonce");
          var o3, h3 = 0 | t3._crypto_stream_chacha20_noncebytes();
          a3.length !== h3 && f(s3, "invalid nonce length"), o3 = d(a3), s3.push(o3);
          var p4 = new u3(0 | e4), i4 = p4.address;
          s3.push(i4), t3._crypto_stream_chacha20(i4, e4, 0, o3, n3);
          var v4 = y3(p4, _4);
          return g3(s3), v4;
        }
        function st2(e4, r3, a3, _4) {
          var s3 = [];
          l2(_4);
          var n3 = d(e4 = E3(s3, e4, "input_message")), c3 = e4.length;
          s3.push(n3), r3 = E3(s3, r3, "nonce");
          var o3, h3 = 0 | t3._crypto_stream_chacha20_ietf_noncebytes();
          r3.length !== h3 && f(s3, "invalid nonce length"), o3 = d(r3), s3.push(o3), a3 = E3(s3, a3, "key");
          var p4, i4 = 0 | t3._crypto_stream_chacha20_ietf_keybytes();
          a3.length !== i4 && f(s3, "invalid key length"), p4 = d(a3), s3.push(p4);
          var v4 = new u3(0 | c3), m3 = v4.address;
          if (s3.push(m3), 0 === t3._crypto_stream_chacha20_ietf_xor(m3, n3, c3, 0, o3, p4)) {
            var x4 = y3(v4, _4);
            return g3(s3), x4;
          }
          b3(s3, "invalid usage");
        }
        function nt2(e4, r3, a3, _4, s3) {
          var n3 = [];
          l2(s3);
          var c3 = d(e4 = E3(n3, e4, "input_message")), o3 = e4.length;
          n3.push(c3), r3 = E3(n3, r3, "nonce");
          var h3, p4 = 0 | t3._crypto_stream_chacha20_ietf_noncebytes();
          r3.length !== p4 && f(n3, "invalid nonce length"), h3 = d(r3), n3.push(h3), m2(n3, a3, "nonce_increment"), ("number" != typeof a3 || (0 | a3) !== a3 || a3 < 0) && f(n3, "nonce_increment must be an unsigned integer"), _4 = E3(n3, _4, "key");
          var i4, v4 = 0 | t3._crypto_stream_chacha20_ietf_keybytes();
          _4.length !== v4 && f(n3, "invalid key length"), i4 = d(_4), n3.push(i4);
          var x4 = new u3(0 | o3), k4 = x4.address;
          if (n3.push(k4), 0 === t3._crypto_stream_chacha20_ietf_xor_ic(k4, c3, o3, 0, h3, a3, i4)) {
            var S4 = y3(x4, s3);
            return g3(n3), S4;
          }
          b3(n3, "invalid usage");
        }
        function ct2(e4) {
          var r3 = [];
          l2(e4);
          var a3 = new u3(0 | t3._crypto_stream_chacha20_keybytes()), _4 = a3.address;
          r3.push(_4), t3._crypto_stream_chacha20_keygen(_4);
          var s3 = y3(a3, e4);
          return g3(r3), s3;
        }
        function ot2(e4, r3, a3, _4) {
          var s3 = [];
          l2(_4);
          var n3 = d(e4 = E3(s3, e4, "input_message")), c3 = e4.length;
          s3.push(n3), r3 = E3(s3, r3, "nonce");
          var o3, h3 = 0 | t3._crypto_stream_chacha20_noncebytes();
          r3.length !== h3 && f(s3, "invalid nonce length"), o3 = d(r3), s3.push(o3), a3 = E3(s3, a3, "key");
          var p4, i4 = 0 | t3._crypto_stream_chacha20_keybytes();
          a3.length !== i4 && f(s3, "invalid key length"), p4 = d(a3), s3.push(p4);
          var v4 = new u3(0 | c3), m3 = v4.address;
          if (s3.push(m3), 0 === t3._crypto_stream_chacha20_xor(m3, n3, c3, 0, o3, p4)) {
            var x4 = y3(v4, _4);
            return g3(s3), x4;
          }
          b3(s3, "invalid usage");
        }
        function ht(e4, r3, a3, _4, s3) {
          var n3 = [];
          l2(s3);
          var c3 = d(e4 = E3(n3, e4, "input_message")), o3 = e4.length;
          n3.push(c3), r3 = E3(n3, r3, "nonce");
          var h3, p4 = 0 | t3._crypto_stream_chacha20_noncebytes();
          r3.length !== p4 && f(n3, "invalid nonce length"), h3 = d(r3), n3.push(h3), m2(n3, a3, "nonce_increment"), ("number" != typeof a3 || (0 | a3) !== a3 || a3 < 0) && f(n3, "nonce_increment must be an unsigned integer"), _4 = E3(n3, _4, "key");
          var i4, v4 = 0 | t3._crypto_stream_chacha20_keybytes();
          _4.length !== v4 && f(n3, "invalid key length"), i4 = d(_4), n3.push(i4);
          var x4 = new u3(0 | o3), k4 = x4.address;
          if (n3.push(k4), 0 === t3._crypto_stream_chacha20_xor_ic(k4, c3, o3, 0, h3, a3, 0, i4)) {
            var S4 = y3(x4, s3);
            return g3(n3), S4;
          }
          b3(n3, "invalid usage");
        }
        function pt(e4) {
          var r3 = [];
          l2(e4);
          var a3 = new u3(0 | t3._crypto_stream_keybytes()), _4 = a3.address;
          r3.push(_4), t3._crypto_stream_keygen(_4);
          var s3 = y3(a3, e4);
          return g3(r3), s3;
        }
        function yt(e4) {
          var r3 = [];
          l2(e4);
          var a3 = new u3(0 | t3._crypto_stream_xchacha20_keybytes()), _4 = a3.address;
          r3.push(_4), t3._crypto_stream_xchacha20_keygen(_4);
          var s3 = y3(a3, e4);
          return g3(r3), s3;
        }
        function it2(e4, r3, a3, _4) {
          var s3 = [];
          l2(_4);
          var n3 = d(e4 = E3(s3, e4, "input_message")), c3 = e4.length;
          s3.push(n3), r3 = E3(s3, r3, "nonce");
          var o3, h3 = 0 | t3._crypto_stream_xchacha20_noncebytes();
          r3.length !== h3 && f(s3, "invalid nonce length"), o3 = d(r3), s3.push(o3), a3 = E3(s3, a3, "key");
          var p4, i4 = 0 | t3._crypto_stream_xchacha20_keybytes();
          a3.length !== i4 && f(s3, "invalid key length"), p4 = d(a3), s3.push(p4);
          var v4 = new u3(0 | c3), m3 = v4.address;
          if (s3.push(m3), 0 === t3._crypto_stream_xchacha20_xor(m3, n3, c3, 0, o3, p4)) {
            var x4 = y3(v4, _4);
            return g3(s3), x4;
          }
          b3(s3, "invalid usage");
        }
        function lt2(e4, r3, a3, _4, s3) {
          var n3 = [];
          l2(s3);
          var c3 = d(e4 = E3(n3, e4, "input_message")), o3 = e4.length;
          n3.push(c3), r3 = E3(n3, r3, "nonce");
          var h3, p4 = 0 | t3._crypto_stream_xchacha20_noncebytes();
          r3.length !== p4 && f(n3, "invalid nonce length"), h3 = d(r3), n3.push(h3), m2(n3, a3, "nonce_increment"), ("number" != typeof a3 || (0 | a3) !== a3 || a3 < 0) && f(n3, "nonce_increment must be an unsigned integer"), _4 = E3(n3, _4, "key");
          var i4, v4 = 0 | t3._crypto_stream_xchacha20_keybytes();
          _4.length !== v4 && f(n3, "invalid key length"), i4 = d(_4), n3.push(i4);
          var x4 = new u3(0 | o3), k4 = x4.address;
          if (n3.push(k4), 0 === t3._crypto_stream_xchacha20_xor_ic(k4, c3, o3, 0, h3, a3, 0, i4)) {
            var S4 = y3(x4, s3);
            return g3(n3), S4;
          }
          b3(n3, "invalid usage");
        }
        function ut2(e4, r3) {
          var a3 = [];
          l2(r3), m2(a3, e4, "length"), ("number" != typeof e4 || (0 | e4) !== e4 || e4 < 0) && f(a3, "length must be an unsigned integer");
          var _4 = new u3(0 | e4), s3 = _4.address;
          a3.push(s3), t3._randombytes_buf(s3, e4);
          var n3 = y3(_4, r3);
          return g3(a3), n3;
        }
        function dt(e4, r3, a3) {
          var _4 = [];
          l2(a3), m2(_4, e4, "length"), ("number" != typeof e4 || (0 | e4) !== e4 || e4 < 0) && f(_4, "length must be an unsigned integer"), r3 = E3(_4, r3, "seed");
          var s3, n3 = 0 | t3._randombytes_seedbytes();
          r3.length !== n3 && f(_4, "invalid seed length"), s3 = d(r3), _4.push(s3);
          var c3 = new u3(0 | e4), o3 = c3.address;
          _4.push(o3), t3._randombytes_buf_deterministic(o3, e4, s3);
          var h3 = y3(c3, a3);
          return g3(_4), h3;
        }
        function vt(e4) {
          l2(e4), t3._randombytes_close();
        }
        function gt(e4) {
          l2(e4);
          var r3 = t3._randombytes_random() >>> 0;
          return g3([]), r3;
        }
        function bt(e4, r3) {
          var a3 = [];
          l2(r3);
          for (var _4 = t3._malloc(24), s3 = 0; s3 < 6; s3++)
            t3.setValue(_4 + 4 * s3, t3.Runtime.addFunction(e4[["implementation_name", "random", "stir", "uniform", "buf", "close"][s3]]), "i32");
          0 != (0 | t3._randombytes_set_implementation(_4)) && b3(a3, "unsupported implementation"), g3(a3);
        }
        function ft2(e4) {
          l2(e4), t3._randombytes_stir();
        }
        function mt2(e4, r3) {
          var a3 = [];
          l2(r3), m2(a3, e4, "upper_bound"), ("number" != typeof e4 || (0 | e4) !== e4 || e4 < 0) && f(a3, "upper_bound must be an unsigned integer");
          var _4 = t3._randombytes_uniform(e4) >>> 0;
          return g3(a3), _4;
        }
        function Et() {
          var e4 = t3._sodium_version_string(), r3 = t3.UTF8ToString(e4);
          return g3([]), r3;
        }
        return u3.prototype.to_Uint8Array = function() {
          var e4 = new Uint8Array(this.length);
          return e4.set(t3.HEAPU8.subarray(this.address, this.address + this.length)), e4;
        }, e3.add = function(e4, r3) {
          if (!(e4 instanceof Uint8Array && r3 instanceof Uint8Array))
            throw new TypeError("Only Uint8Array instances can added");
          var t4 = e4.length, a3 = 0, _4 = 0;
          if (r3.length != e4.length)
            throw new TypeError("Arguments must have the same length");
          for (_4 = 0; _4 < t4; _4++)
            a3 >>= 8, a3 += e4[_4] + r3[_4], e4[_4] = 255 & a3;
        }, e3.base64_variants = o2, e3.compare = function(e4, r3) {
          if (!(e4 instanceof Uint8Array && r3 instanceof Uint8Array))
            throw new TypeError("Only Uint8Array instances can be compared");
          if (e4.length !== r3.length)
            throw new TypeError("Only instances of identical length can be compared");
          for (var t4 = 0, a3 = 1, _4 = e4.length; _4-- > 0; )
            t4 |= r3[_4] - e4[_4] >> 8 & a3, a3 &= (r3[_4] ^ e4[_4]) - 1 >> 8;
          return t4 + t4 + a3 - 1;
        }, e3.from_base64 = function(e4, r3) {
          r3 = h2(r3);
          var a3, _4 = [], s3 = new u3(3 * (e4 = E3(_4, e4, "input")).length / 4), n3 = d(e4), c3 = v3(4), o3 = v3(4);
          return _4.push(n3), _4.push(s3.address), _4.push(s3.result_bin_len_p), _4.push(s3.b64_end_p), 0 !== t3._sodium_base642bin(s3.address, s3.length, n3, e4.length, 0, c3, o3, r3) && b3(_4, "invalid input"), t3.getValue(o3, "i32") - n3 !== e4.length && b3(_4, "incomplete input"), s3.length = t3.getValue(c3, "i32"), a3 = s3.to_Uint8Array(), g3(_4), a3;
        }, e3.from_hex = function(e4) {
          var r3, a3 = [], _4 = new u3((e4 = E3(a3, e4, "input")).length / 2), s3 = d(e4), n3 = v3(4);
          return a3.push(s3), a3.push(_4.address), a3.push(_4.hex_end_p), 0 !== t3._sodium_hex2bin(_4.address, _4.length, s3, e4.length, 0, 0, n3) && b3(a3, "invalid input"), t3.getValue(n3, "i32") - s3 !== e4.length && b3(a3, "incomplete input"), r3 = _4.to_Uint8Array(), g3(a3), r3;
        }, e3.from_string = s2, e3.increment = function(e4) {
          if (!(e4 instanceof Uint8Array))
            throw new TypeError("Only Uint8Array instances can be incremented");
          for (var r3 = 256, t4 = 0, a3 = e4.length; t4 < a3; t4++)
            r3 >>= 8, r3 += e4[t4], e4[t4] = 255 & r3;
        }, e3.is_zero = function(e4) {
          if (!(e4 instanceof Uint8Array))
            throw new TypeError("Only Uint8Array instances can be checked");
          for (var r3 = 0, t4 = 0, a3 = e4.length; t4 < a3; t4++)
            r3 |= e4[t4];
          return 0 === r3;
        }, e3.libsodium = r2, e3.memcmp = function(e4, r3) {
          if (!(e4 instanceof Uint8Array && r3 instanceof Uint8Array))
            throw new TypeError("Only Uint8Array instances can be compared");
          if (e4.length !== r3.length)
            throw new TypeError("Only instances of identical length can be compared");
          for (var t4 = 0, a3 = 0, _4 = e4.length; a3 < _4; a3++)
            t4 |= e4[a3] ^ r3[a3];
          return 0 === t4;
        }, e3.memzero = function(e4) {
          if (!(e4 instanceof Uint8Array))
            throw new TypeError("Only Uint8Array instances can be wiped");
          for (var r3 = 0, t4 = e4.length; r3 < t4; r3++)
            e4[r3] = 0;
        }, e3.output_formats = function() {
          return ["uint8array", "text", "hex", "base64"];
        }, e3.pad = function(e4, r3) {
          if (!(e4 instanceof Uint8Array))
            throw new TypeError("buffer must be a Uint8Array");
          if ((r3 |= 0) <= 0)
            throw new Error("block size must be > 0");
          var a3, _4 = [], s3 = v3(4), n3 = 1, c3 = 0, o3 = 0 | e4.length, h3 = new u3(o3 + r3);
          _4.push(s3), _4.push(h3.address);
          for (var p4 = h3.address, y4 = h3.address + o3 + r3; p4 < y4; p4++)
            t3.HEAPU8[p4] = e4[c3], c3 += n3 = 1 & ~((65535 & ((o3 -= n3) >>> 48 | o3 >>> 32 | o3 >>> 16 | o3)) - 1 >> 16);
          return 0 !== t3._sodium_pad(s3, h3.address, e4.length, r3, h3.length) && b3(_4, "internal error"), h3.length = t3.getValue(s3, "i32"), a3 = h3.to_Uint8Array(), g3(_4), a3;
        }, e3.unpad = function(e4, r3) {
          if (!(e4 instanceof Uint8Array))
            throw new TypeError("buffer must be a Uint8Array");
          if ((r3 |= 0) <= 0)
            throw new Error("block size must be > 0");
          var a3 = [], _4 = d(e4), s3 = v3(4);
          return a3.push(_4), a3.push(s3), 0 !== t3._sodium_unpad(s3, _4, e4.length, r3) && b3(a3, "unsupported/invalid padding"), e4 = (e4 = new Uint8Array(e4)).subarray(0, t3.getValue(s3, "i32")), g3(a3), e4;
        }, e3.ready = _3, e3.symbols = function() {
          return Object.keys(e3).sort();
        }, e3.to_base64 = p3, e3.to_hex = c2, e3.to_string = n2, e3;
      }
      var t2 = "object" == typeof e2.sodium && "function" == typeof e2.sodium.onload ? e2.sodium.onload : null;
      "function" == typeof define && define.amd ? define(["exports", "libsodium"], r) : "object" == typeof exports && "string" != typeof exports.nodeName ? r(exports, require_libsodium()) : e2.sodium = r(e2.commonJsStrict = {}, e2.libsodium), t2 && e2.sodium.ready.then(function() {
        t2(e2.sodium);
      });
    }(exports);
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/crypto/build/libsodium.js
var require_libsodium2 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/crypto/build/libsodium.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Xchacha20poly1305Ietf = exports.xchacha20NonceLength = exports.Ed25519 = exports.Ed25519Keypair = exports.Argon2id = exports.isArgon2idOptions = void 0;
    var utils_1 = require_build4();
    var libsodium_wrappers_1 = __importDefault(require_libsodium_wrappers());
    function isArgon2idOptions(thing) {
      if (!(0, utils_1.isNonNullObject)(thing))
        return false;
      if (typeof thing.outputLength !== "number")
        return false;
      if (typeof thing.opsLimit !== "number")
        return false;
      if (typeof thing.memLimitKib !== "number")
        return false;
      return true;
    }
    exports.isArgon2idOptions = isArgon2idOptions;
    var Argon2id = class {
      static async execute(password, salt, options) {
        await libsodium_wrappers_1.default.ready;
        return libsodium_wrappers_1.default.crypto_pwhash(
          options.outputLength,
          password,
          salt,
          // libsodium only supports 16 byte salts and will throw when you don't respect that
          options.opsLimit,
          options.memLimitKib * 1024,
          libsodium_wrappers_1.default.crypto_pwhash_ALG_ARGON2ID13
        );
      }
    };
    exports.Argon2id = Argon2id;
    var Ed25519Keypair = class _Ed25519Keypair {
      constructor(privkey, pubkey) {
        this.privkey = privkey;
        this.pubkey = pubkey;
      }
      // a libsodium privkey has the format `<ed25519 privkey> + <ed25519 pubkey>`
      static fromLibsodiumPrivkey(libsodiumPrivkey) {
        if (libsodiumPrivkey.length !== 64) {
          throw new Error(`Unexpected key length ${libsodiumPrivkey.length}. Must be 64.`);
        }
        return new _Ed25519Keypair(libsodiumPrivkey.slice(0, 32), libsodiumPrivkey.slice(32, 64));
      }
      toLibsodiumPrivkey() {
        return new Uint8Array([...this.privkey, ...this.pubkey]);
      }
    };
    exports.Ed25519Keypair = Ed25519Keypair;
    var Ed25519 = class {
      /**
       * Generates a keypair deterministically from a given 32 bytes seed.
       *
       * This seed equals the Ed25519 private key.
       * For implementation details see crypto_sign_seed_keypair in
       * https://download.libsodium.org/doc/public-key_cryptography/public-key_signatures.html
       * and diagram on https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/
       */
      static async makeKeypair(seed) {
        await libsodium_wrappers_1.default.ready;
        const keypair = libsodium_wrappers_1.default.crypto_sign_seed_keypair(seed);
        return Ed25519Keypair.fromLibsodiumPrivkey(keypair.privateKey);
      }
      static async createSignature(message, keyPair) {
        await libsodium_wrappers_1.default.ready;
        return libsodium_wrappers_1.default.crypto_sign_detached(message, keyPair.toLibsodiumPrivkey());
      }
      static async verifySignature(signature, message, pubkey) {
        await libsodium_wrappers_1.default.ready;
        return libsodium_wrappers_1.default.crypto_sign_verify_detached(signature, message, pubkey);
      }
    };
    exports.Ed25519 = Ed25519;
    exports.xchacha20NonceLength = 24;
    var Xchacha20poly1305Ietf = class {
      static async encrypt(message, key, nonce) {
        await libsodium_wrappers_1.default.ready;
        const additionalData = null;
        return libsodium_wrappers_1.default.crypto_aead_xchacha20poly1305_ietf_encrypt(
          message,
          additionalData,
          null,
          // secret nonce: unused and should be null (https://download.libsodium.org/doc/secret-key_cryptography/aead/chacha20-poly1305/xchacha20-poly1305_construction)
          nonce,
          key
        );
      }
      static async decrypt(ciphertext, key, nonce) {
        await libsodium_wrappers_1.default.ready;
        const additionalData = null;
        return libsodium_wrappers_1.default.crypto_aead_xchacha20poly1305_ietf_decrypt(
          null,
          // secret nonce: unused and should be null (https://download.libsodium.org/doc/secret-key_cryptography/aead/chacha20-poly1305/xchacha20-poly1305_construction)
          ciphertext,
          additionalData,
          nonce,
          key
        );
      }
    };
    exports.Xchacha20poly1305Ietf = Xchacha20poly1305Ietf;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/crypto/build/random.js
var require_random = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/crypto/build/random.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Random = void 0;
    var Random = class {
      /**
       * Returns `count` cryptographically secure random bytes
       */
      static getBytes(count) {
        try {
          const globalObject = typeof window === "object" ? window : self;
          const cryptoApi = typeof globalObject.crypto !== "undefined" ? globalObject.crypto : globalObject.msCrypto;
          const out = new Uint8Array(count);
          cryptoApi.getRandomValues(out);
          return out;
        } catch {
          try {
            const crypto = require_crypto();
            return new Uint8Array([...crypto.randomBytes(count)]);
          } catch {
            throw new Error("No secure random number generator found");
          }
        }
      }
    };
    exports.Random = Random;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/crypto/build/ripemd.js
var require_ripemd = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/crypto/build/ripemd.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ripemd160 = exports.Ripemd160 = void 0;
    var ripemd160_1 = require_ripemd160();
    var utils_1 = require_utils();
    var Ripemd160 = class {
      constructor(firstData) {
        this.blockSize = 512 / 8;
        this.impl = ripemd160_1.ripemd160.create();
        if (firstData) {
          this.update(firstData);
        }
      }
      update(data) {
        this.impl.update((0, utils_1.toRealUint8Array)(data));
        return this;
      }
      digest() {
        return this.impl.digest();
      }
    };
    exports.Ripemd160 = Ripemd160;
    function ripemd160(data) {
      return new Ripemd160(data).digest();
    }
    exports.ripemd160 = ripemd160;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/crypto/build/secp256k1signature.js
var require_secp256k1signature = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/crypto/build/secp256k1signature.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ExtendedSecp256k1Signature = exports.Secp256k1Signature = void 0;
    function trimLeadingNullBytes(inData) {
      let numberOfLeadingNullBytes = 0;
      for (const byte of inData) {
        if (byte === 0) {
          numberOfLeadingNullBytes++;
        } else {
          break;
        }
      }
      return inData.slice(numberOfLeadingNullBytes);
    }
    var derTagInteger = 2;
    var Secp256k1Signature = class _Secp256k1Signature {
      constructor(r, s2) {
        if (r.length > 32 || r.length === 0 || r[0] === 0) {
          throw new Error("Unsigned integer r must be encoded as unpadded big endian.");
        }
        if (s2.length > 32 || s2.length === 0 || s2[0] === 0) {
          throw new Error("Unsigned integer s must be encoded as unpadded big endian.");
        }
        this.data = {
          r,
          s: s2
        };
      }
      /**
       * Takes the pair of integers (r, s) as 2x32 byte of binary data.
       *
       * Note: This is the format Cosmos SDK uses natively.
       *
       * @param data a 64 byte value containing integers r and s.
       */
      static fromFixedLength(data) {
        if (data.length !== 64) {
          throw new Error(`Got invalid data length: ${data.length}. Expected 2x 32 bytes for the pair (r, s)`);
        }
        return new _Secp256k1Signature(trimLeadingNullBytes(data.slice(0, 32)), trimLeadingNullBytes(data.slice(32, 64)));
      }
      static fromDer(data) {
        let pos = 0;
        if (data[pos++] !== 48) {
          throw new Error("Prefix 0x30 expected");
        }
        const bodyLength = data[pos++];
        if (data.length - pos !== bodyLength) {
          throw new Error("Data length mismatch detected");
        }
        const rTag = data[pos++];
        if (rTag !== derTagInteger) {
          throw new Error("INTEGER tag expected");
        }
        const rLength = data[pos++];
        if (rLength >= 128) {
          throw new Error("Decoding length values above 127 not supported");
        }
        const rData = data.slice(pos, pos + rLength);
        pos += rLength;
        const sTag = data[pos++];
        if (sTag !== derTagInteger) {
          throw new Error("INTEGER tag expected");
        }
        const sLength = data[pos++];
        if (sLength >= 128) {
          throw new Error("Decoding length values above 127 not supported");
        }
        const sData = data.slice(pos, pos + sLength);
        pos += sLength;
        return new _Secp256k1Signature(
          // r/s data can contain leading 0 bytes to express integers being non-negative in DER
          trimLeadingNullBytes(rData),
          trimLeadingNullBytes(sData)
        );
      }
      r(length) {
        if (length === void 0) {
          return this.data.r;
        } else {
          const paddingLength = length - this.data.r.length;
          if (paddingLength < 0) {
            throw new Error("Length too small to hold parameter r");
          }
          const padding = new Uint8Array(paddingLength);
          return new Uint8Array([...padding, ...this.data.r]);
        }
      }
      s(length) {
        if (length === void 0) {
          return this.data.s;
        } else {
          const paddingLength = length - this.data.s.length;
          if (paddingLength < 0) {
            throw new Error("Length too small to hold parameter s");
          }
          const padding = new Uint8Array(paddingLength);
          return new Uint8Array([...padding, ...this.data.s]);
        }
      }
      toFixedLength() {
        return new Uint8Array([...this.r(32), ...this.s(32)]);
      }
      toDer() {
        const rEncoded = this.data.r[0] >= 128 ? new Uint8Array([0, ...this.data.r]) : this.data.r;
        const sEncoded = this.data.s[0] >= 128 ? new Uint8Array([0, ...this.data.s]) : this.data.s;
        const rLength = rEncoded.length;
        const sLength = sEncoded.length;
        const data = new Uint8Array([derTagInteger, rLength, ...rEncoded, derTagInteger, sLength, ...sEncoded]);
        return new Uint8Array([48, data.length, ...data]);
      }
    };
    exports.Secp256k1Signature = Secp256k1Signature;
    var ExtendedSecp256k1Signature = class _ExtendedSecp256k1Signature extends Secp256k1Signature {
      constructor(r, s2, recovery) {
        super(r, s2);
        if (!Number.isInteger(recovery)) {
          throw new Error("The recovery parameter must be an integer.");
        }
        if (recovery < 0 || recovery > 4) {
          throw new Error("The recovery parameter must be one of 0, 1, 2, 3.");
        }
        this.recovery = recovery;
      }
      /**
       * Decode extended signature from the simple fixed length encoding
       * described in toFixedLength().
       */
      static fromFixedLength(data) {
        if (data.length !== 65) {
          throw new Error(`Got invalid data length ${data.length}. Expected 32 + 32 + 1`);
        }
        return new _ExtendedSecp256k1Signature(trimLeadingNullBytes(data.slice(0, 32)), trimLeadingNullBytes(data.slice(32, 64)), data[64]);
      }
      /**
       * A simple custom encoding that encodes the extended signature as
       * r (32 bytes) | s (32 bytes) | recovery param (1 byte)
       * where | denotes concatenation of bonary data.
       */
      toFixedLength() {
        return new Uint8Array([...this.r(32), ...this.s(32), this.recovery]);
      }
    };
    exports.ExtendedSecp256k1Signature = ExtendedSecp256k1Signature;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/crypto/build/secp256k1.js
var require_secp256k1 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/crypto/build/secp256k1.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Secp256k1 = void 0;
    var encoding_1 = require_build2();
    var bn_js_1 = __importDefault(require_bn());
    var elliptic_1 = __importDefault(require_elliptic());
    var secp256k1signature_1 = require_secp256k1signature();
    var secp256k1 = new elliptic_1.default.ec("secp256k1");
    var secp256k1N = new bn_js_1.default("FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141", "hex");
    var Secp256k1 = class {
      /**
       * Takes a 32 byte private key and returns a privkey/pubkey pair.
       *
       * The resulting pubkey is uncompressed. For the use in Cosmos it should
       * be compressed first using `Secp256k1.compressPubkey`.
       */
      static async makeKeypair(privkey) {
        if (privkey.length !== 32) {
          throw new Error("input data is not a valid secp256k1 private key");
        }
        const keypair = secp256k1.keyFromPrivate(privkey);
        if (keypair.validate().result !== true) {
          throw new Error("input data is not a valid secp256k1 private key");
        }
        const privkeyAsBigInteger = new bn_js_1.default(privkey);
        if (privkeyAsBigInteger.gte(secp256k1N)) {
          throw new Error("input data is not a valid secp256k1 private key");
        }
        const out = {
          privkey: (0, encoding_1.fromHex)(keypair.getPrivate("hex")),
          // encodes uncompressed as
          // - 1-byte prefix "04"
          // - 32-byte x coordinate
          // - 32-byte y coordinate
          pubkey: Uint8Array.from(keypair.getPublic("array"))
        };
        return out;
      }
      /**
       * Creates a signature that is
       * - deterministic (RFC 6979)
       * - lowS signature
       * - DER encoded
       */
      static async createSignature(messageHash, privkey) {
        if (messageHash.length === 0) {
          throw new Error("Message hash must not be empty");
        }
        if (messageHash.length > 32) {
          throw new Error("Message hash length must not exceed 32 bytes");
        }
        const keypair = secp256k1.keyFromPrivate(privkey);
        const { r, s: s2, recoveryParam } = keypair.sign(messageHash, { canonical: true });
        if (typeof recoveryParam !== "number")
          throw new Error("Recovery param missing");
        return new secp256k1signature_1.ExtendedSecp256k1Signature(Uint8Array.from(r.toArray()), Uint8Array.from(s2.toArray()), recoveryParam);
      }
      static async verifySignature(signature, messageHash, pubkey) {
        if (messageHash.length === 0) {
          throw new Error("Message hash must not be empty");
        }
        if (messageHash.length > 32) {
          throw new Error("Message hash length must not exceed 32 bytes");
        }
        const keypair = secp256k1.keyFromPublic(pubkey);
        try {
          return keypair.verify(messageHash, signature.toDer());
        } catch (error) {
          return false;
        }
      }
      static recoverPubkey(signature, messageHash) {
        const signatureForElliptic = { r: (0, encoding_1.toHex)(signature.r()), s: (0, encoding_1.toHex)(signature.s()) };
        const point = secp256k1.recoverPubKey(messageHash, signatureForElliptic, signature.recovery);
        const keypair = secp256k1.keyFromPublic(point);
        return (0, encoding_1.fromHex)(keypair.getPublic(false, "hex"));
      }
      /**
       * Takes a compressed or uncompressed pubkey and return a compressed one.
       *
       * This function is idempotent.
       */
      static compressPubkey(pubkey) {
        switch (pubkey.length) {
          case 33:
            return pubkey;
          case 65:
            return Uint8Array.from(secp256k1.keyFromPublic(pubkey).getPublic(true, "array"));
          default:
            throw new Error("Invalid pubkey length");
        }
      }
      /**
       * Takes a compressed or uncompressed pubkey and returns an uncompressed one.
       *
       * This function is idempotent.
       */
      static uncompressPubkey(pubkey) {
        switch (pubkey.length) {
          case 33:
            return Uint8Array.from(secp256k1.keyFromPublic(pubkey).getPublic(false, "array"));
          case 65:
            return pubkey;
          default:
            throw new Error("Invalid pubkey length");
        }
      }
      static trimRecoveryByte(signature) {
        switch (signature.length) {
          case 64:
            return signature;
          case 65:
            return signature.slice(0, 64);
          default:
            throw new Error("Invalid signature length");
        }
      }
    };
    exports.Secp256k1 = Secp256k1;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/crypto/build/slip10.js
var require_slip10 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/crypto/build/slip10.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.stringToPath = exports.pathToString = exports.Slip10 = exports.Slip10RawIndex = exports.slip10CurveFromString = exports.Slip10Curve = void 0;
    var encoding_1 = require_build2();
    var math_1 = require_build3();
    var bn_js_1 = __importDefault(require_bn());
    var elliptic_1 = __importDefault(require_elliptic());
    var hmac_1 = require_hmac();
    var sha_1 = require_sha();
    var Slip10Curve;
    (function(Slip10Curve2) {
      Slip10Curve2["Secp256k1"] = "Bitcoin seed";
      Slip10Curve2["Ed25519"] = "ed25519 seed";
    })(Slip10Curve = exports.Slip10Curve || (exports.Slip10Curve = {}));
    function slip10CurveFromString(curveString) {
      switch (curveString) {
        case Slip10Curve.Ed25519:
          return Slip10Curve.Ed25519;
        case Slip10Curve.Secp256k1:
          return Slip10Curve.Secp256k1;
        default:
          throw new Error(`Unknown curve string: '${curveString}'`);
      }
    }
    exports.slip10CurveFromString = slip10CurveFromString;
    var Slip10RawIndex = class _Slip10RawIndex extends math_1.Uint32 {
      static hardened(hardenedIndex) {
        return new _Slip10RawIndex(hardenedIndex + 2 ** 31);
      }
      static normal(normalIndex) {
        return new _Slip10RawIndex(normalIndex);
      }
      isHardened() {
        return this.data >= 2 ** 31;
      }
    };
    exports.Slip10RawIndex = Slip10RawIndex;
    var secp256k1 = new elliptic_1.default.ec("secp256k1");
    var Slip10 = class _Slip10 {
      static derivePath(curve, seed, path) {
        let result = this.master(curve, seed);
        for (const rawIndex of path) {
          result = this.child(curve, result.privkey, result.chainCode, rawIndex);
        }
        return result;
      }
      static master(curve, seed) {
        const i3 = new hmac_1.Hmac(sha_1.Sha512, (0, encoding_1.toAscii)(curve)).update(seed).digest();
        const il = i3.slice(0, 32);
        const ir = i3.slice(32, 64);
        if (curve !== Slip10Curve.Ed25519 && (this.isZero(il) || this.isGteN(curve, il))) {
          return this.master(curve, i3);
        }
        return {
          chainCode: ir,
          privkey: il
        };
      }
      static child(curve, parentPrivkey, parentChainCode, rawIndex) {
        let i3;
        if (rawIndex.isHardened()) {
          const payload = new Uint8Array([0, ...parentPrivkey, ...rawIndex.toBytesBigEndian()]);
          i3 = new hmac_1.Hmac(sha_1.Sha512, parentChainCode).update(payload).digest();
        } else {
          if (curve === Slip10Curve.Ed25519) {
            throw new Error("Normal keys are not allowed with ed25519");
          } else {
            const data = new Uint8Array([
              ..._Slip10.serializedPoint(curve, new bn_js_1.default(parentPrivkey)),
              ...rawIndex.toBytesBigEndian()
            ]);
            i3 = new hmac_1.Hmac(sha_1.Sha512, parentChainCode).update(data).digest();
          }
        }
        return this.childImpl(curve, parentPrivkey, parentChainCode, rawIndex, i3);
      }
      /**
       * Implementation of ser_P(point(k_par)) from BIP-0032
       *
       * @see https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki
       */
      static serializedPoint(curve, p3) {
        switch (curve) {
          case Slip10Curve.Secp256k1:
            return (0, encoding_1.fromHex)(secp256k1.g.mul(p3).encodeCompressed("hex"));
          default:
            throw new Error("curve not supported");
        }
      }
      static childImpl(curve, parentPrivkey, parentChainCode, rawIndex, i3) {
        const il = i3.slice(0, 32);
        const ir = i3.slice(32, 64);
        const returnChainCode = ir;
        if (curve === Slip10Curve.Ed25519) {
          return {
            chainCode: returnChainCode,
            privkey: il
          };
        }
        const n2 = this.n(curve);
        const returnChildKeyAsNumber = new bn_js_1.default(il).add(new bn_js_1.default(parentPrivkey)).mod(n2);
        const returnChildKey = Uint8Array.from(returnChildKeyAsNumber.toArray("be", 32));
        if (this.isGteN(curve, il) || this.isZero(returnChildKey)) {
          const newI = new hmac_1.Hmac(sha_1.Sha512, parentChainCode).update(new Uint8Array([1, ...ir, ...rawIndex.toBytesBigEndian()])).digest();
          return this.childImpl(curve, parentPrivkey, parentChainCode, rawIndex, newI);
        }
        return {
          chainCode: returnChainCode,
          privkey: returnChildKey
        };
      }
      static isZero(privkey) {
        return privkey.every((byte) => byte === 0);
      }
      static isGteN(curve, privkey) {
        const keyAsNumber = new bn_js_1.default(privkey);
        return keyAsNumber.gte(this.n(curve));
      }
      static n(curve) {
        switch (curve) {
          case Slip10Curve.Secp256k1:
            return new bn_js_1.default("FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141", 16);
          default:
            throw new Error("curve not supported");
        }
      }
    };
    exports.Slip10 = Slip10;
    function pathToString(path) {
      return path.reduce((current, component) => {
        const componentString = component.isHardened() ? `${component.toNumber() - 2 ** 31}'` : component.toString();
        return current + "/" + componentString;
      }, "m");
    }
    exports.pathToString = pathToString;
    function stringToPath(input) {
      if (!input.startsWith("m"))
        throw new Error("Path string must start with 'm'");
      let rest = input.slice(1);
      const out = new Array();
      while (rest) {
        const match = rest.match(/^\/([0-9]+)('?)/);
        if (!match)
          throw new Error("Syntax error while reading path component");
        const [fullMatch, numberString, apostrophe] = match;
        const value = math_1.Uint53.fromString(numberString).toNumber();
        if (value >= 2 ** 31)
          throw new Error("Component value too high. Must not exceed 2**31-1.");
        if (apostrophe)
          out.push(Slip10RawIndex.hardened(value));
        else
          out.push(Slip10RawIndex.normal(value));
        rest = rest.slice(fullMatch.length);
      }
      return out;
    }
    exports.stringToPath = stringToPath;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/crypto/build/index.js
var require_build5 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/crypto/build/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.stringToPath = exports.Slip10RawIndex = exports.slip10CurveFromString = exports.Slip10Curve = exports.Slip10 = exports.pathToString = exports.sha512 = exports.Sha512 = exports.sha256 = exports.Sha256 = exports.Secp256k1Signature = exports.ExtendedSecp256k1Signature = exports.Secp256k1 = exports.ripemd160 = exports.Ripemd160 = exports.Random = exports.Xchacha20poly1305Ietf = exports.xchacha20NonceLength = exports.isArgon2idOptions = exports.Ed25519Keypair = exports.Ed25519 = exports.Argon2id = exports.keccak256 = exports.Keccak256 = exports.Hmac = exports.EnglishMnemonic = exports.Bip39 = void 0;
    var bip39_1 = require_bip39();
    Object.defineProperty(exports, "Bip39", { enumerable: true, get: function() {
      return bip39_1.Bip39;
    } });
    Object.defineProperty(exports, "EnglishMnemonic", { enumerable: true, get: function() {
      return bip39_1.EnglishMnemonic;
    } });
    var hmac_1 = require_hmac();
    Object.defineProperty(exports, "Hmac", { enumerable: true, get: function() {
      return hmac_1.Hmac;
    } });
    var keccak_1 = require_keccak();
    Object.defineProperty(exports, "Keccak256", { enumerable: true, get: function() {
      return keccak_1.Keccak256;
    } });
    Object.defineProperty(exports, "keccak256", { enumerable: true, get: function() {
      return keccak_1.keccak256;
    } });
    var libsodium_1 = require_libsodium2();
    Object.defineProperty(exports, "Argon2id", { enumerable: true, get: function() {
      return libsodium_1.Argon2id;
    } });
    Object.defineProperty(exports, "Ed25519", { enumerable: true, get: function() {
      return libsodium_1.Ed25519;
    } });
    Object.defineProperty(exports, "Ed25519Keypair", { enumerable: true, get: function() {
      return libsodium_1.Ed25519Keypair;
    } });
    Object.defineProperty(exports, "isArgon2idOptions", { enumerable: true, get: function() {
      return libsodium_1.isArgon2idOptions;
    } });
    Object.defineProperty(exports, "xchacha20NonceLength", { enumerable: true, get: function() {
      return libsodium_1.xchacha20NonceLength;
    } });
    Object.defineProperty(exports, "Xchacha20poly1305Ietf", { enumerable: true, get: function() {
      return libsodium_1.Xchacha20poly1305Ietf;
    } });
    var random_1 = require_random();
    Object.defineProperty(exports, "Random", { enumerable: true, get: function() {
      return random_1.Random;
    } });
    var ripemd_1 = require_ripemd();
    Object.defineProperty(exports, "Ripemd160", { enumerable: true, get: function() {
      return ripemd_1.Ripemd160;
    } });
    Object.defineProperty(exports, "ripemd160", { enumerable: true, get: function() {
      return ripemd_1.ripemd160;
    } });
    var secp256k1_1 = require_secp256k1();
    Object.defineProperty(exports, "Secp256k1", { enumerable: true, get: function() {
      return secp256k1_1.Secp256k1;
    } });
    var secp256k1signature_1 = require_secp256k1signature();
    Object.defineProperty(exports, "ExtendedSecp256k1Signature", { enumerable: true, get: function() {
      return secp256k1signature_1.ExtendedSecp256k1Signature;
    } });
    Object.defineProperty(exports, "Secp256k1Signature", { enumerable: true, get: function() {
      return secp256k1signature_1.Secp256k1Signature;
    } });
    var sha_1 = require_sha();
    Object.defineProperty(exports, "Sha256", { enumerable: true, get: function() {
      return sha_1.Sha256;
    } });
    Object.defineProperty(exports, "sha256", { enumerable: true, get: function() {
      return sha_1.sha256;
    } });
    Object.defineProperty(exports, "Sha512", { enumerable: true, get: function() {
      return sha_1.Sha512;
    } });
    Object.defineProperty(exports, "sha512", { enumerable: true, get: function() {
      return sha_1.sha512;
    } });
    var slip10_1 = require_slip10();
    Object.defineProperty(exports, "pathToString", { enumerable: true, get: function() {
      return slip10_1.pathToString;
    } });
    Object.defineProperty(exports, "Slip10", { enumerable: true, get: function() {
      return slip10_1.Slip10;
    } });
    Object.defineProperty(exports, "Slip10Curve", { enumerable: true, get: function() {
      return slip10_1.Slip10Curve;
    } });
    Object.defineProperty(exports, "slip10CurveFromString", { enumerable: true, get: function() {
      return slip10_1.slip10CurveFromString;
    } });
    Object.defineProperty(exports, "Slip10RawIndex", { enumerable: true, get: function() {
      return slip10_1.Slip10RawIndex;
    } });
    Object.defineProperty(exports, "stringToPath", { enumerable: true, get: function() {
      return slip10_1.stringToPath;
    } });
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/amino/build/pubkeys.js
var require_pubkeys = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/amino/build/pubkeys.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isMultisigThresholdPubkey = exports.isSinglePubkey = exports.pubkeyType = exports.isSecp256k1Pubkey = exports.isEd25519Pubkey = void 0;
    function isEd25519Pubkey(pubkey) {
      return pubkey.type === "tendermint/PubKeyEd25519";
    }
    exports.isEd25519Pubkey = isEd25519Pubkey;
    function isSecp256k1Pubkey(pubkey) {
      return pubkey.type === "tendermint/PubKeySecp256k1";
    }
    exports.isSecp256k1Pubkey = isSecp256k1Pubkey;
    exports.pubkeyType = {
      /** @see https://github.com/tendermint/tendermint/blob/v0.33.0/crypto/ed25519/ed25519.go#L22 */
      secp256k1: "tendermint/PubKeySecp256k1",
      /** @see https://github.com/tendermint/tendermint/blob/v0.33.0/crypto/secp256k1/secp256k1.go#L23 */
      ed25519: "tendermint/PubKeyEd25519",
      /** @see https://github.com/tendermint/tendermint/blob/v0.33.0/crypto/sr25519/codec.go#L12 */
      sr25519: "tendermint/PubKeySr25519",
      multisigThreshold: "tendermint/PubKeyMultisigThreshold"
    };
    function isSinglePubkey(pubkey) {
      const singPubkeyTypes = [exports.pubkeyType.ed25519, exports.pubkeyType.secp256k1, exports.pubkeyType.sr25519];
      return singPubkeyTypes.includes(pubkey.type);
    }
    exports.isSinglePubkey = isSinglePubkey;
    function isMultisigThresholdPubkey(pubkey) {
      return pubkey.type === "tendermint/PubKeyMultisigThreshold";
    }
    exports.isMultisigThresholdPubkey = isMultisigThresholdPubkey;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/amino/build/encoding.js
var require_encoding = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/amino/build/encoding.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.encodeBech32Pubkey = exports.encodeAminoPubkey = exports.decodeBech32Pubkey = exports.decodeAminoPubkey = exports.encodeEd25519Pubkey = exports.encodeSecp256k1Pubkey = void 0;
    var encoding_1 = require_build2();
    var math_1 = require_build3();
    var utils_1 = require_build4();
    var pubkeys_1 = require_pubkeys();
    function encodeSecp256k1Pubkey(pubkey) {
      if (pubkey.length !== 33 || pubkey[0] !== 2 && pubkey[0] !== 3) {
        throw new Error("Public key must be compressed secp256k1, i.e. 33 bytes starting with 0x02 or 0x03");
      }
      return {
        type: pubkeys_1.pubkeyType.secp256k1,
        value: (0, encoding_1.toBase64)(pubkey)
      };
    }
    exports.encodeSecp256k1Pubkey = encodeSecp256k1Pubkey;
    function encodeEd25519Pubkey(pubkey) {
      if (pubkey.length !== 32) {
        throw new Error("Ed25519 public key must be 32 bytes long");
      }
      return {
        type: pubkeys_1.pubkeyType.ed25519,
        value: (0, encoding_1.toBase64)(pubkey)
      };
    }
    exports.encodeEd25519Pubkey = encodeEd25519Pubkey;
    var pubkeyAminoPrefixSecp256k1 = (0, encoding_1.fromHex)(
      "eb5ae98721"
      /* fixed length */
    );
    var pubkeyAminoPrefixEd25519 = (0, encoding_1.fromHex)(
      "1624de6420"
      /* fixed length */
    );
    var pubkeyAminoPrefixSr25519 = (0, encoding_1.fromHex)(
      "0dfb100520"
      /* fixed length */
    );
    var pubkeyAminoPrefixMultisigThreshold = (0, encoding_1.fromHex)(
      "22c1f7e2"
      /* variable length not included */
    );
    function decodeAminoPubkey(data) {
      if ((0, utils_1.arrayContentStartsWith)(data, pubkeyAminoPrefixSecp256k1)) {
        const rest = data.slice(pubkeyAminoPrefixSecp256k1.length);
        if (rest.length !== 33) {
          throw new Error("Invalid rest data length. Expected 33 bytes (compressed secp256k1 pubkey).");
        }
        return {
          type: pubkeys_1.pubkeyType.secp256k1,
          value: (0, encoding_1.toBase64)(rest)
        };
      } else if ((0, utils_1.arrayContentStartsWith)(data, pubkeyAminoPrefixEd25519)) {
        const rest = data.slice(pubkeyAminoPrefixEd25519.length);
        if (rest.length !== 32) {
          throw new Error("Invalid rest data length. Expected 32 bytes (Ed25519 pubkey).");
        }
        return {
          type: pubkeys_1.pubkeyType.ed25519,
          value: (0, encoding_1.toBase64)(rest)
        };
      } else if ((0, utils_1.arrayContentStartsWith)(data, pubkeyAminoPrefixSr25519)) {
        const rest = data.slice(pubkeyAminoPrefixSr25519.length);
        if (rest.length !== 32) {
          throw new Error("Invalid rest data length. Expected 32 bytes (Sr25519 pubkey).");
        }
        return {
          type: pubkeys_1.pubkeyType.sr25519,
          value: (0, encoding_1.toBase64)(rest)
        };
      } else if ((0, utils_1.arrayContentStartsWith)(data, pubkeyAminoPrefixMultisigThreshold)) {
        return decodeMultisigPubkey(data);
      } else {
        throw new Error("Unsupported public key type. Amino data starts with: " + (0, encoding_1.toHex)(data.slice(0, 5)));
      }
    }
    exports.decodeAminoPubkey = decodeAminoPubkey;
    function decodeBech32Pubkey(bechEncoded) {
      const { data } = (0, encoding_1.fromBech32)(bechEncoded);
      return decodeAminoPubkey(data);
    }
    exports.decodeBech32Pubkey = decodeBech32Pubkey;
    function decodeUvarint(reader) {
      if (reader.length < 1) {
        throw new Error("Can't decode varint. EOF");
      }
      if (reader[0] > 127) {
        throw new Error("Decoding numbers > 127 is not supported here. Please tell those lazy CosmJS maintainers to port the binary.Varint implementation from the Go standard library and write some tests.");
      }
      return [reader[0], 1];
    }
    function decodeMultisigPubkey(data) {
      const reader = Array.from(data);
      const prefixFromReader = reader.splice(0, pubkeyAminoPrefixMultisigThreshold.length);
      if (!(0, utils_1.arrayContentStartsWith)(prefixFromReader, pubkeyAminoPrefixMultisigThreshold)) {
        throw new Error("Invalid multisig prefix.");
      }
      if (reader.shift() != 8) {
        throw new Error("Invalid multisig data. Expecting 0x08 prefix before threshold.");
      }
      const [threshold, thresholdBytesLength] = decodeUvarint(reader);
      reader.splice(0, thresholdBytesLength);
      const pubkeys = [];
      while (reader.length > 0) {
        if (reader.shift() != 18) {
          throw new Error("Invalid multisig data. Expecting 0x12 prefix before participant pubkey length.");
        }
        const [pubkeyLength, pubkeyLengthBytesSize] = decodeUvarint(reader);
        reader.splice(0, pubkeyLengthBytesSize);
        if (reader.length < pubkeyLength) {
          throw new Error("Invalid multisig data length.");
        }
        const encodedPubkey = reader.splice(0, pubkeyLength);
        const pubkey = decodeAminoPubkey(Uint8Array.from(encodedPubkey));
        pubkeys.push(pubkey);
      }
      return {
        type: pubkeys_1.pubkeyType.multisigThreshold,
        value: {
          threshold: threshold.toString(),
          pubkeys
        }
      };
    }
    function encodeUvarint(value) {
      const checked = math_1.Uint53.fromString(value.toString()).toNumber();
      if (checked > 127) {
        throw new Error("Encoding numbers > 127 is not supported here. Please tell those lazy CosmJS maintainers to port the binary.PutUvarint implementation from the Go standard library and write some tests.");
      }
      return [checked];
    }
    function encodeAminoPubkey(pubkey) {
      if ((0, pubkeys_1.isMultisigThresholdPubkey)(pubkey)) {
        const out = Array.from(pubkeyAminoPrefixMultisigThreshold);
        out.push(8);
        out.push(...encodeUvarint(pubkey.value.threshold));
        for (const pubkeyData of pubkey.value.pubkeys.map((p3) => encodeAminoPubkey(p3))) {
          out.push(18);
          out.push(...encodeUvarint(pubkeyData.length));
          out.push(...pubkeyData);
        }
        return new Uint8Array(out);
      } else if ((0, pubkeys_1.isEd25519Pubkey)(pubkey)) {
        return new Uint8Array([...pubkeyAminoPrefixEd25519, ...(0, encoding_1.fromBase64)(pubkey.value)]);
      } else if ((0, pubkeys_1.isSecp256k1Pubkey)(pubkey)) {
        return new Uint8Array([...pubkeyAminoPrefixSecp256k1, ...(0, encoding_1.fromBase64)(pubkey.value)]);
      } else {
        throw new Error("Unsupported pubkey type");
      }
    }
    exports.encodeAminoPubkey = encodeAminoPubkey;
    function encodeBech32Pubkey(pubkey, prefix) {
      return (0, encoding_1.toBech32)(prefix, encodeAminoPubkey(pubkey));
    }
    exports.encodeBech32Pubkey = encodeBech32Pubkey;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/amino/build/addresses.js
var require_addresses = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/amino/build/addresses.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.pubkeyToAddress = exports.pubkeyToRawAddress = exports.rawSecp256k1PubkeyToRawAddress = exports.rawEd25519PubkeyToRawAddress = void 0;
    var crypto_1 = require_build5();
    var encoding_1 = require_build2();
    var encoding_2 = require_encoding();
    var pubkeys_1 = require_pubkeys();
    function rawEd25519PubkeyToRawAddress(pubkeyData) {
      if (pubkeyData.length !== 32) {
        throw new Error(`Invalid Ed25519 pubkey length: ${pubkeyData.length}`);
      }
      return (0, crypto_1.sha256)(pubkeyData).slice(0, 20);
    }
    exports.rawEd25519PubkeyToRawAddress = rawEd25519PubkeyToRawAddress;
    function rawSecp256k1PubkeyToRawAddress(pubkeyData) {
      if (pubkeyData.length !== 33) {
        throw new Error(`Invalid Secp256k1 pubkey length (compressed): ${pubkeyData.length}`);
      }
      return (0, crypto_1.ripemd160)((0, crypto_1.sha256)(pubkeyData));
    }
    exports.rawSecp256k1PubkeyToRawAddress = rawSecp256k1PubkeyToRawAddress;
    function pubkeyToRawAddress(pubkey) {
      if ((0, pubkeys_1.isSecp256k1Pubkey)(pubkey)) {
        const pubkeyData = (0, encoding_1.fromBase64)(pubkey.value);
        return rawSecp256k1PubkeyToRawAddress(pubkeyData);
      } else if ((0, pubkeys_1.isEd25519Pubkey)(pubkey)) {
        const pubkeyData = (0, encoding_1.fromBase64)(pubkey.value);
        return rawEd25519PubkeyToRawAddress(pubkeyData);
      } else if ((0, pubkeys_1.isMultisigThresholdPubkey)(pubkey)) {
        const pubkeyData = (0, encoding_2.encodeAminoPubkey)(pubkey);
        return (0, crypto_1.sha256)(pubkeyData).slice(0, 20);
      } else {
        throw new Error("Unsupported public key type");
      }
    }
    exports.pubkeyToRawAddress = pubkeyToRawAddress;
    function pubkeyToAddress(pubkey, prefix) {
      return (0, encoding_1.toBech32)(prefix, pubkeyToRawAddress(pubkey));
    }
    exports.pubkeyToAddress = pubkeyToAddress;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/amino/build/coins.js
var require_coins2 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/amino/build/coins.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.addCoins = exports.parseCoins = exports.coins = exports.coin = void 0;
    var math_1 = require_build3();
    function coin(amount, denom) {
      let outAmount;
      if (typeof amount === "number") {
        try {
          outAmount = new math_1.Uint53(amount).toString();
        } catch (_err) {
          throw new Error("Given amount is not a safe integer. Consider using a string instead to overcome the limitations of JS numbers.");
        }
      } else {
        if (!amount.match(/^[0-9]+$/)) {
          throw new Error("Invalid unsigned integer string format");
        }
        outAmount = amount.replace(/^0*/, "") || "0";
      }
      return {
        amount: outAmount,
        denom
      };
    }
    exports.coin = coin;
    function coins(amount, denom) {
      return [coin(amount, denom)];
    }
    exports.coins = coins;
    function parseCoins(input) {
      return input.replace(/\s/g, "").split(",").filter(Boolean).map((part) => {
        const match = part.match(/^([0-9]+)([a-zA-Z]+)/);
        if (!match)
          throw new Error("Got an invalid coin string");
        return {
          amount: match[1].replace(/^0+/, "") || "0",
          denom: match[2]
        };
      });
    }
    exports.parseCoins = parseCoins;
    function addCoins(lhs, rhs) {
      if (lhs.denom !== rhs.denom)
        throw new Error("Trying to add two coins with different denoms");
      return {
        amount: math_1.Decimal.fromAtomics(lhs.amount, 0).plus(math_1.Decimal.fromAtomics(rhs.amount, 0)).atomics,
        denom: lhs.denom
      };
    }
    exports.addCoins = addCoins;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/amino/build/multisig.js
var require_multisig2 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/amino/build/multisig.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createMultisigThresholdPubkey = exports.compareArrays = void 0;
    var encoding_1 = require_build2();
    var math_1 = require_build3();
    var addresses_1 = require_addresses();
    function compareArrays(a2, b3) {
      const aHex = (0, encoding_1.toHex)(a2);
      const bHex = (0, encoding_1.toHex)(b3);
      return aHex === bHex ? 0 : aHex < bHex ? -1 : 1;
    }
    exports.compareArrays = compareArrays;
    function createMultisigThresholdPubkey(pubkeys, threshold, nosort = false) {
      const uintThreshold = new math_1.Uint53(threshold);
      if (uintThreshold.toNumber() > pubkeys.length) {
        throw new Error(`Threshold k = ${uintThreshold.toNumber()} exceeds number of keys n = ${pubkeys.length}`);
      }
      const outPubkeys = nosort ? pubkeys : Array.from(pubkeys).sort((lhs, rhs) => {
        const addressLhs = (0, addresses_1.pubkeyToRawAddress)(lhs);
        const addressRhs = (0, addresses_1.pubkeyToRawAddress)(rhs);
        return compareArrays(addressLhs, addressRhs);
      });
      return {
        type: "tendermint/PubKeyMultisigThreshold",
        value: {
          threshold: uintThreshold.toString(),
          pubkeys: outPubkeys
        }
      };
    }
    exports.createMultisigThresholdPubkey = createMultisigThresholdPubkey;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/amino/build/paths.js
var require_paths = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/amino/build/paths.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.makeCosmoshubPath = void 0;
    var crypto_1 = require_build5();
    function makeCosmoshubPath(a2) {
      return [
        crypto_1.Slip10RawIndex.hardened(44),
        crypto_1.Slip10RawIndex.hardened(118),
        crypto_1.Slip10RawIndex.hardened(0),
        crypto_1.Slip10RawIndex.normal(0),
        crypto_1.Slip10RawIndex.normal(a2)
      ];
    }
    exports.makeCosmoshubPath = makeCosmoshubPath;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/amino/build/signature.js
var require_signature = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/amino/build/signature.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.decodeSignature = exports.encodeSecp256k1Signature = void 0;
    var encoding_1 = require_build2();
    var encoding_2 = require_encoding();
    var pubkeys_1 = require_pubkeys();
    function encodeSecp256k1Signature(pubkey, signature) {
      if (signature.length !== 64) {
        throw new Error("Signature must be 64 bytes long. Cosmos SDK uses a 2x32 byte fixed length encoding for the secp256k1 signature integers r and s.");
      }
      return {
        pub_key: (0, encoding_2.encodeSecp256k1Pubkey)(pubkey),
        signature: (0, encoding_1.toBase64)(signature)
      };
    }
    exports.encodeSecp256k1Signature = encodeSecp256k1Signature;
    function decodeSignature(signature) {
      switch (signature.pub_key.type) {
        case pubkeys_1.pubkeyType.secp256k1:
          return {
            pubkey: (0, encoding_1.fromBase64)(signature.pub_key.value),
            signature: (0, encoding_1.fromBase64)(signature.signature)
          };
        default:
          throw new Error("Unsupported pubkey type");
      }
    }
    exports.decodeSignature = decodeSignature;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/amino/build/signdoc.js
var require_signdoc = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/amino/build/signdoc.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.serializeSignDoc = exports.escapeCharacters = exports.makeSignDoc = exports.sortedJsonStringify = void 0;
    var encoding_1 = require_build2();
    var math_1 = require_build3();
    function sortedObject(obj) {
      if (typeof obj !== "object" || obj === null) {
        return obj;
      }
      if (Array.isArray(obj)) {
        return obj.map(sortedObject);
      }
      const sortedKeys = Object.keys(obj).sort();
      const result = {};
      sortedKeys.forEach((key) => {
        result[key] = sortedObject(obj[key]);
      });
      return result;
    }
    function sortedJsonStringify(obj) {
      return JSON.stringify(sortedObject(obj));
    }
    exports.sortedJsonStringify = sortedJsonStringify;
    function makeSignDoc(msgs, fee, chainId, memo, accountNumber, sequence) {
      return {
        chain_id: chainId,
        account_number: math_1.Uint53.fromString(accountNumber.toString()).toString(),
        sequence: math_1.Uint53.fromString(sequence.toString()).toString(),
        fee,
        msgs,
        memo: memo || ""
      };
    }
    exports.makeSignDoc = makeSignDoc;
    function escapeCharacters(input) {
      const amp = /&/g;
      const lt2 = /</g;
      const gt = />/g;
      return input.replace(amp, "\\u0026").replace(lt2, "\\u003c").replace(gt, "\\u003e");
    }
    exports.escapeCharacters = escapeCharacters;
    function serializeSignDoc(signDoc) {
      const serialized = escapeCharacters(sortedJsonStringify(signDoc));
      return (0, encoding_1.toUtf8)(serialized);
    }
    exports.serializeSignDoc = serializeSignDoc;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/amino/build/wallet.js
var require_wallet = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/amino/build/wallet.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.decrypt = exports.encrypt = exports.supportedAlgorithms = exports.executeKdf = exports.cosmjsSalt = void 0;
    var crypto_1 = require_build5();
    var encoding_1 = require_build2();
    exports.cosmjsSalt = (0, encoding_1.toAscii)("The CosmJS salt.");
    async function executeKdf(password, configuration) {
      switch (configuration.algorithm) {
        case "argon2id": {
          const options = configuration.params;
          if (!(0, crypto_1.isArgon2idOptions)(options))
            throw new Error("Invalid format of argon2id params");
          return crypto_1.Argon2id.execute(password, exports.cosmjsSalt, options);
        }
        default:
          throw new Error("Unsupported KDF algorithm");
      }
    }
    exports.executeKdf = executeKdf;
    exports.supportedAlgorithms = {
      xchacha20poly1305Ietf: "xchacha20poly1305-ietf"
    };
    async function encrypt(plaintext, encryptionKey, config) {
      switch (config.algorithm) {
        case exports.supportedAlgorithms.xchacha20poly1305Ietf: {
          const nonce = crypto_1.Random.getBytes(crypto_1.xchacha20NonceLength);
          return new Uint8Array([
            ...nonce,
            ...await crypto_1.Xchacha20poly1305Ietf.encrypt(plaintext, encryptionKey, nonce)
          ]);
        }
        default:
          throw new Error(`Unsupported encryption algorithm: '${config.algorithm}'`);
      }
    }
    exports.encrypt = encrypt;
    async function decrypt(ciphertext, encryptionKey, config) {
      switch (config.algorithm) {
        case exports.supportedAlgorithms.xchacha20poly1305Ietf: {
          const nonce = ciphertext.slice(0, crypto_1.xchacha20NonceLength);
          return crypto_1.Xchacha20poly1305Ietf.decrypt(ciphertext.slice(crypto_1.xchacha20NonceLength), encryptionKey, nonce);
        }
        default:
          throw new Error(`Unsupported encryption algorithm: '${config.algorithm}'`);
      }
    }
    exports.decrypt = decrypt;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/amino/build/secp256k1hdwallet.js
var require_secp256k1hdwallet = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/amino/build/secp256k1hdwallet.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Secp256k1HdWallet = exports.extractKdfConfiguration = void 0;
    var crypto_1 = require_build5();
    var encoding_1 = require_build2();
    var utils_1 = require_build4();
    var addresses_1 = require_addresses();
    var paths_1 = require_paths();
    var signature_1 = require_signature();
    var signdoc_1 = require_signdoc();
    var wallet_1 = require_wallet();
    var serializationTypeV1 = "secp256k1wallet-v1";
    var basicPasswordHashingOptions = {
      algorithm: "argon2id",
      params: {
        outputLength: 32,
        opsLimit: 24,
        memLimitKib: 12 * 1024
      }
    };
    function isDerivationJson(thing) {
      if (!(0, utils_1.isNonNullObject)(thing))
        return false;
      if (typeof thing.hdPath !== "string")
        return false;
      if (typeof thing.prefix !== "string")
        return false;
      return true;
    }
    function extractKdfConfigurationV1(doc) {
      return doc.kdf;
    }
    function extractKdfConfiguration(serialization) {
      const root = JSON.parse(serialization);
      if (!(0, utils_1.isNonNullObject)(root))
        throw new Error("Root document is not an object.");
      switch (root.type) {
        case serializationTypeV1:
          return extractKdfConfigurationV1(root);
        default:
          throw new Error("Unsupported serialization type");
      }
    }
    exports.extractKdfConfiguration = extractKdfConfiguration;
    var defaultOptions = {
      bip39Password: "",
      hdPaths: [(0, paths_1.makeCosmoshubPath)(0)],
      prefix: "cosmos"
    };
    var Secp256k1HdWallet = class _Secp256k1HdWallet {
      constructor(mnemonic, options) {
        const hdPaths = options.hdPaths ?? defaultOptions.hdPaths;
        const prefix = options.prefix ?? defaultOptions.prefix;
        this.secret = mnemonic;
        this.seed = options.seed;
        this.accounts = hdPaths.map((hdPath) => ({
          hdPath,
          prefix
        }));
      }
      /**
       * Restores a wallet from the given BIP39 mnemonic.
       *
       * @param mnemonic Any valid English mnemonic.
       * @param options An optional `Secp256k1HdWalletOptions` object optionally containing a bip39Password, hdPaths, and prefix.
       */
      static async fromMnemonic(mnemonic, options = {}) {
        const mnemonicChecked = new crypto_1.EnglishMnemonic(mnemonic);
        const seed = await crypto_1.Bip39.mnemonicToSeed(mnemonicChecked, options.bip39Password);
        return new _Secp256k1HdWallet(mnemonicChecked, {
          ...options,
          seed
        });
      }
      /**
       * Generates a new wallet with a BIP39 mnemonic of the given length.
       *
       * @param length The number of words in the mnemonic (12, 15, 18, 21 or 24).
       * @param options An optional `Secp256k1HdWalletOptions` object optionally containing a bip39Password, hdPaths, and prefix.
       */
      static async generate(length = 12, options = {}) {
        const entropyLength = 4 * Math.floor(11 * length / 33);
        const entropy = crypto_1.Random.getBytes(entropyLength);
        const mnemonic = crypto_1.Bip39.encode(entropy);
        return _Secp256k1HdWallet.fromMnemonic(mnemonic.toString(), options);
      }
      /**
       * Restores a wallet from an encrypted serialization.
       *
       * @param password The user provided password used to generate an encryption key via a KDF.
       *                 This is not normalized internally (see "Unicode normalization" to learn more).
       */
      static async deserialize(serialization, password) {
        const root = JSON.parse(serialization);
        if (!(0, utils_1.isNonNullObject)(root))
          throw new Error("Root document is not an object.");
        switch (root.type) {
          case serializationTypeV1:
            return _Secp256k1HdWallet.deserializeTypeV1(serialization, password);
          default:
            throw new Error("Unsupported serialization type");
        }
      }
      /**
       * Restores a wallet from an encrypted serialization.
       *
       * This is an advanced alternative to calling `deserialize(serialization, password)` directly, which allows
       * you to offload the KDF execution to a non-UI thread (e.g. in a WebWorker).
       *
       * The caller is responsible for ensuring the key was derived with the given KDF configuration. This can be
       * done using `extractKdfConfiguration(serialization)` and `executeKdf(password, kdfConfiguration)` from this package.
       */
      static async deserializeWithEncryptionKey(serialization, encryptionKey) {
        const root = JSON.parse(serialization);
        if (!(0, utils_1.isNonNullObject)(root))
          throw new Error("Root document is not an object.");
        const untypedRoot = root;
        switch (untypedRoot.type) {
          case serializationTypeV1: {
            const decryptedBytes = await (0, wallet_1.decrypt)((0, encoding_1.fromBase64)(untypedRoot.data), encryptionKey, untypedRoot.encryption);
            const decryptedDocument = JSON.parse((0, encoding_1.fromUtf8)(decryptedBytes));
            const { mnemonic, accounts } = decryptedDocument;
            (0, utils_1.assert)(typeof mnemonic === "string");
            if (!Array.isArray(accounts))
              throw new Error("Property 'accounts' is not an array");
            if (!accounts.every((account) => isDerivationJson(account))) {
              throw new Error("Account is not in the correct format.");
            }
            const firstPrefix = accounts[0].prefix;
            if (!accounts.every(({ prefix }) => prefix === firstPrefix)) {
              throw new Error("Accounts do not all have the same prefix");
            }
            const hdPaths = accounts.map(({ hdPath }) => (0, crypto_1.stringToPath)(hdPath));
            return _Secp256k1HdWallet.fromMnemonic(mnemonic, {
              hdPaths,
              prefix: firstPrefix
            });
          }
          default:
            throw new Error("Unsupported serialization type");
        }
      }
      static async deserializeTypeV1(serialization, password) {
        const root = JSON.parse(serialization);
        if (!(0, utils_1.isNonNullObject)(root))
          throw new Error("Root document is not an object.");
        const encryptionKey = await (0, wallet_1.executeKdf)(password, root.kdf);
        return _Secp256k1HdWallet.deserializeWithEncryptionKey(serialization, encryptionKey);
      }
      get mnemonic() {
        return this.secret.toString();
      }
      async getAccounts() {
        const accountsWithPrivkeys = await this.getAccountsWithPrivkeys();
        return accountsWithPrivkeys.map(({ algo, pubkey, address }) => ({
          algo,
          pubkey,
          address
        }));
      }
      async signAmino(signerAddress, signDoc) {
        const accounts = await this.getAccountsWithPrivkeys();
        const account = accounts.find(({ address }) => address === signerAddress);
        if (account === void 0) {
          throw new Error(`Address ${signerAddress} not found in wallet`);
        }
        const { privkey, pubkey } = account;
        const message = (0, crypto_1.sha256)((0, signdoc_1.serializeSignDoc)(signDoc));
        const signature = await crypto_1.Secp256k1.createSignature(message, privkey);
        const signatureBytes = new Uint8Array([...signature.r(32), ...signature.s(32)]);
        return {
          signed: signDoc,
          signature: (0, signature_1.encodeSecp256k1Signature)(pubkey, signatureBytes)
        };
      }
      /**
       * Generates an encrypted serialization of this wallet.
       *
       * @param password The user provided password used to generate an encryption key via a KDF.
       *                 This is not normalized internally (see "Unicode normalization" to learn more).
       */
      async serialize(password) {
        const kdfConfiguration = basicPasswordHashingOptions;
        const encryptionKey = await (0, wallet_1.executeKdf)(password, kdfConfiguration);
        return this.serializeWithEncryptionKey(encryptionKey, kdfConfiguration);
      }
      /**
       * Generates an encrypted serialization of this wallet.
       *
       * This is an advanced alternative to calling `serialize(password)` directly, which allows you to
       * offload the KDF execution to a non-UI thread (e.g. in a WebWorker).
       *
       * The caller is responsible for ensuring the key was derived with the given KDF options. If this
       * is not the case, the wallet cannot be restored with the original password.
       */
      async serializeWithEncryptionKey(encryptionKey, kdfConfiguration) {
        const dataToEncrypt = {
          mnemonic: this.mnemonic,
          accounts: this.accounts.map(({ hdPath, prefix }) => ({
            hdPath: (0, crypto_1.pathToString)(hdPath),
            prefix
          }))
        };
        const dataToEncryptRaw = (0, encoding_1.toUtf8)(JSON.stringify(dataToEncrypt));
        const encryptionConfiguration = {
          algorithm: wallet_1.supportedAlgorithms.xchacha20poly1305Ietf
        };
        const encryptedData = await (0, wallet_1.encrypt)(dataToEncryptRaw, encryptionKey, encryptionConfiguration);
        const out = {
          type: serializationTypeV1,
          kdf: kdfConfiguration,
          encryption: encryptionConfiguration,
          data: (0, encoding_1.toBase64)(encryptedData)
        };
        return JSON.stringify(out);
      }
      async getKeyPair(hdPath) {
        const { privkey } = crypto_1.Slip10.derivePath(crypto_1.Slip10Curve.Secp256k1, this.seed, hdPath);
        const { pubkey } = await crypto_1.Secp256k1.makeKeypair(privkey);
        return {
          privkey,
          pubkey: crypto_1.Secp256k1.compressPubkey(pubkey)
        };
      }
      async getAccountsWithPrivkeys() {
        return Promise.all(this.accounts.map(async ({ hdPath, prefix }) => {
          const { privkey, pubkey } = await this.getKeyPair(hdPath);
          const address = (0, encoding_1.toBech32)(prefix, (0, addresses_1.rawSecp256k1PubkeyToRawAddress)(pubkey));
          return {
            algo: "secp256k1",
            privkey,
            pubkey,
            address
          };
        }));
      }
    };
    exports.Secp256k1HdWallet = Secp256k1HdWallet;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/amino/build/secp256k1wallet.js
var require_secp256k1wallet = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/amino/build/secp256k1wallet.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Secp256k1Wallet = void 0;
    var crypto_1 = require_build5();
    var encoding_1 = require_build2();
    var addresses_1 = require_addresses();
    var signature_1 = require_signature();
    var signdoc_1 = require_signdoc();
    var Secp256k1Wallet = class _Secp256k1Wallet {
      constructor(privkey, pubkey, prefix) {
        this.privkey = privkey;
        this.pubkey = pubkey;
        this.prefix = prefix;
      }
      /**
       * Creates a Secp256k1Wallet from the given private key
       *
       * @param privkey The private key.
       * @param prefix The bech32 address prefix (human readable part). Defaults to "cosmos".
       */
      static async fromKey(privkey, prefix = "cosmos") {
        const uncompressed = (await crypto_1.Secp256k1.makeKeypair(privkey)).pubkey;
        return new _Secp256k1Wallet(privkey, crypto_1.Secp256k1.compressPubkey(uncompressed), prefix);
      }
      get address() {
        return (0, encoding_1.toBech32)(this.prefix, (0, addresses_1.rawSecp256k1PubkeyToRawAddress)(this.pubkey));
      }
      async getAccounts() {
        return [
          {
            algo: "secp256k1",
            address: this.address,
            pubkey: this.pubkey
          }
        ];
      }
      async signAmino(signerAddress, signDoc) {
        if (signerAddress !== this.address) {
          throw new Error(`Address ${signerAddress} not found in wallet`);
        }
        const message = new crypto_1.Sha256((0, signdoc_1.serializeSignDoc)(signDoc)).digest();
        const signature = await crypto_1.Secp256k1.createSignature(message, this.privkey);
        const signatureBytes = new Uint8Array([...signature.r(32), ...signature.s(32)]);
        return {
          signed: signDoc,
          signature: (0, signature_1.encodeSecp256k1Signature)(this.pubkey, signatureBytes)
        };
      }
    };
    exports.Secp256k1Wallet = Secp256k1Wallet;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/amino/build/stdtx.js
var require_stdtx = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/amino/build/stdtx.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.makeStdTx = exports.isStdTx = void 0;
    function isStdTx(txValue) {
      const { memo, msg, fee, signatures } = txValue;
      return typeof memo === "string" && Array.isArray(msg) && typeof fee === "object" && Array.isArray(signatures);
    }
    exports.isStdTx = isStdTx;
    function makeStdTx(content, signatures) {
      return {
        msg: content.msgs,
        fee: content.fee,
        memo: content.memo,
        signatures: Array.isArray(signatures) ? signatures : [signatures]
      };
    }
    exports.makeStdTx = makeStdTx;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/amino/build/index.js
var require_build6 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/amino/build/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.executeKdf = exports.makeStdTx = exports.isStdTx = exports.serializeSignDoc = exports.makeSignDoc = exports.encodeSecp256k1Signature = exports.decodeSignature = exports.Secp256k1Wallet = exports.Secp256k1HdWallet = exports.extractKdfConfiguration = exports.pubkeyType = exports.isSinglePubkey = exports.isSecp256k1Pubkey = exports.isMultisigThresholdPubkey = exports.isEd25519Pubkey = exports.makeCosmoshubPath = exports.createMultisigThresholdPubkey = exports.encodeSecp256k1Pubkey = exports.encodeEd25519Pubkey = exports.encodeBech32Pubkey = exports.encodeAminoPubkey = exports.decodeBech32Pubkey = exports.decodeAminoPubkey = exports.parseCoins = exports.coins = exports.coin = exports.addCoins = exports.rawSecp256k1PubkeyToRawAddress = exports.rawEd25519PubkeyToRawAddress = exports.pubkeyToRawAddress = exports.pubkeyToAddress = void 0;
    var addresses_1 = require_addresses();
    Object.defineProperty(exports, "pubkeyToAddress", { enumerable: true, get: function() {
      return addresses_1.pubkeyToAddress;
    } });
    Object.defineProperty(exports, "pubkeyToRawAddress", { enumerable: true, get: function() {
      return addresses_1.pubkeyToRawAddress;
    } });
    Object.defineProperty(exports, "rawEd25519PubkeyToRawAddress", { enumerable: true, get: function() {
      return addresses_1.rawEd25519PubkeyToRawAddress;
    } });
    Object.defineProperty(exports, "rawSecp256k1PubkeyToRawAddress", { enumerable: true, get: function() {
      return addresses_1.rawSecp256k1PubkeyToRawAddress;
    } });
    var coins_1 = require_coins2();
    Object.defineProperty(exports, "addCoins", { enumerable: true, get: function() {
      return coins_1.addCoins;
    } });
    Object.defineProperty(exports, "coin", { enumerable: true, get: function() {
      return coins_1.coin;
    } });
    Object.defineProperty(exports, "coins", { enumerable: true, get: function() {
      return coins_1.coins;
    } });
    Object.defineProperty(exports, "parseCoins", { enumerable: true, get: function() {
      return coins_1.parseCoins;
    } });
    var encoding_1 = require_encoding();
    Object.defineProperty(exports, "decodeAminoPubkey", { enumerable: true, get: function() {
      return encoding_1.decodeAminoPubkey;
    } });
    Object.defineProperty(exports, "decodeBech32Pubkey", { enumerable: true, get: function() {
      return encoding_1.decodeBech32Pubkey;
    } });
    Object.defineProperty(exports, "encodeAminoPubkey", { enumerable: true, get: function() {
      return encoding_1.encodeAminoPubkey;
    } });
    Object.defineProperty(exports, "encodeBech32Pubkey", { enumerable: true, get: function() {
      return encoding_1.encodeBech32Pubkey;
    } });
    Object.defineProperty(exports, "encodeEd25519Pubkey", { enumerable: true, get: function() {
      return encoding_1.encodeEd25519Pubkey;
    } });
    Object.defineProperty(exports, "encodeSecp256k1Pubkey", { enumerable: true, get: function() {
      return encoding_1.encodeSecp256k1Pubkey;
    } });
    var multisig_1 = require_multisig2();
    Object.defineProperty(exports, "createMultisigThresholdPubkey", { enumerable: true, get: function() {
      return multisig_1.createMultisigThresholdPubkey;
    } });
    var paths_1 = require_paths();
    Object.defineProperty(exports, "makeCosmoshubPath", { enumerable: true, get: function() {
      return paths_1.makeCosmoshubPath;
    } });
    var pubkeys_1 = require_pubkeys();
    Object.defineProperty(exports, "isEd25519Pubkey", { enumerable: true, get: function() {
      return pubkeys_1.isEd25519Pubkey;
    } });
    Object.defineProperty(exports, "isMultisigThresholdPubkey", { enumerable: true, get: function() {
      return pubkeys_1.isMultisigThresholdPubkey;
    } });
    Object.defineProperty(exports, "isSecp256k1Pubkey", { enumerable: true, get: function() {
      return pubkeys_1.isSecp256k1Pubkey;
    } });
    Object.defineProperty(exports, "isSinglePubkey", { enumerable: true, get: function() {
      return pubkeys_1.isSinglePubkey;
    } });
    Object.defineProperty(exports, "pubkeyType", { enumerable: true, get: function() {
      return pubkeys_1.pubkeyType;
    } });
    var secp256k1hdwallet_1 = require_secp256k1hdwallet();
    Object.defineProperty(exports, "extractKdfConfiguration", { enumerable: true, get: function() {
      return secp256k1hdwallet_1.extractKdfConfiguration;
    } });
    Object.defineProperty(exports, "Secp256k1HdWallet", { enumerable: true, get: function() {
      return secp256k1hdwallet_1.Secp256k1HdWallet;
    } });
    var secp256k1wallet_1 = require_secp256k1wallet();
    Object.defineProperty(exports, "Secp256k1Wallet", { enumerable: true, get: function() {
      return secp256k1wallet_1.Secp256k1Wallet;
    } });
    var signature_1 = require_signature();
    Object.defineProperty(exports, "decodeSignature", { enumerable: true, get: function() {
      return signature_1.decodeSignature;
    } });
    Object.defineProperty(exports, "encodeSecp256k1Signature", { enumerable: true, get: function() {
      return signature_1.encodeSecp256k1Signature;
    } });
    var signdoc_1 = require_signdoc();
    Object.defineProperty(exports, "makeSignDoc", { enumerable: true, get: function() {
      return signdoc_1.makeSignDoc;
    } });
    Object.defineProperty(exports, "serializeSignDoc", { enumerable: true, get: function() {
      return signdoc_1.serializeSignDoc;
    } });
    var stdtx_1 = require_stdtx();
    Object.defineProperty(exports, "isStdTx", { enumerable: true, get: function() {
      return stdtx_1.isStdTx;
    } });
    Object.defineProperty(exports, "makeStdTx", { enumerable: true, get: function() {
      return stdtx_1.makeStdTx;
    } });
    var wallet_1 = require_wallet();
    Object.defineProperty(exports, "executeKdf", { enumerable: true, get: function() {
      return wallet_1.executeKdf;
    } });
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/proto-signing/build/signing.js
var require_signing2 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/proto-signing/build/signing.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.makeSignBytes = exports.makeSignDoc = exports.makeAuthInfoBytes = void 0;
    var utils_1 = require_build4();
    var signing_1 = require_signing();
    var tx_1 = require_tx();
    var long_1 = __importDefault(require_long());
    function makeSignerInfos(signers, signMode) {
      return signers.map(({ pubkey, sequence }) => ({
        publicKey: pubkey,
        modeInfo: {
          single: { mode: signMode }
        },
        sequence: long_1.default.fromNumber(sequence)
      }));
    }
    function makeAuthInfoBytes(signers, feeAmount, gasLimit, feeGranter, feePayer, signMode = signing_1.SignMode.SIGN_MODE_DIRECT) {
      (0, utils_1.assert)(feeGranter === void 0 || typeof feeGranter === "string", "feeGranter must be undefined or string");
      (0, utils_1.assert)(feePayer === void 0 || typeof feePayer === "string", "feePayer must be undefined or string");
      const authInfo = tx_1.AuthInfo.fromPartial({
        signerInfos: makeSignerInfos(signers, signMode),
        fee: {
          amount: [...feeAmount],
          gasLimit: long_1.default.fromNumber(gasLimit),
          granter: feeGranter,
          payer: feePayer
        }
      });
      return tx_1.AuthInfo.encode(authInfo).finish();
    }
    exports.makeAuthInfoBytes = makeAuthInfoBytes;
    function makeSignDoc(bodyBytes, authInfoBytes, chainId, accountNumber) {
      return {
        bodyBytes,
        authInfoBytes,
        chainId,
        accountNumber: long_1.default.fromNumber(accountNumber)
      };
    }
    exports.makeSignDoc = makeSignDoc;
    function makeSignBytes({ accountNumber, authInfoBytes, bodyBytes, chainId }) {
      const signDoc = tx_1.SignDoc.fromPartial({
        accountNumber,
        authInfoBytes,
        bodyBytes,
        chainId
      });
      return tx_1.SignDoc.encode(signDoc).finish();
    }
    exports.makeSignBytes = makeSignBytes;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/proto-signing/build/wallet.js
var require_wallet2 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/proto-signing/build/wallet.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.decrypt = exports.encrypt = exports.supportedAlgorithms = exports.executeKdf = exports.cosmjsSalt = void 0;
    var crypto_1 = require_build5();
    var encoding_1 = require_build2();
    exports.cosmjsSalt = (0, encoding_1.toAscii)("The CosmJS salt.");
    async function executeKdf(password, configuration) {
      switch (configuration.algorithm) {
        case "argon2id": {
          const options = configuration.params;
          if (!(0, crypto_1.isArgon2idOptions)(options))
            throw new Error("Invalid format of argon2id params");
          return crypto_1.Argon2id.execute(password, exports.cosmjsSalt, options);
        }
        default:
          throw new Error("Unsupported KDF algorithm");
      }
    }
    exports.executeKdf = executeKdf;
    exports.supportedAlgorithms = {
      xchacha20poly1305Ietf: "xchacha20poly1305-ietf"
    };
    async function encrypt(plaintext, encryptionKey, config) {
      switch (config.algorithm) {
        case exports.supportedAlgorithms.xchacha20poly1305Ietf: {
          const nonce = crypto_1.Random.getBytes(crypto_1.xchacha20NonceLength);
          return new Uint8Array([
            ...nonce,
            ...await crypto_1.Xchacha20poly1305Ietf.encrypt(plaintext, encryptionKey, nonce)
          ]);
        }
        default:
          throw new Error(`Unsupported encryption algorithm: '${config.algorithm}'`);
      }
    }
    exports.encrypt = encrypt;
    async function decrypt(ciphertext, encryptionKey, config) {
      switch (config.algorithm) {
        case exports.supportedAlgorithms.xchacha20poly1305Ietf: {
          const nonce = ciphertext.slice(0, crypto_1.xchacha20NonceLength);
          return crypto_1.Xchacha20poly1305Ietf.decrypt(ciphertext.slice(crypto_1.xchacha20NonceLength), encryptionKey, nonce);
        }
        default:
          throw new Error(`Unsupported encryption algorithm: '${config.algorithm}'`);
      }
    }
    exports.decrypt = decrypt;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/proto-signing/build/directsecp256k1hdwallet.js
var require_directsecp256k1hdwallet = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/proto-signing/build/directsecp256k1hdwallet.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.DirectSecp256k1HdWallet = exports.extractKdfConfiguration = void 0;
    var amino_1 = require_build6();
    var crypto_1 = require_build5();
    var encoding_1 = require_build2();
    var utils_1 = require_build4();
    var signing_1 = require_signing2();
    var wallet_1 = require_wallet2();
    var serializationTypeV1 = "directsecp256k1hdwallet-v1";
    var basicPasswordHashingOptions = {
      algorithm: "argon2id",
      params: {
        outputLength: 32,
        opsLimit: 24,
        memLimitKib: 12 * 1024
      }
    };
    function isDerivationJson(thing) {
      if (!(0, utils_1.isNonNullObject)(thing))
        return false;
      if (typeof thing.hdPath !== "string")
        return false;
      if (typeof thing.prefix !== "string")
        return false;
      return true;
    }
    function extractKdfConfigurationV1(doc) {
      return doc.kdf;
    }
    function extractKdfConfiguration(serialization) {
      const root = JSON.parse(serialization);
      if (!(0, utils_1.isNonNullObject)(root))
        throw new Error("Root document is not an object.");
      switch (root.type) {
        case serializationTypeV1:
          return extractKdfConfigurationV1(root);
        default:
          throw new Error("Unsupported serialization type");
      }
    }
    exports.extractKdfConfiguration = extractKdfConfiguration;
    var defaultOptions = {
      bip39Password: "",
      hdPaths: [(0, amino_1.makeCosmoshubPath)(0)],
      prefix: "cosmos"
    };
    var DirectSecp256k1HdWallet = class _DirectSecp256k1HdWallet {
      constructor(mnemonic, options) {
        const prefix = options.prefix ?? defaultOptions.prefix;
        const hdPaths = options.hdPaths ?? defaultOptions.hdPaths;
        this.secret = mnemonic;
        this.seed = options.seed;
        this.accounts = hdPaths.map((hdPath) => ({
          hdPath,
          prefix
        }));
      }
      /**
       * Restores a wallet from the given BIP39 mnemonic.
       *
       * @param mnemonic Any valid English mnemonic.
       * @param options An optional `DirectSecp256k1HdWalletOptions` object optionally containing a bip39Password, hdPaths, and prefix.
       */
      static async fromMnemonic(mnemonic, options = {}) {
        const mnemonicChecked = new crypto_1.EnglishMnemonic(mnemonic);
        const seed = await crypto_1.Bip39.mnemonicToSeed(mnemonicChecked, options.bip39Password);
        return new _DirectSecp256k1HdWallet(mnemonicChecked, {
          ...options,
          seed
        });
      }
      /**
       * Generates a new wallet with a BIP39 mnemonic of the given length.
       *
       * @param length The number of words in the mnemonic (12, 15, 18, 21 or 24).
       * @param options An optional `DirectSecp256k1HdWalletOptions` object optionally containing a bip39Password, hdPaths, and prefix.
       */
      static async generate(length = 12, options = {}) {
        const entropyLength = 4 * Math.floor(11 * length / 33);
        const entropy = crypto_1.Random.getBytes(entropyLength);
        const mnemonic = crypto_1.Bip39.encode(entropy);
        return _DirectSecp256k1HdWallet.fromMnemonic(mnemonic.toString(), options);
      }
      /**
       * Restores a wallet from an encrypted serialization.
       *
       * @param password The user provided password used to generate an encryption key via a KDF.
       *                 This is not normalized internally (see "Unicode normalization" to learn more).
       */
      static async deserialize(serialization, password) {
        const root = JSON.parse(serialization);
        if (!(0, utils_1.isNonNullObject)(root))
          throw new Error("Root document is not an object.");
        switch (root.type) {
          case serializationTypeV1:
            return _DirectSecp256k1HdWallet.deserializeTypeV1(serialization, password);
          default:
            throw new Error("Unsupported serialization type");
        }
      }
      /**
       * Restores a wallet from an encrypted serialization.
       *
       * This is an advanced alternative to calling `deserialize(serialization, password)` directly, which allows
       * you to offload the KDF execution to a non-UI thread (e.g. in a WebWorker).
       *
       * The caller is responsible for ensuring the key was derived with the given KDF configuration. This can be
       * done using `extractKdfConfiguration(serialization)` and `executeKdf(password, kdfConfiguration)` from this package.
       */
      static async deserializeWithEncryptionKey(serialization, encryptionKey) {
        const root = JSON.parse(serialization);
        if (!(0, utils_1.isNonNullObject)(root))
          throw new Error("Root document is not an object.");
        const untypedRoot = root;
        switch (untypedRoot.type) {
          case serializationTypeV1: {
            const decryptedBytes = await (0, wallet_1.decrypt)((0, encoding_1.fromBase64)(untypedRoot.data), encryptionKey, untypedRoot.encryption);
            const decryptedDocument = JSON.parse((0, encoding_1.fromUtf8)(decryptedBytes));
            const { mnemonic, accounts } = decryptedDocument;
            (0, utils_1.assert)(typeof mnemonic === "string");
            if (!Array.isArray(accounts))
              throw new Error("Property 'accounts' is not an array");
            if (!accounts.every((account) => isDerivationJson(account))) {
              throw new Error("Account is not in the correct format.");
            }
            const firstPrefix = accounts[0].prefix;
            if (!accounts.every(({ prefix }) => prefix === firstPrefix)) {
              throw new Error("Accounts do not all have the same prefix");
            }
            const hdPaths = accounts.map(({ hdPath }) => (0, crypto_1.stringToPath)(hdPath));
            return _DirectSecp256k1HdWallet.fromMnemonic(mnemonic, {
              hdPaths,
              prefix: firstPrefix
            });
          }
          default:
            throw new Error("Unsupported serialization type");
        }
      }
      static async deserializeTypeV1(serialization, password) {
        const root = JSON.parse(serialization);
        if (!(0, utils_1.isNonNullObject)(root))
          throw new Error("Root document is not an object.");
        const encryptionKey = await (0, wallet_1.executeKdf)(password, root.kdf);
        return _DirectSecp256k1HdWallet.deserializeWithEncryptionKey(serialization, encryptionKey);
      }
      get mnemonic() {
        return this.secret.toString();
      }
      async getAccounts() {
        const accountsWithPrivkeys = await this.getAccountsWithPrivkeys();
        return accountsWithPrivkeys.map(({ algo, pubkey, address }) => ({
          algo,
          pubkey,
          address
        }));
      }
      async signDirect(signerAddress, signDoc) {
        const accounts = await this.getAccountsWithPrivkeys();
        const account = accounts.find(({ address }) => address === signerAddress);
        if (account === void 0) {
          throw new Error(`Address ${signerAddress} not found in wallet`);
        }
        const { privkey, pubkey } = account;
        const signBytes = (0, signing_1.makeSignBytes)(signDoc);
        const hashedMessage = (0, crypto_1.sha256)(signBytes);
        const signature = await crypto_1.Secp256k1.createSignature(hashedMessage, privkey);
        const signatureBytes = new Uint8Array([...signature.r(32), ...signature.s(32)]);
        const stdSignature = (0, amino_1.encodeSecp256k1Signature)(pubkey, signatureBytes);
        return {
          signed: signDoc,
          signature: stdSignature
        };
      }
      /**
       * Generates an encrypted serialization of this wallet.
       *
       * @param password The user provided password used to generate an encryption key via a KDF.
       *                 This is not normalized internally (see "Unicode normalization" to learn more).
       */
      async serialize(password) {
        const kdfConfiguration = basicPasswordHashingOptions;
        const encryptionKey = await (0, wallet_1.executeKdf)(password, kdfConfiguration);
        return this.serializeWithEncryptionKey(encryptionKey, kdfConfiguration);
      }
      /**
       * Generates an encrypted serialization of this wallet.
       *
       * This is an advanced alternative to calling `serialize(password)` directly, which allows you to
       * offload the KDF execution to a non-UI thread (e.g. in a WebWorker).
       *
       * The caller is responsible for ensuring the key was derived with the given KDF options. If this
       * is not the case, the wallet cannot be restored with the original password.
       */
      async serializeWithEncryptionKey(encryptionKey, kdfConfiguration) {
        const dataToEncrypt = {
          mnemonic: this.mnemonic,
          accounts: this.accounts.map(({ hdPath, prefix }) => ({
            hdPath: (0, crypto_1.pathToString)(hdPath),
            prefix
          }))
        };
        const dataToEncryptRaw = (0, encoding_1.toUtf8)(JSON.stringify(dataToEncrypt));
        const encryptionConfiguration = {
          algorithm: wallet_1.supportedAlgorithms.xchacha20poly1305Ietf
        };
        const encryptedData = await (0, wallet_1.encrypt)(dataToEncryptRaw, encryptionKey, encryptionConfiguration);
        const out = {
          type: serializationTypeV1,
          kdf: kdfConfiguration,
          encryption: encryptionConfiguration,
          data: (0, encoding_1.toBase64)(encryptedData)
        };
        return JSON.stringify(out);
      }
      async getKeyPair(hdPath) {
        const { privkey } = crypto_1.Slip10.derivePath(crypto_1.Slip10Curve.Secp256k1, this.seed, hdPath);
        const { pubkey } = await crypto_1.Secp256k1.makeKeypair(privkey);
        return {
          privkey,
          pubkey: crypto_1.Secp256k1.compressPubkey(pubkey)
        };
      }
      async getAccountsWithPrivkeys() {
        return Promise.all(this.accounts.map(async ({ hdPath, prefix }) => {
          const { privkey, pubkey } = await this.getKeyPair(hdPath);
          const address = (0, encoding_1.toBech32)(prefix, (0, amino_1.rawSecp256k1PubkeyToRawAddress)(pubkey));
          return {
            algo: "secp256k1",
            privkey,
            pubkey,
            address
          };
        }));
      }
    };
    exports.DirectSecp256k1HdWallet = DirectSecp256k1HdWallet;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/proto-signing/build/directsecp256k1wallet.js
var require_directsecp256k1wallet = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/proto-signing/build/directsecp256k1wallet.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.DirectSecp256k1Wallet = void 0;
    var amino_1 = require_build6();
    var crypto_1 = require_build5();
    var encoding_1 = require_build2();
    var signing_1 = require_signing2();
    var DirectSecp256k1Wallet = class _DirectSecp256k1Wallet {
      constructor(privkey, pubkey, prefix) {
        this.privkey = privkey;
        this.pubkey = pubkey;
        this.prefix = prefix;
      }
      /**
       * Creates a DirectSecp256k1Wallet from the given private key
       *
       * @param privkey The private key.
       * @param prefix The bech32 address prefix (human readable part). Defaults to "cosmos".
       */
      static async fromKey(privkey, prefix = "cosmos") {
        const uncompressed = (await crypto_1.Secp256k1.makeKeypair(privkey)).pubkey;
        return new _DirectSecp256k1Wallet(privkey, crypto_1.Secp256k1.compressPubkey(uncompressed), prefix);
      }
      get address() {
        return (0, encoding_1.toBech32)(this.prefix, (0, amino_1.rawSecp256k1PubkeyToRawAddress)(this.pubkey));
      }
      async getAccounts() {
        return [
          {
            algo: "secp256k1",
            address: this.address,
            pubkey: this.pubkey
          }
        ];
      }
      async signDirect(address, signDoc) {
        const signBytes = (0, signing_1.makeSignBytes)(signDoc);
        if (address !== this.address) {
          throw new Error(`Address ${address} not found in wallet`);
        }
        const hashedMessage = (0, crypto_1.sha256)(signBytes);
        const signature = await crypto_1.Secp256k1.createSignature(hashedMessage, this.privkey);
        const signatureBytes = new Uint8Array([...signature.r(32), ...signature.s(32)]);
        const stdSignature = (0, amino_1.encodeSecp256k1Signature)(this.pubkey, signatureBytes);
        return {
          signed: signDoc,
          signature: stdSignature
        };
      }
    };
    exports.DirectSecp256k1Wallet = DirectSecp256k1Wallet;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/proto-signing/build/paths.js
var require_paths2 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/proto-signing/build/paths.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.makeCosmoshubPath = void 0;
    var crypto_1 = require_build5();
    function makeCosmoshubPath(a2) {
      return [
        crypto_1.Slip10RawIndex.hardened(44),
        crypto_1.Slip10RawIndex.hardened(118),
        crypto_1.Slip10RawIndex.hardened(0),
        crypto_1.Slip10RawIndex.normal(0),
        crypto_1.Slip10RawIndex.normal(a2)
      ];
    }
    exports.makeCosmoshubPath = makeCosmoshubPath;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/crypto/ed25519/keys.js
var require_keys = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/crypto/ed25519/keys.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PrivKey = exports.PubKey = exports.protobufPackage = void 0;
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.crypto.ed25519";
    function createBasePubKey() {
      return {
        key: new Uint8Array()
      };
    }
    exports.PubKey = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.key.length !== 0) {
          writer.uint32(10).bytes(message.key);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBasePubKey();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.key = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          key: (0, helpers_1.isSet)(object.key) ? (0, helpers_1.bytesFromBase64)(object.key) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.key !== void 0 && (obj.key = (0, helpers_1.base64FromBytes)(message.key !== void 0 ? message.key : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBasePubKey();
        message.key = object.key ?? new Uint8Array();
        return message;
      }
    };
    function createBasePrivKey() {
      return {
        key: new Uint8Array()
      };
    }
    exports.PrivKey = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.key.length !== 0) {
          writer.uint32(10).bytes(message.key);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBasePrivKey();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.key = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          key: (0, helpers_1.isSet)(object.key) ? (0, helpers_1.bytesFromBase64)(object.key) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.key !== void 0 && (obj.key = (0, helpers_1.base64FromBytes)(message.key !== void 0 ? message.key : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBasePrivKey();
        message.key = object.key ?? new Uint8Array();
        return message;
      }
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/crypto/multisig/keys.js
var require_keys2 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/crypto/multisig/keys.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.LegacyAminoPubKey = exports.protobufPackage = void 0;
    var any_1 = require_any();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.crypto.multisig";
    function createBaseLegacyAminoPubKey() {
      return {
        threshold: 0,
        publicKeys: []
      };
    }
    exports.LegacyAminoPubKey = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.threshold !== 0) {
          writer.uint32(8).uint32(message.threshold);
        }
        for (const v3 of message.publicKeys) {
          any_1.Any.encode(v3, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseLegacyAminoPubKey();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.threshold = reader.uint32();
              break;
            case 2:
              message.publicKeys.push(any_1.Any.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          threshold: (0, helpers_1.isSet)(object.threshold) ? Number(object.threshold) : 0,
          publicKeys: Array.isArray(object == null ? void 0 : object.publicKeys) ? object.publicKeys.map((e2) => any_1.Any.fromJSON(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.threshold !== void 0 && (obj.threshold = Math.round(message.threshold));
        if (message.publicKeys) {
          obj.publicKeys = message.publicKeys.map((e2) => e2 ? any_1.Any.toJSON(e2) : void 0);
        } else {
          obj.publicKeys = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseLegacyAminoPubKey();
        message.threshold = object.threshold ?? 0;
        message.publicKeys = ((_a = object.publicKeys) == null ? void 0 : _a.map((e2) => any_1.Any.fromPartial(e2))) || [];
        return message;
      }
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/crypto/secp256k1/keys.js
var require_keys3 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/crypto/secp256k1/keys.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PrivKey = exports.PubKey = exports.protobufPackage = void 0;
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.crypto.secp256k1";
    function createBasePubKey() {
      return {
        key: new Uint8Array()
      };
    }
    exports.PubKey = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.key.length !== 0) {
          writer.uint32(10).bytes(message.key);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBasePubKey();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.key = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          key: (0, helpers_1.isSet)(object.key) ? (0, helpers_1.bytesFromBase64)(object.key) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.key !== void 0 && (obj.key = (0, helpers_1.base64FromBytes)(message.key !== void 0 ? message.key : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBasePubKey();
        message.key = object.key ?? new Uint8Array();
        return message;
      }
    };
    function createBasePrivKey() {
      return {
        key: new Uint8Array()
      };
    }
    exports.PrivKey = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.key.length !== 0) {
          writer.uint32(10).bytes(message.key);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBasePrivKey();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.key = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          key: (0, helpers_1.isSet)(object.key) ? (0, helpers_1.bytesFromBase64)(object.key) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.key !== void 0 && (obj.key = (0, helpers_1.base64FromBytes)(message.key !== void 0 ? message.key : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBasePrivKey();
        message.key = object.key ?? new Uint8Array();
        return message;
      }
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/proto-signing/build/pubkey.js
var require_pubkey = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/proto-signing/build/pubkey.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.decodePubkey = exports.anyToSinglePubkey = exports.encodePubkey = void 0;
    var amino_1 = require_build6();
    var encoding_1 = require_build2();
    var math_1 = require_build3();
    var keys_1 = require_keys();
    var keys_2 = require_keys2();
    var keys_3 = require_keys3();
    var any_1 = require_any();
    function encodePubkey(pubkey) {
      if ((0, amino_1.isSecp256k1Pubkey)(pubkey)) {
        const pubkeyProto = keys_3.PubKey.fromPartial({
          key: (0, encoding_1.fromBase64)(pubkey.value)
        });
        return any_1.Any.fromPartial({
          typeUrl: "/cosmos.crypto.secp256k1.PubKey",
          value: Uint8Array.from(keys_3.PubKey.encode(pubkeyProto).finish())
        });
      } else if ((0, amino_1.isEd25519Pubkey)(pubkey)) {
        const pubkeyProto = keys_1.PubKey.fromPartial({
          key: (0, encoding_1.fromBase64)(pubkey.value)
        });
        return any_1.Any.fromPartial({
          typeUrl: "/cosmos.crypto.ed25519.PubKey",
          value: Uint8Array.from(keys_1.PubKey.encode(pubkeyProto).finish())
        });
      } else if ((0, amino_1.isMultisigThresholdPubkey)(pubkey)) {
        const pubkeyProto = keys_2.LegacyAminoPubKey.fromPartial({
          threshold: math_1.Uint53.fromString(pubkey.value.threshold).toNumber(),
          publicKeys: pubkey.value.pubkeys.map(encodePubkey)
        });
        return any_1.Any.fromPartial({
          typeUrl: "/cosmos.crypto.multisig.LegacyAminoPubKey",
          value: Uint8Array.from(keys_2.LegacyAminoPubKey.encode(pubkeyProto).finish())
        });
      } else {
        throw new Error(`Pubkey type ${pubkey.type} not recognized`);
      }
    }
    exports.encodePubkey = encodePubkey;
    function anyToSinglePubkey(pubkey) {
      switch (pubkey.typeUrl) {
        case "/cosmos.crypto.secp256k1.PubKey": {
          const { key } = keys_3.PubKey.decode(pubkey.value);
          return (0, amino_1.encodeSecp256k1Pubkey)(key);
        }
        case "/cosmos.crypto.ed25519.PubKey": {
          const { key } = keys_1.PubKey.decode(pubkey.value);
          return (0, amino_1.encodeEd25519Pubkey)(key);
        }
        default:
          throw new Error(`Pubkey type_url ${pubkey.typeUrl} not recognized as single public key type`);
      }
    }
    exports.anyToSinglePubkey = anyToSinglePubkey;
    function decodePubkey(pubkey) {
      switch (pubkey.typeUrl) {
        case "/cosmos.crypto.secp256k1.PubKey":
        case "/cosmos.crypto.ed25519.PubKey": {
          return anyToSinglePubkey(pubkey);
        }
        case "/cosmos.crypto.multisig.LegacyAminoPubKey": {
          const { threshold, publicKeys } = keys_2.LegacyAminoPubKey.decode(pubkey.value);
          const out = {
            type: "tendermint/PubKeyMultisigThreshold",
            value: {
              threshold: threshold.toString(),
              pubkeys: publicKeys.map(anyToSinglePubkey)
            }
          };
          return out;
        }
        default:
          throw new Error(`Pubkey type_url ${pubkey.typeUrl} not recognized`);
      }
    }
    exports.decodePubkey = decodePubkey;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/bank/v1beta1/bank.js
var require_bank = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/bank/v1beta1/bank.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Metadata = exports.DenomUnit = exports.Supply = exports.Output = exports.Input = exports.SendEnabled = exports.Params = exports.protobufPackage = void 0;
    var coin_1 = require_coin();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.bank.v1beta1";
    function createBaseParams() {
      return {
        sendEnabled: [],
        defaultSendEnabled: false
      };
    }
    exports.Params = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.sendEnabled) {
          exports.SendEnabled.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        if (message.defaultSendEnabled === true) {
          writer.uint32(16).bool(message.defaultSendEnabled);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseParams();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.sendEnabled.push(exports.SendEnabled.decode(reader, reader.uint32()));
              break;
            case 2:
              message.defaultSendEnabled = reader.bool();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          sendEnabled: Array.isArray(object == null ? void 0 : object.sendEnabled) ? object.sendEnabled.map((e2) => exports.SendEnabled.fromJSON(e2)) : [],
          defaultSendEnabled: (0, helpers_1.isSet)(object.defaultSendEnabled) ? Boolean(object.defaultSendEnabled) : false
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.sendEnabled) {
          obj.sendEnabled = message.sendEnabled.map((e2) => e2 ? exports.SendEnabled.toJSON(e2) : void 0);
        } else {
          obj.sendEnabled = [];
        }
        message.defaultSendEnabled !== void 0 && (obj.defaultSendEnabled = message.defaultSendEnabled);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseParams();
        message.sendEnabled = ((_a = object.sendEnabled) == null ? void 0 : _a.map((e2) => exports.SendEnabled.fromPartial(e2))) || [];
        message.defaultSendEnabled = object.defaultSendEnabled ?? false;
        return message;
      }
    };
    function createBaseSendEnabled() {
      return {
        denom: "",
        enabled: false
      };
    }
    exports.SendEnabled = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.denom !== "") {
          writer.uint32(10).string(message.denom);
        }
        if (message.enabled === true) {
          writer.uint32(16).bool(message.enabled);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseSendEnabled();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.denom = reader.string();
              break;
            case 2:
              message.enabled = reader.bool();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          denom: (0, helpers_1.isSet)(object.denom) ? String(object.denom) : "",
          enabled: (0, helpers_1.isSet)(object.enabled) ? Boolean(object.enabled) : false
        };
      },
      toJSON(message) {
        const obj = {};
        message.denom !== void 0 && (obj.denom = message.denom);
        message.enabled !== void 0 && (obj.enabled = message.enabled);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseSendEnabled();
        message.denom = object.denom ?? "";
        message.enabled = object.enabled ?? false;
        return message;
      }
    };
    function createBaseInput() {
      return {
        address: "",
        coins: []
      };
    }
    exports.Input = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.address !== "") {
          writer.uint32(10).string(message.address);
        }
        for (const v3 of message.coins) {
          coin_1.Coin.encode(v3, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseInput();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.address = reader.string();
              break;
            case 2:
              message.coins.push(coin_1.Coin.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          address: (0, helpers_1.isSet)(object.address) ? String(object.address) : "",
          coins: Array.isArray(object == null ? void 0 : object.coins) ? object.coins.map((e2) => coin_1.Coin.fromJSON(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.address !== void 0 && (obj.address = message.address);
        if (message.coins) {
          obj.coins = message.coins.map((e2) => e2 ? coin_1.Coin.toJSON(e2) : void 0);
        } else {
          obj.coins = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseInput();
        message.address = object.address ?? "";
        message.coins = ((_a = object.coins) == null ? void 0 : _a.map((e2) => coin_1.Coin.fromPartial(e2))) || [];
        return message;
      }
    };
    function createBaseOutput() {
      return {
        address: "",
        coins: []
      };
    }
    exports.Output = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.address !== "") {
          writer.uint32(10).string(message.address);
        }
        for (const v3 of message.coins) {
          coin_1.Coin.encode(v3, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseOutput();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.address = reader.string();
              break;
            case 2:
              message.coins.push(coin_1.Coin.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          address: (0, helpers_1.isSet)(object.address) ? String(object.address) : "",
          coins: Array.isArray(object == null ? void 0 : object.coins) ? object.coins.map((e2) => coin_1.Coin.fromJSON(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.address !== void 0 && (obj.address = message.address);
        if (message.coins) {
          obj.coins = message.coins.map((e2) => e2 ? coin_1.Coin.toJSON(e2) : void 0);
        } else {
          obj.coins = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseOutput();
        message.address = object.address ?? "";
        message.coins = ((_a = object.coins) == null ? void 0 : _a.map((e2) => coin_1.Coin.fromPartial(e2))) || [];
        return message;
      }
    };
    function createBaseSupply() {
      return {
        total: []
      };
    }
    exports.Supply = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.total) {
          coin_1.Coin.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseSupply();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.total.push(coin_1.Coin.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          total: Array.isArray(object == null ? void 0 : object.total) ? object.total.map((e2) => coin_1.Coin.fromJSON(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.total) {
          obj.total = message.total.map((e2) => e2 ? coin_1.Coin.toJSON(e2) : void 0);
        } else {
          obj.total = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseSupply();
        message.total = ((_a = object.total) == null ? void 0 : _a.map((e2) => coin_1.Coin.fromPartial(e2))) || [];
        return message;
      }
    };
    function createBaseDenomUnit() {
      return {
        denom: "",
        exponent: 0,
        aliases: []
      };
    }
    exports.DenomUnit = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.denom !== "") {
          writer.uint32(10).string(message.denom);
        }
        if (message.exponent !== 0) {
          writer.uint32(16).uint32(message.exponent);
        }
        for (const v3 of message.aliases) {
          writer.uint32(26).string(v3);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseDenomUnit();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.denom = reader.string();
              break;
            case 2:
              message.exponent = reader.uint32();
              break;
            case 3:
              message.aliases.push(reader.string());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          denom: (0, helpers_1.isSet)(object.denom) ? String(object.denom) : "",
          exponent: (0, helpers_1.isSet)(object.exponent) ? Number(object.exponent) : 0,
          aliases: Array.isArray(object == null ? void 0 : object.aliases) ? object.aliases.map((e2) => String(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.denom !== void 0 && (obj.denom = message.denom);
        message.exponent !== void 0 && (obj.exponent = Math.round(message.exponent));
        if (message.aliases) {
          obj.aliases = message.aliases.map((e2) => e2);
        } else {
          obj.aliases = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseDenomUnit();
        message.denom = object.denom ?? "";
        message.exponent = object.exponent ?? 0;
        message.aliases = ((_a = object.aliases) == null ? void 0 : _a.map((e2) => e2)) || [];
        return message;
      }
    };
    function createBaseMetadata() {
      return {
        description: "",
        denomUnits: [],
        base: "",
        display: "",
        name: "",
        symbol: ""
      };
    }
    exports.Metadata = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.description !== "") {
          writer.uint32(10).string(message.description);
        }
        for (const v3 of message.denomUnits) {
          exports.DenomUnit.encode(v3, writer.uint32(18).fork()).ldelim();
        }
        if (message.base !== "") {
          writer.uint32(26).string(message.base);
        }
        if (message.display !== "") {
          writer.uint32(34).string(message.display);
        }
        if (message.name !== "") {
          writer.uint32(42).string(message.name);
        }
        if (message.symbol !== "") {
          writer.uint32(50).string(message.symbol);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMetadata();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.description = reader.string();
              break;
            case 2:
              message.denomUnits.push(exports.DenomUnit.decode(reader, reader.uint32()));
              break;
            case 3:
              message.base = reader.string();
              break;
            case 4:
              message.display = reader.string();
              break;
            case 5:
              message.name = reader.string();
              break;
            case 6:
              message.symbol = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          description: (0, helpers_1.isSet)(object.description) ? String(object.description) : "",
          denomUnits: Array.isArray(object == null ? void 0 : object.denomUnits) ? object.denomUnits.map((e2) => exports.DenomUnit.fromJSON(e2)) : [],
          base: (0, helpers_1.isSet)(object.base) ? String(object.base) : "",
          display: (0, helpers_1.isSet)(object.display) ? String(object.display) : "",
          name: (0, helpers_1.isSet)(object.name) ? String(object.name) : "",
          symbol: (0, helpers_1.isSet)(object.symbol) ? String(object.symbol) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.description !== void 0 && (obj.description = message.description);
        if (message.denomUnits) {
          obj.denomUnits = message.denomUnits.map((e2) => e2 ? exports.DenomUnit.toJSON(e2) : void 0);
        } else {
          obj.denomUnits = [];
        }
        message.base !== void 0 && (obj.base = message.base);
        message.display !== void 0 && (obj.display = message.display);
        message.name !== void 0 && (obj.name = message.name);
        message.symbol !== void 0 && (obj.symbol = message.symbol);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseMetadata();
        message.description = object.description ?? "";
        message.denomUnits = ((_a = object.denomUnits) == null ? void 0 : _a.map((e2) => exports.DenomUnit.fromPartial(e2))) || [];
        message.base = object.base ?? "";
        message.display = object.display ?? "";
        message.name = object.name ?? "";
        message.symbol = object.symbol ?? "";
        return message;
      }
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/bank/v1beta1/tx.js
var require_tx2 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/bank/v1beta1/tx.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.MsgClientImpl = exports.MsgMultiSendResponse = exports.MsgMultiSend = exports.MsgSendResponse = exports.MsgSend = exports.protobufPackage = void 0;
    var coin_1 = require_coin();
    var bank_1 = require_bank();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.bank.v1beta1";
    function createBaseMsgSend() {
      return {
        fromAddress: "",
        toAddress: "",
        amount: []
      };
    }
    exports.MsgSend = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.fromAddress !== "") {
          writer.uint32(10).string(message.fromAddress);
        }
        if (message.toAddress !== "") {
          writer.uint32(18).string(message.toAddress);
        }
        for (const v3 of message.amount) {
          coin_1.Coin.encode(v3, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgSend();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.fromAddress = reader.string();
              break;
            case 2:
              message.toAddress = reader.string();
              break;
            case 3:
              message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          fromAddress: (0, helpers_1.isSet)(object.fromAddress) ? String(object.fromAddress) : "",
          toAddress: (0, helpers_1.isSet)(object.toAddress) ? String(object.toAddress) : "",
          amount: Array.isArray(object == null ? void 0 : object.amount) ? object.amount.map((e2) => coin_1.Coin.fromJSON(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.fromAddress !== void 0 && (obj.fromAddress = message.fromAddress);
        message.toAddress !== void 0 && (obj.toAddress = message.toAddress);
        if (message.amount) {
          obj.amount = message.amount.map((e2) => e2 ? coin_1.Coin.toJSON(e2) : void 0);
        } else {
          obj.amount = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseMsgSend();
        message.fromAddress = object.fromAddress ?? "";
        message.toAddress = object.toAddress ?? "";
        message.amount = ((_a = object.amount) == null ? void 0 : _a.map((e2) => coin_1.Coin.fromPartial(e2))) || [];
        return message;
      }
    };
    function createBaseMsgSendResponse() {
      return {};
    }
    exports.MsgSendResponse = {
      encode(_3, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgSendResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_3) {
        return {};
      },
      toJSON(_3) {
        const obj = {};
        return obj;
      },
      fromPartial(_3) {
        const message = createBaseMsgSendResponse();
        return message;
      }
    };
    function createBaseMsgMultiSend() {
      return {
        inputs: [],
        outputs: []
      };
    }
    exports.MsgMultiSend = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.inputs) {
          bank_1.Input.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        for (const v3 of message.outputs) {
          bank_1.Output.encode(v3, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgMultiSend();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.inputs.push(bank_1.Input.decode(reader, reader.uint32()));
              break;
            case 2:
              message.outputs.push(bank_1.Output.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          inputs: Array.isArray(object == null ? void 0 : object.inputs) ? object.inputs.map((e2) => bank_1.Input.fromJSON(e2)) : [],
          outputs: Array.isArray(object == null ? void 0 : object.outputs) ? object.outputs.map((e2) => bank_1.Output.fromJSON(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.inputs) {
          obj.inputs = message.inputs.map((e2) => e2 ? bank_1.Input.toJSON(e2) : void 0);
        } else {
          obj.inputs = [];
        }
        if (message.outputs) {
          obj.outputs = message.outputs.map((e2) => e2 ? bank_1.Output.toJSON(e2) : void 0);
        } else {
          obj.outputs = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a, _b;
        const message = createBaseMsgMultiSend();
        message.inputs = ((_a = object.inputs) == null ? void 0 : _a.map((e2) => bank_1.Input.fromPartial(e2))) || [];
        message.outputs = ((_b = object.outputs) == null ? void 0 : _b.map((e2) => bank_1.Output.fromPartial(e2))) || [];
        return message;
      }
    };
    function createBaseMsgMultiSendResponse() {
      return {};
    }
    exports.MsgMultiSendResponse = {
      encode(_3, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgMultiSendResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_3) {
        return {};
      },
      toJSON(_3) {
        const obj = {};
        return obj;
      },
      fromPartial(_3) {
        const message = createBaseMsgMultiSendResponse();
        return message;
      }
    };
    var MsgClientImpl = class {
      constructor(rpc) {
        this.rpc = rpc;
        this.Send = this.Send.bind(this);
        this.MultiSend = this.MultiSend.bind(this);
      }
      Send(request) {
        const data = exports.MsgSend.encode(request).finish();
        const promise = this.rpc.request("cosmos.bank.v1beta1.Msg", "Send", data);
        return promise.then((data2) => exports.MsgSendResponse.decode(new _m0.Reader(data2)));
      }
      MultiSend(request) {
        const data = exports.MsgMultiSend.encode(request).finish();
        const promise = this.rpc.request("cosmos.bank.v1beta1.Msg", "MultiSend", data);
        return promise.then((data2) => exports.MsgMultiSendResponse.decode(new _m0.Reader(data2)));
      }
    };
    exports.MsgClientImpl = MsgClientImpl;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/proto-signing/build/registry.js
var require_registry = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/proto-signing/build/registry.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Registry = exports.isTxBodyEncodeObject = exports.isPbjsGeneratedType = exports.isTsProtoGeneratedType = void 0;
    var tx_1 = require_tx2();
    var coin_1 = require_coin();
    var tx_2 = require_tx();
    var any_1 = require_any();
    function isTsProtoGeneratedType(type) {
      return typeof type.fromPartial === "function";
    }
    exports.isTsProtoGeneratedType = isTsProtoGeneratedType;
    function isPbjsGeneratedType(type) {
      return !isTsProtoGeneratedType(type);
    }
    exports.isPbjsGeneratedType = isPbjsGeneratedType;
    var defaultTypeUrls = {
      cosmosCoin: "/cosmos.base.v1beta1.Coin",
      cosmosMsgSend: "/cosmos.bank.v1beta1.MsgSend",
      cosmosTxBody: "/cosmos.tx.v1beta1.TxBody",
      googleAny: "/google.protobuf.Any"
    };
    function isTxBodyEncodeObject(encodeObject) {
      return encodeObject.typeUrl === "/cosmos.tx.v1beta1.TxBody";
    }
    exports.isTxBodyEncodeObject = isTxBodyEncodeObject;
    var Registry = class {
      /**
       * Creates a new Registry for mapping protobuf type identifiers/type URLs to
       * actual implementations. Those implementations are typically generated with ts-proto
       * but we also support protobuf.js as a type generator.
       *
       * If there is no parameter given, a `new Registry()` adds the types `Coin` and `MsgSend`
       * for historic reasons. Those can be overriden by customTypes.
       *
       * There are currently two methods for adding new types:
       * 1. Passing types to the constructor.
       * 2. Using the `register()` method
       */
      constructor(customTypes) {
        const { cosmosCoin, cosmosMsgSend } = defaultTypeUrls;
        this.types = customTypes ? new Map([...customTypes]) : /* @__PURE__ */ new Map([
          [cosmosCoin, coin_1.Coin],
          [cosmosMsgSend, tx_1.MsgSend]
        ]);
      }
      register(typeUrl, type) {
        this.types.set(typeUrl, type);
      }
      /**
       * Looks up a type that was previously added to the registry.
       *
       * The generator information (ts-proto or pbjs) gets lost along the way.
       * If you need to work with the result type in TypeScript, you can use:
       *
       * ```
       * import { assert } from "@cosmjs/utils";
       *
       * const Coin = registry.lookupType("/cosmos.base.v1beta1.Coin");
       * assert(Coin); // Ensures not unset
       * assert(isTsProtoGeneratedType(Coin)); // Ensures this is the type we expect
       *
       * // Coin is typed TsProtoGeneratedType now.
       * ```
       */
      lookupType(typeUrl) {
        return this.types.get(typeUrl);
      }
      lookupTypeWithError(typeUrl) {
        const type = this.lookupType(typeUrl);
        if (!type) {
          throw new Error(`Unregistered type url: ${typeUrl}`);
        }
        return type;
      }
      /**
       * Takes a typeUrl/value pair and encodes the value to protobuf if
       * the given type was previously registered.
       *
       * If the value has to be wrapped in an Any, this needs to be done
       * manually after this call. Or use `encodeAsAny` instead.
       */
      encode(encodeObject) {
        const { value, typeUrl } = encodeObject;
        if (isTxBodyEncodeObject(encodeObject)) {
          return this.encodeTxBody(value);
        }
        const type = this.lookupTypeWithError(typeUrl);
        const instance = isTsProtoGeneratedType(type) ? type.fromPartial(value) : type.create(value);
        return type.encode(instance).finish();
      }
      /**
       * Takes a typeUrl/value pair and encodes the value to an Any if
       * the given type was previously registered.
       */
      encodeAsAny(encodeObject) {
        const binaryValue = this.encode(encodeObject);
        return any_1.Any.fromPartial({
          typeUrl: encodeObject.typeUrl,
          value: binaryValue
        });
      }
      encodeTxBody(txBodyFields) {
        const wrappedMessages = txBodyFields.messages.map((message) => this.encodeAsAny(message));
        const txBody = tx_2.TxBody.fromPartial({
          ...txBodyFields,
          messages: wrappedMessages
        });
        return tx_2.TxBody.encode(txBody).finish();
      }
      decode({ typeUrl, value }) {
        if (typeUrl === defaultTypeUrls.cosmosTxBody) {
          return this.decodeTxBody(value);
        }
        const type = this.lookupTypeWithError(typeUrl);
        const decoded = type.decode(value);
        Object.entries(decoded).forEach(([key, val]) => {
          if (typeof Buffer !== "undefined" && typeof Buffer.isBuffer !== "undefined" && Buffer.isBuffer(val)) {
            decoded[key] = Uint8Array.from(val);
          }
        });
        return decoded;
      }
      decodeTxBody(txBody) {
        const decodedTxBody = tx_2.TxBody.decode(txBody);
        return {
          ...decodedTxBody,
          messages: decodedTxBody.messages.map(({ typeUrl, value }) => {
            if (!typeUrl) {
              throw new Error("Missing type_url in Any");
            }
            if (!value) {
              throw new Error("Missing value in Any");
            }
            return this.decode({ typeUrl, value });
          })
        };
      }
    };
    exports.Registry = Registry;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/proto-signing/build/signer.js
var require_signer = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/proto-signing/build/signer.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isOfflineDirectSigner = void 0;
    function isOfflineDirectSigner(signer) {
      return signer.signDirect !== void 0;
    }
    exports.isOfflineDirectSigner = isOfflineDirectSigner;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/proto-signing/build/index.js
var require_build7 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/proto-signing/build/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.coins = exports.coin = exports.executeKdf = exports.makeSignDoc = exports.makeSignBytes = exports.makeAuthInfoBytes = exports.isOfflineDirectSigner = exports.Registry = exports.isTxBodyEncodeObject = exports.isTsProtoGeneratedType = exports.isPbjsGeneratedType = exports.encodePubkey = exports.decodePubkey = exports.anyToSinglePubkey = exports.makeCosmoshubPath = exports.DirectSecp256k1Wallet = exports.extractKdfConfiguration = exports.DirectSecp256k1HdWallet = exports.decodeTxRaw = exports.parseCoins = void 0;
    var coins_1 = require_coins();
    Object.defineProperty(exports, "parseCoins", { enumerable: true, get: function() {
      return coins_1.parseCoins;
    } });
    var decode_1 = require_decode();
    Object.defineProperty(exports, "decodeTxRaw", { enumerable: true, get: function() {
      return decode_1.decodeTxRaw;
    } });
    var directsecp256k1hdwallet_1 = require_directsecp256k1hdwallet();
    Object.defineProperty(exports, "DirectSecp256k1HdWallet", { enumerable: true, get: function() {
      return directsecp256k1hdwallet_1.DirectSecp256k1HdWallet;
    } });
    Object.defineProperty(exports, "extractKdfConfiguration", { enumerable: true, get: function() {
      return directsecp256k1hdwallet_1.extractKdfConfiguration;
    } });
    var directsecp256k1wallet_1 = require_directsecp256k1wallet();
    Object.defineProperty(exports, "DirectSecp256k1Wallet", { enumerable: true, get: function() {
      return directsecp256k1wallet_1.DirectSecp256k1Wallet;
    } });
    var paths_1 = require_paths2();
    Object.defineProperty(exports, "makeCosmoshubPath", { enumerable: true, get: function() {
      return paths_1.makeCosmoshubPath;
    } });
    var pubkey_1 = require_pubkey();
    Object.defineProperty(exports, "anyToSinglePubkey", { enumerable: true, get: function() {
      return pubkey_1.anyToSinglePubkey;
    } });
    Object.defineProperty(exports, "decodePubkey", { enumerable: true, get: function() {
      return pubkey_1.decodePubkey;
    } });
    Object.defineProperty(exports, "encodePubkey", { enumerable: true, get: function() {
      return pubkey_1.encodePubkey;
    } });
    var registry_1 = require_registry();
    Object.defineProperty(exports, "isPbjsGeneratedType", { enumerable: true, get: function() {
      return registry_1.isPbjsGeneratedType;
    } });
    Object.defineProperty(exports, "isTsProtoGeneratedType", { enumerable: true, get: function() {
      return registry_1.isTsProtoGeneratedType;
    } });
    Object.defineProperty(exports, "isTxBodyEncodeObject", { enumerable: true, get: function() {
      return registry_1.isTxBodyEncodeObject;
    } });
    Object.defineProperty(exports, "Registry", { enumerable: true, get: function() {
      return registry_1.Registry;
    } });
    var signer_1 = require_signer();
    Object.defineProperty(exports, "isOfflineDirectSigner", { enumerable: true, get: function() {
      return signer_1.isOfflineDirectSigner;
    } });
    var signing_1 = require_signing2();
    Object.defineProperty(exports, "makeAuthInfoBytes", { enumerable: true, get: function() {
      return signing_1.makeAuthInfoBytes;
    } });
    Object.defineProperty(exports, "makeSignBytes", { enumerable: true, get: function() {
      return signing_1.makeSignBytes;
    } });
    Object.defineProperty(exports, "makeSignDoc", { enumerable: true, get: function() {
      return signing_1.makeSignDoc;
    } });
    var wallet_1 = require_wallet2();
    Object.defineProperty(exports, "executeKdf", { enumerable: true, get: function() {
      return wallet_1.executeKdf;
    } });
    var amino_1 = require_build6();
    Object.defineProperty(exports, "coin", { enumerable: true, get: function() {
      return amino_1.coin;
    } });
    Object.defineProperty(exports, "coins", { enumerable: true, get: function() {
      return amino_1.coins;
    } });
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/auth/v1beta1/auth.js
var require_auth = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/auth/v1beta1/auth.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Params = exports.ModuleAccount = exports.BaseAccount = exports.protobufPackage = void 0;
    var any_1 = require_any();
    var helpers_1 = require_helpers();
    var _m0 = __importStar(require_minimal());
    exports.protobufPackage = "cosmos.auth.v1beta1";
    function createBaseBaseAccount() {
      return {
        address: "",
        pubKey: void 0,
        accountNumber: helpers_1.Long.UZERO,
        sequence: helpers_1.Long.UZERO
      };
    }
    exports.BaseAccount = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.address !== "") {
          writer.uint32(10).string(message.address);
        }
        if (message.pubKey !== void 0) {
          any_1.Any.encode(message.pubKey, writer.uint32(18).fork()).ldelim();
        }
        if (!message.accountNumber.isZero()) {
          writer.uint32(24).uint64(message.accountNumber);
        }
        if (!message.sequence.isZero()) {
          writer.uint32(32).uint64(message.sequence);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseBaseAccount();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.address = reader.string();
              break;
            case 2:
              message.pubKey = any_1.Any.decode(reader, reader.uint32());
              break;
            case 3:
              message.accountNumber = reader.uint64();
              break;
            case 4:
              message.sequence = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          address: (0, helpers_1.isSet)(object.address) ? String(object.address) : "",
          pubKey: (0, helpers_1.isSet)(object.pubKey) ? any_1.Any.fromJSON(object.pubKey) : void 0,
          accountNumber: (0, helpers_1.isSet)(object.accountNumber) ? helpers_1.Long.fromValue(object.accountNumber) : helpers_1.Long.UZERO,
          sequence: (0, helpers_1.isSet)(object.sequence) ? helpers_1.Long.fromValue(object.sequence) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.address !== void 0 && (obj.address = message.address);
        message.pubKey !== void 0 && (obj.pubKey = message.pubKey ? any_1.Any.toJSON(message.pubKey) : void 0);
        message.accountNumber !== void 0 && (obj.accountNumber = (message.accountNumber || helpers_1.Long.UZERO).toString());
        message.sequence !== void 0 && (obj.sequence = (message.sequence || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseBaseAccount();
        message.address = object.address ?? "";
        message.pubKey = object.pubKey !== void 0 && object.pubKey !== null ? any_1.Any.fromPartial(object.pubKey) : void 0;
        message.accountNumber = object.accountNumber !== void 0 && object.accountNumber !== null ? helpers_1.Long.fromValue(object.accountNumber) : helpers_1.Long.UZERO;
        message.sequence = object.sequence !== void 0 && object.sequence !== null ? helpers_1.Long.fromValue(object.sequence) : helpers_1.Long.UZERO;
        return message;
      }
    };
    function createBaseModuleAccount() {
      return {
        baseAccount: void 0,
        name: "",
        permissions: []
      };
    }
    exports.ModuleAccount = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.baseAccount !== void 0) {
          exports.BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();
        }
        if (message.name !== "") {
          writer.uint32(18).string(message.name);
        }
        for (const v3 of message.permissions) {
          writer.uint32(26).string(v3);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseModuleAccount();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.baseAccount = exports.BaseAccount.decode(reader, reader.uint32());
              break;
            case 2:
              message.name = reader.string();
              break;
            case 3:
              message.permissions.push(reader.string());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          baseAccount: (0, helpers_1.isSet)(object.baseAccount) ? exports.BaseAccount.fromJSON(object.baseAccount) : void 0,
          name: (0, helpers_1.isSet)(object.name) ? String(object.name) : "",
          permissions: Array.isArray(object == null ? void 0 : object.permissions) ? object.permissions.map((e2) => String(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.baseAccount !== void 0 && (obj.baseAccount = message.baseAccount ? exports.BaseAccount.toJSON(message.baseAccount) : void 0);
        message.name !== void 0 && (obj.name = message.name);
        if (message.permissions) {
          obj.permissions = message.permissions.map((e2) => e2);
        } else {
          obj.permissions = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseModuleAccount();
        message.baseAccount = object.baseAccount !== void 0 && object.baseAccount !== null ? exports.BaseAccount.fromPartial(object.baseAccount) : void 0;
        message.name = object.name ?? "";
        message.permissions = ((_a = object.permissions) == null ? void 0 : _a.map((e2) => e2)) || [];
        return message;
      }
    };
    function createBaseParams() {
      return {
        maxMemoCharacters: helpers_1.Long.UZERO,
        txSigLimit: helpers_1.Long.UZERO,
        txSizeCostPerByte: helpers_1.Long.UZERO,
        sigVerifyCostEd25519: helpers_1.Long.UZERO,
        sigVerifyCostSecp256k1: helpers_1.Long.UZERO
      };
    }
    exports.Params = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.maxMemoCharacters.isZero()) {
          writer.uint32(8).uint64(message.maxMemoCharacters);
        }
        if (!message.txSigLimit.isZero()) {
          writer.uint32(16).uint64(message.txSigLimit);
        }
        if (!message.txSizeCostPerByte.isZero()) {
          writer.uint32(24).uint64(message.txSizeCostPerByte);
        }
        if (!message.sigVerifyCostEd25519.isZero()) {
          writer.uint32(32).uint64(message.sigVerifyCostEd25519);
        }
        if (!message.sigVerifyCostSecp256k1.isZero()) {
          writer.uint32(40).uint64(message.sigVerifyCostSecp256k1);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseParams();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.maxMemoCharacters = reader.uint64();
              break;
            case 2:
              message.txSigLimit = reader.uint64();
              break;
            case 3:
              message.txSizeCostPerByte = reader.uint64();
              break;
            case 4:
              message.sigVerifyCostEd25519 = reader.uint64();
              break;
            case 5:
              message.sigVerifyCostSecp256k1 = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          maxMemoCharacters: (0, helpers_1.isSet)(object.maxMemoCharacters) ? helpers_1.Long.fromValue(object.maxMemoCharacters) : helpers_1.Long.UZERO,
          txSigLimit: (0, helpers_1.isSet)(object.txSigLimit) ? helpers_1.Long.fromValue(object.txSigLimit) : helpers_1.Long.UZERO,
          txSizeCostPerByte: (0, helpers_1.isSet)(object.txSizeCostPerByte) ? helpers_1.Long.fromValue(object.txSizeCostPerByte) : helpers_1.Long.UZERO,
          sigVerifyCostEd25519: (0, helpers_1.isSet)(object.sigVerifyCostEd25519) ? helpers_1.Long.fromValue(object.sigVerifyCostEd25519) : helpers_1.Long.UZERO,
          sigVerifyCostSecp256k1: (0, helpers_1.isSet)(object.sigVerifyCostSecp256k1) ? helpers_1.Long.fromValue(object.sigVerifyCostSecp256k1) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.maxMemoCharacters !== void 0 && (obj.maxMemoCharacters = (message.maxMemoCharacters || helpers_1.Long.UZERO).toString());
        message.txSigLimit !== void 0 && (obj.txSigLimit = (message.txSigLimit || helpers_1.Long.UZERO).toString());
        message.txSizeCostPerByte !== void 0 && (obj.txSizeCostPerByte = (message.txSizeCostPerByte || helpers_1.Long.UZERO).toString());
        message.sigVerifyCostEd25519 !== void 0 && (obj.sigVerifyCostEd25519 = (message.sigVerifyCostEd25519 || helpers_1.Long.UZERO).toString());
        message.sigVerifyCostSecp256k1 !== void 0 && (obj.sigVerifyCostSecp256k1 = (message.sigVerifyCostSecp256k1 || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseParams();
        message.maxMemoCharacters = object.maxMemoCharacters !== void 0 && object.maxMemoCharacters !== null ? helpers_1.Long.fromValue(object.maxMemoCharacters) : helpers_1.Long.UZERO;
        message.txSigLimit = object.txSigLimit !== void 0 && object.txSigLimit !== null ? helpers_1.Long.fromValue(object.txSigLimit) : helpers_1.Long.UZERO;
        message.txSizeCostPerByte = object.txSizeCostPerByte !== void 0 && object.txSizeCostPerByte !== null ? helpers_1.Long.fromValue(object.txSizeCostPerByte) : helpers_1.Long.UZERO;
        message.sigVerifyCostEd25519 = object.sigVerifyCostEd25519 !== void 0 && object.sigVerifyCostEd25519 !== null ? helpers_1.Long.fromValue(object.sigVerifyCostEd25519) : helpers_1.Long.UZERO;
        message.sigVerifyCostSecp256k1 = object.sigVerifyCostSecp256k1 !== void 0 && object.sigVerifyCostSecp256k1 !== null ? helpers_1.Long.fromValue(object.sigVerifyCostSecp256k1) : helpers_1.Long.UZERO;
        return message;
      }
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/vesting/v1beta1/vesting.js
var require_vesting = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/vesting/v1beta1/vesting.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PermanentLockedAccount = exports.PeriodicVestingAccount = exports.Period = exports.DelayedVestingAccount = exports.ContinuousVestingAccount = exports.BaseVestingAccount = exports.protobufPackage = void 0;
    var auth_1 = require_auth();
    var coin_1 = require_coin();
    var helpers_1 = require_helpers();
    var _m0 = __importStar(require_minimal());
    exports.protobufPackage = "cosmos.vesting.v1beta1";
    function createBaseBaseVestingAccount() {
      return {
        baseAccount: void 0,
        originalVesting: [],
        delegatedFree: [],
        delegatedVesting: [],
        endTime: helpers_1.Long.ZERO
      };
    }
    exports.BaseVestingAccount = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.baseAccount !== void 0) {
          auth_1.BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();
        }
        for (const v3 of message.originalVesting) {
          coin_1.Coin.encode(v3, writer.uint32(18).fork()).ldelim();
        }
        for (const v3 of message.delegatedFree) {
          coin_1.Coin.encode(v3, writer.uint32(26).fork()).ldelim();
        }
        for (const v3 of message.delegatedVesting) {
          coin_1.Coin.encode(v3, writer.uint32(34).fork()).ldelim();
        }
        if (!message.endTime.isZero()) {
          writer.uint32(40).int64(message.endTime);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseBaseVestingAccount();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.baseAccount = auth_1.BaseAccount.decode(reader, reader.uint32());
              break;
            case 2:
              message.originalVesting.push(coin_1.Coin.decode(reader, reader.uint32()));
              break;
            case 3:
              message.delegatedFree.push(coin_1.Coin.decode(reader, reader.uint32()));
              break;
            case 4:
              message.delegatedVesting.push(coin_1.Coin.decode(reader, reader.uint32()));
              break;
            case 5:
              message.endTime = reader.int64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          baseAccount: (0, helpers_1.isSet)(object.baseAccount) ? auth_1.BaseAccount.fromJSON(object.baseAccount) : void 0,
          originalVesting: Array.isArray(object == null ? void 0 : object.originalVesting) ? object.originalVesting.map((e2) => coin_1.Coin.fromJSON(e2)) : [],
          delegatedFree: Array.isArray(object == null ? void 0 : object.delegatedFree) ? object.delegatedFree.map((e2) => coin_1.Coin.fromJSON(e2)) : [],
          delegatedVesting: Array.isArray(object == null ? void 0 : object.delegatedVesting) ? object.delegatedVesting.map((e2) => coin_1.Coin.fromJSON(e2)) : [],
          endTime: (0, helpers_1.isSet)(object.endTime) ? helpers_1.Long.fromValue(object.endTime) : helpers_1.Long.ZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.baseAccount !== void 0 && (obj.baseAccount = message.baseAccount ? auth_1.BaseAccount.toJSON(message.baseAccount) : void 0);
        if (message.originalVesting) {
          obj.originalVesting = message.originalVesting.map((e2) => e2 ? coin_1.Coin.toJSON(e2) : void 0);
        } else {
          obj.originalVesting = [];
        }
        if (message.delegatedFree) {
          obj.delegatedFree = message.delegatedFree.map((e2) => e2 ? coin_1.Coin.toJSON(e2) : void 0);
        } else {
          obj.delegatedFree = [];
        }
        if (message.delegatedVesting) {
          obj.delegatedVesting = message.delegatedVesting.map((e2) => e2 ? coin_1.Coin.toJSON(e2) : void 0);
        } else {
          obj.delegatedVesting = [];
        }
        message.endTime !== void 0 && (obj.endTime = (message.endTime || helpers_1.Long.ZERO).toString());
        return obj;
      },
      fromPartial(object) {
        var _a, _b, _c;
        const message = createBaseBaseVestingAccount();
        message.baseAccount = object.baseAccount !== void 0 && object.baseAccount !== null ? auth_1.BaseAccount.fromPartial(object.baseAccount) : void 0;
        message.originalVesting = ((_a = object.originalVesting) == null ? void 0 : _a.map((e2) => coin_1.Coin.fromPartial(e2))) || [];
        message.delegatedFree = ((_b = object.delegatedFree) == null ? void 0 : _b.map((e2) => coin_1.Coin.fromPartial(e2))) || [];
        message.delegatedVesting = ((_c = object.delegatedVesting) == null ? void 0 : _c.map((e2) => coin_1.Coin.fromPartial(e2))) || [];
        message.endTime = object.endTime !== void 0 && object.endTime !== null ? helpers_1.Long.fromValue(object.endTime) : helpers_1.Long.ZERO;
        return message;
      }
    };
    function createBaseContinuousVestingAccount() {
      return {
        baseVestingAccount: void 0,
        startTime: helpers_1.Long.ZERO
      };
    }
    exports.ContinuousVestingAccount = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.baseVestingAccount !== void 0) {
          exports.BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();
        }
        if (!message.startTime.isZero()) {
          writer.uint32(16).int64(message.startTime);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseContinuousVestingAccount();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.baseVestingAccount = exports.BaseVestingAccount.decode(reader, reader.uint32());
              break;
            case 2:
              message.startTime = reader.int64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          baseVestingAccount: (0, helpers_1.isSet)(object.baseVestingAccount) ? exports.BaseVestingAccount.fromJSON(object.baseVestingAccount) : void 0,
          startTime: (0, helpers_1.isSet)(object.startTime) ? helpers_1.Long.fromValue(object.startTime) : helpers_1.Long.ZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.baseVestingAccount !== void 0 && (obj.baseVestingAccount = message.baseVestingAccount ? exports.BaseVestingAccount.toJSON(message.baseVestingAccount) : void 0);
        message.startTime !== void 0 && (obj.startTime = (message.startTime || helpers_1.Long.ZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseContinuousVestingAccount();
        message.baseVestingAccount = object.baseVestingAccount !== void 0 && object.baseVestingAccount !== null ? exports.BaseVestingAccount.fromPartial(object.baseVestingAccount) : void 0;
        message.startTime = object.startTime !== void 0 && object.startTime !== null ? helpers_1.Long.fromValue(object.startTime) : helpers_1.Long.ZERO;
        return message;
      }
    };
    function createBaseDelayedVestingAccount() {
      return {
        baseVestingAccount: void 0
      };
    }
    exports.DelayedVestingAccount = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.baseVestingAccount !== void 0) {
          exports.BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseDelayedVestingAccount();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.baseVestingAccount = exports.BaseVestingAccount.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          baseVestingAccount: (0, helpers_1.isSet)(object.baseVestingAccount) ? exports.BaseVestingAccount.fromJSON(object.baseVestingAccount) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.baseVestingAccount !== void 0 && (obj.baseVestingAccount = message.baseVestingAccount ? exports.BaseVestingAccount.toJSON(message.baseVestingAccount) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseDelayedVestingAccount();
        message.baseVestingAccount = object.baseVestingAccount !== void 0 && object.baseVestingAccount !== null ? exports.BaseVestingAccount.fromPartial(object.baseVestingAccount) : void 0;
        return message;
      }
    };
    function createBasePeriod() {
      return {
        length: helpers_1.Long.ZERO,
        amount: []
      };
    }
    exports.Period = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.length.isZero()) {
          writer.uint32(8).int64(message.length);
        }
        for (const v3 of message.amount) {
          coin_1.Coin.encode(v3, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBasePeriod();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.length = reader.int64();
              break;
            case 2:
              message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          length: (0, helpers_1.isSet)(object.length) ? helpers_1.Long.fromValue(object.length) : helpers_1.Long.ZERO,
          amount: Array.isArray(object == null ? void 0 : object.amount) ? object.amount.map((e2) => coin_1.Coin.fromJSON(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.length !== void 0 && (obj.length = (message.length || helpers_1.Long.ZERO).toString());
        if (message.amount) {
          obj.amount = message.amount.map((e2) => e2 ? coin_1.Coin.toJSON(e2) : void 0);
        } else {
          obj.amount = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBasePeriod();
        message.length = object.length !== void 0 && object.length !== null ? helpers_1.Long.fromValue(object.length) : helpers_1.Long.ZERO;
        message.amount = ((_a = object.amount) == null ? void 0 : _a.map((e2) => coin_1.Coin.fromPartial(e2))) || [];
        return message;
      }
    };
    function createBasePeriodicVestingAccount() {
      return {
        baseVestingAccount: void 0,
        startTime: helpers_1.Long.ZERO,
        vestingPeriods: []
      };
    }
    exports.PeriodicVestingAccount = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.baseVestingAccount !== void 0) {
          exports.BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();
        }
        if (!message.startTime.isZero()) {
          writer.uint32(16).int64(message.startTime);
        }
        for (const v3 of message.vestingPeriods) {
          exports.Period.encode(v3, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBasePeriodicVestingAccount();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.baseVestingAccount = exports.BaseVestingAccount.decode(reader, reader.uint32());
              break;
            case 2:
              message.startTime = reader.int64();
              break;
            case 3:
              message.vestingPeriods.push(exports.Period.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          baseVestingAccount: (0, helpers_1.isSet)(object.baseVestingAccount) ? exports.BaseVestingAccount.fromJSON(object.baseVestingAccount) : void 0,
          startTime: (0, helpers_1.isSet)(object.startTime) ? helpers_1.Long.fromValue(object.startTime) : helpers_1.Long.ZERO,
          vestingPeriods: Array.isArray(object == null ? void 0 : object.vestingPeriods) ? object.vestingPeriods.map((e2) => exports.Period.fromJSON(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.baseVestingAccount !== void 0 && (obj.baseVestingAccount = message.baseVestingAccount ? exports.BaseVestingAccount.toJSON(message.baseVestingAccount) : void 0);
        message.startTime !== void 0 && (obj.startTime = (message.startTime || helpers_1.Long.ZERO).toString());
        if (message.vestingPeriods) {
          obj.vestingPeriods = message.vestingPeriods.map((e2) => e2 ? exports.Period.toJSON(e2) : void 0);
        } else {
          obj.vestingPeriods = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBasePeriodicVestingAccount();
        message.baseVestingAccount = object.baseVestingAccount !== void 0 && object.baseVestingAccount !== null ? exports.BaseVestingAccount.fromPartial(object.baseVestingAccount) : void 0;
        message.startTime = object.startTime !== void 0 && object.startTime !== null ? helpers_1.Long.fromValue(object.startTime) : helpers_1.Long.ZERO;
        message.vestingPeriods = ((_a = object.vestingPeriods) == null ? void 0 : _a.map((e2) => exports.Period.fromPartial(e2))) || [];
        return message;
      }
    };
    function createBasePermanentLockedAccount() {
      return {
        baseVestingAccount: void 0
      };
    }
    exports.PermanentLockedAccount = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.baseVestingAccount !== void 0) {
          exports.BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBasePermanentLockedAccount();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.baseVestingAccount = exports.BaseVestingAccount.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          baseVestingAccount: (0, helpers_1.isSet)(object.baseVestingAccount) ? exports.BaseVestingAccount.fromJSON(object.baseVestingAccount) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.baseVestingAccount !== void 0 && (obj.baseVestingAccount = message.baseVestingAccount ? exports.BaseVestingAccount.toJSON(message.baseVestingAccount) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBasePermanentLockedAccount();
        message.baseVestingAccount = object.baseVestingAccount !== void 0 && object.baseVestingAccount !== null ? exports.BaseVestingAccount.fromPartial(object.baseVestingAccount) : void 0;
        return message;
      }
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/accounts.js
var require_accounts = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/accounts.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.accountFromAny = void 0;
    var math_1 = require_build3();
    var proto_signing_1 = require_build7();
    var utils_1 = require_build4();
    var auth_1 = require_auth();
    var vesting_1 = require_vesting();
    function uint64FromProto(input) {
      return math_1.Uint64.fromString(input.toString());
    }
    function accountFromBaseAccount(input) {
      const { address, pubKey, accountNumber, sequence } = input;
      const pubkey = pubKey ? (0, proto_signing_1.decodePubkey)(pubKey) : null;
      return {
        address,
        pubkey,
        accountNumber: uint64FromProto(accountNumber).toNumber(),
        sequence: uint64FromProto(sequence).toNumber()
      };
    }
    function accountFromAny(input) {
      var _a, _b, _c, _d, _e, _f, _g;
      const { typeUrl, value } = input;
      switch (typeUrl) {
        case "/cosmos.auth.v1beta1.BaseAccount":
          return accountFromBaseAccount(auth_1.BaseAccount.decode(value));
        case "/cosmos.auth.v1beta1.ModuleAccount": {
          const baseAccount = auth_1.ModuleAccount.decode(value).baseAccount;
          (0, utils_1.assert)(baseAccount);
          return accountFromBaseAccount(baseAccount);
        }
        case "/cosmos.vesting.v1beta1.BaseVestingAccount": {
          const baseAccount = (_a = vesting_1.BaseVestingAccount.decode(value)) == null ? void 0 : _a.baseAccount;
          (0, utils_1.assert)(baseAccount);
          return accountFromBaseAccount(baseAccount);
        }
        case "/cosmos.vesting.v1beta1.ContinuousVestingAccount": {
          const baseAccount = (_c = (_b = vesting_1.ContinuousVestingAccount.decode(value)) == null ? void 0 : _b.baseVestingAccount) == null ? void 0 : _c.baseAccount;
          (0, utils_1.assert)(baseAccount);
          return accountFromBaseAccount(baseAccount);
        }
        case "/cosmos.vesting.v1beta1.DelayedVestingAccount": {
          const baseAccount = (_e = (_d = vesting_1.DelayedVestingAccount.decode(value)) == null ? void 0 : _d.baseVestingAccount) == null ? void 0 : _e.baseAccount;
          (0, utils_1.assert)(baseAccount);
          return accountFromBaseAccount(baseAccount);
        }
        case "/cosmos.vesting.v1beta1.PeriodicVestingAccount": {
          const baseAccount = (_g = (_f = vesting_1.PeriodicVestingAccount.decode(value)) == null ? void 0 : _f.baseVestingAccount) == null ? void 0 : _g.baseAccount;
          (0, utils_1.assert)(baseAccount);
          return accountFromBaseAccount(baseAccount);
        }
        default:
          throw new Error(`Unsupported type: '${typeUrl}'`);
      }
    }
    exports.accountFromAny = accountFromAny;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/aminotypes.js
var require_aminotypes = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/aminotypes.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.AminoTypes = void 0;
    function isAminoConverter(converter) {
      return typeof converter[1] !== "string";
    }
    var AminoTypes = class {
      constructor(types) {
        this.register = types;
      }
      toAmino({ typeUrl, value }) {
        const converter = this.register[typeUrl];
        if (converter === "not_supported_by_chain") {
          throw new Error(`The message type '${typeUrl}' cannot be signed using the Amino JSON sign mode because this is not supported by chain.`);
        }
        if (!converter) {
          throw new Error(`Type URL '${typeUrl}' does not exist in the Amino message type register. If you need support for this message type, you can pass in additional entries to the AminoTypes constructor. If you think this message type should be included by default, please open an issue at https://github.com/cosmos/cosmjs/issues.`);
        }
        return {
          type: converter.aminoType,
          value: converter.toAmino(value)
        };
      }
      fromAmino({ type, value }) {
        const matches = Object.entries(this.register).filter(isAminoConverter).filter(([_typeUrl, { aminoType }]) => aminoType === type);
        switch (matches.length) {
          case 0: {
            throw new Error(`Amino type identifier '${type}' does not exist in the Amino message type register. If you need support for this message type, you can pass in additional entries to the AminoTypes constructor. If you think this message type should be included by default, please open an issue at https://github.com/cosmos/cosmjs/issues.`);
          }
          case 1: {
            const [typeUrl, converter] = matches[0];
            return {
              typeUrl,
              value: converter.fromAmino(value)
            };
          }
          default:
            throw new Error(`Multiple types are registered with Amino type identifier '${type}': '` + matches.map(([key, _value]) => key).sort().join("', '") + "'. Thus fromAmino cannot be performed.");
        }
      }
    };
    exports.AminoTypes = AminoTypes;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/events.js
var require_events = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/events.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.fromTendermintEvent = void 0;
    var encoding_1 = require_build2();
    function fromTendermintEvent(event) {
      return {
        type: event.type,
        attributes: event.attributes.map((attr) => ({
          key: typeof attr.key == "string" ? attr.key : (0, encoding_1.fromUtf8)(attr.key, true),
          value: typeof attr.value == "string" ? attr.value : (0, encoding_1.fromUtf8)(attr.value, true)
        }))
      };
    }
    exports.fromTendermintEvent = fromTendermintEvent;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/fee.js
var require_fee = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/fee.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.calculateFee = exports.GasPrice = void 0;
    var math_1 = require_build3();
    var proto_signing_1 = require_build7();
    function checkDenom(denom) {
      if (denom.length < 3 || denom.length > 128) {
        throw new Error("Denom must be between 3 and 128 characters");
      }
    }
    var GasPrice = class _GasPrice {
      constructor(amount, denom) {
        this.amount = amount;
        this.denom = denom;
      }
      /**
       * Parses a gas price formatted as `<amount><denom>`, e.g. `GasPrice.fromString("0.012utoken")`.
       *
       * The denom must match the Cosmos SDK 0.42 pattern (https://github.com/cosmos/cosmos-sdk/blob/v0.42.4/types/coin.go#L599-L601).
       * See `GasPrice` in @cosmjs/stargate for a more generic matcher.
       *
       * Separators are not yet supported.
       */
      static fromString(gasPrice) {
        const matchResult = gasPrice.match(/^([0-9.]+)([a-z][a-z0-9]*)$/i);
        if (!matchResult) {
          throw new Error("Invalid gas price string");
        }
        const [_3, amount, denom] = matchResult;
        checkDenom(denom);
        const fractionalDigits = 18;
        const decimalAmount = math_1.Decimal.fromUserInput(amount, fractionalDigits);
        return new _GasPrice(decimalAmount, denom);
      }
      /**
       * Returns a string representation of this gas price, e.g. "0.025uatom".
       * This can be used as an input to `GasPrice.fromString`.
       */
      toString() {
        return this.amount.toString() + this.denom;
      }
    };
    exports.GasPrice = GasPrice;
    function calculateFee(gasLimit, gasPrice) {
      const processedGasPrice = typeof gasPrice === "string" ? GasPrice.fromString(gasPrice) : gasPrice;
      const { denom, amount: gasPriceAmount } = processedGasPrice;
      const amount = gasPriceAmount.multiply(new math_1.Uint53(gasLimit)).ceil().toString();
      return {
        amount: (0, proto_signing_1.coins)(amount, denom),
        gas: gasLimit.toString()
      };
    }
    exports.calculateFee = calculateFee;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/logs.js
var require_logs = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/logs.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.findAttribute = exports.parseRawLog = exports.parseLogs = exports.parseLog = exports.parseEvent = exports.parseAttribute = void 0;
    var utils_1 = require_build4();
    function parseAttribute(input) {
      if (!(0, utils_1.isNonNullObject)(input))
        throw new Error("Attribute must be a non-null object");
      const { key, value } = input;
      if (typeof key !== "string" || !key)
        throw new Error("Attribute's key must be a non-empty string");
      if (typeof value !== "string" && typeof value !== "undefined") {
        throw new Error("Attribute's value must be a string or unset");
      }
      return {
        key,
        value: value || ""
      };
    }
    exports.parseAttribute = parseAttribute;
    function parseEvent(input) {
      if (!(0, utils_1.isNonNullObject)(input))
        throw new Error("Event must be a non-null object");
      const { type, attributes } = input;
      if (typeof type !== "string" || type === "") {
        throw new Error(`Event type must be a non-empty string`);
      }
      if (!Array.isArray(attributes))
        throw new Error("Event's attributes must be an array");
      return {
        type,
        attributes: attributes.map(parseAttribute)
      };
    }
    exports.parseEvent = parseEvent;
    function parseLog(input) {
      if (!(0, utils_1.isNonNullObject)(input))
        throw new Error("Log must be a non-null object");
      const { msg_index, log, events } = input;
      if (typeof msg_index !== "number")
        throw new Error("Log's msg_index must be a number");
      if (typeof log !== "string")
        throw new Error("Log's log must be a string");
      if (!Array.isArray(events))
        throw new Error("Log's events must be an array");
      return {
        msg_index,
        log,
        events: events.map(parseEvent)
      };
    }
    exports.parseLog = parseLog;
    function parseLogs(input) {
      if (!Array.isArray(input))
        throw new Error("Logs must be an array");
      return input.map(parseLog);
    }
    exports.parseLogs = parseLogs;
    function parseRawLog(input = "[]") {
      const logsToParse = JSON.parse(input).map(({ events }, i3) => ({
        msg_index: i3,
        events,
        log: ""
      }));
      return parseLogs(logsToParse);
    }
    exports.parseRawLog = parseRawLog;
    function findAttribute(logs, eventType, attrKey) {
      var _a;
      const firstLogs = logs.find(() => true);
      const out = (_a = firstLogs == null ? void 0 : firstLogs.events.find((event) => event.type === eventType)) == null ? void 0 : _a.attributes.find((attr) => attr.key === attrKey);
      if (!out) {
        throw new Error(`Could not find attribute '${attrKey}' in first event of type '${eventType}' in first log.`);
      }
      return out;
    }
    exports.findAttribute = findAttribute;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/base/query/v1beta1/pagination.js
var require_pagination = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/base/query/v1beta1/pagination.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PageResponse = exports.PageRequest = exports.protobufPackage = void 0;
    var helpers_1 = require_helpers();
    var _m0 = __importStar(require_minimal());
    exports.protobufPackage = "cosmos.base.query.v1beta1";
    function createBasePageRequest() {
      return {
        key: new Uint8Array(),
        offset: helpers_1.Long.UZERO,
        limit: helpers_1.Long.UZERO,
        countTotal: false,
        reverse: false
      };
    }
    exports.PageRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.key.length !== 0) {
          writer.uint32(10).bytes(message.key);
        }
        if (!message.offset.isZero()) {
          writer.uint32(16).uint64(message.offset);
        }
        if (!message.limit.isZero()) {
          writer.uint32(24).uint64(message.limit);
        }
        if (message.countTotal === true) {
          writer.uint32(32).bool(message.countTotal);
        }
        if (message.reverse === true) {
          writer.uint32(40).bool(message.reverse);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBasePageRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.key = reader.bytes();
              break;
            case 2:
              message.offset = reader.uint64();
              break;
            case 3:
              message.limit = reader.uint64();
              break;
            case 4:
              message.countTotal = reader.bool();
              break;
            case 5:
              message.reverse = reader.bool();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          key: (0, helpers_1.isSet)(object.key) ? (0, helpers_1.bytesFromBase64)(object.key) : new Uint8Array(),
          offset: (0, helpers_1.isSet)(object.offset) ? helpers_1.Long.fromValue(object.offset) : helpers_1.Long.UZERO,
          limit: (0, helpers_1.isSet)(object.limit) ? helpers_1.Long.fromValue(object.limit) : helpers_1.Long.UZERO,
          countTotal: (0, helpers_1.isSet)(object.countTotal) ? Boolean(object.countTotal) : false,
          reverse: (0, helpers_1.isSet)(object.reverse) ? Boolean(object.reverse) : false
        };
      },
      toJSON(message) {
        const obj = {};
        message.key !== void 0 && (obj.key = (0, helpers_1.base64FromBytes)(message.key !== void 0 ? message.key : new Uint8Array()));
        message.offset !== void 0 && (obj.offset = (message.offset || helpers_1.Long.UZERO).toString());
        message.limit !== void 0 && (obj.limit = (message.limit || helpers_1.Long.UZERO).toString());
        message.countTotal !== void 0 && (obj.countTotal = message.countTotal);
        message.reverse !== void 0 && (obj.reverse = message.reverse);
        return obj;
      },
      fromPartial(object) {
        const message = createBasePageRequest();
        message.key = object.key ?? new Uint8Array();
        message.offset = object.offset !== void 0 && object.offset !== null ? helpers_1.Long.fromValue(object.offset) : helpers_1.Long.UZERO;
        message.limit = object.limit !== void 0 && object.limit !== null ? helpers_1.Long.fromValue(object.limit) : helpers_1.Long.UZERO;
        message.countTotal = object.countTotal ?? false;
        message.reverse = object.reverse ?? false;
        return message;
      }
    };
    function createBasePageResponse() {
      return {
        nextKey: new Uint8Array(),
        total: helpers_1.Long.UZERO
      };
    }
    exports.PageResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.nextKey.length !== 0) {
          writer.uint32(10).bytes(message.nextKey);
        }
        if (!message.total.isZero()) {
          writer.uint32(16).uint64(message.total);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBasePageResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.nextKey = reader.bytes();
              break;
            case 2:
              message.total = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          nextKey: (0, helpers_1.isSet)(object.nextKey) ? (0, helpers_1.bytesFromBase64)(object.nextKey) : new Uint8Array(),
          total: (0, helpers_1.isSet)(object.total) ? helpers_1.Long.fromValue(object.total) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.nextKey !== void 0 && (obj.nextKey = (0, helpers_1.base64FromBytes)(message.nextKey !== void 0 ? message.nextKey : new Uint8Array()));
        message.total !== void 0 && (obj.total = (message.total || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBasePageResponse();
        message.nextKey = object.nextKey ?? new Uint8Array();
        message.total = object.total !== void 0 && object.total !== null ? helpers_1.Long.fromValue(object.total) : helpers_1.Long.UZERO;
        return message;
      }
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/auth/v1beta1/query.js
var require_query = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/auth/v1beta1/query.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.QueryClientImpl = exports.QueryModuleAccountByNameResponse = exports.QueryModuleAccountByNameRequest = exports.QueryParamsResponse = exports.QueryParamsRequest = exports.QueryAccountResponse = exports.QueryAccountRequest = exports.QueryAccountsResponse = exports.QueryAccountsRequest = exports.protobufPackage = void 0;
    var pagination_1 = require_pagination();
    var any_1 = require_any();
    var auth_1 = require_auth();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.auth.v1beta1";
    function createBaseQueryAccountsRequest() {
      return {
        pagination: void 0
      };
    }
    exports.QueryAccountsRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryAccountsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryAccountsRequest();
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryAccountsResponse() {
      return {
        accounts: [],
        pagination: void 0
      };
    }
    exports.QueryAccountsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.accounts) {
          any_1.Any.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryAccountsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.accounts.push(any_1.Any.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          accounts: Array.isArray(object == null ? void 0 : object.accounts) ? object.accounts.map((e2) => any_1.Any.fromJSON(e2)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.accounts) {
          obj.accounts = message.accounts.map((e2) => e2 ? any_1.Any.toJSON(e2) : void 0);
        } else {
          obj.accounts = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryAccountsResponse();
        message.accounts = ((_a = object.accounts) == null ? void 0 : _a.map((e2) => any_1.Any.fromPartial(e2))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryAccountRequest() {
      return {
        address: ""
      };
    }
    exports.QueryAccountRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.address !== "") {
          writer.uint32(10).string(message.address);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryAccountRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.address = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          address: (0, helpers_1.isSet)(object.address) ? String(object.address) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.address !== void 0 && (obj.address = message.address);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryAccountRequest();
        message.address = object.address ?? "";
        return message;
      }
    };
    function createBaseQueryAccountResponse() {
      return {
        account: void 0
      };
    }
    exports.QueryAccountResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.account !== void 0) {
          any_1.Any.encode(message.account, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryAccountResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.account = any_1.Any.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          account: (0, helpers_1.isSet)(object.account) ? any_1.Any.fromJSON(object.account) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.account !== void 0 && (obj.account = message.account ? any_1.Any.toJSON(message.account) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryAccountResponse();
        message.account = object.account !== void 0 && object.account !== null ? any_1.Any.fromPartial(object.account) : void 0;
        return message;
      }
    };
    function createBaseQueryParamsRequest() {
      return {};
    }
    exports.QueryParamsRequest = {
      encode(_3, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryParamsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_3) {
        return {};
      },
      toJSON(_3) {
        const obj = {};
        return obj;
      },
      fromPartial(_3) {
        const message = createBaseQueryParamsRequest();
        return message;
      }
    };
    function createBaseQueryParamsResponse() {
      return {
        params: void 0
      };
    }
    exports.QueryParamsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.params !== void 0) {
          auth_1.Params.encode(message.params, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryParamsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.params = auth_1.Params.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          params: (0, helpers_1.isSet)(object.params) ? auth_1.Params.fromJSON(object.params) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.params !== void 0 && (obj.params = message.params ? auth_1.Params.toJSON(message.params) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryParamsResponse();
        message.params = object.params !== void 0 && object.params !== null ? auth_1.Params.fromPartial(object.params) : void 0;
        return message;
      }
    };
    function createBaseQueryModuleAccountByNameRequest() {
      return {
        name: ""
      };
    }
    exports.QueryModuleAccountByNameRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.name !== "") {
          writer.uint32(10).string(message.name);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryModuleAccountByNameRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.name = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          name: (0, helpers_1.isSet)(object.name) ? String(object.name) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.name !== void 0 && (obj.name = message.name);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryModuleAccountByNameRequest();
        message.name = object.name ?? "";
        return message;
      }
    };
    function createBaseQueryModuleAccountByNameResponse() {
      return {
        account: void 0
      };
    }
    exports.QueryModuleAccountByNameResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.account !== void 0) {
          any_1.Any.encode(message.account, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryModuleAccountByNameResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.account = any_1.Any.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          account: (0, helpers_1.isSet)(object.account) ? any_1.Any.fromJSON(object.account) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.account !== void 0 && (obj.account = message.account ? any_1.Any.toJSON(message.account) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryModuleAccountByNameResponse();
        message.account = object.account !== void 0 && object.account !== null ? any_1.Any.fromPartial(object.account) : void 0;
        return message;
      }
    };
    var QueryClientImpl = class {
      constructor(rpc) {
        this.rpc = rpc;
        this.Accounts = this.Accounts.bind(this);
        this.Account = this.Account.bind(this);
        this.Params = this.Params.bind(this);
        this.ModuleAccountByName = this.ModuleAccountByName.bind(this);
      }
      Accounts(request = {
        pagination: void 0
      }) {
        const data = exports.QueryAccountsRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.auth.v1beta1.Query", "Accounts", data);
        return promise.then((data2) => exports.QueryAccountsResponse.decode(new _m0.Reader(data2)));
      }
      Account(request) {
        const data = exports.QueryAccountRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.auth.v1beta1.Query", "Account", data);
        return promise.then((data2) => exports.QueryAccountResponse.decode(new _m0.Reader(data2)));
      }
      Params(request = {}) {
        const data = exports.QueryParamsRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.auth.v1beta1.Query", "Params", data);
        return promise.then((data2) => exports.QueryParamsResponse.decode(new _m0.Reader(data2)));
      }
      ModuleAccountByName(request) {
        const data = exports.QueryModuleAccountByNameRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.auth.v1beta1.Query", "ModuleAccountByName", data);
        return promise.then((data2) => exports.QueryModuleAccountByNameResponse.decode(new _m0.Reader(data2)));
      }
    };
    exports.QueryClientImpl = QueryClientImpl;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stream/build/concat.js
var require_concat = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stream/build/concat.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.concat = void 0;
    var xstream_1 = require_xstream();
    function concat(...streams) {
      const subscriptions = new Array();
      const queues = new Array();
      const completedStreams = /* @__PURE__ */ new Set();
      let activeStreamIndex = 0;
      function reset() {
        while (subscriptions.length > 0) {
          const subscription = subscriptions.shift();
          subscription.unsubscribe();
        }
        queues.length = 0;
        completedStreams.clear();
        activeStreamIndex = 0;
      }
      const producer = {
        start: (listener) => {
          streams.forEach((_3) => queues.push([]));
          function emitAllQueuesEvents(streamIndex) {
            while (true) {
              const element = queues[streamIndex].shift();
              if (element === void 0) {
                return;
              }
              listener.next(element);
            }
          }
          function isDone() {
            return activeStreamIndex >= streams.length;
          }
          if (isDone()) {
            listener.complete();
            return;
          }
          streams.forEach((stream, index) => {
            subscriptions.push(stream.subscribe({
              next: (value) => {
                if (index === activeStreamIndex) {
                  listener.next(value);
                } else {
                  queues[index].push(value);
                }
              },
              complete: () => {
                completedStreams.add(index);
                while (completedStreams.has(activeStreamIndex)) {
                  emitAllQueuesEvents(activeStreamIndex);
                  activeStreamIndex++;
                }
                if (isDone()) {
                  listener.complete();
                } else {
                  emitAllQueuesEvents(activeStreamIndex);
                }
              },
              error: (error) => {
                listener.error(error);
                reset();
              }
            }));
          });
        },
        stop: () => {
          reset();
        }
      };
      return xstream_1.Stream.create(producer);
    }
    exports.concat = concat;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stream/build/defaultvalueproducer.js
var require_defaultvalueproducer = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stream/build/defaultvalueproducer.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.DefaultValueProducer = void 0;
    var DefaultValueProducer = class {
      constructor(value, callbacks) {
        this.callbacks = callbacks;
        this.internalValue = value;
      }
      get value() {
        return this.internalValue;
      }
      /**
       * Update the current value.
       *
       * If producer is active (i.e. someone is listening), this emits an event.
       * If not, just the current value is updated.
       */
      update(value) {
        this.internalValue = value;
        if (this.listener) {
          this.listener.next(value);
        }
      }
      /**
       * Produce an error
       */
      // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types
      error(error) {
        if (this.listener) {
          this.listener.error(error);
        }
      }
      /**
       * Called by the stream. Do not call this directly.
       */
      start(listener) {
        this.listener = listener;
        listener.next(this.internalValue);
        if (this.callbacks) {
          this.callbacks.onStarted();
        }
      }
      /**
       * Called by the stream. Do not call this directly.
       */
      stop() {
        if (this.callbacks) {
          this.callbacks.onStop();
        }
        this.listener = void 0;
      }
    };
    exports.DefaultValueProducer = DefaultValueProducer;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stream/build/dropduplicates.js
var require_dropduplicates = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stream/build/dropduplicates.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.dropDuplicates = void 0;
    function dropDuplicates(valueToKey) {
      const operand = (instream) => {
        const emittedKeys = /* @__PURE__ */ new Set();
        const deduplicatedStream = instream.filter((value) => !emittedKeys.has(valueToKey(value))).debug((value) => emittedKeys.add(valueToKey(value)));
        return deduplicatedStream;
      };
      return operand;
    }
    exports.dropDuplicates = dropDuplicates;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stream/build/promise.js
var require_promise = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stream/build/promise.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.firstEvent = exports.toListPromise = exports.fromListPromise = void 0;
    var xstream_1 = require_xstream();
    function fromListPromise(promise) {
      const producer = {
        start: (listener) => {
          promise.then((iterable) => {
            for (const element of iterable) {
              listener.next(element);
            }
            listener.complete();
          }).catch((error) => listener.error(error));
        },
        // eslint-disable-next-line @typescript-eslint/no-empty-function
        stop: () => {
        }
      };
      return xstream_1.Stream.create(producer);
    }
    exports.fromListPromise = fromListPromise;
    async function toListPromise(stream, count) {
      return new Promise((resolve, reject) => {
        if (count === 0) {
          resolve([]);
          return;
        }
        const events = new Array();
        stream.take(count).subscribe({
          next: (event) => {
            events.push(event);
            if (events.length === count) {
              resolve(events);
            }
          },
          complete: () => {
            reject(`Stream completed before all events could be collected. Collected ${events.length}, expected ${count}`);
          },
          error: (error) => reject(error)
        });
      });
    }
    exports.toListPromise = toListPromise;
    async function firstEvent(stream) {
      return (await toListPromise(stream, 1))[0];
    }
    exports.firstEvent = firstEvent;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stream/build/reducer.js
var require_reducer = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stream/build/reducer.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.lastValue = exports.asArray = exports.countStream = exports.Reducer = void 0;
    var Reducer = class {
      constructor(stream, reducer, initState) {
        this.stream = stream;
        this.reducer = reducer;
        this.state = initState;
        this.completed = new Promise((resolve, reject) => {
          const subscription = this.stream.subscribe({
            next: (evt) => {
              this.state = this.reducer(this.state, evt);
            },
            complete: () => {
              resolve();
              subscription.unsubscribe();
            },
            error: (err) => {
              reject(err);
              subscription.unsubscribe();
            }
          });
        });
      }
      // value returns current materialized state
      value() {
        return this.state;
      }
      // finished resolves on completed stream, rejects on stream error
      async finished() {
        return this.completed;
      }
    };
    exports.Reducer = Reducer;
    function increment(sum, _3) {
      return sum + 1;
    }
    function countStream(stream) {
      return new Reducer(stream, increment, 0);
    }
    exports.countStream = countStream;
    function append(list, evt) {
      return [...list, evt];
    }
    function asArray(stream) {
      return new Reducer(stream, append, []);
    }
    exports.asArray = asArray;
    function last(_3, event) {
      return event;
    }
    function lastValue(stream) {
      return new Reducer(stream, last, void 0);
    }
    exports.lastValue = lastValue;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stream/build/valueandupdates.js
var require_valueandupdates = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stream/build/valueandupdates.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ValueAndUpdates = void 0;
    var xstream_1 = require_xstream();
    var ValueAndUpdates = class {
      constructor(producer) {
        this.producer = producer;
        this.updates = xstream_1.MemoryStream.createWithMemory(this.producer);
      }
      get value() {
        return this.producer.value;
      }
      /**
       * Resolves as soon as search value is found.
       *
       * @param search either a value or a function that must return true when found
       * @returns the value of the update that caused the search match
       */
      async waitFor(search) {
        const searchImplementation = typeof search === "function" ? search : (value) => value === search;
        return new Promise((resolve, reject) => {
          const subscription = this.updates.subscribe({
            next: (newValue) => {
              if (searchImplementation(newValue)) {
                resolve(newValue);
                setTimeout(() => subscription.unsubscribe(), 0);
              }
            },
            complete: () => {
              subscription.unsubscribe();
              reject("Update stream completed without expected value");
            },
            error: (error) => {
              reject(error);
            }
          });
        });
      }
    };
    exports.ValueAndUpdates = ValueAndUpdates;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stream/build/index.js
var require_build8 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stream/build/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __exportStar = exports && exports.__exportStar || function(m2, exports2) {
      for (var p3 in m2)
        if (p3 !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p3))
          __createBinding(exports2, m2, p3);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ValueAndUpdates = exports.toListPromise = exports.fromListPromise = exports.firstEvent = exports.dropDuplicates = exports.DefaultValueProducer = exports.concat = void 0;
    var concat_1 = require_concat();
    Object.defineProperty(exports, "concat", { enumerable: true, get: function() {
      return concat_1.concat;
    } });
    var defaultvalueproducer_1 = require_defaultvalueproducer();
    Object.defineProperty(exports, "DefaultValueProducer", { enumerable: true, get: function() {
      return defaultvalueproducer_1.DefaultValueProducer;
    } });
    var dropduplicates_1 = require_dropduplicates();
    Object.defineProperty(exports, "dropDuplicates", { enumerable: true, get: function() {
      return dropduplicates_1.dropDuplicates;
    } });
    var promise_1 = require_promise();
    Object.defineProperty(exports, "firstEvent", { enumerable: true, get: function() {
      return promise_1.firstEvent;
    } });
    Object.defineProperty(exports, "fromListPromise", { enumerable: true, get: function() {
      return promise_1.fromListPromise;
    } });
    Object.defineProperty(exports, "toListPromise", { enumerable: true, get: function() {
      return promise_1.toListPromise;
    } });
    __exportStar(require_reducer(), exports);
    var valueandupdates_1 = require_valueandupdates();
    Object.defineProperty(exports, "ValueAndUpdates", { enumerable: true, get: function() {
      return valueandupdates_1.ValueAndUpdates;
    } });
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/queryclient/queryclient.js
var require_queryclient = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/queryclient/queryclient.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.QueryClient = void 0;
    var ics23_1 = require_build();
    var encoding_1 = require_build2();
    var stream_1 = require_build8();
    var utils_1 = require_build4();
    function checkAndParseOp(op, kind, key) {
      if (op.type !== kind) {
        throw new Error(`Op expected to be ${kind}, got "${op.type}`);
      }
      if (!(0, utils_1.arrayContentEquals)(key, op.key)) {
        throw new Error(`Proven key different than queried key.
Query: ${(0, encoding_1.toHex)(key)}
Proven: ${(0, encoding_1.toHex)(op.key)}`);
      }
      return ics23_1.ics23.CommitmentProof.decode(op.data);
    }
    var QueryClient = class _QueryClient {
      constructor(tmClient) {
        this.tmClient = tmClient;
      }
      static withExtensions(tmClient, ...extensionSetups) {
        const client = new _QueryClient(tmClient);
        const extensions = extensionSetups.map((setupExtension) => setupExtension(client));
        for (const extension of extensions) {
          (0, utils_1.assert)((0, utils_1.isNonNullObject)(extension), `Extension must be a non-null object`);
          for (const [moduleKey, moduleValue] of Object.entries(extension)) {
            (0, utils_1.assert)((0, utils_1.isNonNullObject)(moduleValue), `Module must be a non-null object. Found type ${typeof moduleValue} for module "${moduleKey}".`);
            const current = client[moduleKey] || {};
            client[moduleKey] = {
              ...current,
              ...moduleValue
            };
          }
        }
        return client;
      }
      /**
       * @deprecated use queryStoreVerified instead
       */
      async queryVerified(store, queryKey, desiredHeight) {
        const { value } = await this.queryStoreVerified(store, queryKey, desiredHeight);
        return value;
      }
      /**
       * Queries the database store with a proof, which is then verified.
       *
       * Please note: the current implementation trusts block headers it gets from the PRC endpoint.
       */
      async queryStoreVerified(store, queryKey, desiredHeight) {
        const { height, proof, key, value } = await this.queryRawProof(store, queryKey, desiredHeight);
        const subProof = checkAndParseOp(proof.ops[0], "ics23:iavl", queryKey);
        const storeProof = checkAndParseOp(proof.ops[1], "ics23:simple", (0, encoding_1.toAscii)(store));
        (0, utils_1.assert)(storeProof.exist);
        (0, utils_1.assert)(storeProof.exist.value);
        if (!value || value.length === 0) {
          (0, utils_1.assert)(subProof.nonexist);
          (0, ics23_1.verifyNonExistence)(subProof.nonexist, ics23_1.iavlSpec, storeProof.exist.value, queryKey);
        } else {
          (0, utils_1.assert)(subProof.exist);
          (0, utils_1.assert)(subProof.exist.value);
          (0, ics23_1.verifyExistence)(subProof.exist, ics23_1.iavlSpec, storeProof.exist.value, queryKey, value);
        }
        const header = await this.getNextHeader(height);
        (0, ics23_1.verifyExistence)(storeProof.exist, ics23_1.tendermintSpec, header.appHash, (0, encoding_1.toAscii)(store), storeProof.exist.value);
        return { key, value, height };
      }
      async queryRawProof(store, queryKey, desiredHeight) {
        const { key, value, height, proof, code, log } = await this.tmClient.abciQuery({
          // we need the StoreKey for the module, not the module name
          // https://github.com/cosmos/cosmos-sdk/blob/8cab43c8120fec5200c3459cbf4a92017bb6f287/x/auth/types/keys.go#L12
          path: `/store/${store}/key`,
          data: queryKey,
          prove: true,
          height: desiredHeight
        });
        if (code) {
          throw new Error(`Query failed with (${code}): ${log}`);
        }
        if (!(0, utils_1.arrayContentEquals)(queryKey, key)) {
          throw new Error(`Response key ${(0, encoding_1.toHex)(key)} doesn't match query key ${(0, encoding_1.toHex)(queryKey)}`);
        }
        if (!height) {
          throw new Error("No query height returned");
        }
        if (!proof || proof.ops.length !== 2) {
          throw new Error(`Expected 2 proof ops, got ${(proof == null ? void 0 : proof.ops.length) ?? 0}. Are you using stargate?`);
        }
        checkAndParseOp(proof.ops[0], "ics23:iavl", key);
        checkAndParseOp(proof.ops[1], "ics23:simple", (0, encoding_1.toAscii)(store));
        return {
          key,
          value,
          height,
          // need to clone this: readonly input / writeable output
          proof: {
            ops: [...proof.ops]
          }
        };
      }
      /**
       * Performs an ABCI query to Tendermint without requesting a proof.
       *
       * @deprecated use queryAbci instead
       */
      async queryUnverified(path, request, desiredHeight) {
        const response = await this.queryAbci(path, request, desiredHeight);
        return response.value;
      }
      /**
       * Performs an ABCI query to Tendermint without requesting a proof.
       *
       * If the `desiredHeight` is set, a particular height is requested. Otherwise
       * the latest height is requested. The response contains the actual height of
       * the query.
       */
      async queryAbci(path, request, desiredHeight) {
        const response = await this.tmClient.abciQuery({
          path,
          data: request,
          prove: false,
          height: desiredHeight
        });
        if (response.code) {
          throw new Error(`Query failed with (${response.code}): ${response.log}`);
        }
        if (!response.height) {
          throw new Error("No query height returned");
        }
        return {
          value: response.value,
          height: response.height
        };
      }
      // this must return the header for height+1
      // throws an error if height is 0 or undefined
      async getNextHeader(height) {
        (0, utils_1.assertDefined)(height);
        if (height === 0) {
          throw new Error("Query returned height 0, cannot prove it");
        }
        const searchHeight = height + 1;
        let nextHeader;
        let headersSubscription;
        try {
          headersSubscription = this.tmClient.subscribeNewBlockHeader();
        } catch {
        }
        if (headersSubscription) {
          const firstHeader = await (0, stream_1.firstEvent)(headersSubscription);
          if (firstHeader.height === searchHeight) {
            nextHeader = firstHeader;
          }
        }
        while (!nextHeader) {
          const correctHeader = (await this.tmClient.blockchain(height, searchHeight)).blockMetas.map((meta) => meta.header).find((h2) => h2.height === searchHeight);
          if (correctHeader) {
            nextHeader = correctHeader;
          } else {
            await (0, utils_1.sleep)(1e3);
          }
        }
        (0, utils_1.assert)(nextHeader.height === searchHeight, "Got wrong header. This is a bug in the logic above.");
        return nextHeader;
      }
    };
    exports.QueryClient = QueryClient;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/queryclient/utils.js
var require_utils2 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/queryclient/utils.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.decodeCosmosSdkDecFromProto = exports.longify = exports.createProtobufRpcClient = exports.createPagination = exports.toAccAddress = void 0;
    var encoding_1 = require_build2();
    var math_1 = require_build3();
    var pagination_1 = require_pagination();
    var long_1 = __importDefault(require_long());
    function toAccAddress(address) {
      return (0, encoding_1.fromBech32)(address).data;
    }
    exports.toAccAddress = toAccAddress;
    function createPagination(paginationKey) {
      return paginationKey ? pagination_1.PageRequest.fromPartial({ key: paginationKey }) : void 0;
    }
    exports.createPagination = createPagination;
    function createProtobufRpcClient(base) {
      return {
        request: async (service, method, data) => {
          const path = `/${service}/${method}`;
          const response = await base.queryAbci(path, data, void 0);
          return response.value;
        }
      };
    }
    exports.createProtobufRpcClient = createProtobufRpcClient;
    function longify(value) {
      const checkedValue = math_1.Uint64.fromString(value.toString());
      return long_1.default.fromBytesBE([...checkedValue.toBytesBigEndian()], true);
    }
    exports.longify = longify;
    function decodeCosmosSdkDecFromProto(input) {
      const asString = typeof input === "string" ? input : (0, encoding_1.fromAscii)(input);
      return math_1.Decimal.fromAtomics(asString, 18);
    }
    exports.decodeCosmosSdkDecFromProto = decodeCosmosSdkDecFromProto;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/queryclient/index.js
var require_queryclient2 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/queryclient/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.longify = exports.decodeCosmosSdkDecFromProto = exports.createProtobufRpcClient = exports.createPagination = exports.QueryClient = void 0;
    var queryclient_1 = require_queryclient();
    Object.defineProperty(exports, "QueryClient", { enumerable: true, get: function() {
      return queryclient_1.QueryClient;
    } });
    var utils_1 = require_utils2();
    Object.defineProperty(exports, "createPagination", { enumerable: true, get: function() {
      return utils_1.createPagination;
    } });
    Object.defineProperty(exports, "createProtobufRpcClient", { enumerable: true, get: function() {
      return utils_1.createProtobufRpcClient;
    } });
    Object.defineProperty(exports, "decodeCosmosSdkDecFromProto", { enumerable: true, get: function() {
      return utils_1.decodeCosmosSdkDecFromProto;
    } });
    Object.defineProperty(exports, "longify", { enumerable: true, get: function() {
      return utils_1.longify;
    } });
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/auth/queries.js
var require_queries = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/auth/queries.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.setupAuthExtension = void 0;
    var query_1 = require_query();
    var queryclient_1 = require_queryclient2();
    function setupAuthExtension(base) {
      const rpc = (0, queryclient_1.createProtobufRpcClient)(base);
      const queryService = new query_1.QueryClientImpl(rpc);
      return {
        auth: {
          account: async (address) => {
            const { account } = await queryService.Account({ address });
            return account ?? null;
          }
        }
      };
    }
    exports.setupAuthExtension = setupAuthExtension;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/authz/aminomessages.js
var require_aminomessages = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/authz/aminomessages.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createAuthzAminoConverters = void 0;
    function createAuthzAminoConverters() {
      return {
        "/cosmos.authz.v1beta1.MsgGrant": "not_supported_by_chain",
        "/cosmos.authz.v1beta1.MsgExec": "not_supported_by_chain",
        "/cosmos.authz.v1beta1.MsgRevoke": "not_supported_by_chain"
      };
    }
    exports.createAuthzAminoConverters = createAuthzAminoConverters;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/google/protobuf/timestamp.js
var require_timestamp = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/google/protobuf/timestamp.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Timestamp = exports.protobufPackage = void 0;
    var helpers_1 = require_helpers();
    var _m0 = __importStar(require_minimal());
    exports.protobufPackage = "google.protobuf";
    function createBaseTimestamp() {
      return {
        seconds: helpers_1.Long.ZERO,
        nanos: 0
      };
    }
    exports.Timestamp = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.seconds.isZero()) {
          writer.uint32(8).int64(message.seconds);
        }
        if (message.nanos !== 0) {
          writer.uint32(16).int32(message.nanos);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseTimestamp();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.seconds = reader.int64();
              break;
            case 2:
              message.nanos = reader.int32();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          seconds: (0, helpers_1.isSet)(object.seconds) ? helpers_1.Long.fromValue(object.seconds) : helpers_1.Long.ZERO,
          nanos: (0, helpers_1.isSet)(object.nanos) ? Number(object.nanos) : 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.seconds !== void 0 && (obj.seconds = (message.seconds || helpers_1.Long.ZERO).toString());
        message.nanos !== void 0 && (obj.nanos = Math.round(message.nanos));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseTimestamp();
        message.seconds = object.seconds !== void 0 && object.seconds !== null ? helpers_1.Long.fromValue(object.seconds) : helpers_1.Long.ZERO;
        message.nanos = object.nanos ?? 0;
        return message;
      }
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/authz/v1beta1/authz.js
var require_authz = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/authz/v1beta1/authz.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.GrantAuthorization = exports.Grant = exports.GenericAuthorization = exports.protobufPackage = void 0;
    var any_1 = require_any();
    var timestamp_1 = require_timestamp();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.authz.v1beta1";
    function createBaseGenericAuthorization() {
      return {
        msg: ""
      };
    }
    exports.GenericAuthorization = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.msg !== "") {
          writer.uint32(10).string(message.msg);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseGenericAuthorization();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.msg = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          msg: (0, helpers_1.isSet)(object.msg) ? String(object.msg) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.msg !== void 0 && (obj.msg = message.msg);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseGenericAuthorization();
        message.msg = object.msg ?? "";
        return message;
      }
    };
    function createBaseGrant() {
      return {
        authorization: void 0,
        expiration: void 0
      };
    }
    exports.Grant = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.authorization !== void 0) {
          any_1.Any.encode(message.authorization, writer.uint32(10).fork()).ldelim();
        }
        if (message.expiration !== void 0) {
          timestamp_1.Timestamp.encode(message.expiration, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseGrant();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.authorization = any_1.Any.decode(reader, reader.uint32());
              break;
            case 2:
              message.expiration = timestamp_1.Timestamp.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          authorization: (0, helpers_1.isSet)(object.authorization) ? any_1.Any.fromJSON(object.authorization) : void 0,
          expiration: (0, helpers_1.isSet)(object.expiration) ? (0, helpers_1.fromJsonTimestamp)(object.expiration) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.authorization !== void 0 && (obj.authorization = message.authorization ? any_1.Any.toJSON(message.authorization) : void 0);
        message.expiration !== void 0 && (obj.expiration = (0, helpers_1.fromTimestamp)(message.expiration).toISOString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseGrant();
        message.authorization = object.authorization !== void 0 && object.authorization !== null ? any_1.Any.fromPartial(object.authorization) : void 0;
        message.expiration = object.expiration !== void 0 && object.expiration !== null ? timestamp_1.Timestamp.fromPartial(object.expiration) : void 0;
        return message;
      }
    };
    function createBaseGrantAuthorization() {
      return {
        granter: "",
        grantee: "",
        authorization: void 0,
        expiration: void 0
      };
    }
    exports.GrantAuthorization = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.granter !== "") {
          writer.uint32(10).string(message.granter);
        }
        if (message.grantee !== "") {
          writer.uint32(18).string(message.grantee);
        }
        if (message.authorization !== void 0) {
          any_1.Any.encode(message.authorization, writer.uint32(26).fork()).ldelim();
        }
        if (message.expiration !== void 0) {
          timestamp_1.Timestamp.encode(message.expiration, writer.uint32(34).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseGrantAuthorization();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.granter = reader.string();
              break;
            case 2:
              message.grantee = reader.string();
              break;
            case 3:
              message.authorization = any_1.Any.decode(reader, reader.uint32());
              break;
            case 4:
              message.expiration = timestamp_1.Timestamp.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          granter: (0, helpers_1.isSet)(object.granter) ? String(object.granter) : "",
          grantee: (0, helpers_1.isSet)(object.grantee) ? String(object.grantee) : "",
          authorization: (0, helpers_1.isSet)(object.authorization) ? any_1.Any.fromJSON(object.authorization) : void 0,
          expiration: (0, helpers_1.isSet)(object.expiration) ? (0, helpers_1.fromJsonTimestamp)(object.expiration) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.granter !== void 0 && (obj.granter = message.granter);
        message.grantee !== void 0 && (obj.grantee = message.grantee);
        message.authorization !== void 0 && (obj.authorization = message.authorization ? any_1.Any.toJSON(message.authorization) : void 0);
        message.expiration !== void 0 && (obj.expiration = (0, helpers_1.fromTimestamp)(message.expiration).toISOString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseGrantAuthorization();
        message.granter = object.granter ?? "";
        message.grantee = object.grantee ?? "";
        message.authorization = object.authorization !== void 0 && object.authorization !== null ? any_1.Any.fromPartial(object.authorization) : void 0;
        message.expiration = object.expiration !== void 0 && object.expiration !== null ? timestamp_1.Timestamp.fromPartial(object.expiration) : void 0;
        return message;
      }
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/authz/v1beta1/tx.js
var require_tx3 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/authz/v1beta1/tx.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.MsgClientImpl = exports.MsgRevokeResponse = exports.MsgRevoke = exports.MsgGrantResponse = exports.MsgExec = exports.MsgExecResponse = exports.MsgGrant = exports.protobufPackage = void 0;
    var authz_1 = require_authz();
    var any_1 = require_any();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.authz.v1beta1";
    function createBaseMsgGrant() {
      return {
        granter: "",
        grantee: "",
        grant: void 0
      };
    }
    exports.MsgGrant = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.granter !== "") {
          writer.uint32(10).string(message.granter);
        }
        if (message.grantee !== "") {
          writer.uint32(18).string(message.grantee);
        }
        if (message.grant !== void 0) {
          authz_1.Grant.encode(message.grant, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgGrant();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.granter = reader.string();
              break;
            case 2:
              message.grantee = reader.string();
              break;
            case 3:
              message.grant = authz_1.Grant.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          granter: (0, helpers_1.isSet)(object.granter) ? String(object.granter) : "",
          grantee: (0, helpers_1.isSet)(object.grantee) ? String(object.grantee) : "",
          grant: (0, helpers_1.isSet)(object.grant) ? authz_1.Grant.fromJSON(object.grant) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.granter !== void 0 && (obj.granter = message.granter);
        message.grantee !== void 0 && (obj.grantee = message.grantee);
        message.grant !== void 0 && (obj.grant = message.grant ? authz_1.Grant.toJSON(message.grant) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgGrant();
        message.granter = object.granter ?? "";
        message.grantee = object.grantee ?? "";
        message.grant = object.grant !== void 0 && object.grant !== null ? authz_1.Grant.fromPartial(object.grant) : void 0;
        return message;
      }
    };
    function createBaseMsgExecResponse() {
      return {
        results: []
      };
    }
    exports.MsgExecResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.results) {
          writer.uint32(10).bytes(v3);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgExecResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.results.push(reader.bytes());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          results: Array.isArray(object == null ? void 0 : object.results) ? object.results.map((e2) => (0, helpers_1.bytesFromBase64)(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.results) {
          obj.results = message.results.map((e2) => (0, helpers_1.base64FromBytes)(e2 !== void 0 ? e2 : new Uint8Array()));
        } else {
          obj.results = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseMsgExecResponse();
        message.results = ((_a = object.results) == null ? void 0 : _a.map((e2) => e2)) || [];
        return message;
      }
    };
    function createBaseMsgExec() {
      return {
        grantee: "",
        msgs: []
      };
    }
    exports.MsgExec = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.grantee !== "") {
          writer.uint32(10).string(message.grantee);
        }
        for (const v3 of message.msgs) {
          any_1.Any.encode(v3, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgExec();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.grantee = reader.string();
              break;
            case 2:
              message.msgs.push(any_1.Any.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          grantee: (0, helpers_1.isSet)(object.grantee) ? String(object.grantee) : "",
          msgs: Array.isArray(object == null ? void 0 : object.msgs) ? object.msgs.map((e2) => any_1.Any.fromJSON(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.grantee !== void 0 && (obj.grantee = message.grantee);
        if (message.msgs) {
          obj.msgs = message.msgs.map((e2) => e2 ? any_1.Any.toJSON(e2) : void 0);
        } else {
          obj.msgs = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseMsgExec();
        message.grantee = object.grantee ?? "";
        message.msgs = ((_a = object.msgs) == null ? void 0 : _a.map((e2) => any_1.Any.fromPartial(e2))) || [];
        return message;
      }
    };
    function createBaseMsgGrantResponse() {
      return {};
    }
    exports.MsgGrantResponse = {
      encode(_3, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgGrantResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_3) {
        return {};
      },
      toJSON(_3) {
        const obj = {};
        return obj;
      },
      fromPartial(_3) {
        const message = createBaseMsgGrantResponse();
        return message;
      }
    };
    function createBaseMsgRevoke() {
      return {
        granter: "",
        grantee: "",
        msgTypeUrl: ""
      };
    }
    exports.MsgRevoke = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.granter !== "") {
          writer.uint32(10).string(message.granter);
        }
        if (message.grantee !== "") {
          writer.uint32(18).string(message.grantee);
        }
        if (message.msgTypeUrl !== "") {
          writer.uint32(26).string(message.msgTypeUrl);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgRevoke();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.granter = reader.string();
              break;
            case 2:
              message.grantee = reader.string();
              break;
            case 3:
              message.msgTypeUrl = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          granter: (0, helpers_1.isSet)(object.granter) ? String(object.granter) : "",
          grantee: (0, helpers_1.isSet)(object.grantee) ? String(object.grantee) : "",
          msgTypeUrl: (0, helpers_1.isSet)(object.msgTypeUrl) ? String(object.msgTypeUrl) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.granter !== void 0 && (obj.granter = message.granter);
        message.grantee !== void 0 && (obj.grantee = message.grantee);
        message.msgTypeUrl !== void 0 && (obj.msgTypeUrl = message.msgTypeUrl);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgRevoke();
        message.granter = object.granter ?? "";
        message.grantee = object.grantee ?? "";
        message.msgTypeUrl = object.msgTypeUrl ?? "";
        return message;
      }
    };
    function createBaseMsgRevokeResponse() {
      return {};
    }
    exports.MsgRevokeResponse = {
      encode(_3, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgRevokeResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_3) {
        return {};
      },
      toJSON(_3) {
        const obj = {};
        return obj;
      },
      fromPartial(_3) {
        const message = createBaseMsgRevokeResponse();
        return message;
      }
    };
    var MsgClientImpl = class {
      constructor(rpc) {
        this.rpc = rpc;
        this.Grant = this.Grant.bind(this);
        this.Exec = this.Exec.bind(this);
        this.Revoke = this.Revoke.bind(this);
      }
      Grant(request) {
        const data = exports.MsgGrant.encode(request).finish();
        const promise = this.rpc.request("cosmos.authz.v1beta1.Msg", "Grant", data);
        return promise.then((data2) => exports.MsgGrantResponse.decode(new _m0.Reader(data2)));
      }
      Exec(request) {
        const data = exports.MsgExec.encode(request).finish();
        const promise = this.rpc.request("cosmos.authz.v1beta1.Msg", "Exec", data);
        return promise.then((data2) => exports.MsgExecResponse.decode(new _m0.Reader(data2)));
      }
      Revoke(request) {
        const data = exports.MsgRevoke.encode(request).finish();
        const promise = this.rpc.request("cosmos.authz.v1beta1.Msg", "Revoke", data);
        return promise.then((data2) => exports.MsgRevokeResponse.decode(new _m0.Reader(data2)));
      }
    };
    exports.MsgClientImpl = MsgClientImpl;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/authz/messages.js
var require_messages = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/authz/messages.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.authzTypes = void 0;
    var tx_1 = require_tx3();
    exports.authzTypes = [
      ["/cosmos.authz.v1beta1.MsgExec", tx_1.MsgExec],
      ["/cosmos.authz.v1beta1.MsgGrant", tx_1.MsgGrant],
      ["/cosmos.authz.v1beta1.MsgRevoke", tx_1.MsgRevoke]
    ];
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/authz/v1beta1/query.js
var require_query2 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/authz/v1beta1/query.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.QueryClientImpl = exports.QueryGranteeGrantsResponse = exports.QueryGranteeGrantsRequest = exports.QueryGranterGrantsResponse = exports.QueryGranterGrantsRequest = exports.QueryGrantsResponse = exports.QueryGrantsRequest = exports.protobufPackage = void 0;
    var pagination_1 = require_pagination();
    var authz_1 = require_authz();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.authz.v1beta1";
    function createBaseQueryGrantsRequest() {
      return {
        granter: "",
        grantee: "",
        msgTypeUrl: "",
        pagination: void 0
      };
    }
    exports.QueryGrantsRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.granter !== "") {
          writer.uint32(10).string(message.granter);
        }
        if (message.grantee !== "") {
          writer.uint32(18).string(message.grantee);
        }
        if (message.msgTypeUrl !== "") {
          writer.uint32(26).string(message.msgTypeUrl);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(34).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryGrantsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.granter = reader.string();
              break;
            case 2:
              message.grantee = reader.string();
              break;
            case 3:
              message.msgTypeUrl = reader.string();
              break;
            case 4:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          granter: (0, helpers_1.isSet)(object.granter) ? String(object.granter) : "",
          grantee: (0, helpers_1.isSet)(object.grantee) ? String(object.grantee) : "",
          msgTypeUrl: (0, helpers_1.isSet)(object.msgTypeUrl) ? String(object.msgTypeUrl) : "",
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.granter !== void 0 && (obj.granter = message.granter);
        message.grantee !== void 0 && (obj.grantee = message.grantee);
        message.msgTypeUrl !== void 0 && (obj.msgTypeUrl = message.msgTypeUrl);
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryGrantsRequest();
        message.granter = object.granter ?? "";
        message.grantee = object.grantee ?? "";
        message.msgTypeUrl = object.msgTypeUrl ?? "";
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryGrantsResponse() {
      return {
        grants: [],
        pagination: void 0
      };
    }
    exports.QueryGrantsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.grants) {
          authz_1.Grant.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryGrantsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.grants.push(authz_1.Grant.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          grants: Array.isArray(object == null ? void 0 : object.grants) ? object.grants.map((e2) => authz_1.Grant.fromJSON(e2)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.grants) {
          obj.grants = message.grants.map((e2) => e2 ? authz_1.Grant.toJSON(e2) : void 0);
        } else {
          obj.grants = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryGrantsResponse();
        message.grants = ((_a = object.grants) == null ? void 0 : _a.map((e2) => authz_1.Grant.fromPartial(e2))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryGranterGrantsRequest() {
      return {
        granter: "",
        pagination: void 0
      };
    }
    exports.QueryGranterGrantsRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.granter !== "") {
          writer.uint32(10).string(message.granter);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryGranterGrantsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.granter = reader.string();
              break;
            case 2:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          granter: (0, helpers_1.isSet)(object.granter) ? String(object.granter) : "",
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.granter !== void 0 && (obj.granter = message.granter);
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryGranterGrantsRequest();
        message.granter = object.granter ?? "";
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryGranterGrantsResponse() {
      return {
        grants: [],
        pagination: void 0
      };
    }
    exports.QueryGranterGrantsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.grants) {
          authz_1.GrantAuthorization.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryGranterGrantsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.grants.push(authz_1.GrantAuthorization.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          grants: Array.isArray(object == null ? void 0 : object.grants) ? object.grants.map((e2) => authz_1.GrantAuthorization.fromJSON(e2)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.grants) {
          obj.grants = message.grants.map((e2) => e2 ? authz_1.GrantAuthorization.toJSON(e2) : void 0);
        } else {
          obj.grants = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryGranterGrantsResponse();
        message.grants = ((_a = object.grants) == null ? void 0 : _a.map((e2) => authz_1.GrantAuthorization.fromPartial(e2))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryGranteeGrantsRequest() {
      return {
        grantee: "",
        pagination: void 0
      };
    }
    exports.QueryGranteeGrantsRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.grantee !== "") {
          writer.uint32(10).string(message.grantee);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryGranteeGrantsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.grantee = reader.string();
              break;
            case 2:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          grantee: (0, helpers_1.isSet)(object.grantee) ? String(object.grantee) : "",
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.grantee !== void 0 && (obj.grantee = message.grantee);
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryGranteeGrantsRequest();
        message.grantee = object.grantee ?? "";
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryGranteeGrantsResponse() {
      return {
        grants: [],
        pagination: void 0
      };
    }
    exports.QueryGranteeGrantsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.grants) {
          authz_1.GrantAuthorization.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryGranteeGrantsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.grants.push(authz_1.GrantAuthorization.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          grants: Array.isArray(object == null ? void 0 : object.grants) ? object.grants.map((e2) => authz_1.GrantAuthorization.fromJSON(e2)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.grants) {
          obj.grants = message.grants.map((e2) => e2 ? authz_1.GrantAuthorization.toJSON(e2) : void 0);
        } else {
          obj.grants = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryGranteeGrantsResponse();
        message.grants = ((_a = object.grants) == null ? void 0 : _a.map((e2) => authz_1.GrantAuthorization.fromPartial(e2))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    var QueryClientImpl = class {
      constructor(rpc) {
        this.rpc = rpc;
        this.Grants = this.Grants.bind(this);
        this.GranterGrants = this.GranterGrants.bind(this);
        this.GranteeGrants = this.GranteeGrants.bind(this);
      }
      Grants(request) {
        const data = exports.QueryGrantsRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.authz.v1beta1.Query", "Grants", data);
        return promise.then((data2) => exports.QueryGrantsResponse.decode(new _m0.Reader(data2)));
      }
      GranterGrants(request) {
        const data = exports.QueryGranterGrantsRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.authz.v1beta1.Query", "GranterGrants", data);
        return promise.then((data2) => exports.QueryGranterGrantsResponse.decode(new _m0.Reader(data2)));
      }
      GranteeGrants(request) {
        const data = exports.QueryGranteeGrantsRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.authz.v1beta1.Query", "GranteeGrants", data);
        return promise.then((data2) => exports.QueryGranteeGrantsResponse.decode(new _m0.Reader(data2)));
      }
    };
    exports.QueryClientImpl = QueryClientImpl;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/authz/queries.js
var require_queries2 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/authz/queries.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.setupAuthzExtension = void 0;
    var query_1 = require_query2();
    var queryclient_1 = require_queryclient2();
    function setupAuthzExtension(base) {
      const rpc = (0, queryclient_1.createProtobufRpcClient)(base);
      const queryService = new query_1.QueryClientImpl(rpc);
      return {
        authz: {
          grants: async (granter, grantee, msgTypeUrl, paginationKey) => {
            return await queryService.Grants({
              granter,
              grantee,
              msgTypeUrl,
              pagination: (0, queryclient_1.createPagination)(paginationKey)
            });
          },
          granteeGrants: async (grantee, paginationKey) => {
            return await queryService.GranteeGrants({
              grantee,
              pagination: (0, queryclient_1.createPagination)(paginationKey)
            });
          },
          granterGrants: async (granter, paginationKey) => {
            return await queryService.GranterGrants({
              granter,
              pagination: (0, queryclient_1.createPagination)(paginationKey)
            });
          }
        }
      };
    }
    exports.setupAuthzExtension = setupAuthzExtension;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/bank/aminomessages.js
var require_aminomessages2 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/bank/aminomessages.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createBankAminoConverters = exports.isAminoMsgMultiSend = exports.isAminoMsgSend = void 0;
    function isAminoMsgSend(msg) {
      return msg.type === "cosmos-sdk/MsgSend";
    }
    exports.isAminoMsgSend = isAminoMsgSend;
    function isAminoMsgMultiSend(msg) {
      return msg.type === "cosmos-sdk/MsgMultiSend";
    }
    exports.isAminoMsgMultiSend = isAminoMsgMultiSend;
    function createBankAminoConverters() {
      return {
        "/cosmos.bank.v1beta1.MsgSend": {
          aminoType: "cosmos-sdk/MsgSend",
          toAmino: ({ fromAddress, toAddress, amount }) => ({
            from_address: fromAddress,
            to_address: toAddress,
            amount: [...amount]
          }),
          fromAmino: ({ from_address, to_address, amount }) => ({
            fromAddress: from_address,
            toAddress: to_address,
            amount: [...amount]
          })
        },
        "/cosmos.bank.v1beta1.MsgMultiSend": {
          aminoType: "cosmos-sdk/MsgMultiSend",
          toAmino: ({ inputs, outputs }) => ({
            inputs: inputs.map((input) => ({
              address: input.address,
              coins: [...input.coins]
            })),
            outputs: outputs.map((output) => ({
              address: output.address,
              coins: [...output.coins]
            }))
          }),
          fromAmino: ({ inputs, outputs }) => ({
            inputs: inputs.map((input) => ({
              address: input.address,
              coins: [...input.coins]
            })),
            outputs: outputs.map((output) => ({
              address: output.address,
              coins: [...output.coins]
            }))
          })
        }
      };
    }
    exports.createBankAminoConverters = createBankAminoConverters;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/bank/messages.js
var require_messages2 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/bank/messages.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isMsgSendEncodeObject = exports.bankTypes = void 0;
    var tx_1 = require_tx2();
    exports.bankTypes = [
      ["/cosmos.bank.v1beta1.MsgMultiSend", tx_1.MsgMultiSend],
      ["/cosmos.bank.v1beta1.MsgSend", tx_1.MsgSend]
    ];
    function isMsgSendEncodeObject(encodeObject) {
      return encodeObject.typeUrl === "/cosmos.bank.v1beta1.MsgSend";
    }
    exports.isMsgSendEncodeObject = isMsgSendEncodeObject;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/bank/v1beta1/query.js
var require_query3 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/bank/v1beta1/query.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.QueryClientImpl = exports.QueryDenomMetadataResponse = exports.QueryDenomMetadataRequest = exports.QueryDenomsMetadataResponse = exports.QueryDenomsMetadataRequest = exports.QueryParamsResponse = exports.QueryParamsRequest = exports.QuerySupplyOfResponse = exports.QuerySupplyOfRequest = exports.QueryTotalSupplyResponse = exports.QueryTotalSupplyRequest = exports.QuerySpendableBalancesResponse = exports.QuerySpendableBalancesRequest = exports.QueryAllBalancesResponse = exports.QueryAllBalancesRequest = exports.QueryBalanceResponse = exports.QueryBalanceRequest = exports.protobufPackage = void 0;
    var pagination_1 = require_pagination();
    var coin_1 = require_coin();
    var bank_1 = require_bank();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.bank.v1beta1";
    function createBaseQueryBalanceRequest() {
      return {
        address: "",
        denom: ""
      };
    }
    exports.QueryBalanceRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.address !== "") {
          writer.uint32(10).string(message.address);
        }
        if (message.denom !== "") {
          writer.uint32(18).string(message.denom);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryBalanceRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.address = reader.string();
              break;
            case 2:
              message.denom = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          address: (0, helpers_1.isSet)(object.address) ? String(object.address) : "",
          denom: (0, helpers_1.isSet)(object.denom) ? String(object.denom) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.address !== void 0 && (obj.address = message.address);
        message.denom !== void 0 && (obj.denom = message.denom);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryBalanceRequest();
        message.address = object.address ?? "";
        message.denom = object.denom ?? "";
        return message;
      }
    };
    function createBaseQueryBalanceResponse() {
      return {
        balance: void 0
      };
    }
    exports.QueryBalanceResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.balance !== void 0) {
          coin_1.Coin.encode(message.balance, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryBalanceResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.balance = coin_1.Coin.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          balance: (0, helpers_1.isSet)(object.balance) ? coin_1.Coin.fromJSON(object.balance) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.balance !== void 0 && (obj.balance = message.balance ? coin_1.Coin.toJSON(message.balance) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryBalanceResponse();
        message.balance = object.balance !== void 0 && object.balance !== null ? coin_1.Coin.fromPartial(object.balance) : void 0;
        return message;
      }
    };
    function createBaseQueryAllBalancesRequest() {
      return {
        address: "",
        pagination: void 0
      };
    }
    exports.QueryAllBalancesRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.address !== "") {
          writer.uint32(10).string(message.address);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryAllBalancesRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.address = reader.string();
              break;
            case 2:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          address: (0, helpers_1.isSet)(object.address) ? String(object.address) : "",
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.address !== void 0 && (obj.address = message.address);
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryAllBalancesRequest();
        message.address = object.address ?? "";
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryAllBalancesResponse() {
      return {
        balances: [],
        pagination: void 0
      };
    }
    exports.QueryAllBalancesResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.balances) {
          coin_1.Coin.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryAllBalancesResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.balances.push(coin_1.Coin.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          balances: Array.isArray(object == null ? void 0 : object.balances) ? object.balances.map((e2) => coin_1.Coin.fromJSON(e2)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.balances) {
          obj.balances = message.balances.map((e2) => e2 ? coin_1.Coin.toJSON(e2) : void 0);
        } else {
          obj.balances = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryAllBalancesResponse();
        message.balances = ((_a = object.balances) == null ? void 0 : _a.map((e2) => coin_1.Coin.fromPartial(e2))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQuerySpendableBalancesRequest() {
      return {
        address: "",
        pagination: void 0
      };
    }
    exports.QuerySpendableBalancesRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.address !== "") {
          writer.uint32(10).string(message.address);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQuerySpendableBalancesRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.address = reader.string();
              break;
            case 2:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          address: (0, helpers_1.isSet)(object.address) ? String(object.address) : "",
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.address !== void 0 && (obj.address = message.address);
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQuerySpendableBalancesRequest();
        message.address = object.address ?? "";
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQuerySpendableBalancesResponse() {
      return {
        balances: [],
        pagination: void 0
      };
    }
    exports.QuerySpendableBalancesResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.balances) {
          coin_1.Coin.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQuerySpendableBalancesResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.balances.push(coin_1.Coin.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          balances: Array.isArray(object == null ? void 0 : object.balances) ? object.balances.map((e2) => coin_1.Coin.fromJSON(e2)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.balances) {
          obj.balances = message.balances.map((e2) => e2 ? coin_1.Coin.toJSON(e2) : void 0);
        } else {
          obj.balances = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQuerySpendableBalancesResponse();
        message.balances = ((_a = object.balances) == null ? void 0 : _a.map((e2) => coin_1.Coin.fromPartial(e2))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryTotalSupplyRequest() {
      return {
        pagination: void 0
      };
    }
    exports.QueryTotalSupplyRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryTotalSupplyRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryTotalSupplyRequest();
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryTotalSupplyResponse() {
      return {
        supply: [],
        pagination: void 0
      };
    }
    exports.QueryTotalSupplyResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.supply) {
          coin_1.Coin.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryTotalSupplyResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.supply.push(coin_1.Coin.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          supply: Array.isArray(object == null ? void 0 : object.supply) ? object.supply.map((e2) => coin_1.Coin.fromJSON(e2)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.supply) {
          obj.supply = message.supply.map((e2) => e2 ? coin_1.Coin.toJSON(e2) : void 0);
        } else {
          obj.supply = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryTotalSupplyResponse();
        message.supply = ((_a = object.supply) == null ? void 0 : _a.map((e2) => coin_1.Coin.fromPartial(e2))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQuerySupplyOfRequest() {
      return {
        denom: ""
      };
    }
    exports.QuerySupplyOfRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.denom !== "") {
          writer.uint32(10).string(message.denom);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQuerySupplyOfRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.denom = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          denom: (0, helpers_1.isSet)(object.denom) ? String(object.denom) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.denom !== void 0 && (obj.denom = message.denom);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQuerySupplyOfRequest();
        message.denom = object.denom ?? "";
        return message;
      }
    };
    function createBaseQuerySupplyOfResponse() {
      return {
        amount: void 0
      };
    }
    exports.QuerySupplyOfResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.amount !== void 0) {
          coin_1.Coin.encode(message.amount, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQuerySupplyOfResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.amount = coin_1.Coin.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          amount: (0, helpers_1.isSet)(object.amount) ? coin_1.Coin.fromJSON(object.amount) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.amount !== void 0 && (obj.amount = message.amount ? coin_1.Coin.toJSON(message.amount) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQuerySupplyOfResponse();
        message.amount = object.amount !== void 0 && object.amount !== null ? coin_1.Coin.fromPartial(object.amount) : void 0;
        return message;
      }
    };
    function createBaseQueryParamsRequest() {
      return {};
    }
    exports.QueryParamsRequest = {
      encode(_3, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryParamsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_3) {
        return {};
      },
      toJSON(_3) {
        const obj = {};
        return obj;
      },
      fromPartial(_3) {
        const message = createBaseQueryParamsRequest();
        return message;
      }
    };
    function createBaseQueryParamsResponse() {
      return {
        params: void 0
      };
    }
    exports.QueryParamsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.params !== void 0) {
          bank_1.Params.encode(message.params, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryParamsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.params = bank_1.Params.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          params: (0, helpers_1.isSet)(object.params) ? bank_1.Params.fromJSON(object.params) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.params !== void 0 && (obj.params = message.params ? bank_1.Params.toJSON(message.params) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryParamsResponse();
        message.params = object.params !== void 0 && object.params !== null ? bank_1.Params.fromPartial(object.params) : void 0;
        return message;
      }
    };
    function createBaseQueryDenomsMetadataRequest() {
      return {
        pagination: void 0
      };
    }
    exports.QueryDenomsMetadataRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDenomsMetadataRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryDenomsMetadataRequest();
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryDenomsMetadataResponse() {
      return {
        metadatas: [],
        pagination: void 0
      };
    }
    exports.QueryDenomsMetadataResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.metadatas) {
          bank_1.Metadata.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDenomsMetadataResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.metadatas.push(bank_1.Metadata.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          metadatas: Array.isArray(object == null ? void 0 : object.metadatas) ? object.metadatas.map((e2) => bank_1.Metadata.fromJSON(e2)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.metadatas) {
          obj.metadatas = message.metadatas.map((e2) => e2 ? bank_1.Metadata.toJSON(e2) : void 0);
        } else {
          obj.metadatas = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryDenomsMetadataResponse();
        message.metadatas = ((_a = object.metadatas) == null ? void 0 : _a.map((e2) => bank_1.Metadata.fromPartial(e2))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryDenomMetadataRequest() {
      return {
        denom: ""
      };
    }
    exports.QueryDenomMetadataRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.denom !== "") {
          writer.uint32(10).string(message.denom);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDenomMetadataRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.denom = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          denom: (0, helpers_1.isSet)(object.denom) ? String(object.denom) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.denom !== void 0 && (obj.denom = message.denom);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryDenomMetadataRequest();
        message.denom = object.denom ?? "";
        return message;
      }
    };
    function createBaseQueryDenomMetadataResponse() {
      return {
        metadata: void 0
      };
    }
    exports.QueryDenomMetadataResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.metadata !== void 0) {
          bank_1.Metadata.encode(message.metadata, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDenomMetadataResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.metadata = bank_1.Metadata.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          metadata: (0, helpers_1.isSet)(object.metadata) ? bank_1.Metadata.fromJSON(object.metadata) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.metadata !== void 0 && (obj.metadata = message.metadata ? bank_1.Metadata.toJSON(message.metadata) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryDenomMetadataResponse();
        message.metadata = object.metadata !== void 0 && object.metadata !== null ? bank_1.Metadata.fromPartial(object.metadata) : void 0;
        return message;
      }
    };
    var QueryClientImpl = class {
      constructor(rpc) {
        this.rpc = rpc;
        this.Balance = this.Balance.bind(this);
        this.AllBalances = this.AllBalances.bind(this);
        this.SpendableBalances = this.SpendableBalances.bind(this);
        this.TotalSupply = this.TotalSupply.bind(this);
        this.SupplyOf = this.SupplyOf.bind(this);
        this.Params = this.Params.bind(this);
        this.DenomMetadata = this.DenomMetadata.bind(this);
        this.DenomsMetadata = this.DenomsMetadata.bind(this);
      }
      Balance(request) {
        const data = exports.QueryBalanceRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.bank.v1beta1.Query", "Balance", data);
        return promise.then((data2) => exports.QueryBalanceResponse.decode(new _m0.Reader(data2)));
      }
      AllBalances(request) {
        const data = exports.QueryAllBalancesRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.bank.v1beta1.Query", "AllBalances", data);
        return promise.then((data2) => exports.QueryAllBalancesResponse.decode(new _m0.Reader(data2)));
      }
      SpendableBalances(request) {
        const data = exports.QuerySpendableBalancesRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.bank.v1beta1.Query", "SpendableBalances", data);
        return promise.then((data2) => exports.QuerySpendableBalancesResponse.decode(new _m0.Reader(data2)));
      }
      TotalSupply(request = {
        pagination: void 0
      }) {
        const data = exports.QueryTotalSupplyRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.bank.v1beta1.Query", "TotalSupply", data);
        return promise.then((data2) => exports.QueryTotalSupplyResponse.decode(new _m0.Reader(data2)));
      }
      SupplyOf(request) {
        const data = exports.QuerySupplyOfRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.bank.v1beta1.Query", "SupplyOf", data);
        return promise.then((data2) => exports.QuerySupplyOfResponse.decode(new _m0.Reader(data2)));
      }
      Params(request = {}) {
        const data = exports.QueryParamsRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.bank.v1beta1.Query", "Params", data);
        return promise.then((data2) => exports.QueryParamsResponse.decode(new _m0.Reader(data2)));
      }
      DenomMetadata(request) {
        const data = exports.QueryDenomMetadataRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.bank.v1beta1.Query", "DenomMetadata", data);
        return promise.then((data2) => exports.QueryDenomMetadataResponse.decode(new _m0.Reader(data2)));
      }
      DenomsMetadata(request = {
        pagination: void 0
      }) {
        const data = exports.QueryDenomsMetadataRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.bank.v1beta1.Query", "DenomsMetadata", data);
        return promise.then((data2) => exports.QueryDenomsMetadataResponse.decode(new _m0.Reader(data2)));
      }
    };
    exports.QueryClientImpl = QueryClientImpl;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/bank/queries.js
var require_queries3 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/bank/queries.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.setupBankExtension = void 0;
    var utils_1 = require_build4();
    var query_1 = require_query3();
    var queryclient_1 = require_queryclient2();
    function setupBankExtension(base) {
      const rpc = (0, queryclient_1.createProtobufRpcClient)(base);
      const queryService = new query_1.QueryClientImpl(rpc);
      return {
        bank: {
          balance: async (address, denom) => {
            const { balance } = await queryService.Balance({ address, denom });
            (0, utils_1.assert)(balance);
            return balance;
          },
          allBalances: async (address) => {
            const { balances } = await queryService.AllBalances({ address });
            return balances;
          },
          totalSupply: async (paginationKey) => {
            const response = await queryService.TotalSupply({
              pagination: (0, queryclient_1.createPagination)(paginationKey)
            });
            return response;
          },
          supplyOf: async (denom) => {
            const { amount } = await queryService.SupplyOf({ denom });
            (0, utils_1.assert)(amount);
            return amount;
          },
          denomMetadata: async (denom) => {
            const { metadata } = await queryService.DenomMetadata({ denom });
            (0, utils_1.assert)(metadata);
            return metadata;
          },
          denomsMetadata: async () => {
            const { metadatas } = await queryService.DenomsMetadata({
              pagination: void 0
              // Not implemented
            });
            return metadatas;
          }
        }
      };
    }
    exports.setupBankExtension = setupBankExtension;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/crisis/aminomessages.js
var require_aminomessages3 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/crisis/aminomessages.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createCrysisAminoConverters = exports.isAminoMsgVerifyInvariant = void 0;
    function isAminoMsgVerifyInvariant(msg) {
      return msg.type === "cosmos-sdk/MsgVerifyInvariant";
    }
    exports.isAminoMsgVerifyInvariant = isAminoMsgVerifyInvariant;
    function createCrysisAminoConverters() {
      throw new Error("Not implemented");
    }
    exports.createCrysisAminoConverters = createCrysisAminoConverters;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/distribution/aminomessages.js
var require_aminomessages4 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/distribution/aminomessages.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createDistributionAminoConverters = exports.isAminoMsgFundCommunityPool = exports.isAminoMsgWithdrawValidatorCommission = exports.isAminoMsgWithdrawDelegatorReward = exports.isAminoMsgSetWithdrawAddress = void 0;
    function isAminoMsgSetWithdrawAddress(msg) {
      return msg.type === "cosmos-sdk/MsgModifyWithdrawAddress";
    }
    exports.isAminoMsgSetWithdrawAddress = isAminoMsgSetWithdrawAddress;
    function isAminoMsgWithdrawDelegatorReward(msg) {
      return msg.type === "cosmos-sdk/MsgWithdrawDelegationReward";
    }
    exports.isAminoMsgWithdrawDelegatorReward = isAminoMsgWithdrawDelegatorReward;
    function isAminoMsgWithdrawValidatorCommission(msg) {
      return msg.type === "cosmos-sdk/MsgWithdrawValidatorCommission";
    }
    exports.isAminoMsgWithdrawValidatorCommission = isAminoMsgWithdrawValidatorCommission;
    function isAminoMsgFundCommunityPool(msg) {
      return msg.type === "cosmos-sdk/MsgFundCommunityPool";
    }
    exports.isAminoMsgFundCommunityPool = isAminoMsgFundCommunityPool;
    function createDistributionAminoConverters() {
      return {
        "/cosmos.distribution.v1beta1.MsgFundCommunityPool": {
          aminoType: "cosmos-sdk/MsgFundCommunityPool",
          toAmino: ({ amount, depositor }) => ({
            amount: [...amount],
            depositor
          }),
          fromAmino: ({ amount, depositor }) => ({
            amount: [...amount],
            depositor
          })
        },
        "/cosmos.distribution.v1beta1.MsgSetWithdrawAddress": {
          aminoType: "cosmos-sdk/MsgModifyWithdrawAddress",
          toAmino: ({ delegatorAddress, withdrawAddress }) => ({
            delegator_address: delegatorAddress,
            withdraw_address: withdrawAddress
          }),
          fromAmino: ({ delegator_address, withdraw_address }) => ({
            delegatorAddress: delegator_address,
            withdrawAddress: withdraw_address
          })
        },
        "/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward": {
          aminoType: "cosmos-sdk/MsgWithdrawDelegationReward",
          toAmino: ({ delegatorAddress, validatorAddress }) => ({
            delegator_address: delegatorAddress,
            validator_address: validatorAddress
          }),
          fromAmino: ({ delegator_address, validator_address }) => ({
            delegatorAddress: delegator_address,
            validatorAddress: validator_address
          })
        },
        "/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission": {
          aminoType: "cosmos-sdk/MsgWithdrawValidatorCommission",
          toAmino: ({ validatorAddress }) => ({
            validator_address: validatorAddress
          }),
          fromAmino: ({ validator_address }) => ({
            validatorAddress: validator_address
          })
        }
      };
    }
    exports.createDistributionAminoConverters = createDistributionAminoConverters;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/distribution/v1beta1/tx.js
var require_tx4 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/distribution/v1beta1/tx.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.MsgClientImpl = exports.MsgFundCommunityPoolResponse = exports.MsgFundCommunityPool = exports.MsgWithdrawValidatorCommissionResponse = exports.MsgWithdrawValidatorCommission = exports.MsgWithdrawDelegatorRewardResponse = exports.MsgWithdrawDelegatorReward = exports.MsgSetWithdrawAddressResponse = exports.MsgSetWithdrawAddress = exports.protobufPackage = void 0;
    var coin_1 = require_coin();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.distribution.v1beta1";
    function createBaseMsgSetWithdrawAddress() {
      return {
        delegatorAddress: "",
        withdrawAddress: ""
      };
    }
    exports.MsgSetWithdrawAddress = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.delegatorAddress !== "") {
          writer.uint32(10).string(message.delegatorAddress);
        }
        if (message.withdrawAddress !== "") {
          writer.uint32(18).string(message.withdrawAddress);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgSetWithdrawAddress();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.delegatorAddress = reader.string();
              break;
            case 2:
              message.withdrawAddress = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          delegatorAddress: (0, helpers_1.isSet)(object.delegatorAddress) ? String(object.delegatorAddress) : "",
          withdrawAddress: (0, helpers_1.isSet)(object.withdrawAddress) ? String(object.withdrawAddress) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.delegatorAddress !== void 0 && (obj.delegatorAddress = message.delegatorAddress);
        message.withdrawAddress !== void 0 && (obj.withdrawAddress = message.withdrawAddress);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgSetWithdrawAddress();
        message.delegatorAddress = object.delegatorAddress ?? "";
        message.withdrawAddress = object.withdrawAddress ?? "";
        return message;
      }
    };
    function createBaseMsgSetWithdrawAddressResponse() {
      return {};
    }
    exports.MsgSetWithdrawAddressResponse = {
      encode(_3, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgSetWithdrawAddressResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_3) {
        return {};
      },
      toJSON(_3) {
        const obj = {};
        return obj;
      },
      fromPartial(_3) {
        const message = createBaseMsgSetWithdrawAddressResponse();
        return message;
      }
    };
    function createBaseMsgWithdrawDelegatorReward() {
      return {
        delegatorAddress: "",
        validatorAddress: ""
      };
    }
    exports.MsgWithdrawDelegatorReward = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.delegatorAddress !== "") {
          writer.uint32(10).string(message.delegatorAddress);
        }
        if (message.validatorAddress !== "") {
          writer.uint32(18).string(message.validatorAddress);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgWithdrawDelegatorReward();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.delegatorAddress = reader.string();
              break;
            case 2:
              message.validatorAddress = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          delegatorAddress: (0, helpers_1.isSet)(object.delegatorAddress) ? String(object.delegatorAddress) : "",
          validatorAddress: (0, helpers_1.isSet)(object.validatorAddress) ? String(object.validatorAddress) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.delegatorAddress !== void 0 && (obj.delegatorAddress = message.delegatorAddress);
        message.validatorAddress !== void 0 && (obj.validatorAddress = message.validatorAddress);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgWithdrawDelegatorReward();
        message.delegatorAddress = object.delegatorAddress ?? "";
        message.validatorAddress = object.validatorAddress ?? "";
        return message;
      }
    };
    function createBaseMsgWithdrawDelegatorRewardResponse() {
      return {};
    }
    exports.MsgWithdrawDelegatorRewardResponse = {
      encode(_3, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgWithdrawDelegatorRewardResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_3) {
        return {};
      },
      toJSON(_3) {
        const obj = {};
        return obj;
      },
      fromPartial(_3) {
        const message = createBaseMsgWithdrawDelegatorRewardResponse();
        return message;
      }
    };
    function createBaseMsgWithdrawValidatorCommission() {
      return {
        validatorAddress: ""
      };
    }
    exports.MsgWithdrawValidatorCommission = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.validatorAddress !== "") {
          writer.uint32(10).string(message.validatorAddress);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgWithdrawValidatorCommission();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.validatorAddress = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          validatorAddress: (0, helpers_1.isSet)(object.validatorAddress) ? String(object.validatorAddress) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.validatorAddress !== void 0 && (obj.validatorAddress = message.validatorAddress);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgWithdrawValidatorCommission();
        message.validatorAddress = object.validatorAddress ?? "";
        return message;
      }
    };
    function createBaseMsgWithdrawValidatorCommissionResponse() {
      return {};
    }
    exports.MsgWithdrawValidatorCommissionResponse = {
      encode(_3, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgWithdrawValidatorCommissionResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_3) {
        return {};
      },
      toJSON(_3) {
        const obj = {};
        return obj;
      },
      fromPartial(_3) {
        const message = createBaseMsgWithdrawValidatorCommissionResponse();
        return message;
      }
    };
    function createBaseMsgFundCommunityPool() {
      return {
        amount: [],
        depositor: ""
      };
    }
    exports.MsgFundCommunityPool = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.amount) {
          coin_1.Coin.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        if (message.depositor !== "") {
          writer.uint32(18).string(message.depositor);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgFundCommunityPool();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));
              break;
            case 2:
              message.depositor = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          amount: Array.isArray(object == null ? void 0 : object.amount) ? object.amount.map((e2) => coin_1.Coin.fromJSON(e2)) : [],
          depositor: (0, helpers_1.isSet)(object.depositor) ? String(object.depositor) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.amount) {
          obj.amount = message.amount.map((e2) => e2 ? coin_1.Coin.toJSON(e2) : void 0);
        } else {
          obj.amount = [];
        }
        message.depositor !== void 0 && (obj.depositor = message.depositor);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseMsgFundCommunityPool();
        message.amount = ((_a = object.amount) == null ? void 0 : _a.map((e2) => coin_1.Coin.fromPartial(e2))) || [];
        message.depositor = object.depositor ?? "";
        return message;
      }
    };
    function createBaseMsgFundCommunityPoolResponse() {
      return {};
    }
    exports.MsgFundCommunityPoolResponse = {
      encode(_3, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgFundCommunityPoolResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_3) {
        return {};
      },
      toJSON(_3) {
        const obj = {};
        return obj;
      },
      fromPartial(_3) {
        const message = createBaseMsgFundCommunityPoolResponse();
        return message;
      }
    };
    var MsgClientImpl = class {
      constructor(rpc) {
        this.rpc = rpc;
        this.SetWithdrawAddress = this.SetWithdrawAddress.bind(this);
        this.WithdrawDelegatorReward = this.WithdrawDelegatorReward.bind(this);
        this.WithdrawValidatorCommission = this.WithdrawValidatorCommission.bind(this);
        this.FundCommunityPool = this.FundCommunityPool.bind(this);
      }
      SetWithdrawAddress(request) {
        const data = exports.MsgSetWithdrawAddress.encode(request).finish();
        const promise = this.rpc.request("cosmos.distribution.v1beta1.Msg", "SetWithdrawAddress", data);
        return promise.then((data2) => exports.MsgSetWithdrawAddressResponse.decode(new _m0.Reader(data2)));
      }
      WithdrawDelegatorReward(request) {
        const data = exports.MsgWithdrawDelegatorReward.encode(request).finish();
        const promise = this.rpc.request("cosmos.distribution.v1beta1.Msg", "WithdrawDelegatorReward", data);
        return promise.then((data2) => exports.MsgWithdrawDelegatorRewardResponse.decode(new _m0.Reader(data2)));
      }
      WithdrawValidatorCommission(request) {
        const data = exports.MsgWithdrawValidatorCommission.encode(request).finish();
        const promise = this.rpc.request("cosmos.distribution.v1beta1.Msg", "WithdrawValidatorCommission", data);
        return promise.then((data2) => exports.MsgWithdrawValidatorCommissionResponse.decode(new _m0.Reader(data2)));
      }
      FundCommunityPool(request) {
        const data = exports.MsgFundCommunityPool.encode(request).finish();
        const promise = this.rpc.request("cosmos.distribution.v1beta1.Msg", "FundCommunityPool", data);
        return promise.then((data2) => exports.MsgFundCommunityPoolResponse.decode(new _m0.Reader(data2)));
      }
    };
    exports.MsgClientImpl = MsgClientImpl;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/distribution/messages.js
var require_messages3 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/distribution/messages.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isMsgWithdrawDelegatorRewardEncodeObject = exports.distributionTypes = void 0;
    var tx_1 = require_tx4();
    exports.distributionTypes = [
      ["/cosmos.distribution.v1beta1.MsgFundCommunityPool", tx_1.MsgFundCommunityPool],
      ["/cosmos.distribution.v1beta1.MsgSetWithdrawAddress", tx_1.MsgSetWithdrawAddress],
      ["/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward", tx_1.MsgWithdrawDelegatorReward],
      ["/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission", tx_1.MsgWithdrawValidatorCommission]
    ];
    function isMsgWithdrawDelegatorRewardEncodeObject(object) {
      return object.typeUrl === "/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward";
    }
    exports.isMsgWithdrawDelegatorRewardEncodeObject = isMsgWithdrawDelegatorRewardEncodeObject;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/distribution/v1beta1/distribution.js
var require_distribution = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/distribution/v1beta1/distribution.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.CommunityPoolSpendProposalWithDeposit = exports.DelegationDelegatorReward = exports.DelegatorStartingInfo = exports.CommunityPoolSpendProposal = exports.FeePool = exports.ValidatorSlashEvents = exports.ValidatorSlashEvent = exports.ValidatorOutstandingRewards = exports.ValidatorAccumulatedCommission = exports.ValidatorCurrentRewards = exports.ValidatorHistoricalRewards = exports.Params = exports.protobufPackage = void 0;
    var coin_1 = require_coin();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.distribution.v1beta1";
    function createBaseParams() {
      return {
        communityTax: "",
        baseProposerReward: "",
        bonusProposerReward: "",
        withdrawAddrEnabled: false
      };
    }
    exports.Params = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.communityTax !== "") {
          writer.uint32(10).string(message.communityTax);
        }
        if (message.baseProposerReward !== "") {
          writer.uint32(18).string(message.baseProposerReward);
        }
        if (message.bonusProposerReward !== "") {
          writer.uint32(26).string(message.bonusProposerReward);
        }
        if (message.withdrawAddrEnabled === true) {
          writer.uint32(32).bool(message.withdrawAddrEnabled);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseParams();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.communityTax = reader.string();
              break;
            case 2:
              message.baseProposerReward = reader.string();
              break;
            case 3:
              message.bonusProposerReward = reader.string();
              break;
            case 4:
              message.withdrawAddrEnabled = reader.bool();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          communityTax: (0, helpers_1.isSet)(object.communityTax) ? String(object.communityTax) : "",
          baseProposerReward: (0, helpers_1.isSet)(object.baseProposerReward) ? String(object.baseProposerReward) : "",
          bonusProposerReward: (0, helpers_1.isSet)(object.bonusProposerReward) ? String(object.bonusProposerReward) : "",
          withdrawAddrEnabled: (0, helpers_1.isSet)(object.withdrawAddrEnabled) ? Boolean(object.withdrawAddrEnabled) : false
        };
      },
      toJSON(message) {
        const obj = {};
        message.communityTax !== void 0 && (obj.communityTax = message.communityTax);
        message.baseProposerReward !== void 0 && (obj.baseProposerReward = message.baseProposerReward);
        message.bonusProposerReward !== void 0 && (obj.bonusProposerReward = message.bonusProposerReward);
        message.withdrawAddrEnabled !== void 0 && (obj.withdrawAddrEnabled = message.withdrawAddrEnabled);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseParams();
        message.communityTax = object.communityTax ?? "";
        message.baseProposerReward = object.baseProposerReward ?? "";
        message.bonusProposerReward = object.bonusProposerReward ?? "";
        message.withdrawAddrEnabled = object.withdrawAddrEnabled ?? false;
        return message;
      }
    };
    function createBaseValidatorHistoricalRewards() {
      return {
        cumulativeRewardRatio: [],
        referenceCount: 0
      };
    }
    exports.ValidatorHistoricalRewards = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.cumulativeRewardRatio) {
          coin_1.DecCoin.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        if (message.referenceCount !== 0) {
          writer.uint32(16).uint32(message.referenceCount);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseValidatorHistoricalRewards();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.cumulativeRewardRatio.push(coin_1.DecCoin.decode(reader, reader.uint32()));
              break;
            case 2:
              message.referenceCount = reader.uint32();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          cumulativeRewardRatio: Array.isArray(object == null ? void 0 : object.cumulativeRewardRatio) ? object.cumulativeRewardRatio.map((e2) => coin_1.DecCoin.fromJSON(e2)) : [],
          referenceCount: (0, helpers_1.isSet)(object.referenceCount) ? Number(object.referenceCount) : 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.cumulativeRewardRatio) {
          obj.cumulativeRewardRatio = message.cumulativeRewardRatio.map((e2) => e2 ? coin_1.DecCoin.toJSON(e2) : void 0);
        } else {
          obj.cumulativeRewardRatio = [];
        }
        message.referenceCount !== void 0 && (obj.referenceCount = Math.round(message.referenceCount));
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseValidatorHistoricalRewards();
        message.cumulativeRewardRatio = ((_a = object.cumulativeRewardRatio) == null ? void 0 : _a.map((e2) => coin_1.DecCoin.fromPartial(e2))) || [];
        message.referenceCount = object.referenceCount ?? 0;
        return message;
      }
    };
    function createBaseValidatorCurrentRewards() {
      return {
        rewards: [],
        period: helpers_1.Long.UZERO
      };
    }
    exports.ValidatorCurrentRewards = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.rewards) {
          coin_1.DecCoin.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        if (!message.period.isZero()) {
          writer.uint32(16).uint64(message.period);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseValidatorCurrentRewards();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.rewards.push(coin_1.DecCoin.decode(reader, reader.uint32()));
              break;
            case 2:
              message.period = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          rewards: Array.isArray(object == null ? void 0 : object.rewards) ? object.rewards.map((e2) => coin_1.DecCoin.fromJSON(e2)) : [],
          period: (0, helpers_1.isSet)(object.period) ? helpers_1.Long.fromValue(object.period) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.rewards) {
          obj.rewards = message.rewards.map((e2) => e2 ? coin_1.DecCoin.toJSON(e2) : void 0);
        } else {
          obj.rewards = [];
        }
        message.period !== void 0 && (obj.period = (message.period || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseValidatorCurrentRewards();
        message.rewards = ((_a = object.rewards) == null ? void 0 : _a.map((e2) => coin_1.DecCoin.fromPartial(e2))) || [];
        message.period = object.period !== void 0 && object.period !== null ? helpers_1.Long.fromValue(object.period) : helpers_1.Long.UZERO;
        return message;
      }
    };
    function createBaseValidatorAccumulatedCommission() {
      return {
        commission: []
      };
    }
    exports.ValidatorAccumulatedCommission = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.commission) {
          coin_1.DecCoin.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseValidatorAccumulatedCommission();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.commission.push(coin_1.DecCoin.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          commission: Array.isArray(object == null ? void 0 : object.commission) ? object.commission.map((e2) => coin_1.DecCoin.fromJSON(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.commission) {
          obj.commission = message.commission.map((e2) => e2 ? coin_1.DecCoin.toJSON(e2) : void 0);
        } else {
          obj.commission = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseValidatorAccumulatedCommission();
        message.commission = ((_a = object.commission) == null ? void 0 : _a.map((e2) => coin_1.DecCoin.fromPartial(e2))) || [];
        return message;
      }
    };
    function createBaseValidatorOutstandingRewards() {
      return {
        rewards: []
      };
    }
    exports.ValidatorOutstandingRewards = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.rewards) {
          coin_1.DecCoin.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseValidatorOutstandingRewards();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.rewards.push(coin_1.DecCoin.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          rewards: Array.isArray(object == null ? void 0 : object.rewards) ? object.rewards.map((e2) => coin_1.DecCoin.fromJSON(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.rewards) {
          obj.rewards = message.rewards.map((e2) => e2 ? coin_1.DecCoin.toJSON(e2) : void 0);
        } else {
          obj.rewards = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseValidatorOutstandingRewards();
        message.rewards = ((_a = object.rewards) == null ? void 0 : _a.map((e2) => coin_1.DecCoin.fromPartial(e2))) || [];
        return message;
      }
    };
    function createBaseValidatorSlashEvent() {
      return {
        validatorPeriod: helpers_1.Long.UZERO,
        fraction: ""
      };
    }
    exports.ValidatorSlashEvent = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.validatorPeriod.isZero()) {
          writer.uint32(8).uint64(message.validatorPeriod);
        }
        if (message.fraction !== "") {
          writer.uint32(18).string(message.fraction);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseValidatorSlashEvent();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.validatorPeriod = reader.uint64();
              break;
            case 2:
              message.fraction = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          validatorPeriod: (0, helpers_1.isSet)(object.validatorPeriod) ? helpers_1.Long.fromValue(object.validatorPeriod) : helpers_1.Long.UZERO,
          fraction: (0, helpers_1.isSet)(object.fraction) ? String(object.fraction) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.validatorPeriod !== void 0 && (obj.validatorPeriod = (message.validatorPeriod || helpers_1.Long.UZERO).toString());
        message.fraction !== void 0 && (obj.fraction = message.fraction);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseValidatorSlashEvent();
        message.validatorPeriod = object.validatorPeriod !== void 0 && object.validatorPeriod !== null ? helpers_1.Long.fromValue(object.validatorPeriod) : helpers_1.Long.UZERO;
        message.fraction = object.fraction ?? "";
        return message;
      }
    };
    function createBaseValidatorSlashEvents() {
      return {
        validatorSlashEvents: []
      };
    }
    exports.ValidatorSlashEvents = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.validatorSlashEvents) {
          exports.ValidatorSlashEvent.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseValidatorSlashEvents();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.validatorSlashEvents.push(exports.ValidatorSlashEvent.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          validatorSlashEvents: Array.isArray(object == null ? void 0 : object.validatorSlashEvents) ? object.validatorSlashEvents.map((e2) => exports.ValidatorSlashEvent.fromJSON(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.validatorSlashEvents) {
          obj.validatorSlashEvents = message.validatorSlashEvents.map((e2) => e2 ? exports.ValidatorSlashEvent.toJSON(e2) : void 0);
        } else {
          obj.validatorSlashEvents = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseValidatorSlashEvents();
        message.validatorSlashEvents = ((_a = object.validatorSlashEvents) == null ? void 0 : _a.map((e2) => exports.ValidatorSlashEvent.fromPartial(e2))) || [];
        return message;
      }
    };
    function createBaseFeePool() {
      return {
        communityPool: []
      };
    }
    exports.FeePool = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.communityPool) {
          coin_1.DecCoin.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseFeePool();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.communityPool.push(coin_1.DecCoin.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          communityPool: Array.isArray(object == null ? void 0 : object.communityPool) ? object.communityPool.map((e2) => coin_1.DecCoin.fromJSON(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.communityPool) {
          obj.communityPool = message.communityPool.map((e2) => e2 ? coin_1.DecCoin.toJSON(e2) : void 0);
        } else {
          obj.communityPool = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseFeePool();
        message.communityPool = ((_a = object.communityPool) == null ? void 0 : _a.map((e2) => coin_1.DecCoin.fromPartial(e2))) || [];
        return message;
      }
    };
    function createBaseCommunityPoolSpendProposal() {
      return {
        title: "",
        description: "",
        recipient: "",
        amount: []
      };
    }
    exports.CommunityPoolSpendProposal = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.title !== "") {
          writer.uint32(10).string(message.title);
        }
        if (message.description !== "") {
          writer.uint32(18).string(message.description);
        }
        if (message.recipient !== "") {
          writer.uint32(26).string(message.recipient);
        }
        for (const v3 of message.amount) {
          coin_1.Coin.encode(v3, writer.uint32(34).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseCommunityPoolSpendProposal();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.title = reader.string();
              break;
            case 2:
              message.description = reader.string();
              break;
            case 3:
              message.recipient = reader.string();
              break;
            case 4:
              message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          title: (0, helpers_1.isSet)(object.title) ? String(object.title) : "",
          description: (0, helpers_1.isSet)(object.description) ? String(object.description) : "",
          recipient: (0, helpers_1.isSet)(object.recipient) ? String(object.recipient) : "",
          amount: Array.isArray(object == null ? void 0 : object.amount) ? object.amount.map((e2) => coin_1.Coin.fromJSON(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.title !== void 0 && (obj.title = message.title);
        message.description !== void 0 && (obj.description = message.description);
        message.recipient !== void 0 && (obj.recipient = message.recipient);
        if (message.amount) {
          obj.amount = message.amount.map((e2) => e2 ? coin_1.Coin.toJSON(e2) : void 0);
        } else {
          obj.amount = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseCommunityPoolSpendProposal();
        message.title = object.title ?? "";
        message.description = object.description ?? "";
        message.recipient = object.recipient ?? "";
        message.amount = ((_a = object.amount) == null ? void 0 : _a.map((e2) => coin_1.Coin.fromPartial(e2))) || [];
        return message;
      }
    };
    function createBaseDelegatorStartingInfo() {
      return {
        previousPeriod: helpers_1.Long.UZERO,
        stake: "",
        height: helpers_1.Long.UZERO
      };
    }
    exports.DelegatorStartingInfo = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.previousPeriod.isZero()) {
          writer.uint32(8).uint64(message.previousPeriod);
        }
        if (message.stake !== "") {
          writer.uint32(18).string(message.stake);
        }
        if (!message.height.isZero()) {
          writer.uint32(24).uint64(message.height);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseDelegatorStartingInfo();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.previousPeriod = reader.uint64();
              break;
            case 2:
              message.stake = reader.string();
              break;
            case 3:
              message.height = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          previousPeriod: (0, helpers_1.isSet)(object.previousPeriod) ? helpers_1.Long.fromValue(object.previousPeriod) : helpers_1.Long.UZERO,
          stake: (0, helpers_1.isSet)(object.stake) ? String(object.stake) : "",
          height: (0, helpers_1.isSet)(object.height) ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.previousPeriod !== void 0 && (obj.previousPeriod = (message.previousPeriod || helpers_1.Long.UZERO).toString());
        message.stake !== void 0 && (obj.stake = message.stake);
        message.height !== void 0 && (obj.height = (message.height || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseDelegatorStartingInfo();
        message.previousPeriod = object.previousPeriod !== void 0 && object.previousPeriod !== null ? helpers_1.Long.fromValue(object.previousPeriod) : helpers_1.Long.UZERO;
        message.stake = object.stake ?? "";
        message.height = object.height !== void 0 && object.height !== null ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.UZERO;
        return message;
      }
    };
    function createBaseDelegationDelegatorReward() {
      return {
        validatorAddress: "",
        reward: []
      };
    }
    exports.DelegationDelegatorReward = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.validatorAddress !== "") {
          writer.uint32(10).string(message.validatorAddress);
        }
        for (const v3 of message.reward) {
          coin_1.DecCoin.encode(v3, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseDelegationDelegatorReward();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.validatorAddress = reader.string();
              break;
            case 2:
              message.reward.push(coin_1.DecCoin.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          validatorAddress: (0, helpers_1.isSet)(object.validatorAddress) ? String(object.validatorAddress) : "",
          reward: Array.isArray(object == null ? void 0 : object.reward) ? object.reward.map((e2) => coin_1.DecCoin.fromJSON(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.validatorAddress !== void 0 && (obj.validatorAddress = message.validatorAddress);
        if (message.reward) {
          obj.reward = message.reward.map((e2) => e2 ? coin_1.DecCoin.toJSON(e2) : void 0);
        } else {
          obj.reward = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseDelegationDelegatorReward();
        message.validatorAddress = object.validatorAddress ?? "";
        message.reward = ((_a = object.reward) == null ? void 0 : _a.map((e2) => coin_1.DecCoin.fromPartial(e2))) || [];
        return message;
      }
    };
    function createBaseCommunityPoolSpendProposalWithDeposit() {
      return {
        title: "",
        description: "",
        recipient: "",
        amount: "",
        deposit: ""
      };
    }
    exports.CommunityPoolSpendProposalWithDeposit = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.title !== "") {
          writer.uint32(10).string(message.title);
        }
        if (message.description !== "") {
          writer.uint32(18).string(message.description);
        }
        if (message.recipient !== "") {
          writer.uint32(26).string(message.recipient);
        }
        if (message.amount !== "") {
          writer.uint32(34).string(message.amount);
        }
        if (message.deposit !== "") {
          writer.uint32(42).string(message.deposit);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseCommunityPoolSpendProposalWithDeposit();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.title = reader.string();
              break;
            case 2:
              message.description = reader.string();
              break;
            case 3:
              message.recipient = reader.string();
              break;
            case 4:
              message.amount = reader.string();
              break;
            case 5:
              message.deposit = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          title: (0, helpers_1.isSet)(object.title) ? String(object.title) : "",
          description: (0, helpers_1.isSet)(object.description) ? String(object.description) : "",
          recipient: (0, helpers_1.isSet)(object.recipient) ? String(object.recipient) : "",
          amount: (0, helpers_1.isSet)(object.amount) ? String(object.amount) : "",
          deposit: (0, helpers_1.isSet)(object.deposit) ? String(object.deposit) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.title !== void 0 && (obj.title = message.title);
        message.description !== void 0 && (obj.description = message.description);
        message.recipient !== void 0 && (obj.recipient = message.recipient);
        message.amount !== void 0 && (obj.amount = message.amount);
        message.deposit !== void 0 && (obj.deposit = message.deposit);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseCommunityPoolSpendProposalWithDeposit();
        message.title = object.title ?? "";
        message.description = object.description ?? "";
        message.recipient = object.recipient ?? "";
        message.amount = object.amount ?? "";
        message.deposit = object.deposit ?? "";
        return message;
      }
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/distribution/v1beta1/query.js
var require_query4 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/distribution/v1beta1/query.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.QueryClientImpl = exports.QueryCommunityPoolResponse = exports.QueryCommunityPoolRequest = exports.QueryDelegatorWithdrawAddressResponse = exports.QueryDelegatorWithdrawAddressRequest = exports.QueryDelegatorValidatorsResponse = exports.QueryDelegatorValidatorsRequest = exports.QueryDelegationTotalRewardsResponse = exports.QueryDelegationTotalRewardsRequest = exports.QueryDelegationRewardsResponse = exports.QueryDelegationRewardsRequest = exports.QueryValidatorSlashesResponse = exports.QueryValidatorSlashesRequest = exports.QueryValidatorCommissionResponse = exports.QueryValidatorCommissionRequest = exports.QueryValidatorOutstandingRewardsResponse = exports.QueryValidatorOutstandingRewardsRequest = exports.QueryParamsResponse = exports.QueryParamsRequest = exports.protobufPackage = void 0;
    var pagination_1 = require_pagination();
    var distribution_1 = require_distribution();
    var coin_1 = require_coin();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.distribution.v1beta1";
    function createBaseQueryParamsRequest() {
      return {};
    }
    exports.QueryParamsRequest = {
      encode(_3, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryParamsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_3) {
        return {};
      },
      toJSON(_3) {
        const obj = {};
        return obj;
      },
      fromPartial(_3) {
        const message = createBaseQueryParamsRequest();
        return message;
      }
    };
    function createBaseQueryParamsResponse() {
      return {
        params: void 0
      };
    }
    exports.QueryParamsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.params !== void 0) {
          distribution_1.Params.encode(message.params, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryParamsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.params = distribution_1.Params.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          params: (0, helpers_1.isSet)(object.params) ? distribution_1.Params.fromJSON(object.params) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.params !== void 0 && (obj.params = message.params ? distribution_1.Params.toJSON(message.params) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryParamsResponse();
        message.params = object.params !== void 0 && object.params !== null ? distribution_1.Params.fromPartial(object.params) : void 0;
        return message;
      }
    };
    function createBaseQueryValidatorOutstandingRewardsRequest() {
      return {
        validatorAddress: ""
      };
    }
    exports.QueryValidatorOutstandingRewardsRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.validatorAddress !== "") {
          writer.uint32(10).string(message.validatorAddress);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryValidatorOutstandingRewardsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.validatorAddress = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          validatorAddress: (0, helpers_1.isSet)(object.validatorAddress) ? String(object.validatorAddress) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.validatorAddress !== void 0 && (obj.validatorAddress = message.validatorAddress);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryValidatorOutstandingRewardsRequest();
        message.validatorAddress = object.validatorAddress ?? "";
        return message;
      }
    };
    function createBaseQueryValidatorOutstandingRewardsResponse() {
      return {
        rewards: void 0
      };
    }
    exports.QueryValidatorOutstandingRewardsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.rewards !== void 0) {
          distribution_1.ValidatorOutstandingRewards.encode(message.rewards, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryValidatorOutstandingRewardsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.rewards = distribution_1.ValidatorOutstandingRewards.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          rewards: (0, helpers_1.isSet)(object.rewards) ? distribution_1.ValidatorOutstandingRewards.fromJSON(object.rewards) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.rewards !== void 0 && (obj.rewards = message.rewards ? distribution_1.ValidatorOutstandingRewards.toJSON(message.rewards) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryValidatorOutstandingRewardsResponse();
        message.rewards = object.rewards !== void 0 && object.rewards !== null ? distribution_1.ValidatorOutstandingRewards.fromPartial(object.rewards) : void 0;
        return message;
      }
    };
    function createBaseQueryValidatorCommissionRequest() {
      return {
        validatorAddress: ""
      };
    }
    exports.QueryValidatorCommissionRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.validatorAddress !== "") {
          writer.uint32(10).string(message.validatorAddress);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryValidatorCommissionRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.validatorAddress = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          validatorAddress: (0, helpers_1.isSet)(object.validatorAddress) ? String(object.validatorAddress) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.validatorAddress !== void 0 && (obj.validatorAddress = message.validatorAddress);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryValidatorCommissionRequest();
        message.validatorAddress = object.validatorAddress ?? "";
        return message;
      }
    };
    function createBaseQueryValidatorCommissionResponse() {
      return {
        commission: void 0
      };
    }
    exports.QueryValidatorCommissionResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.commission !== void 0) {
          distribution_1.ValidatorAccumulatedCommission.encode(message.commission, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryValidatorCommissionResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.commission = distribution_1.ValidatorAccumulatedCommission.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          commission: (0, helpers_1.isSet)(object.commission) ? distribution_1.ValidatorAccumulatedCommission.fromJSON(object.commission) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.commission !== void 0 && (obj.commission = message.commission ? distribution_1.ValidatorAccumulatedCommission.toJSON(message.commission) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryValidatorCommissionResponse();
        message.commission = object.commission !== void 0 && object.commission !== null ? distribution_1.ValidatorAccumulatedCommission.fromPartial(object.commission) : void 0;
        return message;
      }
    };
    function createBaseQueryValidatorSlashesRequest() {
      return {
        validatorAddress: "",
        startingHeight: helpers_1.Long.UZERO,
        endingHeight: helpers_1.Long.UZERO,
        pagination: void 0
      };
    }
    exports.QueryValidatorSlashesRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.validatorAddress !== "") {
          writer.uint32(10).string(message.validatorAddress);
        }
        if (!message.startingHeight.isZero()) {
          writer.uint32(16).uint64(message.startingHeight);
        }
        if (!message.endingHeight.isZero()) {
          writer.uint32(24).uint64(message.endingHeight);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(34).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryValidatorSlashesRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.validatorAddress = reader.string();
              break;
            case 2:
              message.startingHeight = reader.uint64();
              break;
            case 3:
              message.endingHeight = reader.uint64();
              break;
            case 4:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          validatorAddress: (0, helpers_1.isSet)(object.validatorAddress) ? String(object.validatorAddress) : "",
          startingHeight: (0, helpers_1.isSet)(object.startingHeight) ? helpers_1.Long.fromValue(object.startingHeight) : helpers_1.Long.UZERO,
          endingHeight: (0, helpers_1.isSet)(object.endingHeight) ? helpers_1.Long.fromValue(object.endingHeight) : helpers_1.Long.UZERO,
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.validatorAddress !== void 0 && (obj.validatorAddress = message.validatorAddress);
        message.startingHeight !== void 0 && (obj.startingHeight = (message.startingHeight || helpers_1.Long.UZERO).toString());
        message.endingHeight !== void 0 && (obj.endingHeight = (message.endingHeight || helpers_1.Long.UZERO).toString());
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryValidatorSlashesRequest();
        message.validatorAddress = object.validatorAddress ?? "";
        message.startingHeight = object.startingHeight !== void 0 && object.startingHeight !== null ? helpers_1.Long.fromValue(object.startingHeight) : helpers_1.Long.UZERO;
        message.endingHeight = object.endingHeight !== void 0 && object.endingHeight !== null ? helpers_1.Long.fromValue(object.endingHeight) : helpers_1.Long.UZERO;
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryValidatorSlashesResponse() {
      return {
        slashes: [],
        pagination: void 0
      };
    }
    exports.QueryValidatorSlashesResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.slashes) {
          distribution_1.ValidatorSlashEvent.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryValidatorSlashesResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.slashes.push(distribution_1.ValidatorSlashEvent.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          slashes: Array.isArray(object == null ? void 0 : object.slashes) ? object.slashes.map((e2) => distribution_1.ValidatorSlashEvent.fromJSON(e2)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.slashes) {
          obj.slashes = message.slashes.map((e2) => e2 ? distribution_1.ValidatorSlashEvent.toJSON(e2) : void 0);
        } else {
          obj.slashes = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryValidatorSlashesResponse();
        message.slashes = ((_a = object.slashes) == null ? void 0 : _a.map((e2) => distribution_1.ValidatorSlashEvent.fromPartial(e2))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryDelegationRewardsRequest() {
      return {
        delegatorAddress: "",
        validatorAddress: ""
      };
    }
    exports.QueryDelegationRewardsRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.delegatorAddress !== "") {
          writer.uint32(10).string(message.delegatorAddress);
        }
        if (message.validatorAddress !== "") {
          writer.uint32(18).string(message.validatorAddress);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDelegationRewardsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.delegatorAddress = reader.string();
              break;
            case 2:
              message.validatorAddress = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          delegatorAddress: (0, helpers_1.isSet)(object.delegatorAddress) ? String(object.delegatorAddress) : "",
          validatorAddress: (0, helpers_1.isSet)(object.validatorAddress) ? String(object.validatorAddress) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.delegatorAddress !== void 0 && (obj.delegatorAddress = message.delegatorAddress);
        message.validatorAddress !== void 0 && (obj.validatorAddress = message.validatorAddress);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryDelegationRewardsRequest();
        message.delegatorAddress = object.delegatorAddress ?? "";
        message.validatorAddress = object.validatorAddress ?? "";
        return message;
      }
    };
    function createBaseQueryDelegationRewardsResponse() {
      return {
        rewards: []
      };
    }
    exports.QueryDelegationRewardsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.rewards) {
          coin_1.DecCoin.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDelegationRewardsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.rewards.push(coin_1.DecCoin.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          rewards: Array.isArray(object == null ? void 0 : object.rewards) ? object.rewards.map((e2) => coin_1.DecCoin.fromJSON(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.rewards) {
          obj.rewards = message.rewards.map((e2) => e2 ? coin_1.DecCoin.toJSON(e2) : void 0);
        } else {
          obj.rewards = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryDelegationRewardsResponse();
        message.rewards = ((_a = object.rewards) == null ? void 0 : _a.map((e2) => coin_1.DecCoin.fromPartial(e2))) || [];
        return message;
      }
    };
    function createBaseQueryDelegationTotalRewardsRequest() {
      return {
        delegatorAddress: ""
      };
    }
    exports.QueryDelegationTotalRewardsRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.delegatorAddress !== "") {
          writer.uint32(10).string(message.delegatorAddress);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDelegationTotalRewardsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.delegatorAddress = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          delegatorAddress: (0, helpers_1.isSet)(object.delegatorAddress) ? String(object.delegatorAddress) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.delegatorAddress !== void 0 && (obj.delegatorAddress = message.delegatorAddress);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryDelegationTotalRewardsRequest();
        message.delegatorAddress = object.delegatorAddress ?? "";
        return message;
      }
    };
    function createBaseQueryDelegationTotalRewardsResponse() {
      return {
        rewards: [],
        total: []
      };
    }
    exports.QueryDelegationTotalRewardsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.rewards) {
          distribution_1.DelegationDelegatorReward.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        for (const v3 of message.total) {
          coin_1.DecCoin.encode(v3, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDelegationTotalRewardsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.rewards.push(distribution_1.DelegationDelegatorReward.decode(reader, reader.uint32()));
              break;
            case 2:
              message.total.push(coin_1.DecCoin.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          rewards: Array.isArray(object == null ? void 0 : object.rewards) ? object.rewards.map((e2) => distribution_1.DelegationDelegatorReward.fromJSON(e2)) : [],
          total: Array.isArray(object == null ? void 0 : object.total) ? object.total.map((e2) => coin_1.DecCoin.fromJSON(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.rewards) {
          obj.rewards = message.rewards.map((e2) => e2 ? distribution_1.DelegationDelegatorReward.toJSON(e2) : void 0);
        } else {
          obj.rewards = [];
        }
        if (message.total) {
          obj.total = message.total.map((e2) => e2 ? coin_1.DecCoin.toJSON(e2) : void 0);
        } else {
          obj.total = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a, _b;
        const message = createBaseQueryDelegationTotalRewardsResponse();
        message.rewards = ((_a = object.rewards) == null ? void 0 : _a.map((e2) => distribution_1.DelegationDelegatorReward.fromPartial(e2))) || [];
        message.total = ((_b = object.total) == null ? void 0 : _b.map((e2) => coin_1.DecCoin.fromPartial(e2))) || [];
        return message;
      }
    };
    function createBaseQueryDelegatorValidatorsRequest() {
      return {
        delegatorAddress: ""
      };
    }
    exports.QueryDelegatorValidatorsRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.delegatorAddress !== "") {
          writer.uint32(10).string(message.delegatorAddress);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDelegatorValidatorsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.delegatorAddress = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          delegatorAddress: (0, helpers_1.isSet)(object.delegatorAddress) ? String(object.delegatorAddress) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.delegatorAddress !== void 0 && (obj.delegatorAddress = message.delegatorAddress);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryDelegatorValidatorsRequest();
        message.delegatorAddress = object.delegatorAddress ?? "";
        return message;
      }
    };
    function createBaseQueryDelegatorValidatorsResponse() {
      return {
        validators: []
      };
    }
    exports.QueryDelegatorValidatorsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.validators) {
          writer.uint32(10).string(v3);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDelegatorValidatorsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.validators.push(reader.string());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          validators: Array.isArray(object == null ? void 0 : object.validators) ? object.validators.map((e2) => String(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.validators) {
          obj.validators = message.validators.map((e2) => e2);
        } else {
          obj.validators = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryDelegatorValidatorsResponse();
        message.validators = ((_a = object.validators) == null ? void 0 : _a.map((e2) => e2)) || [];
        return message;
      }
    };
    function createBaseQueryDelegatorWithdrawAddressRequest() {
      return {
        delegatorAddress: ""
      };
    }
    exports.QueryDelegatorWithdrawAddressRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.delegatorAddress !== "") {
          writer.uint32(10).string(message.delegatorAddress);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDelegatorWithdrawAddressRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.delegatorAddress = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          delegatorAddress: (0, helpers_1.isSet)(object.delegatorAddress) ? String(object.delegatorAddress) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.delegatorAddress !== void 0 && (obj.delegatorAddress = message.delegatorAddress);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryDelegatorWithdrawAddressRequest();
        message.delegatorAddress = object.delegatorAddress ?? "";
        return message;
      }
    };
    function createBaseQueryDelegatorWithdrawAddressResponse() {
      return {
        withdrawAddress: ""
      };
    }
    exports.QueryDelegatorWithdrawAddressResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.withdrawAddress !== "") {
          writer.uint32(10).string(message.withdrawAddress);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDelegatorWithdrawAddressResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.withdrawAddress = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          withdrawAddress: (0, helpers_1.isSet)(object.withdrawAddress) ? String(object.withdrawAddress) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.withdrawAddress !== void 0 && (obj.withdrawAddress = message.withdrawAddress);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryDelegatorWithdrawAddressResponse();
        message.withdrawAddress = object.withdrawAddress ?? "";
        return message;
      }
    };
    function createBaseQueryCommunityPoolRequest() {
      return {};
    }
    exports.QueryCommunityPoolRequest = {
      encode(_3, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryCommunityPoolRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_3) {
        return {};
      },
      toJSON(_3) {
        const obj = {};
        return obj;
      },
      fromPartial(_3) {
        const message = createBaseQueryCommunityPoolRequest();
        return message;
      }
    };
    function createBaseQueryCommunityPoolResponse() {
      return {
        pool: []
      };
    }
    exports.QueryCommunityPoolResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.pool) {
          coin_1.DecCoin.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryCommunityPoolResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.pool.push(coin_1.DecCoin.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          pool: Array.isArray(object == null ? void 0 : object.pool) ? object.pool.map((e2) => coin_1.DecCoin.fromJSON(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.pool) {
          obj.pool = message.pool.map((e2) => e2 ? coin_1.DecCoin.toJSON(e2) : void 0);
        } else {
          obj.pool = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryCommunityPoolResponse();
        message.pool = ((_a = object.pool) == null ? void 0 : _a.map((e2) => coin_1.DecCoin.fromPartial(e2))) || [];
        return message;
      }
    };
    var QueryClientImpl = class {
      constructor(rpc) {
        this.rpc = rpc;
        this.Params = this.Params.bind(this);
        this.ValidatorOutstandingRewards = this.ValidatorOutstandingRewards.bind(this);
        this.ValidatorCommission = this.ValidatorCommission.bind(this);
        this.ValidatorSlashes = this.ValidatorSlashes.bind(this);
        this.DelegationRewards = this.DelegationRewards.bind(this);
        this.DelegationTotalRewards = this.DelegationTotalRewards.bind(this);
        this.DelegatorValidators = this.DelegatorValidators.bind(this);
        this.DelegatorWithdrawAddress = this.DelegatorWithdrawAddress.bind(this);
        this.CommunityPool = this.CommunityPool.bind(this);
      }
      Params(request = {}) {
        const data = exports.QueryParamsRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.distribution.v1beta1.Query", "Params", data);
        return promise.then((data2) => exports.QueryParamsResponse.decode(new _m0.Reader(data2)));
      }
      ValidatorOutstandingRewards(request) {
        const data = exports.QueryValidatorOutstandingRewardsRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.distribution.v1beta1.Query", "ValidatorOutstandingRewards", data);
        return promise.then((data2) => exports.QueryValidatorOutstandingRewardsResponse.decode(new _m0.Reader(data2)));
      }
      ValidatorCommission(request) {
        const data = exports.QueryValidatorCommissionRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.distribution.v1beta1.Query", "ValidatorCommission", data);
        return promise.then((data2) => exports.QueryValidatorCommissionResponse.decode(new _m0.Reader(data2)));
      }
      ValidatorSlashes(request) {
        const data = exports.QueryValidatorSlashesRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.distribution.v1beta1.Query", "ValidatorSlashes", data);
        return promise.then((data2) => exports.QueryValidatorSlashesResponse.decode(new _m0.Reader(data2)));
      }
      DelegationRewards(request) {
        const data = exports.QueryDelegationRewardsRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.distribution.v1beta1.Query", "DelegationRewards", data);
        return promise.then((data2) => exports.QueryDelegationRewardsResponse.decode(new _m0.Reader(data2)));
      }
      DelegationTotalRewards(request) {
        const data = exports.QueryDelegationTotalRewardsRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.distribution.v1beta1.Query", "DelegationTotalRewards", data);
        return promise.then((data2) => exports.QueryDelegationTotalRewardsResponse.decode(new _m0.Reader(data2)));
      }
      DelegatorValidators(request) {
        const data = exports.QueryDelegatorValidatorsRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.distribution.v1beta1.Query", "DelegatorValidators", data);
        return promise.then((data2) => exports.QueryDelegatorValidatorsResponse.decode(new _m0.Reader(data2)));
      }
      DelegatorWithdrawAddress(request) {
        const data = exports.QueryDelegatorWithdrawAddressRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.distribution.v1beta1.Query", "DelegatorWithdrawAddress", data);
        return promise.then((data2) => exports.QueryDelegatorWithdrawAddressResponse.decode(new _m0.Reader(data2)));
      }
      CommunityPool(request = {}) {
        const data = exports.QueryCommunityPoolRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.distribution.v1beta1.Query", "CommunityPool", data);
        return promise.then((data2) => exports.QueryCommunityPoolResponse.decode(new _m0.Reader(data2)));
      }
    };
    exports.QueryClientImpl = QueryClientImpl;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/distribution/queries.js
var require_queries4 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/distribution/queries.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.setupDistributionExtension = void 0;
    var query_1 = require_query4();
    var long_1 = __importDefault(require_long());
    var queryclient_1 = require_queryclient2();
    function setupDistributionExtension(base) {
      const rpc = (0, queryclient_1.createProtobufRpcClient)(base);
      const queryService = new query_1.QueryClientImpl(rpc);
      return {
        distribution: {
          communityPool: async () => {
            const response = await queryService.CommunityPool({});
            return response;
          },
          delegationRewards: async (delegatorAddress, validatorAddress) => {
            const response = await queryService.DelegationRewards({
              delegatorAddress,
              validatorAddress
            });
            return response;
          },
          delegationTotalRewards: async (delegatorAddress) => {
            const response = await queryService.DelegationTotalRewards({
              delegatorAddress
            });
            return response;
          },
          delegatorValidators: async (delegatorAddress) => {
            const response = await queryService.DelegatorValidators({
              delegatorAddress
            });
            return response;
          },
          delegatorWithdrawAddress: async (delegatorAddress) => {
            const response = await queryService.DelegatorWithdrawAddress({
              delegatorAddress
            });
            return response;
          },
          params: async () => {
            const response = await queryService.Params({});
            return response;
          },
          validatorCommission: async (validatorAddress) => {
            const response = await queryService.ValidatorCommission({
              validatorAddress
            });
            return response;
          },
          validatorOutstandingRewards: async (validatorAddress) => {
            const response = await queryService.ValidatorOutstandingRewards({
              validatorAddress
            });
            return response;
          },
          validatorSlashes: async (validatorAddress, startingHeight, endingHeight, paginationKey) => {
            const response = await queryService.ValidatorSlashes({
              validatorAddress,
              startingHeight: long_1.default.fromNumber(startingHeight, true),
              endingHeight: long_1.default.fromNumber(endingHeight, true),
              pagination: (0, queryclient_1.createPagination)(paginationKey)
            });
            return response;
          }
        }
      };
    }
    exports.setupDistributionExtension = setupDistributionExtension;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/evidence/aminomessages.js
var require_aminomessages5 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/evidence/aminomessages.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createEvidenceAminoConverters = exports.isAminoMsgSubmitEvidence = void 0;
    function isAminoMsgSubmitEvidence(msg) {
      return msg.type === "cosmos-sdk/MsgSubmitEvidence";
    }
    exports.isAminoMsgSubmitEvidence = isAminoMsgSubmitEvidence;
    function createEvidenceAminoConverters() {
      throw new Error("Not implemented");
    }
    exports.createEvidenceAminoConverters = createEvidenceAminoConverters;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/feegrant/aminomessages.js
var require_aminomessages6 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/feegrant/aminomessages.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createFeegrantAminoConverters = void 0;
    function createFeegrantAminoConverters() {
      return {
        "/cosmos.feegrant.v1beta1.MsgGrantAllowance": "not_supported_by_chain",
        "/cosmos.feegrant.v1beta1.MsgRevokeAllowance": "not_supported_by_chain"
      };
    }
    exports.createFeegrantAminoConverters = createFeegrantAminoConverters;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/feegrant/v1beta1/tx.js
var require_tx5 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/feegrant/v1beta1/tx.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.MsgClientImpl = exports.MsgRevokeAllowanceResponse = exports.MsgRevokeAllowance = exports.MsgGrantAllowanceResponse = exports.MsgGrantAllowance = exports.protobufPackage = void 0;
    var any_1 = require_any();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.feegrant.v1beta1";
    function createBaseMsgGrantAllowance() {
      return {
        granter: "",
        grantee: "",
        allowance: void 0
      };
    }
    exports.MsgGrantAllowance = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.granter !== "") {
          writer.uint32(10).string(message.granter);
        }
        if (message.grantee !== "") {
          writer.uint32(18).string(message.grantee);
        }
        if (message.allowance !== void 0) {
          any_1.Any.encode(message.allowance, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgGrantAllowance();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.granter = reader.string();
              break;
            case 2:
              message.grantee = reader.string();
              break;
            case 3:
              message.allowance = any_1.Any.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          granter: (0, helpers_1.isSet)(object.granter) ? String(object.granter) : "",
          grantee: (0, helpers_1.isSet)(object.grantee) ? String(object.grantee) : "",
          allowance: (0, helpers_1.isSet)(object.allowance) ? any_1.Any.fromJSON(object.allowance) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.granter !== void 0 && (obj.granter = message.granter);
        message.grantee !== void 0 && (obj.grantee = message.grantee);
        message.allowance !== void 0 && (obj.allowance = message.allowance ? any_1.Any.toJSON(message.allowance) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgGrantAllowance();
        message.granter = object.granter ?? "";
        message.grantee = object.grantee ?? "";
        message.allowance = object.allowance !== void 0 && object.allowance !== null ? any_1.Any.fromPartial(object.allowance) : void 0;
        return message;
      }
    };
    function createBaseMsgGrantAllowanceResponse() {
      return {};
    }
    exports.MsgGrantAllowanceResponse = {
      encode(_3, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgGrantAllowanceResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_3) {
        return {};
      },
      toJSON(_3) {
        const obj = {};
        return obj;
      },
      fromPartial(_3) {
        const message = createBaseMsgGrantAllowanceResponse();
        return message;
      }
    };
    function createBaseMsgRevokeAllowance() {
      return {
        granter: "",
        grantee: ""
      };
    }
    exports.MsgRevokeAllowance = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.granter !== "") {
          writer.uint32(10).string(message.granter);
        }
        if (message.grantee !== "") {
          writer.uint32(18).string(message.grantee);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgRevokeAllowance();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.granter = reader.string();
              break;
            case 2:
              message.grantee = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          granter: (0, helpers_1.isSet)(object.granter) ? String(object.granter) : "",
          grantee: (0, helpers_1.isSet)(object.grantee) ? String(object.grantee) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.granter !== void 0 && (obj.granter = message.granter);
        message.grantee !== void 0 && (obj.grantee = message.grantee);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgRevokeAllowance();
        message.granter = object.granter ?? "";
        message.grantee = object.grantee ?? "";
        return message;
      }
    };
    function createBaseMsgRevokeAllowanceResponse() {
      return {};
    }
    exports.MsgRevokeAllowanceResponse = {
      encode(_3, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgRevokeAllowanceResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_3) {
        return {};
      },
      toJSON(_3) {
        const obj = {};
        return obj;
      },
      fromPartial(_3) {
        const message = createBaseMsgRevokeAllowanceResponse();
        return message;
      }
    };
    var MsgClientImpl = class {
      constructor(rpc) {
        this.rpc = rpc;
        this.GrantAllowance = this.GrantAllowance.bind(this);
        this.RevokeAllowance = this.RevokeAllowance.bind(this);
      }
      GrantAllowance(request) {
        const data = exports.MsgGrantAllowance.encode(request).finish();
        const promise = this.rpc.request("cosmos.feegrant.v1beta1.Msg", "GrantAllowance", data);
        return promise.then((data2) => exports.MsgGrantAllowanceResponse.decode(new _m0.Reader(data2)));
      }
      RevokeAllowance(request) {
        const data = exports.MsgRevokeAllowance.encode(request).finish();
        const promise = this.rpc.request("cosmos.feegrant.v1beta1.Msg", "RevokeAllowance", data);
        return promise.then((data2) => exports.MsgRevokeAllowanceResponse.decode(new _m0.Reader(data2)));
      }
    };
    exports.MsgClientImpl = MsgClientImpl;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/feegrant/messages.js
var require_messages4 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/feegrant/messages.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.feegrantTypes = void 0;
    var tx_1 = require_tx5();
    exports.feegrantTypes = [
      ["/cosmos.feegrant.v1beta1.MsgGrantAllowance", tx_1.MsgGrantAllowance],
      ["/cosmos.feegrant.v1beta1.MsgRevokeAllowance", tx_1.MsgRevokeAllowance]
    ];
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/google/protobuf/duration.js
var require_duration = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/google/protobuf/duration.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Duration = exports.protobufPackage = void 0;
    var helpers_1 = require_helpers();
    var _m0 = __importStar(require_minimal());
    exports.protobufPackage = "google.protobuf";
    function createBaseDuration() {
      return {
        seconds: helpers_1.Long.ZERO,
        nanos: 0
      };
    }
    exports.Duration = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.seconds.isZero()) {
          writer.uint32(8).int64(message.seconds);
        }
        if (message.nanos !== 0) {
          writer.uint32(16).int32(message.nanos);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseDuration();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.seconds = reader.int64();
              break;
            case 2:
              message.nanos = reader.int32();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          seconds: (0, helpers_1.isSet)(object.seconds) ? helpers_1.Long.fromValue(object.seconds) : helpers_1.Long.ZERO,
          nanos: (0, helpers_1.isSet)(object.nanos) ? Number(object.nanos) : 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.seconds !== void 0 && (obj.seconds = (message.seconds || helpers_1.Long.ZERO).toString());
        message.nanos !== void 0 && (obj.nanos = Math.round(message.nanos));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseDuration();
        message.seconds = object.seconds !== void 0 && object.seconds !== null ? helpers_1.Long.fromValue(object.seconds) : helpers_1.Long.ZERO;
        message.nanos = object.nanos ?? 0;
        return message;
      }
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/feegrant/v1beta1/feegrant.js
var require_feegrant = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/feegrant/v1beta1/feegrant.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Grant = exports.AllowedMsgAllowance = exports.PeriodicAllowance = exports.BasicAllowance = exports.protobufPackage = void 0;
    var coin_1 = require_coin();
    var timestamp_1 = require_timestamp();
    var duration_1 = require_duration();
    var any_1 = require_any();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.feegrant.v1beta1";
    function createBaseBasicAllowance() {
      return {
        spendLimit: [],
        expiration: void 0
      };
    }
    exports.BasicAllowance = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.spendLimit) {
          coin_1.Coin.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        if (message.expiration !== void 0) {
          timestamp_1.Timestamp.encode(message.expiration, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseBasicAllowance();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.spendLimit.push(coin_1.Coin.decode(reader, reader.uint32()));
              break;
            case 2:
              message.expiration = timestamp_1.Timestamp.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          spendLimit: Array.isArray(object == null ? void 0 : object.spendLimit) ? object.spendLimit.map((e2) => coin_1.Coin.fromJSON(e2)) : [],
          expiration: (0, helpers_1.isSet)(object.expiration) ? (0, helpers_1.fromJsonTimestamp)(object.expiration) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.spendLimit) {
          obj.spendLimit = message.spendLimit.map((e2) => e2 ? coin_1.Coin.toJSON(e2) : void 0);
        } else {
          obj.spendLimit = [];
        }
        message.expiration !== void 0 && (obj.expiration = (0, helpers_1.fromTimestamp)(message.expiration).toISOString());
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseBasicAllowance();
        message.spendLimit = ((_a = object.spendLimit) == null ? void 0 : _a.map((e2) => coin_1.Coin.fromPartial(e2))) || [];
        message.expiration = object.expiration !== void 0 && object.expiration !== null ? timestamp_1.Timestamp.fromPartial(object.expiration) : void 0;
        return message;
      }
    };
    function createBasePeriodicAllowance() {
      return {
        basic: void 0,
        period: void 0,
        periodSpendLimit: [],
        periodCanSpend: [],
        periodReset: void 0
      };
    }
    exports.PeriodicAllowance = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.basic !== void 0) {
          exports.BasicAllowance.encode(message.basic, writer.uint32(10).fork()).ldelim();
        }
        if (message.period !== void 0) {
          duration_1.Duration.encode(message.period, writer.uint32(18).fork()).ldelim();
        }
        for (const v3 of message.periodSpendLimit) {
          coin_1.Coin.encode(v3, writer.uint32(26).fork()).ldelim();
        }
        for (const v3 of message.periodCanSpend) {
          coin_1.Coin.encode(v3, writer.uint32(34).fork()).ldelim();
        }
        if (message.periodReset !== void 0) {
          timestamp_1.Timestamp.encode(message.periodReset, writer.uint32(42).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBasePeriodicAllowance();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.basic = exports.BasicAllowance.decode(reader, reader.uint32());
              break;
            case 2:
              message.period = duration_1.Duration.decode(reader, reader.uint32());
              break;
            case 3:
              message.periodSpendLimit.push(coin_1.Coin.decode(reader, reader.uint32()));
              break;
            case 4:
              message.periodCanSpend.push(coin_1.Coin.decode(reader, reader.uint32()));
              break;
            case 5:
              message.periodReset = timestamp_1.Timestamp.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          basic: (0, helpers_1.isSet)(object.basic) ? exports.BasicAllowance.fromJSON(object.basic) : void 0,
          period: (0, helpers_1.isSet)(object.period) ? duration_1.Duration.fromJSON(object.period) : void 0,
          periodSpendLimit: Array.isArray(object == null ? void 0 : object.periodSpendLimit) ? object.periodSpendLimit.map((e2) => coin_1.Coin.fromJSON(e2)) : [],
          periodCanSpend: Array.isArray(object == null ? void 0 : object.periodCanSpend) ? object.periodCanSpend.map((e2) => coin_1.Coin.fromJSON(e2)) : [],
          periodReset: (0, helpers_1.isSet)(object.periodReset) ? (0, helpers_1.fromJsonTimestamp)(object.periodReset) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.basic !== void 0 && (obj.basic = message.basic ? exports.BasicAllowance.toJSON(message.basic) : void 0);
        message.period !== void 0 && (obj.period = message.period ? duration_1.Duration.toJSON(message.period) : void 0);
        if (message.periodSpendLimit) {
          obj.periodSpendLimit = message.periodSpendLimit.map((e2) => e2 ? coin_1.Coin.toJSON(e2) : void 0);
        } else {
          obj.periodSpendLimit = [];
        }
        if (message.periodCanSpend) {
          obj.periodCanSpend = message.periodCanSpend.map((e2) => e2 ? coin_1.Coin.toJSON(e2) : void 0);
        } else {
          obj.periodCanSpend = [];
        }
        message.periodReset !== void 0 && (obj.periodReset = (0, helpers_1.fromTimestamp)(message.periodReset).toISOString());
        return obj;
      },
      fromPartial(object) {
        var _a, _b;
        const message = createBasePeriodicAllowance();
        message.basic = object.basic !== void 0 && object.basic !== null ? exports.BasicAllowance.fromPartial(object.basic) : void 0;
        message.period = object.period !== void 0 && object.period !== null ? duration_1.Duration.fromPartial(object.period) : void 0;
        message.periodSpendLimit = ((_a = object.periodSpendLimit) == null ? void 0 : _a.map((e2) => coin_1.Coin.fromPartial(e2))) || [];
        message.periodCanSpend = ((_b = object.periodCanSpend) == null ? void 0 : _b.map((e2) => coin_1.Coin.fromPartial(e2))) || [];
        message.periodReset = object.periodReset !== void 0 && object.periodReset !== null ? timestamp_1.Timestamp.fromPartial(object.periodReset) : void 0;
        return message;
      }
    };
    function createBaseAllowedMsgAllowance() {
      return {
        allowance: void 0,
        allowedMessages: []
      };
    }
    exports.AllowedMsgAllowance = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.allowance !== void 0) {
          any_1.Any.encode(message.allowance, writer.uint32(10).fork()).ldelim();
        }
        for (const v3 of message.allowedMessages) {
          writer.uint32(18).string(v3);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseAllowedMsgAllowance();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.allowance = any_1.Any.decode(reader, reader.uint32());
              break;
            case 2:
              message.allowedMessages.push(reader.string());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          allowance: (0, helpers_1.isSet)(object.allowance) ? any_1.Any.fromJSON(object.allowance) : void 0,
          allowedMessages: Array.isArray(object == null ? void 0 : object.allowedMessages) ? object.allowedMessages.map((e2) => String(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.allowance !== void 0 && (obj.allowance = message.allowance ? any_1.Any.toJSON(message.allowance) : void 0);
        if (message.allowedMessages) {
          obj.allowedMessages = message.allowedMessages.map((e2) => e2);
        } else {
          obj.allowedMessages = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseAllowedMsgAllowance();
        message.allowance = object.allowance !== void 0 && object.allowance !== null ? any_1.Any.fromPartial(object.allowance) : void 0;
        message.allowedMessages = ((_a = object.allowedMessages) == null ? void 0 : _a.map((e2) => e2)) || [];
        return message;
      }
    };
    function createBaseGrant() {
      return {
        granter: "",
        grantee: "",
        allowance: void 0
      };
    }
    exports.Grant = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.granter !== "") {
          writer.uint32(10).string(message.granter);
        }
        if (message.grantee !== "") {
          writer.uint32(18).string(message.grantee);
        }
        if (message.allowance !== void 0) {
          any_1.Any.encode(message.allowance, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseGrant();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.granter = reader.string();
              break;
            case 2:
              message.grantee = reader.string();
              break;
            case 3:
              message.allowance = any_1.Any.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          granter: (0, helpers_1.isSet)(object.granter) ? String(object.granter) : "",
          grantee: (0, helpers_1.isSet)(object.grantee) ? String(object.grantee) : "",
          allowance: (0, helpers_1.isSet)(object.allowance) ? any_1.Any.fromJSON(object.allowance) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.granter !== void 0 && (obj.granter = message.granter);
        message.grantee !== void 0 && (obj.grantee = message.grantee);
        message.allowance !== void 0 && (obj.allowance = message.allowance ? any_1.Any.toJSON(message.allowance) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseGrant();
        message.granter = object.granter ?? "";
        message.grantee = object.grantee ?? "";
        message.allowance = object.allowance !== void 0 && object.allowance !== null ? any_1.Any.fromPartial(object.allowance) : void 0;
        return message;
      }
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/feegrant/v1beta1/query.js
var require_query5 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/feegrant/v1beta1/query.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.QueryClientImpl = exports.QueryAllowancesByGranterResponse = exports.QueryAllowancesByGranterRequest = exports.QueryAllowancesResponse = exports.QueryAllowancesRequest = exports.QueryAllowanceResponse = exports.QueryAllowanceRequest = exports.protobufPackage = void 0;
    var pagination_1 = require_pagination();
    var feegrant_1 = require_feegrant();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.feegrant.v1beta1";
    function createBaseQueryAllowanceRequest() {
      return {
        granter: "",
        grantee: ""
      };
    }
    exports.QueryAllowanceRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.granter !== "") {
          writer.uint32(10).string(message.granter);
        }
        if (message.grantee !== "") {
          writer.uint32(18).string(message.grantee);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryAllowanceRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.granter = reader.string();
              break;
            case 2:
              message.grantee = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          granter: (0, helpers_1.isSet)(object.granter) ? String(object.granter) : "",
          grantee: (0, helpers_1.isSet)(object.grantee) ? String(object.grantee) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.granter !== void 0 && (obj.granter = message.granter);
        message.grantee !== void 0 && (obj.grantee = message.grantee);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryAllowanceRequest();
        message.granter = object.granter ?? "";
        message.grantee = object.grantee ?? "";
        return message;
      }
    };
    function createBaseQueryAllowanceResponse() {
      return {
        allowance: void 0
      };
    }
    exports.QueryAllowanceResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.allowance !== void 0) {
          feegrant_1.Grant.encode(message.allowance, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryAllowanceResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.allowance = feegrant_1.Grant.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          allowance: (0, helpers_1.isSet)(object.allowance) ? feegrant_1.Grant.fromJSON(object.allowance) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.allowance !== void 0 && (obj.allowance = message.allowance ? feegrant_1.Grant.toJSON(message.allowance) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryAllowanceResponse();
        message.allowance = object.allowance !== void 0 && object.allowance !== null ? feegrant_1.Grant.fromPartial(object.allowance) : void 0;
        return message;
      }
    };
    function createBaseQueryAllowancesRequest() {
      return {
        grantee: "",
        pagination: void 0
      };
    }
    exports.QueryAllowancesRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.grantee !== "") {
          writer.uint32(10).string(message.grantee);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryAllowancesRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.grantee = reader.string();
              break;
            case 2:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          grantee: (0, helpers_1.isSet)(object.grantee) ? String(object.grantee) : "",
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.grantee !== void 0 && (obj.grantee = message.grantee);
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryAllowancesRequest();
        message.grantee = object.grantee ?? "";
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryAllowancesResponse() {
      return {
        allowances: [],
        pagination: void 0
      };
    }
    exports.QueryAllowancesResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.allowances) {
          feegrant_1.Grant.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryAllowancesResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.allowances.push(feegrant_1.Grant.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          allowances: Array.isArray(object == null ? void 0 : object.allowances) ? object.allowances.map((e2) => feegrant_1.Grant.fromJSON(e2)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.allowances) {
          obj.allowances = message.allowances.map((e2) => e2 ? feegrant_1.Grant.toJSON(e2) : void 0);
        } else {
          obj.allowances = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryAllowancesResponse();
        message.allowances = ((_a = object.allowances) == null ? void 0 : _a.map((e2) => feegrant_1.Grant.fromPartial(e2))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryAllowancesByGranterRequest() {
      return {
        granter: "",
        pagination: void 0
      };
    }
    exports.QueryAllowancesByGranterRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.granter !== "") {
          writer.uint32(10).string(message.granter);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryAllowancesByGranterRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.granter = reader.string();
              break;
            case 2:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          granter: (0, helpers_1.isSet)(object.granter) ? String(object.granter) : "",
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.granter !== void 0 && (obj.granter = message.granter);
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryAllowancesByGranterRequest();
        message.granter = object.granter ?? "";
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryAllowancesByGranterResponse() {
      return {
        allowances: [],
        pagination: void 0
      };
    }
    exports.QueryAllowancesByGranterResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.allowances) {
          feegrant_1.Grant.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryAllowancesByGranterResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.allowances.push(feegrant_1.Grant.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          allowances: Array.isArray(object == null ? void 0 : object.allowances) ? object.allowances.map((e2) => feegrant_1.Grant.fromJSON(e2)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.allowances) {
          obj.allowances = message.allowances.map((e2) => e2 ? feegrant_1.Grant.toJSON(e2) : void 0);
        } else {
          obj.allowances = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryAllowancesByGranterResponse();
        message.allowances = ((_a = object.allowances) == null ? void 0 : _a.map((e2) => feegrant_1.Grant.fromPartial(e2))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    var QueryClientImpl = class {
      constructor(rpc) {
        this.rpc = rpc;
        this.Allowance = this.Allowance.bind(this);
        this.Allowances = this.Allowances.bind(this);
        this.AllowancesByGranter = this.AllowancesByGranter.bind(this);
      }
      Allowance(request) {
        const data = exports.QueryAllowanceRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.feegrant.v1beta1.Query", "Allowance", data);
        return promise.then((data2) => exports.QueryAllowanceResponse.decode(new _m0.Reader(data2)));
      }
      Allowances(request) {
        const data = exports.QueryAllowancesRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.feegrant.v1beta1.Query", "Allowances", data);
        return promise.then((data2) => exports.QueryAllowancesResponse.decode(new _m0.Reader(data2)));
      }
      AllowancesByGranter(request) {
        const data = exports.QueryAllowancesByGranterRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.feegrant.v1beta1.Query", "AllowancesByGranter", data);
        return promise.then((data2) => exports.QueryAllowancesByGranterResponse.decode(new _m0.Reader(data2)));
      }
    };
    exports.QueryClientImpl = QueryClientImpl;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/feegrant/queries.js
var require_queries5 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/feegrant/queries.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.setupFeegrantExtension = void 0;
    var query_1 = require_query5();
    var queryclient_1 = require_queryclient2();
    function setupFeegrantExtension(base) {
      const rpc = (0, queryclient_1.createProtobufRpcClient)(base);
      const queryService = new query_1.QueryClientImpl(rpc);
      return {
        feegrant: {
          allowance: async (granter, grantee) => {
            const response = await queryService.Allowance({
              granter,
              grantee
            });
            return response;
          },
          allowances: async (grantee, paginationKey) => {
            const response = await queryService.Allowances({
              grantee,
              pagination: (0, queryclient_1.createPagination)(paginationKey)
            });
            return response;
          }
        }
      };
    }
    exports.setupFeegrantExtension = setupFeegrantExtension;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/gov/v1beta1/gov.js
var require_gov = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/gov/v1beta1/gov.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TallyParams = exports.VotingParams = exports.DepositParams = exports.Vote = exports.TallyResult = exports.Proposal = exports.Deposit = exports.TextProposal = exports.WeightedVoteOption = exports.proposalStatusToJSON = exports.proposalStatusFromJSON = exports.ProposalStatus = exports.voteOptionToJSON = exports.voteOptionFromJSON = exports.VoteOption = exports.protobufPackage = void 0;
    var coin_1 = require_coin();
    var any_1 = require_any();
    var timestamp_1 = require_timestamp();
    var duration_1 = require_duration();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.gov.v1beta1";
    var VoteOption;
    (function(VoteOption2) {
      VoteOption2[VoteOption2["VOTE_OPTION_UNSPECIFIED"] = 0] = "VOTE_OPTION_UNSPECIFIED";
      VoteOption2[VoteOption2["VOTE_OPTION_YES"] = 1] = "VOTE_OPTION_YES";
      VoteOption2[VoteOption2["VOTE_OPTION_ABSTAIN"] = 2] = "VOTE_OPTION_ABSTAIN";
      VoteOption2[VoteOption2["VOTE_OPTION_NO"] = 3] = "VOTE_OPTION_NO";
      VoteOption2[VoteOption2["VOTE_OPTION_NO_WITH_VETO"] = 4] = "VOTE_OPTION_NO_WITH_VETO";
      VoteOption2[VoteOption2["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
    })(VoteOption = exports.VoteOption || (exports.VoteOption = {}));
    function voteOptionFromJSON(object) {
      switch (object) {
        case 0:
        case "VOTE_OPTION_UNSPECIFIED":
          return VoteOption.VOTE_OPTION_UNSPECIFIED;
        case 1:
        case "VOTE_OPTION_YES":
          return VoteOption.VOTE_OPTION_YES;
        case 2:
        case "VOTE_OPTION_ABSTAIN":
          return VoteOption.VOTE_OPTION_ABSTAIN;
        case 3:
        case "VOTE_OPTION_NO":
          return VoteOption.VOTE_OPTION_NO;
        case 4:
        case "VOTE_OPTION_NO_WITH_VETO":
          return VoteOption.VOTE_OPTION_NO_WITH_VETO;
        case -1:
        case "UNRECOGNIZED":
        default:
          return VoteOption.UNRECOGNIZED;
      }
    }
    exports.voteOptionFromJSON = voteOptionFromJSON;
    function voteOptionToJSON(object) {
      switch (object) {
        case VoteOption.VOTE_OPTION_UNSPECIFIED:
          return "VOTE_OPTION_UNSPECIFIED";
        case VoteOption.VOTE_OPTION_YES:
          return "VOTE_OPTION_YES";
        case VoteOption.VOTE_OPTION_ABSTAIN:
          return "VOTE_OPTION_ABSTAIN";
        case VoteOption.VOTE_OPTION_NO:
          return "VOTE_OPTION_NO";
        case VoteOption.VOTE_OPTION_NO_WITH_VETO:
          return "VOTE_OPTION_NO_WITH_VETO";
        case VoteOption.UNRECOGNIZED:
        default:
          return "UNRECOGNIZED";
      }
    }
    exports.voteOptionToJSON = voteOptionToJSON;
    var ProposalStatus;
    (function(ProposalStatus2) {
      ProposalStatus2[ProposalStatus2["PROPOSAL_STATUS_UNSPECIFIED"] = 0] = "PROPOSAL_STATUS_UNSPECIFIED";
      ProposalStatus2[ProposalStatus2["PROPOSAL_STATUS_DEPOSIT_PERIOD"] = 1] = "PROPOSAL_STATUS_DEPOSIT_PERIOD";
      ProposalStatus2[ProposalStatus2["PROPOSAL_STATUS_VOTING_PERIOD"] = 2] = "PROPOSAL_STATUS_VOTING_PERIOD";
      ProposalStatus2[ProposalStatus2["PROPOSAL_STATUS_PASSED"] = 3] = "PROPOSAL_STATUS_PASSED";
      ProposalStatus2[ProposalStatus2["PROPOSAL_STATUS_REJECTED"] = 4] = "PROPOSAL_STATUS_REJECTED";
      ProposalStatus2[ProposalStatus2["PROPOSAL_STATUS_FAILED"] = 5] = "PROPOSAL_STATUS_FAILED";
      ProposalStatus2[ProposalStatus2["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
    })(ProposalStatus = exports.ProposalStatus || (exports.ProposalStatus = {}));
    function proposalStatusFromJSON(object) {
      switch (object) {
        case 0:
        case "PROPOSAL_STATUS_UNSPECIFIED":
          return ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED;
        case 1:
        case "PROPOSAL_STATUS_DEPOSIT_PERIOD":
          return ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD;
        case 2:
        case "PROPOSAL_STATUS_VOTING_PERIOD":
          return ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD;
        case 3:
        case "PROPOSAL_STATUS_PASSED":
          return ProposalStatus.PROPOSAL_STATUS_PASSED;
        case 4:
        case "PROPOSAL_STATUS_REJECTED":
          return ProposalStatus.PROPOSAL_STATUS_REJECTED;
        case 5:
        case "PROPOSAL_STATUS_FAILED":
          return ProposalStatus.PROPOSAL_STATUS_FAILED;
        case -1:
        case "UNRECOGNIZED":
        default:
          return ProposalStatus.UNRECOGNIZED;
      }
    }
    exports.proposalStatusFromJSON = proposalStatusFromJSON;
    function proposalStatusToJSON(object) {
      switch (object) {
        case ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED:
          return "PROPOSAL_STATUS_UNSPECIFIED";
        case ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD:
          return "PROPOSAL_STATUS_DEPOSIT_PERIOD";
        case ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD:
          return "PROPOSAL_STATUS_VOTING_PERIOD";
        case ProposalStatus.PROPOSAL_STATUS_PASSED:
          return "PROPOSAL_STATUS_PASSED";
        case ProposalStatus.PROPOSAL_STATUS_REJECTED:
          return "PROPOSAL_STATUS_REJECTED";
        case ProposalStatus.PROPOSAL_STATUS_FAILED:
          return "PROPOSAL_STATUS_FAILED";
        case ProposalStatus.UNRECOGNIZED:
        default:
          return "UNRECOGNIZED";
      }
    }
    exports.proposalStatusToJSON = proposalStatusToJSON;
    function createBaseWeightedVoteOption() {
      return {
        option: 0,
        weight: ""
      };
    }
    exports.WeightedVoteOption = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.option !== 0) {
          writer.uint32(8).int32(message.option);
        }
        if (message.weight !== "") {
          writer.uint32(18).string(message.weight);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseWeightedVoteOption();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.option = reader.int32();
              break;
            case 2:
              message.weight = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          option: (0, helpers_1.isSet)(object.option) ? voteOptionFromJSON(object.option) : 0,
          weight: (0, helpers_1.isSet)(object.weight) ? String(object.weight) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.option !== void 0 && (obj.option = voteOptionToJSON(message.option));
        message.weight !== void 0 && (obj.weight = message.weight);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseWeightedVoteOption();
        message.option = object.option ?? 0;
        message.weight = object.weight ?? "";
        return message;
      }
    };
    function createBaseTextProposal() {
      return {
        title: "",
        description: ""
      };
    }
    exports.TextProposal = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.title !== "") {
          writer.uint32(10).string(message.title);
        }
        if (message.description !== "") {
          writer.uint32(18).string(message.description);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseTextProposal();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.title = reader.string();
              break;
            case 2:
              message.description = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          title: (0, helpers_1.isSet)(object.title) ? String(object.title) : "",
          description: (0, helpers_1.isSet)(object.description) ? String(object.description) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.title !== void 0 && (obj.title = message.title);
        message.description !== void 0 && (obj.description = message.description);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseTextProposal();
        message.title = object.title ?? "";
        message.description = object.description ?? "";
        return message;
      }
    };
    function createBaseDeposit() {
      return {
        proposalId: helpers_1.Long.UZERO,
        depositor: "",
        amount: []
      };
    }
    exports.Deposit = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.proposalId.isZero()) {
          writer.uint32(8).uint64(message.proposalId);
        }
        if (message.depositor !== "") {
          writer.uint32(18).string(message.depositor);
        }
        for (const v3 of message.amount) {
          coin_1.Coin.encode(v3, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseDeposit();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.proposalId = reader.uint64();
              break;
            case 2:
              message.depositor = reader.string();
              break;
            case 3:
              message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          proposalId: (0, helpers_1.isSet)(object.proposalId) ? helpers_1.Long.fromValue(object.proposalId) : helpers_1.Long.UZERO,
          depositor: (0, helpers_1.isSet)(object.depositor) ? String(object.depositor) : "",
          amount: Array.isArray(object == null ? void 0 : object.amount) ? object.amount.map((e2) => coin_1.Coin.fromJSON(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.proposalId !== void 0 && (obj.proposalId = (message.proposalId || helpers_1.Long.UZERO).toString());
        message.depositor !== void 0 && (obj.depositor = message.depositor);
        if (message.amount) {
          obj.amount = message.amount.map((e2) => e2 ? coin_1.Coin.toJSON(e2) : void 0);
        } else {
          obj.amount = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseDeposit();
        message.proposalId = object.proposalId !== void 0 && object.proposalId !== null ? helpers_1.Long.fromValue(object.proposalId) : helpers_1.Long.UZERO;
        message.depositor = object.depositor ?? "";
        message.amount = ((_a = object.amount) == null ? void 0 : _a.map((e2) => coin_1.Coin.fromPartial(e2))) || [];
        return message;
      }
    };
    function createBaseProposal() {
      return {
        proposalId: helpers_1.Long.UZERO,
        content: void 0,
        status: 0,
        finalTallyResult: void 0,
        submitTime: void 0,
        depositEndTime: void 0,
        totalDeposit: [],
        votingStartTime: void 0,
        votingEndTime: void 0
      };
    }
    exports.Proposal = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.proposalId.isZero()) {
          writer.uint32(8).uint64(message.proposalId);
        }
        if (message.content !== void 0) {
          any_1.Any.encode(message.content, writer.uint32(18).fork()).ldelim();
        }
        if (message.status !== 0) {
          writer.uint32(24).int32(message.status);
        }
        if (message.finalTallyResult !== void 0) {
          exports.TallyResult.encode(message.finalTallyResult, writer.uint32(34).fork()).ldelim();
        }
        if (message.submitTime !== void 0) {
          timestamp_1.Timestamp.encode(message.submitTime, writer.uint32(42).fork()).ldelim();
        }
        if (message.depositEndTime !== void 0) {
          timestamp_1.Timestamp.encode(message.depositEndTime, writer.uint32(50).fork()).ldelim();
        }
        for (const v3 of message.totalDeposit) {
          coin_1.Coin.encode(v3, writer.uint32(58).fork()).ldelim();
        }
        if (message.votingStartTime !== void 0) {
          timestamp_1.Timestamp.encode(message.votingStartTime, writer.uint32(66).fork()).ldelim();
        }
        if (message.votingEndTime !== void 0) {
          timestamp_1.Timestamp.encode(message.votingEndTime, writer.uint32(74).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseProposal();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.proposalId = reader.uint64();
              break;
            case 2:
              message.content = any_1.Any.decode(reader, reader.uint32());
              break;
            case 3:
              message.status = reader.int32();
              break;
            case 4:
              message.finalTallyResult = exports.TallyResult.decode(reader, reader.uint32());
              break;
            case 5:
              message.submitTime = timestamp_1.Timestamp.decode(reader, reader.uint32());
              break;
            case 6:
              message.depositEndTime = timestamp_1.Timestamp.decode(reader, reader.uint32());
              break;
            case 7:
              message.totalDeposit.push(coin_1.Coin.decode(reader, reader.uint32()));
              break;
            case 8:
              message.votingStartTime = timestamp_1.Timestamp.decode(reader, reader.uint32());
              break;
            case 9:
              message.votingEndTime = timestamp_1.Timestamp.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          proposalId: (0, helpers_1.isSet)(object.proposalId) ? helpers_1.Long.fromValue(object.proposalId) : helpers_1.Long.UZERO,
          content: (0, helpers_1.isSet)(object.content) ? any_1.Any.fromJSON(object.content) : void 0,
          status: (0, helpers_1.isSet)(object.status) ? proposalStatusFromJSON(object.status) : 0,
          finalTallyResult: (0, helpers_1.isSet)(object.finalTallyResult) ? exports.TallyResult.fromJSON(object.finalTallyResult) : void 0,
          submitTime: (0, helpers_1.isSet)(object.submitTime) ? (0, helpers_1.fromJsonTimestamp)(object.submitTime) : void 0,
          depositEndTime: (0, helpers_1.isSet)(object.depositEndTime) ? (0, helpers_1.fromJsonTimestamp)(object.depositEndTime) : void 0,
          totalDeposit: Array.isArray(object == null ? void 0 : object.totalDeposit) ? object.totalDeposit.map((e2) => coin_1.Coin.fromJSON(e2)) : [],
          votingStartTime: (0, helpers_1.isSet)(object.votingStartTime) ? (0, helpers_1.fromJsonTimestamp)(object.votingStartTime) : void 0,
          votingEndTime: (0, helpers_1.isSet)(object.votingEndTime) ? (0, helpers_1.fromJsonTimestamp)(object.votingEndTime) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.proposalId !== void 0 && (obj.proposalId = (message.proposalId || helpers_1.Long.UZERO).toString());
        message.content !== void 0 && (obj.content = message.content ? any_1.Any.toJSON(message.content) : void 0);
        message.status !== void 0 && (obj.status = proposalStatusToJSON(message.status));
        message.finalTallyResult !== void 0 && (obj.finalTallyResult = message.finalTallyResult ? exports.TallyResult.toJSON(message.finalTallyResult) : void 0);
        message.submitTime !== void 0 && (obj.submitTime = (0, helpers_1.fromTimestamp)(message.submitTime).toISOString());
        message.depositEndTime !== void 0 && (obj.depositEndTime = (0, helpers_1.fromTimestamp)(message.depositEndTime).toISOString());
        if (message.totalDeposit) {
          obj.totalDeposit = message.totalDeposit.map((e2) => e2 ? coin_1.Coin.toJSON(e2) : void 0);
        } else {
          obj.totalDeposit = [];
        }
        message.votingStartTime !== void 0 && (obj.votingStartTime = (0, helpers_1.fromTimestamp)(message.votingStartTime).toISOString());
        message.votingEndTime !== void 0 && (obj.votingEndTime = (0, helpers_1.fromTimestamp)(message.votingEndTime).toISOString());
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseProposal();
        message.proposalId = object.proposalId !== void 0 && object.proposalId !== null ? helpers_1.Long.fromValue(object.proposalId) : helpers_1.Long.UZERO;
        message.content = object.content !== void 0 && object.content !== null ? any_1.Any.fromPartial(object.content) : void 0;
        message.status = object.status ?? 0;
        message.finalTallyResult = object.finalTallyResult !== void 0 && object.finalTallyResult !== null ? exports.TallyResult.fromPartial(object.finalTallyResult) : void 0;
        message.submitTime = object.submitTime !== void 0 && object.submitTime !== null ? timestamp_1.Timestamp.fromPartial(object.submitTime) : void 0;
        message.depositEndTime = object.depositEndTime !== void 0 && object.depositEndTime !== null ? timestamp_1.Timestamp.fromPartial(object.depositEndTime) : void 0;
        message.totalDeposit = ((_a = object.totalDeposit) == null ? void 0 : _a.map((e2) => coin_1.Coin.fromPartial(e2))) || [];
        message.votingStartTime = object.votingStartTime !== void 0 && object.votingStartTime !== null ? timestamp_1.Timestamp.fromPartial(object.votingStartTime) : void 0;
        message.votingEndTime = object.votingEndTime !== void 0 && object.votingEndTime !== null ? timestamp_1.Timestamp.fromPartial(object.votingEndTime) : void 0;
        return message;
      }
    };
    function createBaseTallyResult() {
      return {
        yes: "",
        abstain: "",
        no: "",
        noWithVeto: ""
      };
    }
    exports.TallyResult = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.yes !== "") {
          writer.uint32(10).string(message.yes);
        }
        if (message.abstain !== "") {
          writer.uint32(18).string(message.abstain);
        }
        if (message.no !== "") {
          writer.uint32(26).string(message.no);
        }
        if (message.noWithVeto !== "") {
          writer.uint32(34).string(message.noWithVeto);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseTallyResult();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.yes = reader.string();
              break;
            case 2:
              message.abstain = reader.string();
              break;
            case 3:
              message.no = reader.string();
              break;
            case 4:
              message.noWithVeto = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          yes: (0, helpers_1.isSet)(object.yes) ? String(object.yes) : "",
          abstain: (0, helpers_1.isSet)(object.abstain) ? String(object.abstain) : "",
          no: (0, helpers_1.isSet)(object.no) ? String(object.no) : "",
          noWithVeto: (0, helpers_1.isSet)(object.noWithVeto) ? String(object.noWithVeto) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.yes !== void 0 && (obj.yes = message.yes);
        message.abstain !== void 0 && (obj.abstain = message.abstain);
        message.no !== void 0 && (obj.no = message.no);
        message.noWithVeto !== void 0 && (obj.noWithVeto = message.noWithVeto);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseTallyResult();
        message.yes = object.yes ?? "";
        message.abstain = object.abstain ?? "";
        message.no = object.no ?? "";
        message.noWithVeto = object.noWithVeto ?? "";
        return message;
      }
    };
    function createBaseVote() {
      return {
        proposalId: helpers_1.Long.UZERO,
        voter: "",
        option: 0,
        options: []
      };
    }
    exports.Vote = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.proposalId.isZero()) {
          writer.uint32(8).uint64(message.proposalId);
        }
        if (message.voter !== "") {
          writer.uint32(18).string(message.voter);
        }
        if (message.option !== 0) {
          writer.uint32(24).int32(message.option);
        }
        for (const v3 of message.options) {
          exports.WeightedVoteOption.encode(v3, writer.uint32(34).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseVote();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.proposalId = reader.uint64();
              break;
            case 2:
              message.voter = reader.string();
              break;
            case 3:
              message.option = reader.int32();
              break;
            case 4:
              message.options.push(exports.WeightedVoteOption.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          proposalId: (0, helpers_1.isSet)(object.proposalId) ? helpers_1.Long.fromValue(object.proposalId) : helpers_1.Long.UZERO,
          voter: (0, helpers_1.isSet)(object.voter) ? String(object.voter) : "",
          option: (0, helpers_1.isSet)(object.option) ? voteOptionFromJSON(object.option) : 0,
          options: Array.isArray(object == null ? void 0 : object.options) ? object.options.map((e2) => exports.WeightedVoteOption.fromJSON(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.proposalId !== void 0 && (obj.proposalId = (message.proposalId || helpers_1.Long.UZERO).toString());
        message.voter !== void 0 && (obj.voter = message.voter);
        message.option !== void 0 && (obj.option = voteOptionToJSON(message.option));
        if (message.options) {
          obj.options = message.options.map((e2) => e2 ? exports.WeightedVoteOption.toJSON(e2) : void 0);
        } else {
          obj.options = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseVote();
        message.proposalId = object.proposalId !== void 0 && object.proposalId !== null ? helpers_1.Long.fromValue(object.proposalId) : helpers_1.Long.UZERO;
        message.voter = object.voter ?? "";
        message.option = object.option ?? 0;
        message.options = ((_a = object.options) == null ? void 0 : _a.map((e2) => exports.WeightedVoteOption.fromPartial(e2))) || [];
        return message;
      }
    };
    function createBaseDepositParams() {
      return {
        minDeposit: [],
        maxDepositPeriod: void 0
      };
    }
    exports.DepositParams = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.minDeposit) {
          coin_1.Coin.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        if (message.maxDepositPeriod !== void 0) {
          duration_1.Duration.encode(message.maxDepositPeriod, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseDepositParams();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.minDeposit.push(coin_1.Coin.decode(reader, reader.uint32()));
              break;
            case 2:
              message.maxDepositPeriod = duration_1.Duration.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          minDeposit: Array.isArray(object == null ? void 0 : object.minDeposit) ? object.minDeposit.map((e2) => coin_1.Coin.fromJSON(e2)) : [],
          maxDepositPeriod: (0, helpers_1.isSet)(object.maxDepositPeriod) ? duration_1.Duration.fromJSON(object.maxDepositPeriod) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.minDeposit) {
          obj.minDeposit = message.minDeposit.map((e2) => e2 ? coin_1.Coin.toJSON(e2) : void 0);
        } else {
          obj.minDeposit = [];
        }
        message.maxDepositPeriod !== void 0 && (obj.maxDepositPeriod = message.maxDepositPeriod ? duration_1.Duration.toJSON(message.maxDepositPeriod) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseDepositParams();
        message.minDeposit = ((_a = object.minDeposit) == null ? void 0 : _a.map((e2) => coin_1.Coin.fromPartial(e2))) || [];
        message.maxDepositPeriod = object.maxDepositPeriod !== void 0 && object.maxDepositPeriod !== null ? duration_1.Duration.fromPartial(object.maxDepositPeriod) : void 0;
        return message;
      }
    };
    function createBaseVotingParams() {
      return {
        votingPeriod: void 0
      };
    }
    exports.VotingParams = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.votingPeriod !== void 0) {
          duration_1.Duration.encode(message.votingPeriod, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseVotingParams();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.votingPeriod = duration_1.Duration.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          votingPeriod: (0, helpers_1.isSet)(object.votingPeriod) ? duration_1.Duration.fromJSON(object.votingPeriod) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.votingPeriod !== void 0 && (obj.votingPeriod = message.votingPeriod ? duration_1.Duration.toJSON(message.votingPeriod) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseVotingParams();
        message.votingPeriod = object.votingPeriod !== void 0 && object.votingPeriod !== null ? duration_1.Duration.fromPartial(object.votingPeriod) : void 0;
        return message;
      }
    };
    function createBaseTallyParams() {
      return {
        quorum: new Uint8Array(),
        threshold: new Uint8Array(),
        vetoThreshold: new Uint8Array()
      };
    }
    exports.TallyParams = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.quorum.length !== 0) {
          writer.uint32(10).bytes(message.quorum);
        }
        if (message.threshold.length !== 0) {
          writer.uint32(18).bytes(message.threshold);
        }
        if (message.vetoThreshold.length !== 0) {
          writer.uint32(26).bytes(message.vetoThreshold);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseTallyParams();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.quorum = reader.bytes();
              break;
            case 2:
              message.threshold = reader.bytes();
              break;
            case 3:
              message.vetoThreshold = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          quorum: (0, helpers_1.isSet)(object.quorum) ? (0, helpers_1.bytesFromBase64)(object.quorum) : new Uint8Array(),
          threshold: (0, helpers_1.isSet)(object.threshold) ? (0, helpers_1.bytesFromBase64)(object.threshold) : new Uint8Array(),
          vetoThreshold: (0, helpers_1.isSet)(object.vetoThreshold) ? (0, helpers_1.bytesFromBase64)(object.vetoThreshold) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.quorum !== void 0 && (obj.quorum = (0, helpers_1.base64FromBytes)(message.quorum !== void 0 ? message.quorum : new Uint8Array()));
        message.threshold !== void 0 && (obj.threshold = (0, helpers_1.base64FromBytes)(message.threshold !== void 0 ? message.threshold : new Uint8Array()));
        message.vetoThreshold !== void 0 && (obj.vetoThreshold = (0, helpers_1.base64FromBytes)(message.vetoThreshold !== void 0 ? message.vetoThreshold : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseTallyParams();
        message.quorum = object.quorum ?? new Uint8Array();
        message.threshold = object.threshold ?? new Uint8Array();
        message.vetoThreshold = object.vetoThreshold ?? new Uint8Array();
        return message;
      }
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/gov/aminomessages.js
var require_aminomessages7 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/gov/aminomessages.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createGovAminoConverters = exports.isAminoMsgDeposit = exports.isAminoMsgVoteWeighted = exports.isAminoMsgVote = exports.isAminoMsgSubmitProposal = void 0;
    var math_1 = require_build3();
    var utils_1 = require_build4();
    var gov_1 = require_gov();
    var any_1 = require_any();
    var long_1 = __importDefault(require_long());
    var queryclient_1 = require_queryclient2();
    function isAminoMsgSubmitProposal(msg) {
      return msg.type === "cosmos-sdk/MsgSubmitProposal";
    }
    exports.isAminoMsgSubmitProposal = isAminoMsgSubmitProposal;
    function isAminoMsgVote(msg) {
      return msg.type === "cosmos-sdk/MsgVote";
    }
    exports.isAminoMsgVote = isAminoMsgVote;
    function isAminoMsgVoteWeighted(msg) {
      return msg.type === "cosmos-sdk/MsgVoteWeighted";
    }
    exports.isAminoMsgVoteWeighted = isAminoMsgVoteWeighted;
    function isAminoMsgDeposit(msg) {
      return msg.type === "cosmos-sdk/MsgDeposit";
    }
    exports.isAminoMsgDeposit = isAminoMsgDeposit;
    function createGovAminoConverters() {
      return {
        "/cosmos.gov.v1beta1.MsgDeposit": {
          aminoType: "cosmos-sdk/MsgDeposit",
          toAmino: ({ amount, depositor, proposalId }) => {
            return {
              amount,
              depositor,
              proposal_id: proposalId.toString()
            };
          },
          fromAmino: ({ amount, depositor, proposal_id }) => {
            return {
              amount: Array.from(amount),
              depositor,
              proposalId: long_1.default.fromString(proposal_id)
            };
          }
        },
        "/cosmos.gov.v1beta1.MsgVote": {
          aminoType: "cosmos-sdk/MsgVote",
          toAmino: ({ option, proposalId, voter }) => {
            return {
              option,
              proposal_id: proposalId.toString(),
              voter
            };
          },
          fromAmino: ({ option, proposal_id, voter }) => {
            return {
              option: (0, gov_1.voteOptionFromJSON)(option),
              proposalId: long_1.default.fromString(proposal_id),
              voter
            };
          }
        },
        "/cosmos.gov.v1beta1.MsgVoteWeighted": {
          aminoType: "cosmos-sdk/MsgVoteWeighted",
          toAmino: ({ options, proposalId, voter }) => {
            return {
              options: options.map((o2) => ({
                option: o2.option,
                // Weight is between 0 and 1, so we always have 20 characters when printing all trailing
                // zeros (e.g. "0.700000000000000000" or "1.000000000000000000")
                weight: (0, queryclient_1.decodeCosmosSdkDecFromProto)(o2.weight).toString().padEnd(20, "0")
              })),
              proposal_id: proposalId.toString(),
              voter
            };
          },
          fromAmino: ({ options, proposal_id, voter }) => {
            return {
              proposalId: long_1.default.fromString(proposal_id),
              voter,
              options: options.map((o2) => ({
                option: (0, gov_1.voteOptionFromJSON)(o2.option),
                weight: math_1.Decimal.fromUserInput(o2.weight, 18).atomics
              }))
            };
          }
        },
        "/cosmos.gov.v1beta1.MsgSubmitProposal": {
          aminoType: "cosmos-sdk/MsgSubmitProposal",
          toAmino: ({ initialDeposit, proposer, content }) => {
            (0, utils_1.assertDefinedAndNotNull)(content);
            let proposal;
            switch (content.typeUrl) {
              case "/cosmos.gov.v1beta1.TextProposal": {
                const textProposal = gov_1.TextProposal.decode(content.value);
                proposal = {
                  type: "cosmos-sdk/TextProposal",
                  value: {
                    description: textProposal.description,
                    title: textProposal.title
                  }
                };
                break;
              }
              default:
                throw new Error(`Unsupported proposal type: '${content.typeUrl}'`);
            }
            return {
              initial_deposit: initialDeposit,
              proposer,
              content: proposal
            };
          },
          fromAmino: ({ initial_deposit, proposer, content }) => {
            let any_content;
            switch (content.type) {
              case "cosmos-sdk/TextProposal": {
                const { value } = content;
                (0, utils_1.assert)((0, utils_1.isNonNullObject)(value));
                const { title, description } = value;
                (0, utils_1.assert)(typeof title === "string");
                (0, utils_1.assert)(typeof description === "string");
                any_content = any_1.Any.fromPartial({
                  typeUrl: "/cosmos.gov.v1beta1.TextProposal",
                  value: gov_1.TextProposal.encode(gov_1.TextProposal.fromPartial({
                    title,
                    description
                  })).finish()
                });
                break;
              }
              default:
                throw new Error(`Unsupported proposal type: '${content.type}'`);
            }
            return {
              initialDeposit: Array.from(initial_deposit),
              proposer,
              content: any_content
            };
          }
        }
      };
    }
    exports.createGovAminoConverters = createGovAminoConverters;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/gov/v1beta1/tx.js
var require_tx6 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/gov/v1beta1/tx.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.MsgClientImpl = exports.MsgDepositResponse = exports.MsgDeposit = exports.MsgVoteWeightedResponse = exports.MsgVoteWeighted = exports.MsgVoteResponse = exports.MsgVote = exports.MsgSubmitProposalResponse = exports.MsgSubmitProposal = exports.protobufPackage = void 0;
    var any_1 = require_any();
    var coin_1 = require_coin();
    var gov_1 = require_gov();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.gov.v1beta1";
    function createBaseMsgSubmitProposal() {
      return {
        content: void 0,
        initialDeposit: [],
        proposer: ""
      };
    }
    exports.MsgSubmitProposal = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.content !== void 0) {
          any_1.Any.encode(message.content, writer.uint32(10).fork()).ldelim();
        }
        for (const v3 of message.initialDeposit) {
          coin_1.Coin.encode(v3, writer.uint32(18).fork()).ldelim();
        }
        if (message.proposer !== "") {
          writer.uint32(26).string(message.proposer);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgSubmitProposal();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.content = any_1.Any.decode(reader, reader.uint32());
              break;
            case 2:
              message.initialDeposit.push(coin_1.Coin.decode(reader, reader.uint32()));
              break;
            case 3:
              message.proposer = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          content: (0, helpers_1.isSet)(object.content) ? any_1.Any.fromJSON(object.content) : void 0,
          initialDeposit: Array.isArray(object == null ? void 0 : object.initialDeposit) ? object.initialDeposit.map((e2) => coin_1.Coin.fromJSON(e2)) : [],
          proposer: (0, helpers_1.isSet)(object.proposer) ? String(object.proposer) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.content !== void 0 && (obj.content = message.content ? any_1.Any.toJSON(message.content) : void 0);
        if (message.initialDeposit) {
          obj.initialDeposit = message.initialDeposit.map((e2) => e2 ? coin_1.Coin.toJSON(e2) : void 0);
        } else {
          obj.initialDeposit = [];
        }
        message.proposer !== void 0 && (obj.proposer = message.proposer);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseMsgSubmitProposal();
        message.content = object.content !== void 0 && object.content !== null ? any_1.Any.fromPartial(object.content) : void 0;
        message.initialDeposit = ((_a = object.initialDeposit) == null ? void 0 : _a.map((e2) => coin_1.Coin.fromPartial(e2))) || [];
        message.proposer = object.proposer ?? "";
        return message;
      }
    };
    function createBaseMsgSubmitProposalResponse() {
      return {
        proposalId: helpers_1.Long.UZERO
      };
    }
    exports.MsgSubmitProposalResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.proposalId.isZero()) {
          writer.uint32(8).uint64(message.proposalId);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgSubmitProposalResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.proposalId = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          proposalId: (0, helpers_1.isSet)(object.proposalId) ? helpers_1.Long.fromValue(object.proposalId) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.proposalId !== void 0 && (obj.proposalId = (message.proposalId || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgSubmitProposalResponse();
        message.proposalId = object.proposalId !== void 0 && object.proposalId !== null ? helpers_1.Long.fromValue(object.proposalId) : helpers_1.Long.UZERO;
        return message;
      }
    };
    function createBaseMsgVote() {
      return {
        proposalId: helpers_1.Long.UZERO,
        voter: "",
        option: 0
      };
    }
    exports.MsgVote = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.proposalId.isZero()) {
          writer.uint32(8).uint64(message.proposalId);
        }
        if (message.voter !== "") {
          writer.uint32(18).string(message.voter);
        }
        if (message.option !== 0) {
          writer.uint32(24).int32(message.option);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgVote();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.proposalId = reader.uint64();
              break;
            case 2:
              message.voter = reader.string();
              break;
            case 3:
              message.option = reader.int32();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          proposalId: (0, helpers_1.isSet)(object.proposalId) ? helpers_1.Long.fromValue(object.proposalId) : helpers_1.Long.UZERO,
          voter: (0, helpers_1.isSet)(object.voter) ? String(object.voter) : "",
          option: (0, helpers_1.isSet)(object.option) ? (0, gov_1.voteOptionFromJSON)(object.option) : 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.proposalId !== void 0 && (obj.proposalId = (message.proposalId || helpers_1.Long.UZERO).toString());
        message.voter !== void 0 && (obj.voter = message.voter);
        message.option !== void 0 && (obj.option = (0, gov_1.voteOptionToJSON)(message.option));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgVote();
        message.proposalId = object.proposalId !== void 0 && object.proposalId !== null ? helpers_1.Long.fromValue(object.proposalId) : helpers_1.Long.UZERO;
        message.voter = object.voter ?? "";
        message.option = object.option ?? 0;
        return message;
      }
    };
    function createBaseMsgVoteResponse() {
      return {};
    }
    exports.MsgVoteResponse = {
      encode(_3, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgVoteResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_3) {
        return {};
      },
      toJSON(_3) {
        const obj = {};
        return obj;
      },
      fromPartial(_3) {
        const message = createBaseMsgVoteResponse();
        return message;
      }
    };
    function createBaseMsgVoteWeighted() {
      return {
        proposalId: helpers_1.Long.UZERO,
        voter: "",
        options: []
      };
    }
    exports.MsgVoteWeighted = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.proposalId.isZero()) {
          writer.uint32(8).uint64(message.proposalId);
        }
        if (message.voter !== "") {
          writer.uint32(18).string(message.voter);
        }
        for (const v3 of message.options) {
          gov_1.WeightedVoteOption.encode(v3, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgVoteWeighted();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.proposalId = reader.uint64();
              break;
            case 2:
              message.voter = reader.string();
              break;
            case 3:
              message.options.push(gov_1.WeightedVoteOption.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          proposalId: (0, helpers_1.isSet)(object.proposalId) ? helpers_1.Long.fromValue(object.proposalId) : helpers_1.Long.UZERO,
          voter: (0, helpers_1.isSet)(object.voter) ? String(object.voter) : "",
          options: Array.isArray(object == null ? void 0 : object.options) ? object.options.map((e2) => gov_1.WeightedVoteOption.fromJSON(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.proposalId !== void 0 && (obj.proposalId = (message.proposalId || helpers_1.Long.UZERO).toString());
        message.voter !== void 0 && (obj.voter = message.voter);
        if (message.options) {
          obj.options = message.options.map((e2) => e2 ? gov_1.WeightedVoteOption.toJSON(e2) : void 0);
        } else {
          obj.options = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseMsgVoteWeighted();
        message.proposalId = object.proposalId !== void 0 && object.proposalId !== null ? helpers_1.Long.fromValue(object.proposalId) : helpers_1.Long.UZERO;
        message.voter = object.voter ?? "";
        message.options = ((_a = object.options) == null ? void 0 : _a.map((e2) => gov_1.WeightedVoteOption.fromPartial(e2))) || [];
        return message;
      }
    };
    function createBaseMsgVoteWeightedResponse() {
      return {};
    }
    exports.MsgVoteWeightedResponse = {
      encode(_3, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgVoteWeightedResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_3) {
        return {};
      },
      toJSON(_3) {
        const obj = {};
        return obj;
      },
      fromPartial(_3) {
        const message = createBaseMsgVoteWeightedResponse();
        return message;
      }
    };
    function createBaseMsgDeposit() {
      return {
        proposalId: helpers_1.Long.UZERO,
        depositor: "",
        amount: []
      };
    }
    exports.MsgDeposit = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.proposalId.isZero()) {
          writer.uint32(8).uint64(message.proposalId);
        }
        if (message.depositor !== "") {
          writer.uint32(18).string(message.depositor);
        }
        for (const v3 of message.amount) {
          coin_1.Coin.encode(v3, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgDeposit();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.proposalId = reader.uint64();
              break;
            case 2:
              message.depositor = reader.string();
              break;
            case 3:
              message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          proposalId: (0, helpers_1.isSet)(object.proposalId) ? helpers_1.Long.fromValue(object.proposalId) : helpers_1.Long.UZERO,
          depositor: (0, helpers_1.isSet)(object.depositor) ? String(object.depositor) : "",
          amount: Array.isArray(object == null ? void 0 : object.amount) ? object.amount.map((e2) => coin_1.Coin.fromJSON(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.proposalId !== void 0 && (obj.proposalId = (message.proposalId || helpers_1.Long.UZERO).toString());
        message.depositor !== void 0 && (obj.depositor = message.depositor);
        if (message.amount) {
          obj.amount = message.amount.map((e2) => e2 ? coin_1.Coin.toJSON(e2) : void 0);
        } else {
          obj.amount = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseMsgDeposit();
        message.proposalId = object.proposalId !== void 0 && object.proposalId !== null ? helpers_1.Long.fromValue(object.proposalId) : helpers_1.Long.UZERO;
        message.depositor = object.depositor ?? "";
        message.amount = ((_a = object.amount) == null ? void 0 : _a.map((e2) => coin_1.Coin.fromPartial(e2))) || [];
        return message;
      }
    };
    function createBaseMsgDepositResponse() {
      return {};
    }
    exports.MsgDepositResponse = {
      encode(_3, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgDepositResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_3) {
        return {};
      },
      toJSON(_3) {
        const obj = {};
        return obj;
      },
      fromPartial(_3) {
        const message = createBaseMsgDepositResponse();
        return message;
      }
    };
    var MsgClientImpl = class {
      constructor(rpc) {
        this.rpc = rpc;
        this.SubmitProposal = this.SubmitProposal.bind(this);
        this.Vote = this.Vote.bind(this);
        this.VoteWeighted = this.VoteWeighted.bind(this);
        this.Deposit = this.Deposit.bind(this);
      }
      SubmitProposal(request) {
        const data = exports.MsgSubmitProposal.encode(request).finish();
        const promise = this.rpc.request("cosmos.gov.v1beta1.Msg", "SubmitProposal", data);
        return promise.then((data2) => exports.MsgSubmitProposalResponse.decode(new _m0.Reader(data2)));
      }
      Vote(request) {
        const data = exports.MsgVote.encode(request).finish();
        const promise = this.rpc.request("cosmos.gov.v1beta1.Msg", "Vote", data);
        return promise.then((data2) => exports.MsgVoteResponse.decode(new _m0.Reader(data2)));
      }
      VoteWeighted(request) {
        const data = exports.MsgVoteWeighted.encode(request).finish();
        const promise = this.rpc.request("cosmos.gov.v1beta1.Msg", "VoteWeighted", data);
        return promise.then((data2) => exports.MsgVoteWeightedResponse.decode(new _m0.Reader(data2)));
      }
      Deposit(request) {
        const data = exports.MsgDeposit.encode(request).finish();
        const promise = this.rpc.request("cosmos.gov.v1beta1.Msg", "Deposit", data);
        return promise.then((data2) => exports.MsgDepositResponse.decode(new _m0.Reader(data2)));
      }
    };
    exports.MsgClientImpl = MsgClientImpl;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/gov/messages.js
var require_messages5 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/gov/messages.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isMsgVoteWeightedEncodeObject = exports.isMsgVoteEncodeObject = exports.isMsgSubmitProposalEncodeObject = exports.isMsgDepositEncodeObject = exports.govTypes = void 0;
    var tx_1 = require_tx6();
    exports.govTypes = [
      ["/cosmos.gov.v1beta1.MsgDeposit", tx_1.MsgDeposit],
      ["/cosmos.gov.v1beta1.MsgSubmitProposal", tx_1.MsgSubmitProposal],
      ["/cosmos.gov.v1beta1.MsgVote", tx_1.MsgVote],
      ["/cosmos.gov.v1beta1.MsgVoteWeighted", tx_1.MsgVoteWeighted]
    ];
    function isMsgDepositEncodeObject(object) {
      return object.typeUrl === "/cosmos.gov.v1beta1.MsgDeposit";
    }
    exports.isMsgDepositEncodeObject = isMsgDepositEncodeObject;
    function isMsgSubmitProposalEncodeObject(object) {
      return object.typeUrl === "/cosmos.gov.v1beta1.MsgSubmitProposal";
    }
    exports.isMsgSubmitProposalEncodeObject = isMsgSubmitProposalEncodeObject;
    function isMsgVoteEncodeObject(object) {
      return object.typeUrl === "/cosmos.gov.v1beta1.MsgVote";
    }
    exports.isMsgVoteEncodeObject = isMsgVoteEncodeObject;
    function isMsgVoteWeightedEncodeObject(object) {
      return object.typeUrl === "/cosmos.gov.v1beta1.MsgVoteWeighted";
    }
    exports.isMsgVoteWeightedEncodeObject = isMsgVoteWeightedEncodeObject;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/gov/v1beta1/query.js
var require_query6 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/gov/v1beta1/query.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.QueryClientImpl = exports.QueryTallyResultResponse = exports.QueryTallyResultRequest = exports.QueryDepositsResponse = exports.QueryDepositsRequest = exports.QueryDepositResponse = exports.QueryDepositRequest = exports.QueryParamsResponse = exports.QueryParamsRequest = exports.QueryVotesResponse = exports.QueryVotesRequest = exports.QueryVoteResponse = exports.QueryVoteRequest = exports.QueryProposalsResponse = exports.QueryProposalsRequest = exports.QueryProposalResponse = exports.QueryProposalRequest = exports.protobufPackage = void 0;
    var gov_1 = require_gov();
    var pagination_1 = require_pagination();
    var helpers_1 = require_helpers();
    var _m0 = __importStar(require_minimal());
    exports.protobufPackage = "cosmos.gov.v1beta1";
    function createBaseQueryProposalRequest() {
      return {
        proposalId: helpers_1.Long.UZERO
      };
    }
    exports.QueryProposalRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.proposalId.isZero()) {
          writer.uint32(8).uint64(message.proposalId);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryProposalRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.proposalId = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          proposalId: (0, helpers_1.isSet)(object.proposalId) ? helpers_1.Long.fromValue(object.proposalId) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.proposalId !== void 0 && (obj.proposalId = (message.proposalId || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryProposalRequest();
        message.proposalId = object.proposalId !== void 0 && object.proposalId !== null ? helpers_1.Long.fromValue(object.proposalId) : helpers_1.Long.UZERO;
        return message;
      }
    };
    function createBaseQueryProposalResponse() {
      return {
        proposal: void 0
      };
    }
    exports.QueryProposalResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.proposal !== void 0) {
          gov_1.Proposal.encode(message.proposal, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryProposalResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.proposal = gov_1.Proposal.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          proposal: (0, helpers_1.isSet)(object.proposal) ? gov_1.Proposal.fromJSON(object.proposal) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.proposal !== void 0 && (obj.proposal = message.proposal ? gov_1.Proposal.toJSON(message.proposal) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryProposalResponse();
        message.proposal = object.proposal !== void 0 && object.proposal !== null ? gov_1.Proposal.fromPartial(object.proposal) : void 0;
        return message;
      }
    };
    function createBaseQueryProposalsRequest() {
      return {
        proposalStatus: 0,
        voter: "",
        depositor: "",
        pagination: void 0
      };
    }
    exports.QueryProposalsRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.proposalStatus !== 0) {
          writer.uint32(8).int32(message.proposalStatus);
        }
        if (message.voter !== "") {
          writer.uint32(18).string(message.voter);
        }
        if (message.depositor !== "") {
          writer.uint32(26).string(message.depositor);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(34).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryProposalsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.proposalStatus = reader.int32();
              break;
            case 2:
              message.voter = reader.string();
              break;
            case 3:
              message.depositor = reader.string();
              break;
            case 4:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          proposalStatus: (0, helpers_1.isSet)(object.proposalStatus) ? (0, gov_1.proposalStatusFromJSON)(object.proposalStatus) : 0,
          voter: (0, helpers_1.isSet)(object.voter) ? String(object.voter) : "",
          depositor: (0, helpers_1.isSet)(object.depositor) ? String(object.depositor) : "",
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.proposalStatus !== void 0 && (obj.proposalStatus = (0, gov_1.proposalStatusToJSON)(message.proposalStatus));
        message.voter !== void 0 && (obj.voter = message.voter);
        message.depositor !== void 0 && (obj.depositor = message.depositor);
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryProposalsRequest();
        message.proposalStatus = object.proposalStatus ?? 0;
        message.voter = object.voter ?? "";
        message.depositor = object.depositor ?? "";
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryProposalsResponse() {
      return {
        proposals: [],
        pagination: void 0
      };
    }
    exports.QueryProposalsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.proposals) {
          gov_1.Proposal.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryProposalsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.proposals.push(gov_1.Proposal.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          proposals: Array.isArray(object == null ? void 0 : object.proposals) ? object.proposals.map((e2) => gov_1.Proposal.fromJSON(e2)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.proposals) {
          obj.proposals = message.proposals.map((e2) => e2 ? gov_1.Proposal.toJSON(e2) : void 0);
        } else {
          obj.proposals = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryProposalsResponse();
        message.proposals = ((_a = object.proposals) == null ? void 0 : _a.map((e2) => gov_1.Proposal.fromPartial(e2))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryVoteRequest() {
      return {
        proposalId: helpers_1.Long.UZERO,
        voter: ""
      };
    }
    exports.QueryVoteRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.proposalId.isZero()) {
          writer.uint32(8).uint64(message.proposalId);
        }
        if (message.voter !== "") {
          writer.uint32(18).string(message.voter);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryVoteRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.proposalId = reader.uint64();
              break;
            case 2:
              message.voter = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          proposalId: (0, helpers_1.isSet)(object.proposalId) ? helpers_1.Long.fromValue(object.proposalId) : helpers_1.Long.UZERO,
          voter: (0, helpers_1.isSet)(object.voter) ? String(object.voter) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.proposalId !== void 0 && (obj.proposalId = (message.proposalId || helpers_1.Long.UZERO).toString());
        message.voter !== void 0 && (obj.voter = message.voter);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryVoteRequest();
        message.proposalId = object.proposalId !== void 0 && object.proposalId !== null ? helpers_1.Long.fromValue(object.proposalId) : helpers_1.Long.UZERO;
        message.voter = object.voter ?? "";
        return message;
      }
    };
    function createBaseQueryVoteResponse() {
      return {
        vote: void 0
      };
    }
    exports.QueryVoteResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.vote !== void 0) {
          gov_1.Vote.encode(message.vote, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryVoteResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.vote = gov_1.Vote.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          vote: (0, helpers_1.isSet)(object.vote) ? gov_1.Vote.fromJSON(object.vote) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.vote !== void 0 && (obj.vote = message.vote ? gov_1.Vote.toJSON(message.vote) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryVoteResponse();
        message.vote = object.vote !== void 0 && object.vote !== null ? gov_1.Vote.fromPartial(object.vote) : void 0;
        return message;
      }
    };
    function createBaseQueryVotesRequest() {
      return {
        proposalId: helpers_1.Long.UZERO,
        pagination: void 0
      };
    }
    exports.QueryVotesRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.proposalId.isZero()) {
          writer.uint32(8).uint64(message.proposalId);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryVotesRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.proposalId = reader.uint64();
              break;
            case 2:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          proposalId: (0, helpers_1.isSet)(object.proposalId) ? helpers_1.Long.fromValue(object.proposalId) : helpers_1.Long.UZERO,
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.proposalId !== void 0 && (obj.proposalId = (message.proposalId || helpers_1.Long.UZERO).toString());
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryVotesRequest();
        message.proposalId = object.proposalId !== void 0 && object.proposalId !== null ? helpers_1.Long.fromValue(object.proposalId) : helpers_1.Long.UZERO;
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryVotesResponse() {
      return {
        votes: [],
        pagination: void 0
      };
    }
    exports.QueryVotesResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.votes) {
          gov_1.Vote.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryVotesResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.votes.push(gov_1.Vote.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          votes: Array.isArray(object == null ? void 0 : object.votes) ? object.votes.map((e2) => gov_1.Vote.fromJSON(e2)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.votes) {
          obj.votes = message.votes.map((e2) => e2 ? gov_1.Vote.toJSON(e2) : void 0);
        } else {
          obj.votes = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryVotesResponse();
        message.votes = ((_a = object.votes) == null ? void 0 : _a.map((e2) => gov_1.Vote.fromPartial(e2))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryParamsRequest() {
      return {
        paramsType: ""
      };
    }
    exports.QueryParamsRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.paramsType !== "") {
          writer.uint32(10).string(message.paramsType);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryParamsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.paramsType = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          paramsType: (0, helpers_1.isSet)(object.paramsType) ? String(object.paramsType) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.paramsType !== void 0 && (obj.paramsType = message.paramsType);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryParamsRequest();
        message.paramsType = object.paramsType ?? "";
        return message;
      }
    };
    function createBaseQueryParamsResponse() {
      return {
        votingParams: void 0,
        depositParams: void 0,
        tallyParams: void 0
      };
    }
    exports.QueryParamsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.votingParams !== void 0) {
          gov_1.VotingParams.encode(message.votingParams, writer.uint32(10).fork()).ldelim();
        }
        if (message.depositParams !== void 0) {
          gov_1.DepositParams.encode(message.depositParams, writer.uint32(18).fork()).ldelim();
        }
        if (message.tallyParams !== void 0) {
          gov_1.TallyParams.encode(message.tallyParams, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryParamsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.votingParams = gov_1.VotingParams.decode(reader, reader.uint32());
              break;
            case 2:
              message.depositParams = gov_1.DepositParams.decode(reader, reader.uint32());
              break;
            case 3:
              message.tallyParams = gov_1.TallyParams.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          votingParams: (0, helpers_1.isSet)(object.votingParams) ? gov_1.VotingParams.fromJSON(object.votingParams) : void 0,
          depositParams: (0, helpers_1.isSet)(object.depositParams) ? gov_1.DepositParams.fromJSON(object.depositParams) : void 0,
          tallyParams: (0, helpers_1.isSet)(object.tallyParams) ? gov_1.TallyParams.fromJSON(object.tallyParams) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.votingParams !== void 0 && (obj.votingParams = message.votingParams ? gov_1.VotingParams.toJSON(message.votingParams) : void 0);
        message.depositParams !== void 0 && (obj.depositParams = message.depositParams ? gov_1.DepositParams.toJSON(message.depositParams) : void 0);
        message.tallyParams !== void 0 && (obj.tallyParams = message.tallyParams ? gov_1.TallyParams.toJSON(message.tallyParams) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryParamsResponse();
        message.votingParams = object.votingParams !== void 0 && object.votingParams !== null ? gov_1.VotingParams.fromPartial(object.votingParams) : void 0;
        message.depositParams = object.depositParams !== void 0 && object.depositParams !== null ? gov_1.DepositParams.fromPartial(object.depositParams) : void 0;
        message.tallyParams = object.tallyParams !== void 0 && object.tallyParams !== null ? gov_1.TallyParams.fromPartial(object.tallyParams) : void 0;
        return message;
      }
    };
    function createBaseQueryDepositRequest() {
      return {
        proposalId: helpers_1.Long.UZERO,
        depositor: ""
      };
    }
    exports.QueryDepositRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.proposalId.isZero()) {
          writer.uint32(8).uint64(message.proposalId);
        }
        if (message.depositor !== "") {
          writer.uint32(18).string(message.depositor);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDepositRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.proposalId = reader.uint64();
              break;
            case 2:
              message.depositor = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          proposalId: (0, helpers_1.isSet)(object.proposalId) ? helpers_1.Long.fromValue(object.proposalId) : helpers_1.Long.UZERO,
          depositor: (0, helpers_1.isSet)(object.depositor) ? String(object.depositor) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.proposalId !== void 0 && (obj.proposalId = (message.proposalId || helpers_1.Long.UZERO).toString());
        message.depositor !== void 0 && (obj.depositor = message.depositor);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryDepositRequest();
        message.proposalId = object.proposalId !== void 0 && object.proposalId !== null ? helpers_1.Long.fromValue(object.proposalId) : helpers_1.Long.UZERO;
        message.depositor = object.depositor ?? "";
        return message;
      }
    };
    function createBaseQueryDepositResponse() {
      return {
        deposit: void 0
      };
    }
    exports.QueryDepositResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.deposit !== void 0) {
          gov_1.Deposit.encode(message.deposit, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDepositResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.deposit = gov_1.Deposit.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          deposit: (0, helpers_1.isSet)(object.deposit) ? gov_1.Deposit.fromJSON(object.deposit) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.deposit !== void 0 && (obj.deposit = message.deposit ? gov_1.Deposit.toJSON(message.deposit) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryDepositResponse();
        message.deposit = object.deposit !== void 0 && object.deposit !== null ? gov_1.Deposit.fromPartial(object.deposit) : void 0;
        return message;
      }
    };
    function createBaseQueryDepositsRequest() {
      return {
        proposalId: helpers_1.Long.UZERO,
        pagination: void 0
      };
    }
    exports.QueryDepositsRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.proposalId.isZero()) {
          writer.uint32(8).uint64(message.proposalId);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDepositsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.proposalId = reader.uint64();
              break;
            case 2:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          proposalId: (0, helpers_1.isSet)(object.proposalId) ? helpers_1.Long.fromValue(object.proposalId) : helpers_1.Long.UZERO,
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.proposalId !== void 0 && (obj.proposalId = (message.proposalId || helpers_1.Long.UZERO).toString());
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryDepositsRequest();
        message.proposalId = object.proposalId !== void 0 && object.proposalId !== null ? helpers_1.Long.fromValue(object.proposalId) : helpers_1.Long.UZERO;
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryDepositsResponse() {
      return {
        deposits: [],
        pagination: void 0
      };
    }
    exports.QueryDepositsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.deposits) {
          gov_1.Deposit.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDepositsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.deposits.push(gov_1.Deposit.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          deposits: Array.isArray(object == null ? void 0 : object.deposits) ? object.deposits.map((e2) => gov_1.Deposit.fromJSON(e2)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.deposits) {
          obj.deposits = message.deposits.map((e2) => e2 ? gov_1.Deposit.toJSON(e2) : void 0);
        } else {
          obj.deposits = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryDepositsResponse();
        message.deposits = ((_a = object.deposits) == null ? void 0 : _a.map((e2) => gov_1.Deposit.fromPartial(e2))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryTallyResultRequest() {
      return {
        proposalId: helpers_1.Long.UZERO
      };
    }
    exports.QueryTallyResultRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.proposalId.isZero()) {
          writer.uint32(8).uint64(message.proposalId);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryTallyResultRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.proposalId = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          proposalId: (0, helpers_1.isSet)(object.proposalId) ? helpers_1.Long.fromValue(object.proposalId) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.proposalId !== void 0 && (obj.proposalId = (message.proposalId || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryTallyResultRequest();
        message.proposalId = object.proposalId !== void 0 && object.proposalId !== null ? helpers_1.Long.fromValue(object.proposalId) : helpers_1.Long.UZERO;
        return message;
      }
    };
    function createBaseQueryTallyResultResponse() {
      return {
        tally: void 0
      };
    }
    exports.QueryTallyResultResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.tally !== void 0) {
          gov_1.TallyResult.encode(message.tally, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryTallyResultResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.tally = gov_1.TallyResult.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          tally: (0, helpers_1.isSet)(object.tally) ? gov_1.TallyResult.fromJSON(object.tally) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.tally !== void 0 && (obj.tally = message.tally ? gov_1.TallyResult.toJSON(message.tally) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryTallyResultResponse();
        message.tally = object.tally !== void 0 && object.tally !== null ? gov_1.TallyResult.fromPartial(object.tally) : void 0;
        return message;
      }
    };
    var QueryClientImpl = class {
      constructor(rpc) {
        this.rpc = rpc;
        this.Proposal = this.Proposal.bind(this);
        this.Proposals = this.Proposals.bind(this);
        this.Vote = this.Vote.bind(this);
        this.Votes = this.Votes.bind(this);
        this.Params = this.Params.bind(this);
        this.Deposit = this.Deposit.bind(this);
        this.Deposits = this.Deposits.bind(this);
        this.TallyResult = this.TallyResult.bind(this);
      }
      Proposal(request) {
        const data = exports.QueryProposalRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.gov.v1beta1.Query", "Proposal", data);
        return promise.then((data2) => exports.QueryProposalResponse.decode(new _m0.Reader(data2)));
      }
      Proposals(request) {
        const data = exports.QueryProposalsRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.gov.v1beta1.Query", "Proposals", data);
        return promise.then((data2) => exports.QueryProposalsResponse.decode(new _m0.Reader(data2)));
      }
      Vote(request) {
        const data = exports.QueryVoteRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.gov.v1beta1.Query", "Vote", data);
        return promise.then((data2) => exports.QueryVoteResponse.decode(new _m0.Reader(data2)));
      }
      Votes(request) {
        const data = exports.QueryVotesRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.gov.v1beta1.Query", "Votes", data);
        return promise.then((data2) => exports.QueryVotesResponse.decode(new _m0.Reader(data2)));
      }
      Params(request) {
        const data = exports.QueryParamsRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.gov.v1beta1.Query", "Params", data);
        return promise.then((data2) => exports.QueryParamsResponse.decode(new _m0.Reader(data2)));
      }
      Deposit(request) {
        const data = exports.QueryDepositRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.gov.v1beta1.Query", "Deposit", data);
        return promise.then((data2) => exports.QueryDepositResponse.decode(new _m0.Reader(data2)));
      }
      Deposits(request) {
        const data = exports.QueryDepositsRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.gov.v1beta1.Query", "Deposits", data);
        return promise.then((data2) => exports.QueryDepositsResponse.decode(new _m0.Reader(data2)));
      }
      TallyResult(request) {
        const data = exports.QueryTallyResultRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.gov.v1beta1.Query", "TallyResult", data);
        return promise.then((data2) => exports.QueryTallyResultResponse.decode(new _m0.Reader(data2)));
      }
    };
    exports.QueryClientImpl = QueryClientImpl;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/gov/queries.js
var require_queries6 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/gov/queries.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.setupGovExtension = void 0;
    var query_1 = require_query6();
    var queryclient_1 = require_queryclient2();
    function setupGovExtension(base) {
      const rpc = (0, queryclient_1.createProtobufRpcClient)(base);
      const queryService = new query_1.QueryClientImpl(rpc);
      return {
        gov: {
          params: async (parametersType) => {
            const response = await queryService.Params({ paramsType: parametersType });
            return response;
          },
          proposals: async (proposalStatus, depositorAddress, voterAddress, paginationKey) => {
            const response = await queryService.Proposals({
              proposalStatus,
              depositor: depositorAddress,
              voter: voterAddress,
              pagination: (0, queryclient_1.createPagination)(paginationKey)
            });
            return response;
          },
          proposal: async (proposalId) => {
            const response = await queryService.Proposal({ proposalId: (0, queryclient_1.longify)(proposalId) });
            return response;
          },
          deposits: async (proposalId, paginationKey) => {
            const response = await queryService.Deposits({
              proposalId: (0, queryclient_1.longify)(proposalId),
              pagination: (0, queryclient_1.createPagination)(paginationKey)
            });
            return response;
          },
          deposit: async (proposalId, depositorAddress) => {
            const response = await queryService.Deposit({
              proposalId: (0, queryclient_1.longify)(proposalId),
              depositor: depositorAddress
            });
            return response;
          },
          tally: async (proposalId) => {
            const response = await queryService.TallyResult({
              proposalId: (0, queryclient_1.longify)(proposalId)
            });
            return response;
          },
          votes: async (proposalId, paginationKey) => {
            const response = await queryService.Votes({
              proposalId: (0, queryclient_1.longify)(proposalId),
              pagination: (0, queryclient_1.createPagination)(paginationKey)
            });
            return response;
          },
          vote: async (proposalId, voterAddress) => {
            const response = await queryService.Vote({
              proposalId: (0, queryclient_1.longify)(proposalId),
              voter: voterAddress
            });
            return response;
          }
        }
      };
    }
    exports.setupGovExtension = setupGovExtension;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/upgrade/v1beta1/upgrade.js
var require_upgrade = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/upgrade/v1beta1/upgrade.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ModuleVersion = exports.CancelSoftwareUpgradeProposal = exports.SoftwareUpgradeProposal = exports.Plan = exports.protobufPackage = void 0;
    var timestamp_1 = require_timestamp();
    var any_1 = require_any();
    var helpers_1 = require_helpers();
    var _m0 = __importStar(require_minimal());
    exports.protobufPackage = "cosmos.upgrade.v1beta1";
    function createBasePlan() {
      return {
        name: "",
        time: void 0,
        height: helpers_1.Long.ZERO,
        info: "",
        upgradedClientState: void 0
      };
    }
    exports.Plan = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.name !== "") {
          writer.uint32(10).string(message.name);
        }
        if (message.time !== void 0) {
          timestamp_1.Timestamp.encode(message.time, writer.uint32(18).fork()).ldelim();
        }
        if (!message.height.isZero()) {
          writer.uint32(24).int64(message.height);
        }
        if (message.info !== "") {
          writer.uint32(34).string(message.info);
        }
        if (message.upgradedClientState !== void 0) {
          any_1.Any.encode(message.upgradedClientState, writer.uint32(42).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBasePlan();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.name = reader.string();
              break;
            case 2:
              message.time = timestamp_1.Timestamp.decode(reader, reader.uint32());
              break;
            case 3:
              message.height = reader.int64();
              break;
            case 4:
              message.info = reader.string();
              break;
            case 5:
              message.upgradedClientState = any_1.Any.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          name: (0, helpers_1.isSet)(object.name) ? String(object.name) : "",
          time: (0, helpers_1.isSet)(object.time) ? (0, helpers_1.fromJsonTimestamp)(object.time) : void 0,
          height: (0, helpers_1.isSet)(object.height) ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.ZERO,
          info: (0, helpers_1.isSet)(object.info) ? String(object.info) : "",
          upgradedClientState: (0, helpers_1.isSet)(object.upgradedClientState) ? any_1.Any.fromJSON(object.upgradedClientState) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.name !== void 0 && (obj.name = message.name);
        message.time !== void 0 && (obj.time = (0, helpers_1.fromTimestamp)(message.time).toISOString());
        message.height !== void 0 && (obj.height = (message.height || helpers_1.Long.ZERO).toString());
        message.info !== void 0 && (obj.info = message.info);
        message.upgradedClientState !== void 0 && (obj.upgradedClientState = message.upgradedClientState ? any_1.Any.toJSON(message.upgradedClientState) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBasePlan();
        message.name = object.name ?? "";
        message.time = object.time !== void 0 && object.time !== null ? timestamp_1.Timestamp.fromPartial(object.time) : void 0;
        message.height = object.height !== void 0 && object.height !== null ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.ZERO;
        message.info = object.info ?? "";
        message.upgradedClientState = object.upgradedClientState !== void 0 && object.upgradedClientState !== null ? any_1.Any.fromPartial(object.upgradedClientState) : void 0;
        return message;
      }
    };
    function createBaseSoftwareUpgradeProposal() {
      return {
        title: "",
        description: "",
        plan: void 0
      };
    }
    exports.SoftwareUpgradeProposal = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.title !== "") {
          writer.uint32(10).string(message.title);
        }
        if (message.description !== "") {
          writer.uint32(18).string(message.description);
        }
        if (message.plan !== void 0) {
          exports.Plan.encode(message.plan, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseSoftwareUpgradeProposal();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.title = reader.string();
              break;
            case 2:
              message.description = reader.string();
              break;
            case 3:
              message.plan = exports.Plan.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          title: (0, helpers_1.isSet)(object.title) ? String(object.title) : "",
          description: (0, helpers_1.isSet)(object.description) ? String(object.description) : "",
          plan: (0, helpers_1.isSet)(object.plan) ? exports.Plan.fromJSON(object.plan) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.title !== void 0 && (obj.title = message.title);
        message.description !== void 0 && (obj.description = message.description);
        message.plan !== void 0 && (obj.plan = message.plan ? exports.Plan.toJSON(message.plan) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseSoftwareUpgradeProposal();
        message.title = object.title ?? "";
        message.description = object.description ?? "";
        message.plan = object.plan !== void 0 && object.plan !== null ? exports.Plan.fromPartial(object.plan) : void 0;
        return message;
      }
    };
    function createBaseCancelSoftwareUpgradeProposal() {
      return {
        title: "",
        description: ""
      };
    }
    exports.CancelSoftwareUpgradeProposal = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.title !== "") {
          writer.uint32(10).string(message.title);
        }
        if (message.description !== "") {
          writer.uint32(18).string(message.description);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseCancelSoftwareUpgradeProposal();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.title = reader.string();
              break;
            case 2:
              message.description = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          title: (0, helpers_1.isSet)(object.title) ? String(object.title) : "",
          description: (0, helpers_1.isSet)(object.description) ? String(object.description) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.title !== void 0 && (obj.title = message.title);
        message.description !== void 0 && (obj.description = message.description);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseCancelSoftwareUpgradeProposal();
        message.title = object.title ?? "";
        message.description = object.description ?? "";
        return message;
      }
    };
    function createBaseModuleVersion() {
      return {
        name: "",
        version: helpers_1.Long.UZERO
      };
    }
    exports.ModuleVersion = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.name !== "") {
          writer.uint32(10).string(message.name);
        }
        if (!message.version.isZero()) {
          writer.uint32(16).uint64(message.version);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseModuleVersion();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.name = reader.string();
              break;
            case 2:
              message.version = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          name: (0, helpers_1.isSet)(object.name) ? String(object.name) : "",
          version: (0, helpers_1.isSet)(object.version) ? helpers_1.Long.fromValue(object.version) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.name !== void 0 && (obj.name = message.name);
        message.version !== void 0 && (obj.version = (message.version || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseModuleVersion();
        message.name = object.name ?? "";
        message.version = object.version !== void 0 && object.version !== null ? helpers_1.Long.fromValue(object.version) : helpers_1.Long.UZERO;
        return message;
      }
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/ibc/core/client/v1/client.js
var require_client = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/ibc/core/client/v1/client.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Params = exports.Height = exports.UpgradeProposal = exports.ClientUpdateProposal = exports.ClientConsensusStates = exports.ConsensusStateWithHeight = exports.IdentifiedClientState = exports.protobufPackage = void 0;
    var any_1 = require_any();
    var upgrade_1 = require_upgrade();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "ibc.core.client.v1";
    function createBaseIdentifiedClientState() {
      return {
        clientId: "",
        clientState: void 0
      };
    }
    exports.IdentifiedClientState = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.clientId !== "") {
          writer.uint32(10).string(message.clientId);
        }
        if (message.clientState !== void 0) {
          any_1.Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseIdentifiedClientState();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.clientId = reader.string();
              break;
            case 2:
              message.clientState = any_1.Any.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          clientId: (0, helpers_1.isSet)(object.clientId) ? String(object.clientId) : "",
          clientState: (0, helpers_1.isSet)(object.clientState) ? any_1.Any.fromJSON(object.clientState) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.clientId !== void 0 && (obj.clientId = message.clientId);
        message.clientState !== void 0 && (obj.clientState = message.clientState ? any_1.Any.toJSON(message.clientState) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseIdentifiedClientState();
        message.clientId = object.clientId ?? "";
        message.clientState = object.clientState !== void 0 && object.clientState !== null ? any_1.Any.fromPartial(object.clientState) : void 0;
        return message;
      }
    };
    function createBaseConsensusStateWithHeight() {
      return {
        height: void 0,
        consensusState: void 0
      };
    }
    exports.ConsensusStateWithHeight = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.height !== void 0) {
          exports.Height.encode(message.height, writer.uint32(10).fork()).ldelim();
        }
        if (message.consensusState !== void 0) {
          any_1.Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseConsensusStateWithHeight();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.height = exports.Height.decode(reader, reader.uint32());
              break;
            case 2:
              message.consensusState = any_1.Any.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          height: (0, helpers_1.isSet)(object.height) ? exports.Height.fromJSON(object.height) : void 0,
          consensusState: (0, helpers_1.isSet)(object.consensusState) ? any_1.Any.fromJSON(object.consensusState) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.height !== void 0 && (obj.height = message.height ? exports.Height.toJSON(message.height) : void 0);
        message.consensusState !== void 0 && (obj.consensusState = message.consensusState ? any_1.Any.toJSON(message.consensusState) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseConsensusStateWithHeight();
        message.height = object.height !== void 0 && object.height !== null ? exports.Height.fromPartial(object.height) : void 0;
        message.consensusState = object.consensusState !== void 0 && object.consensusState !== null ? any_1.Any.fromPartial(object.consensusState) : void 0;
        return message;
      }
    };
    function createBaseClientConsensusStates() {
      return {
        clientId: "",
        consensusStates: []
      };
    }
    exports.ClientConsensusStates = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.clientId !== "") {
          writer.uint32(10).string(message.clientId);
        }
        for (const v3 of message.consensusStates) {
          exports.ConsensusStateWithHeight.encode(v3, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseClientConsensusStates();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.clientId = reader.string();
              break;
            case 2:
              message.consensusStates.push(exports.ConsensusStateWithHeight.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          clientId: (0, helpers_1.isSet)(object.clientId) ? String(object.clientId) : "",
          consensusStates: Array.isArray(object == null ? void 0 : object.consensusStates) ? object.consensusStates.map((e2) => exports.ConsensusStateWithHeight.fromJSON(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.clientId !== void 0 && (obj.clientId = message.clientId);
        if (message.consensusStates) {
          obj.consensusStates = message.consensusStates.map((e2) => e2 ? exports.ConsensusStateWithHeight.toJSON(e2) : void 0);
        } else {
          obj.consensusStates = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseClientConsensusStates();
        message.clientId = object.clientId ?? "";
        message.consensusStates = ((_a = object.consensusStates) == null ? void 0 : _a.map((e2) => exports.ConsensusStateWithHeight.fromPartial(e2))) || [];
        return message;
      }
    };
    function createBaseClientUpdateProposal() {
      return {
        title: "",
        description: "",
        subjectClientId: "",
        substituteClientId: ""
      };
    }
    exports.ClientUpdateProposal = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.title !== "") {
          writer.uint32(10).string(message.title);
        }
        if (message.description !== "") {
          writer.uint32(18).string(message.description);
        }
        if (message.subjectClientId !== "") {
          writer.uint32(26).string(message.subjectClientId);
        }
        if (message.substituteClientId !== "") {
          writer.uint32(34).string(message.substituteClientId);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseClientUpdateProposal();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.title = reader.string();
              break;
            case 2:
              message.description = reader.string();
              break;
            case 3:
              message.subjectClientId = reader.string();
              break;
            case 4:
              message.substituteClientId = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          title: (0, helpers_1.isSet)(object.title) ? String(object.title) : "",
          description: (0, helpers_1.isSet)(object.description) ? String(object.description) : "",
          subjectClientId: (0, helpers_1.isSet)(object.subjectClientId) ? String(object.subjectClientId) : "",
          substituteClientId: (0, helpers_1.isSet)(object.substituteClientId) ? String(object.substituteClientId) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.title !== void 0 && (obj.title = message.title);
        message.description !== void 0 && (obj.description = message.description);
        message.subjectClientId !== void 0 && (obj.subjectClientId = message.subjectClientId);
        message.substituteClientId !== void 0 && (obj.substituteClientId = message.substituteClientId);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseClientUpdateProposal();
        message.title = object.title ?? "";
        message.description = object.description ?? "";
        message.subjectClientId = object.subjectClientId ?? "";
        message.substituteClientId = object.substituteClientId ?? "";
        return message;
      }
    };
    function createBaseUpgradeProposal() {
      return {
        title: "",
        description: "",
        plan: void 0,
        upgradedClientState: void 0
      };
    }
    exports.UpgradeProposal = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.title !== "") {
          writer.uint32(10).string(message.title);
        }
        if (message.description !== "") {
          writer.uint32(18).string(message.description);
        }
        if (message.plan !== void 0) {
          upgrade_1.Plan.encode(message.plan, writer.uint32(26).fork()).ldelim();
        }
        if (message.upgradedClientState !== void 0) {
          any_1.Any.encode(message.upgradedClientState, writer.uint32(34).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseUpgradeProposal();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.title = reader.string();
              break;
            case 2:
              message.description = reader.string();
              break;
            case 3:
              message.plan = upgrade_1.Plan.decode(reader, reader.uint32());
              break;
            case 4:
              message.upgradedClientState = any_1.Any.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          title: (0, helpers_1.isSet)(object.title) ? String(object.title) : "",
          description: (0, helpers_1.isSet)(object.description) ? String(object.description) : "",
          plan: (0, helpers_1.isSet)(object.plan) ? upgrade_1.Plan.fromJSON(object.plan) : void 0,
          upgradedClientState: (0, helpers_1.isSet)(object.upgradedClientState) ? any_1.Any.fromJSON(object.upgradedClientState) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.title !== void 0 && (obj.title = message.title);
        message.description !== void 0 && (obj.description = message.description);
        message.plan !== void 0 && (obj.plan = message.plan ? upgrade_1.Plan.toJSON(message.plan) : void 0);
        message.upgradedClientState !== void 0 && (obj.upgradedClientState = message.upgradedClientState ? any_1.Any.toJSON(message.upgradedClientState) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseUpgradeProposal();
        message.title = object.title ?? "";
        message.description = object.description ?? "";
        message.plan = object.plan !== void 0 && object.plan !== null ? upgrade_1.Plan.fromPartial(object.plan) : void 0;
        message.upgradedClientState = object.upgradedClientState !== void 0 && object.upgradedClientState !== null ? any_1.Any.fromPartial(object.upgradedClientState) : void 0;
        return message;
      }
    };
    function createBaseHeight() {
      return {
        revisionNumber: helpers_1.Long.UZERO,
        revisionHeight: helpers_1.Long.UZERO
      };
    }
    exports.Height = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.revisionNumber.isZero()) {
          writer.uint32(8).uint64(message.revisionNumber);
        }
        if (!message.revisionHeight.isZero()) {
          writer.uint32(16).uint64(message.revisionHeight);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseHeight();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.revisionNumber = reader.uint64();
              break;
            case 2:
              message.revisionHeight = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          revisionNumber: (0, helpers_1.isSet)(object.revisionNumber) ? helpers_1.Long.fromValue(object.revisionNumber) : helpers_1.Long.UZERO,
          revisionHeight: (0, helpers_1.isSet)(object.revisionHeight) ? helpers_1.Long.fromValue(object.revisionHeight) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.revisionNumber !== void 0 && (obj.revisionNumber = (message.revisionNumber || helpers_1.Long.UZERO).toString());
        message.revisionHeight !== void 0 && (obj.revisionHeight = (message.revisionHeight || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseHeight();
        message.revisionNumber = object.revisionNumber !== void 0 && object.revisionNumber !== null ? helpers_1.Long.fromValue(object.revisionNumber) : helpers_1.Long.UZERO;
        message.revisionHeight = object.revisionHeight !== void 0 && object.revisionHeight !== null ? helpers_1.Long.fromValue(object.revisionHeight) : helpers_1.Long.UZERO;
        return message;
      }
    };
    function createBaseParams() {
      return {
        allowedClients: []
      };
    }
    exports.Params = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.allowedClients) {
          writer.uint32(10).string(v3);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseParams();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.allowedClients.push(reader.string());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          allowedClients: Array.isArray(object == null ? void 0 : object.allowedClients) ? object.allowedClients.map((e2) => String(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.allowedClients) {
          obj.allowedClients = message.allowedClients.map((e2) => e2);
        } else {
          obj.allowedClients = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseParams();
        message.allowedClients = ((_a = object.allowedClients) == null ? void 0 : _a.map((e2) => e2)) || [];
        return message;
      }
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/ibc/applications/transfer/v1/tx.js
var require_tx7 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/ibc/applications/transfer/v1/tx.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.MsgClientImpl = exports.MsgTransferResponse = exports.MsgTransfer = exports.protobufPackage = void 0;
    var coin_1 = require_coin();
    var client_1 = require_client();
    var helpers_1 = require_helpers();
    var _m0 = __importStar(require_minimal());
    exports.protobufPackage = "ibc.applications.transfer.v1";
    function createBaseMsgTransfer() {
      return {
        sourcePort: "",
        sourceChannel: "",
        token: void 0,
        sender: "",
        receiver: "",
        timeoutHeight: void 0,
        timeoutTimestamp: helpers_1.Long.UZERO,
        memo: ""
      };
    }
    exports.MsgTransfer = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.sourcePort !== "") {
          writer.uint32(10).string(message.sourcePort);
        }
        if (message.sourceChannel !== "") {
          writer.uint32(18).string(message.sourceChannel);
        }
        if (message.token !== void 0) {
          coin_1.Coin.encode(message.token, writer.uint32(26).fork()).ldelim();
        }
        if (message.sender !== "") {
          writer.uint32(34).string(message.sender);
        }
        if (message.receiver !== "") {
          writer.uint32(42).string(message.receiver);
        }
        if (message.timeoutHeight !== void 0) {
          client_1.Height.encode(message.timeoutHeight, writer.uint32(50).fork()).ldelim();
        }
        if (!message.timeoutTimestamp.isZero()) {
          writer.uint32(56).uint64(message.timeoutTimestamp);
        }
        if (message.memo !== "") {
          writer.uint32(66).string(message.memo);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgTransfer();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.sourcePort = reader.string();
              break;
            case 2:
              message.sourceChannel = reader.string();
              break;
            case 3:
              message.token = coin_1.Coin.decode(reader, reader.uint32());
              break;
            case 4:
              message.sender = reader.string();
              break;
            case 5:
              message.receiver = reader.string();
              break;
            case 6:
              message.timeoutHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            case 7:
              message.timeoutTimestamp = reader.uint64();
              break;
            case 8:
              message.memo = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          sourcePort: (0, helpers_1.isSet)(object.sourcePort) ? String(object.sourcePort) : "",
          sourceChannel: (0, helpers_1.isSet)(object.sourceChannel) ? String(object.sourceChannel) : "",
          token: (0, helpers_1.isSet)(object.token) ? coin_1.Coin.fromJSON(object.token) : void 0,
          sender: (0, helpers_1.isSet)(object.sender) ? String(object.sender) : "",
          receiver: (0, helpers_1.isSet)(object.receiver) ? String(object.receiver) : "",
          timeoutHeight: (0, helpers_1.isSet)(object.timeoutHeight) ? client_1.Height.fromJSON(object.timeoutHeight) : void 0,
          timeoutTimestamp: (0, helpers_1.isSet)(object.timeoutTimestamp) ? helpers_1.Long.fromValue(object.timeoutTimestamp) : helpers_1.Long.UZERO,
          memo: (0, helpers_1.isSet)(object.memo) ? String(object.memo) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.sourcePort !== void 0 && (obj.sourcePort = message.sourcePort);
        message.sourceChannel !== void 0 && (obj.sourceChannel = message.sourceChannel);
        message.token !== void 0 && (obj.token = message.token ? coin_1.Coin.toJSON(message.token) : void 0);
        message.sender !== void 0 && (obj.sender = message.sender);
        message.receiver !== void 0 && (obj.receiver = message.receiver);
        message.timeoutHeight !== void 0 && (obj.timeoutHeight = message.timeoutHeight ? client_1.Height.toJSON(message.timeoutHeight) : void 0);
        message.timeoutTimestamp !== void 0 && (obj.timeoutTimestamp = (message.timeoutTimestamp || helpers_1.Long.UZERO).toString());
        message.memo !== void 0 && (obj.memo = message.memo);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgTransfer();
        message.sourcePort = object.sourcePort ?? "";
        message.sourceChannel = object.sourceChannel ?? "";
        message.token = object.token !== void 0 && object.token !== null ? coin_1.Coin.fromPartial(object.token) : void 0;
        message.sender = object.sender ?? "";
        message.receiver = object.receiver ?? "";
        message.timeoutHeight = object.timeoutHeight !== void 0 && object.timeoutHeight !== null ? client_1.Height.fromPartial(object.timeoutHeight) : void 0;
        message.timeoutTimestamp = object.timeoutTimestamp !== void 0 && object.timeoutTimestamp !== null ? helpers_1.Long.fromValue(object.timeoutTimestamp) : helpers_1.Long.UZERO;
        message.memo = object.memo ?? "";
        return message;
      }
    };
    function createBaseMsgTransferResponse() {
      return {
        sequence: helpers_1.Long.UZERO
      };
    }
    exports.MsgTransferResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.sequence.isZero()) {
          writer.uint32(8).uint64(message.sequence);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgTransferResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.sequence = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          sequence: (0, helpers_1.isSet)(object.sequence) ? helpers_1.Long.fromValue(object.sequence) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.sequence !== void 0 && (obj.sequence = (message.sequence || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgTransferResponse();
        message.sequence = object.sequence !== void 0 && object.sequence !== null ? helpers_1.Long.fromValue(object.sequence) : helpers_1.Long.UZERO;
        return message;
      }
    };
    var MsgClientImpl = class {
      constructor(rpc) {
        this.rpc = rpc;
        this.Transfer = this.Transfer.bind(this);
      }
      Transfer(request) {
        const data = exports.MsgTransfer.encode(request).finish();
        const promise = this.rpc.request("ibc.applications.transfer.v1.Msg", "Transfer", data);
        return promise.then((data2) => exports.MsgTransferResponse.decode(new _m0.Reader(data2)));
      }
    };
    exports.MsgClientImpl = MsgClientImpl;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/ibc/aminomessages.js
var require_aminomessages8 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/ibc/aminomessages.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createIbcAminoConverters = exports.isAminoMsgTransfer = void 0;
    var tx_1 = require_tx7();
    var long_1 = __importDefault(require_long());
    function isAminoMsgTransfer(msg) {
      return msg.type === "cosmos-sdk/MsgTransfer";
    }
    exports.isAminoMsgTransfer = isAminoMsgTransfer;
    function omitDefault(input) {
      if (typeof input === "string") {
        return input === "" ? void 0 : input;
      }
      if (typeof input === "number") {
        return input === 0 ? void 0 : input;
      }
      if (long_1.default.isLong(input)) {
        return input.isZero() ? void 0 : input;
      }
      throw new Error(`Got unsupported type '${typeof input}'`);
    }
    function createIbcAminoConverters() {
      return {
        "/ibc.applications.transfer.v1.MsgTransfer": {
          aminoType: "cosmos-sdk/MsgTransfer",
          toAmino: ({ sourcePort, sourceChannel, token, sender, receiver, timeoutHeight, timeoutTimestamp }) => {
            var _a, _b, _c;
            return {
              source_port: sourcePort,
              source_channel: sourceChannel,
              token,
              sender,
              receiver,
              timeout_height: timeoutHeight ? {
                revision_height: (_a = omitDefault(timeoutHeight.revisionHeight)) == null ? void 0 : _a.toString(),
                revision_number: (_b = omitDefault(timeoutHeight.revisionNumber)) == null ? void 0 : _b.toString()
              } : {},
              timeout_timestamp: (_c = omitDefault(timeoutTimestamp)) == null ? void 0 : _c.toString()
            };
          },
          fromAmino: ({ source_port, source_channel, token, sender, receiver, timeout_height, timeout_timestamp }) => tx_1.MsgTransfer.fromPartial({
            sourcePort: source_port,
            sourceChannel: source_channel,
            token,
            sender,
            receiver,
            timeoutHeight: timeout_height ? {
              revisionHeight: long_1.default.fromString(timeout_height.revision_height || "0", true),
              revisionNumber: long_1.default.fromString(timeout_height.revision_number || "0", true)
            } : void 0,
            timeoutTimestamp: long_1.default.fromString(timeout_timestamp || "0", true)
          })
        }
      };
    }
    exports.createIbcAminoConverters = createIbcAminoConverters;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/ibc/core/channel/v1/channel.js
var require_channel = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/ibc/core/channel/v1/channel.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Acknowledgement = exports.PacketId = exports.PacketState = exports.Packet = exports.Counterparty = exports.IdentifiedChannel = exports.Channel = exports.orderToJSON = exports.orderFromJSON = exports.Order = exports.stateToJSON = exports.stateFromJSON = exports.State = exports.protobufPackage = void 0;
    var client_1 = require_client();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "ibc.core.channel.v1";
    var State;
    (function(State2) {
      State2[State2["STATE_UNINITIALIZED_UNSPECIFIED"] = 0] = "STATE_UNINITIALIZED_UNSPECIFIED";
      State2[State2["STATE_INIT"] = 1] = "STATE_INIT";
      State2[State2["STATE_TRYOPEN"] = 2] = "STATE_TRYOPEN";
      State2[State2["STATE_OPEN"] = 3] = "STATE_OPEN";
      State2[State2["STATE_CLOSED"] = 4] = "STATE_CLOSED";
      State2[State2["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
    })(State = exports.State || (exports.State = {}));
    function stateFromJSON(object) {
      switch (object) {
        case 0:
        case "STATE_UNINITIALIZED_UNSPECIFIED":
          return State.STATE_UNINITIALIZED_UNSPECIFIED;
        case 1:
        case "STATE_INIT":
          return State.STATE_INIT;
        case 2:
        case "STATE_TRYOPEN":
          return State.STATE_TRYOPEN;
        case 3:
        case "STATE_OPEN":
          return State.STATE_OPEN;
        case 4:
        case "STATE_CLOSED":
          return State.STATE_CLOSED;
        case -1:
        case "UNRECOGNIZED":
        default:
          return State.UNRECOGNIZED;
      }
    }
    exports.stateFromJSON = stateFromJSON;
    function stateToJSON(object) {
      switch (object) {
        case State.STATE_UNINITIALIZED_UNSPECIFIED:
          return "STATE_UNINITIALIZED_UNSPECIFIED";
        case State.STATE_INIT:
          return "STATE_INIT";
        case State.STATE_TRYOPEN:
          return "STATE_TRYOPEN";
        case State.STATE_OPEN:
          return "STATE_OPEN";
        case State.STATE_CLOSED:
          return "STATE_CLOSED";
        case State.UNRECOGNIZED:
        default:
          return "UNRECOGNIZED";
      }
    }
    exports.stateToJSON = stateToJSON;
    var Order;
    (function(Order2) {
      Order2[Order2["ORDER_NONE_UNSPECIFIED"] = 0] = "ORDER_NONE_UNSPECIFIED";
      Order2[Order2["ORDER_UNORDERED"] = 1] = "ORDER_UNORDERED";
      Order2[Order2["ORDER_ORDERED"] = 2] = "ORDER_ORDERED";
      Order2[Order2["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
    })(Order = exports.Order || (exports.Order = {}));
    function orderFromJSON(object) {
      switch (object) {
        case 0:
        case "ORDER_NONE_UNSPECIFIED":
          return Order.ORDER_NONE_UNSPECIFIED;
        case 1:
        case "ORDER_UNORDERED":
          return Order.ORDER_UNORDERED;
        case 2:
        case "ORDER_ORDERED":
          return Order.ORDER_ORDERED;
        case -1:
        case "UNRECOGNIZED":
        default:
          return Order.UNRECOGNIZED;
      }
    }
    exports.orderFromJSON = orderFromJSON;
    function orderToJSON(object) {
      switch (object) {
        case Order.ORDER_NONE_UNSPECIFIED:
          return "ORDER_NONE_UNSPECIFIED";
        case Order.ORDER_UNORDERED:
          return "ORDER_UNORDERED";
        case Order.ORDER_ORDERED:
          return "ORDER_ORDERED";
        case Order.UNRECOGNIZED:
        default:
          return "UNRECOGNIZED";
      }
    }
    exports.orderToJSON = orderToJSON;
    function createBaseChannel() {
      return {
        state: 0,
        ordering: 0,
        counterparty: void 0,
        connectionHops: [],
        version: ""
      };
    }
    exports.Channel = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.state !== 0) {
          writer.uint32(8).int32(message.state);
        }
        if (message.ordering !== 0) {
          writer.uint32(16).int32(message.ordering);
        }
        if (message.counterparty !== void 0) {
          exports.Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();
        }
        for (const v3 of message.connectionHops) {
          writer.uint32(34).string(v3);
        }
        if (message.version !== "") {
          writer.uint32(42).string(message.version);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseChannel();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.state = reader.int32();
              break;
            case 2:
              message.ordering = reader.int32();
              break;
            case 3:
              message.counterparty = exports.Counterparty.decode(reader, reader.uint32());
              break;
            case 4:
              message.connectionHops.push(reader.string());
              break;
            case 5:
              message.version = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          state: (0, helpers_1.isSet)(object.state) ? stateFromJSON(object.state) : 0,
          ordering: (0, helpers_1.isSet)(object.ordering) ? orderFromJSON(object.ordering) : 0,
          counterparty: (0, helpers_1.isSet)(object.counterparty) ? exports.Counterparty.fromJSON(object.counterparty) : void 0,
          connectionHops: Array.isArray(object == null ? void 0 : object.connectionHops) ? object.connectionHops.map((e2) => String(e2)) : [],
          version: (0, helpers_1.isSet)(object.version) ? String(object.version) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.state !== void 0 && (obj.state = stateToJSON(message.state));
        message.ordering !== void 0 && (obj.ordering = orderToJSON(message.ordering));
        message.counterparty !== void 0 && (obj.counterparty = message.counterparty ? exports.Counterparty.toJSON(message.counterparty) : void 0);
        if (message.connectionHops) {
          obj.connectionHops = message.connectionHops.map((e2) => e2);
        } else {
          obj.connectionHops = [];
        }
        message.version !== void 0 && (obj.version = message.version);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseChannel();
        message.state = object.state ?? 0;
        message.ordering = object.ordering ?? 0;
        message.counterparty = object.counterparty !== void 0 && object.counterparty !== null ? exports.Counterparty.fromPartial(object.counterparty) : void 0;
        message.connectionHops = ((_a = object.connectionHops) == null ? void 0 : _a.map((e2) => e2)) || [];
        message.version = object.version ?? "";
        return message;
      }
    };
    function createBaseIdentifiedChannel() {
      return {
        state: 0,
        ordering: 0,
        counterparty: void 0,
        connectionHops: [],
        version: "",
        portId: "",
        channelId: ""
      };
    }
    exports.IdentifiedChannel = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.state !== 0) {
          writer.uint32(8).int32(message.state);
        }
        if (message.ordering !== 0) {
          writer.uint32(16).int32(message.ordering);
        }
        if (message.counterparty !== void 0) {
          exports.Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();
        }
        for (const v3 of message.connectionHops) {
          writer.uint32(34).string(v3);
        }
        if (message.version !== "") {
          writer.uint32(42).string(message.version);
        }
        if (message.portId !== "") {
          writer.uint32(50).string(message.portId);
        }
        if (message.channelId !== "") {
          writer.uint32(58).string(message.channelId);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseIdentifiedChannel();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.state = reader.int32();
              break;
            case 2:
              message.ordering = reader.int32();
              break;
            case 3:
              message.counterparty = exports.Counterparty.decode(reader, reader.uint32());
              break;
            case 4:
              message.connectionHops.push(reader.string());
              break;
            case 5:
              message.version = reader.string();
              break;
            case 6:
              message.portId = reader.string();
              break;
            case 7:
              message.channelId = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          state: (0, helpers_1.isSet)(object.state) ? stateFromJSON(object.state) : 0,
          ordering: (0, helpers_1.isSet)(object.ordering) ? orderFromJSON(object.ordering) : 0,
          counterparty: (0, helpers_1.isSet)(object.counterparty) ? exports.Counterparty.fromJSON(object.counterparty) : void 0,
          connectionHops: Array.isArray(object == null ? void 0 : object.connectionHops) ? object.connectionHops.map((e2) => String(e2)) : [],
          version: (0, helpers_1.isSet)(object.version) ? String(object.version) : "",
          portId: (0, helpers_1.isSet)(object.portId) ? String(object.portId) : "",
          channelId: (0, helpers_1.isSet)(object.channelId) ? String(object.channelId) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.state !== void 0 && (obj.state = stateToJSON(message.state));
        message.ordering !== void 0 && (obj.ordering = orderToJSON(message.ordering));
        message.counterparty !== void 0 && (obj.counterparty = message.counterparty ? exports.Counterparty.toJSON(message.counterparty) : void 0);
        if (message.connectionHops) {
          obj.connectionHops = message.connectionHops.map((e2) => e2);
        } else {
          obj.connectionHops = [];
        }
        message.version !== void 0 && (obj.version = message.version);
        message.portId !== void 0 && (obj.portId = message.portId);
        message.channelId !== void 0 && (obj.channelId = message.channelId);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseIdentifiedChannel();
        message.state = object.state ?? 0;
        message.ordering = object.ordering ?? 0;
        message.counterparty = object.counterparty !== void 0 && object.counterparty !== null ? exports.Counterparty.fromPartial(object.counterparty) : void 0;
        message.connectionHops = ((_a = object.connectionHops) == null ? void 0 : _a.map((e2) => e2)) || [];
        message.version = object.version ?? "";
        message.portId = object.portId ?? "";
        message.channelId = object.channelId ?? "";
        return message;
      }
    };
    function createBaseCounterparty() {
      return {
        portId: "",
        channelId: ""
      };
    }
    exports.Counterparty = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.portId !== "") {
          writer.uint32(10).string(message.portId);
        }
        if (message.channelId !== "") {
          writer.uint32(18).string(message.channelId);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseCounterparty();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.portId = reader.string();
              break;
            case 2:
              message.channelId = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          portId: (0, helpers_1.isSet)(object.portId) ? String(object.portId) : "",
          channelId: (0, helpers_1.isSet)(object.channelId) ? String(object.channelId) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.portId !== void 0 && (obj.portId = message.portId);
        message.channelId !== void 0 && (obj.channelId = message.channelId);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseCounterparty();
        message.portId = object.portId ?? "";
        message.channelId = object.channelId ?? "";
        return message;
      }
    };
    function createBasePacket() {
      return {
        sequence: helpers_1.Long.UZERO,
        sourcePort: "",
        sourceChannel: "",
        destinationPort: "",
        destinationChannel: "",
        data: new Uint8Array(),
        timeoutHeight: void 0,
        timeoutTimestamp: helpers_1.Long.UZERO
      };
    }
    exports.Packet = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.sequence.isZero()) {
          writer.uint32(8).uint64(message.sequence);
        }
        if (message.sourcePort !== "") {
          writer.uint32(18).string(message.sourcePort);
        }
        if (message.sourceChannel !== "") {
          writer.uint32(26).string(message.sourceChannel);
        }
        if (message.destinationPort !== "") {
          writer.uint32(34).string(message.destinationPort);
        }
        if (message.destinationChannel !== "") {
          writer.uint32(42).string(message.destinationChannel);
        }
        if (message.data.length !== 0) {
          writer.uint32(50).bytes(message.data);
        }
        if (message.timeoutHeight !== void 0) {
          client_1.Height.encode(message.timeoutHeight, writer.uint32(58).fork()).ldelim();
        }
        if (!message.timeoutTimestamp.isZero()) {
          writer.uint32(64).uint64(message.timeoutTimestamp);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBasePacket();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.sequence = reader.uint64();
              break;
            case 2:
              message.sourcePort = reader.string();
              break;
            case 3:
              message.sourceChannel = reader.string();
              break;
            case 4:
              message.destinationPort = reader.string();
              break;
            case 5:
              message.destinationChannel = reader.string();
              break;
            case 6:
              message.data = reader.bytes();
              break;
            case 7:
              message.timeoutHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            case 8:
              message.timeoutTimestamp = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          sequence: (0, helpers_1.isSet)(object.sequence) ? helpers_1.Long.fromValue(object.sequence) : helpers_1.Long.UZERO,
          sourcePort: (0, helpers_1.isSet)(object.sourcePort) ? String(object.sourcePort) : "",
          sourceChannel: (0, helpers_1.isSet)(object.sourceChannel) ? String(object.sourceChannel) : "",
          destinationPort: (0, helpers_1.isSet)(object.destinationPort) ? String(object.destinationPort) : "",
          destinationChannel: (0, helpers_1.isSet)(object.destinationChannel) ? String(object.destinationChannel) : "",
          data: (0, helpers_1.isSet)(object.data) ? (0, helpers_1.bytesFromBase64)(object.data) : new Uint8Array(),
          timeoutHeight: (0, helpers_1.isSet)(object.timeoutHeight) ? client_1.Height.fromJSON(object.timeoutHeight) : void 0,
          timeoutTimestamp: (0, helpers_1.isSet)(object.timeoutTimestamp) ? helpers_1.Long.fromValue(object.timeoutTimestamp) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.sequence !== void 0 && (obj.sequence = (message.sequence || helpers_1.Long.UZERO).toString());
        message.sourcePort !== void 0 && (obj.sourcePort = message.sourcePort);
        message.sourceChannel !== void 0 && (obj.sourceChannel = message.sourceChannel);
        message.destinationPort !== void 0 && (obj.destinationPort = message.destinationPort);
        message.destinationChannel !== void 0 && (obj.destinationChannel = message.destinationChannel);
        message.data !== void 0 && (obj.data = (0, helpers_1.base64FromBytes)(message.data !== void 0 ? message.data : new Uint8Array()));
        message.timeoutHeight !== void 0 && (obj.timeoutHeight = message.timeoutHeight ? client_1.Height.toJSON(message.timeoutHeight) : void 0);
        message.timeoutTimestamp !== void 0 && (obj.timeoutTimestamp = (message.timeoutTimestamp || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBasePacket();
        message.sequence = object.sequence !== void 0 && object.sequence !== null ? helpers_1.Long.fromValue(object.sequence) : helpers_1.Long.UZERO;
        message.sourcePort = object.sourcePort ?? "";
        message.sourceChannel = object.sourceChannel ?? "";
        message.destinationPort = object.destinationPort ?? "";
        message.destinationChannel = object.destinationChannel ?? "";
        message.data = object.data ?? new Uint8Array();
        message.timeoutHeight = object.timeoutHeight !== void 0 && object.timeoutHeight !== null ? client_1.Height.fromPartial(object.timeoutHeight) : void 0;
        message.timeoutTimestamp = object.timeoutTimestamp !== void 0 && object.timeoutTimestamp !== null ? helpers_1.Long.fromValue(object.timeoutTimestamp) : helpers_1.Long.UZERO;
        return message;
      }
    };
    function createBasePacketState() {
      return {
        portId: "",
        channelId: "",
        sequence: helpers_1.Long.UZERO,
        data: new Uint8Array()
      };
    }
    exports.PacketState = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.portId !== "") {
          writer.uint32(10).string(message.portId);
        }
        if (message.channelId !== "") {
          writer.uint32(18).string(message.channelId);
        }
        if (!message.sequence.isZero()) {
          writer.uint32(24).uint64(message.sequence);
        }
        if (message.data.length !== 0) {
          writer.uint32(34).bytes(message.data);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBasePacketState();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.portId = reader.string();
              break;
            case 2:
              message.channelId = reader.string();
              break;
            case 3:
              message.sequence = reader.uint64();
              break;
            case 4:
              message.data = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          portId: (0, helpers_1.isSet)(object.portId) ? String(object.portId) : "",
          channelId: (0, helpers_1.isSet)(object.channelId) ? String(object.channelId) : "",
          sequence: (0, helpers_1.isSet)(object.sequence) ? helpers_1.Long.fromValue(object.sequence) : helpers_1.Long.UZERO,
          data: (0, helpers_1.isSet)(object.data) ? (0, helpers_1.bytesFromBase64)(object.data) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.portId !== void 0 && (obj.portId = message.portId);
        message.channelId !== void 0 && (obj.channelId = message.channelId);
        message.sequence !== void 0 && (obj.sequence = (message.sequence || helpers_1.Long.UZERO).toString());
        message.data !== void 0 && (obj.data = (0, helpers_1.base64FromBytes)(message.data !== void 0 ? message.data : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBasePacketState();
        message.portId = object.portId ?? "";
        message.channelId = object.channelId ?? "";
        message.sequence = object.sequence !== void 0 && object.sequence !== null ? helpers_1.Long.fromValue(object.sequence) : helpers_1.Long.UZERO;
        message.data = object.data ?? new Uint8Array();
        return message;
      }
    };
    function createBasePacketId() {
      return {
        portId: "",
        channelId: "",
        sequence: helpers_1.Long.UZERO
      };
    }
    exports.PacketId = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.portId !== "") {
          writer.uint32(10).string(message.portId);
        }
        if (message.channelId !== "") {
          writer.uint32(18).string(message.channelId);
        }
        if (!message.sequence.isZero()) {
          writer.uint32(24).uint64(message.sequence);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBasePacketId();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.portId = reader.string();
              break;
            case 2:
              message.channelId = reader.string();
              break;
            case 3:
              message.sequence = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          portId: (0, helpers_1.isSet)(object.portId) ? String(object.portId) : "",
          channelId: (0, helpers_1.isSet)(object.channelId) ? String(object.channelId) : "",
          sequence: (0, helpers_1.isSet)(object.sequence) ? helpers_1.Long.fromValue(object.sequence) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.portId !== void 0 && (obj.portId = message.portId);
        message.channelId !== void 0 && (obj.channelId = message.channelId);
        message.sequence !== void 0 && (obj.sequence = (message.sequence || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBasePacketId();
        message.portId = object.portId ?? "";
        message.channelId = object.channelId ?? "";
        message.sequence = object.sequence !== void 0 && object.sequence !== null ? helpers_1.Long.fromValue(object.sequence) : helpers_1.Long.UZERO;
        return message;
      }
    };
    function createBaseAcknowledgement() {
      return {
        result: void 0,
        error: void 0
      };
    }
    exports.Acknowledgement = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.result !== void 0) {
          writer.uint32(170).bytes(message.result);
        }
        if (message.error !== void 0) {
          writer.uint32(178).string(message.error);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseAcknowledgement();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 21:
              message.result = reader.bytes();
              break;
            case 22:
              message.error = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          result: (0, helpers_1.isSet)(object.result) ? (0, helpers_1.bytesFromBase64)(object.result) : void 0,
          error: (0, helpers_1.isSet)(object.error) ? String(object.error) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.result !== void 0 && (obj.result = message.result !== void 0 ? (0, helpers_1.base64FromBytes)(message.result) : void 0);
        message.error !== void 0 && (obj.error = message.error);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseAcknowledgement();
        message.result = object.result ?? void 0;
        message.error = object.error ?? void 0;
        return message;
      }
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/ibc/core/channel/v1/tx.js
var require_tx8 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/ibc/core/channel/v1/tx.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.MsgClientImpl = exports.MsgAcknowledgementResponse = exports.MsgAcknowledgement = exports.MsgTimeoutOnCloseResponse = exports.MsgTimeoutOnClose = exports.MsgTimeoutResponse = exports.MsgTimeout = exports.MsgRecvPacketResponse = exports.MsgRecvPacket = exports.MsgChannelCloseConfirmResponse = exports.MsgChannelCloseConfirm = exports.MsgChannelCloseInitResponse = exports.MsgChannelCloseInit = exports.MsgChannelOpenConfirmResponse = exports.MsgChannelOpenConfirm = exports.MsgChannelOpenAckResponse = exports.MsgChannelOpenAck = exports.MsgChannelOpenTryResponse = exports.MsgChannelOpenTry = exports.MsgChannelOpenInitResponse = exports.MsgChannelOpenInit = exports.responseResultTypeToJSON = exports.responseResultTypeFromJSON = exports.ResponseResultType = exports.protobufPackage = void 0;
    var channel_1 = require_channel();
    var client_1 = require_client();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "ibc.core.channel.v1";
    var ResponseResultType;
    (function(ResponseResultType2) {
      ResponseResultType2[ResponseResultType2["RESPONSE_RESULT_TYPE_UNSPECIFIED"] = 0] = "RESPONSE_RESULT_TYPE_UNSPECIFIED";
      ResponseResultType2[ResponseResultType2["RESPONSE_RESULT_TYPE_NOOP"] = 1] = "RESPONSE_RESULT_TYPE_NOOP";
      ResponseResultType2[ResponseResultType2["RESPONSE_RESULT_TYPE_SUCCESS"] = 2] = "RESPONSE_RESULT_TYPE_SUCCESS";
      ResponseResultType2[ResponseResultType2["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
    })(ResponseResultType = exports.ResponseResultType || (exports.ResponseResultType = {}));
    function responseResultTypeFromJSON(object) {
      switch (object) {
        case 0:
        case "RESPONSE_RESULT_TYPE_UNSPECIFIED":
          return ResponseResultType.RESPONSE_RESULT_TYPE_UNSPECIFIED;
        case 1:
        case "RESPONSE_RESULT_TYPE_NOOP":
          return ResponseResultType.RESPONSE_RESULT_TYPE_NOOP;
        case 2:
        case "RESPONSE_RESULT_TYPE_SUCCESS":
          return ResponseResultType.RESPONSE_RESULT_TYPE_SUCCESS;
        case -1:
        case "UNRECOGNIZED":
        default:
          return ResponseResultType.UNRECOGNIZED;
      }
    }
    exports.responseResultTypeFromJSON = responseResultTypeFromJSON;
    function responseResultTypeToJSON(object) {
      switch (object) {
        case ResponseResultType.RESPONSE_RESULT_TYPE_UNSPECIFIED:
          return "RESPONSE_RESULT_TYPE_UNSPECIFIED";
        case ResponseResultType.RESPONSE_RESULT_TYPE_NOOP:
          return "RESPONSE_RESULT_TYPE_NOOP";
        case ResponseResultType.RESPONSE_RESULT_TYPE_SUCCESS:
          return "RESPONSE_RESULT_TYPE_SUCCESS";
        case ResponseResultType.UNRECOGNIZED:
        default:
          return "UNRECOGNIZED";
      }
    }
    exports.responseResultTypeToJSON = responseResultTypeToJSON;
    function createBaseMsgChannelOpenInit() {
      return {
        portId: "",
        channel: void 0,
        signer: ""
      };
    }
    exports.MsgChannelOpenInit = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.portId !== "") {
          writer.uint32(10).string(message.portId);
        }
        if (message.channel !== void 0) {
          channel_1.Channel.encode(message.channel, writer.uint32(18).fork()).ldelim();
        }
        if (message.signer !== "") {
          writer.uint32(26).string(message.signer);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgChannelOpenInit();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.portId = reader.string();
              break;
            case 2:
              message.channel = channel_1.Channel.decode(reader, reader.uint32());
              break;
            case 3:
              message.signer = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          portId: (0, helpers_1.isSet)(object.portId) ? String(object.portId) : "",
          channel: (0, helpers_1.isSet)(object.channel) ? channel_1.Channel.fromJSON(object.channel) : void 0,
          signer: (0, helpers_1.isSet)(object.signer) ? String(object.signer) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.portId !== void 0 && (obj.portId = message.portId);
        message.channel !== void 0 && (obj.channel = message.channel ? channel_1.Channel.toJSON(message.channel) : void 0);
        message.signer !== void 0 && (obj.signer = message.signer);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgChannelOpenInit();
        message.portId = object.portId ?? "";
        message.channel = object.channel !== void 0 && object.channel !== null ? channel_1.Channel.fromPartial(object.channel) : void 0;
        message.signer = object.signer ?? "";
        return message;
      }
    };
    function createBaseMsgChannelOpenInitResponse() {
      return {
        channelId: "",
        version: ""
      };
    }
    exports.MsgChannelOpenInitResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.channelId !== "") {
          writer.uint32(10).string(message.channelId);
        }
        if (message.version !== "") {
          writer.uint32(18).string(message.version);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgChannelOpenInitResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.channelId = reader.string();
              break;
            case 2:
              message.version = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          channelId: (0, helpers_1.isSet)(object.channelId) ? String(object.channelId) : "",
          version: (0, helpers_1.isSet)(object.version) ? String(object.version) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.channelId !== void 0 && (obj.channelId = message.channelId);
        message.version !== void 0 && (obj.version = message.version);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgChannelOpenInitResponse();
        message.channelId = object.channelId ?? "";
        message.version = object.version ?? "";
        return message;
      }
    };
    function createBaseMsgChannelOpenTry() {
      return {
        portId: "",
        previousChannelId: "",
        channel: void 0,
        counterpartyVersion: "",
        proofInit: new Uint8Array(),
        proofHeight: void 0,
        signer: ""
      };
    }
    exports.MsgChannelOpenTry = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.portId !== "") {
          writer.uint32(10).string(message.portId);
        }
        if (message.previousChannelId !== "") {
          writer.uint32(18).string(message.previousChannelId);
        }
        if (message.channel !== void 0) {
          channel_1.Channel.encode(message.channel, writer.uint32(26).fork()).ldelim();
        }
        if (message.counterpartyVersion !== "") {
          writer.uint32(34).string(message.counterpartyVersion);
        }
        if (message.proofInit.length !== 0) {
          writer.uint32(42).bytes(message.proofInit);
        }
        if (message.proofHeight !== void 0) {
          client_1.Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();
        }
        if (message.signer !== "") {
          writer.uint32(58).string(message.signer);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgChannelOpenTry();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.portId = reader.string();
              break;
            case 2:
              message.previousChannelId = reader.string();
              break;
            case 3:
              message.channel = channel_1.Channel.decode(reader, reader.uint32());
              break;
            case 4:
              message.counterpartyVersion = reader.string();
              break;
            case 5:
              message.proofInit = reader.bytes();
              break;
            case 6:
              message.proofHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            case 7:
              message.signer = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          portId: (0, helpers_1.isSet)(object.portId) ? String(object.portId) : "",
          previousChannelId: (0, helpers_1.isSet)(object.previousChannelId) ? String(object.previousChannelId) : "",
          channel: (0, helpers_1.isSet)(object.channel) ? channel_1.Channel.fromJSON(object.channel) : void 0,
          counterpartyVersion: (0, helpers_1.isSet)(object.counterpartyVersion) ? String(object.counterpartyVersion) : "",
          proofInit: (0, helpers_1.isSet)(object.proofInit) ? (0, helpers_1.bytesFromBase64)(object.proofInit) : new Uint8Array(),
          proofHeight: (0, helpers_1.isSet)(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : void 0,
          signer: (0, helpers_1.isSet)(object.signer) ? String(object.signer) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.portId !== void 0 && (obj.portId = message.portId);
        message.previousChannelId !== void 0 && (obj.previousChannelId = message.previousChannelId);
        message.channel !== void 0 && (obj.channel = message.channel ? channel_1.Channel.toJSON(message.channel) : void 0);
        message.counterpartyVersion !== void 0 && (obj.counterpartyVersion = message.counterpartyVersion);
        message.proofInit !== void 0 && (obj.proofInit = (0, helpers_1.base64FromBytes)(message.proofInit !== void 0 ? message.proofInit : new Uint8Array()));
        message.proofHeight !== void 0 && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : void 0);
        message.signer !== void 0 && (obj.signer = message.signer);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgChannelOpenTry();
        message.portId = object.portId ?? "";
        message.previousChannelId = object.previousChannelId ?? "";
        message.channel = object.channel !== void 0 && object.channel !== null ? channel_1.Channel.fromPartial(object.channel) : void 0;
        message.counterpartyVersion = object.counterpartyVersion ?? "";
        message.proofInit = object.proofInit ?? new Uint8Array();
        message.proofHeight = object.proofHeight !== void 0 && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : void 0;
        message.signer = object.signer ?? "";
        return message;
      }
    };
    function createBaseMsgChannelOpenTryResponse() {
      return {
        version: ""
      };
    }
    exports.MsgChannelOpenTryResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.version !== "") {
          writer.uint32(10).string(message.version);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgChannelOpenTryResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.version = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          version: (0, helpers_1.isSet)(object.version) ? String(object.version) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.version !== void 0 && (obj.version = message.version);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgChannelOpenTryResponse();
        message.version = object.version ?? "";
        return message;
      }
    };
    function createBaseMsgChannelOpenAck() {
      return {
        portId: "",
        channelId: "",
        counterpartyChannelId: "",
        counterpartyVersion: "",
        proofTry: new Uint8Array(),
        proofHeight: void 0,
        signer: ""
      };
    }
    exports.MsgChannelOpenAck = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.portId !== "") {
          writer.uint32(10).string(message.portId);
        }
        if (message.channelId !== "") {
          writer.uint32(18).string(message.channelId);
        }
        if (message.counterpartyChannelId !== "") {
          writer.uint32(26).string(message.counterpartyChannelId);
        }
        if (message.counterpartyVersion !== "") {
          writer.uint32(34).string(message.counterpartyVersion);
        }
        if (message.proofTry.length !== 0) {
          writer.uint32(42).bytes(message.proofTry);
        }
        if (message.proofHeight !== void 0) {
          client_1.Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();
        }
        if (message.signer !== "") {
          writer.uint32(58).string(message.signer);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgChannelOpenAck();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.portId = reader.string();
              break;
            case 2:
              message.channelId = reader.string();
              break;
            case 3:
              message.counterpartyChannelId = reader.string();
              break;
            case 4:
              message.counterpartyVersion = reader.string();
              break;
            case 5:
              message.proofTry = reader.bytes();
              break;
            case 6:
              message.proofHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            case 7:
              message.signer = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          portId: (0, helpers_1.isSet)(object.portId) ? String(object.portId) : "",
          channelId: (0, helpers_1.isSet)(object.channelId) ? String(object.channelId) : "",
          counterpartyChannelId: (0, helpers_1.isSet)(object.counterpartyChannelId) ? String(object.counterpartyChannelId) : "",
          counterpartyVersion: (0, helpers_1.isSet)(object.counterpartyVersion) ? String(object.counterpartyVersion) : "",
          proofTry: (0, helpers_1.isSet)(object.proofTry) ? (0, helpers_1.bytesFromBase64)(object.proofTry) : new Uint8Array(),
          proofHeight: (0, helpers_1.isSet)(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : void 0,
          signer: (0, helpers_1.isSet)(object.signer) ? String(object.signer) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.portId !== void 0 && (obj.portId = message.portId);
        message.channelId !== void 0 && (obj.channelId = message.channelId);
        message.counterpartyChannelId !== void 0 && (obj.counterpartyChannelId = message.counterpartyChannelId);
        message.counterpartyVersion !== void 0 && (obj.counterpartyVersion = message.counterpartyVersion);
        message.proofTry !== void 0 && (obj.proofTry = (0, helpers_1.base64FromBytes)(message.proofTry !== void 0 ? message.proofTry : new Uint8Array()));
        message.proofHeight !== void 0 && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : void 0);
        message.signer !== void 0 && (obj.signer = message.signer);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgChannelOpenAck();
        message.portId = object.portId ?? "";
        message.channelId = object.channelId ?? "";
        message.counterpartyChannelId = object.counterpartyChannelId ?? "";
        message.counterpartyVersion = object.counterpartyVersion ?? "";
        message.proofTry = object.proofTry ?? new Uint8Array();
        message.proofHeight = object.proofHeight !== void 0 && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : void 0;
        message.signer = object.signer ?? "";
        return message;
      }
    };
    function createBaseMsgChannelOpenAckResponse() {
      return {};
    }
    exports.MsgChannelOpenAckResponse = {
      encode(_3, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgChannelOpenAckResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_3) {
        return {};
      },
      toJSON(_3) {
        const obj = {};
        return obj;
      },
      fromPartial(_3) {
        const message = createBaseMsgChannelOpenAckResponse();
        return message;
      }
    };
    function createBaseMsgChannelOpenConfirm() {
      return {
        portId: "",
        channelId: "",
        proofAck: new Uint8Array(),
        proofHeight: void 0,
        signer: ""
      };
    }
    exports.MsgChannelOpenConfirm = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.portId !== "") {
          writer.uint32(10).string(message.portId);
        }
        if (message.channelId !== "") {
          writer.uint32(18).string(message.channelId);
        }
        if (message.proofAck.length !== 0) {
          writer.uint32(26).bytes(message.proofAck);
        }
        if (message.proofHeight !== void 0) {
          client_1.Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();
        }
        if (message.signer !== "") {
          writer.uint32(42).string(message.signer);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgChannelOpenConfirm();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.portId = reader.string();
              break;
            case 2:
              message.channelId = reader.string();
              break;
            case 3:
              message.proofAck = reader.bytes();
              break;
            case 4:
              message.proofHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            case 5:
              message.signer = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          portId: (0, helpers_1.isSet)(object.portId) ? String(object.portId) : "",
          channelId: (0, helpers_1.isSet)(object.channelId) ? String(object.channelId) : "",
          proofAck: (0, helpers_1.isSet)(object.proofAck) ? (0, helpers_1.bytesFromBase64)(object.proofAck) : new Uint8Array(),
          proofHeight: (0, helpers_1.isSet)(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : void 0,
          signer: (0, helpers_1.isSet)(object.signer) ? String(object.signer) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.portId !== void 0 && (obj.portId = message.portId);
        message.channelId !== void 0 && (obj.channelId = message.channelId);
        message.proofAck !== void 0 && (obj.proofAck = (0, helpers_1.base64FromBytes)(message.proofAck !== void 0 ? message.proofAck : new Uint8Array()));
        message.proofHeight !== void 0 && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : void 0);
        message.signer !== void 0 && (obj.signer = message.signer);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgChannelOpenConfirm();
        message.portId = object.portId ?? "";
        message.channelId = object.channelId ?? "";
        message.proofAck = object.proofAck ?? new Uint8Array();
        message.proofHeight = object.proofHeight !== void 0 && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : void 0;
        message.signer = object.signer ?? "";
        return message;
      }
    };
    function createBaseMsgChannelOpenConfirmResponse() {
      return {};
    }
    exports.MsgChannelOpenConfirmResponse = {
      encode(_3, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgChannelOpenConfirmResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_3) {
        return {};
      },
      toJSON(_3) {
        const obj = {};
        return obj;
      },
      fromPartial(_3) {
        const message = createBaseMsgChannelOpenConfirmResponse();
        return message;
      }
    };
    function createBaseMsgChannelCloseInit() {
      return {
        portId: "",
        channelId: "",
        signer: ""
      };
    }
    exports.MsgChannelCloseInit = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.portId !== "") {
          writer.uint32(10).string(message.portId);
        }
        if (message.channelId !== "") {
          writer.uint32(18).string(message.channelId);
        }
        if (message.signer !== "") {
          writer.uint32(26).string(message.signer);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgChannelCloseInit();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.portId = reader.string();
              break;
            case 2:
              message.channelId = reader.string();
              break;
            case 3:
              message.signer = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          portId: (0, helpers_1.isSet)(object.portId) ? String(object.portId) : "",
          channelId: (0, helpers_1.isSet)(object.channelId) ? String(object.channelId) : "",
          signer: (0, helpers_1.isSet)(object.signer) ? String(object.signer) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.portId !== void 0 && (obj.portId = message.portId);
        message.channelId !== void 0 && (obj.channelId = message.channelId);
        message.signer !== void 0 && (obj.signer = message.signer);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgChannelCloseInit();
        message.portId = object.portId ?? "";
        message.channelId = object.channelId ?? "";
        message.signer = object.signer ?? "";
        return message;
      }
    };
    function createBaseMsgChannelCloseInitResponse() {
      return {};
    }
    exports.MsgChannelCloseInitResponse = {
      encode(_3, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgChannelCloseInitResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_3) {
        return {};
      },
      toJSON(_3) {
        const obj = {};
        return obj;
      },
      fromPartial(_3) {
        const message = createBaseMsgChannelCloseInitResponse();
        return message;
      }
    };
    function createBaseMsgChannelCloseConfirm() {
      return {
        portId: "",
        channelId: "",
        proofInit: new Uint8Array(),
        proofHeight: void 0,
        signer: ""
      };
    }
    exports.MsgChannelCloseConfirm = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.portId !== "") {
          writer.uint32(10).string(message.portId);
        }
        if (message.channelId !== "") {
          writer.uint32(18).string(message.channelId);
        }
        if (message.proofInit.length !== 0) {
          writer.uint32(26).bytes(message.proofInit);
        }
        if (message.proofHeight !== void 0) {
          client_1.Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();
        }
        if (message.signer !== "") {
          writer.uint32(42).string(message.signer);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgChannelCloseConfirm();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.portId = reader.string();
              break;
            case 2:
              message.channelId = reader.string();
              break;
            case 3:
              message.proofInit = reader.bytes();
              break;
            case 4:
              message.proofHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            case 5:
              message.signer = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          portId: (0, helpers_1.isSet)(object.portId) ? String(object.portId) : "",
          channelId: (0, helpers_1.isSet)(object.channelId) ? String(object.channelId) : "",
          proofInit: (0, helpers_1.isSet)(object.proofInit) ? (0, helpers_1.bytesFromBase64)(object.proofInit) : new Uint8Array(),
          proofHeight: (0, helpers_1.isSet)(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : void 0,
          signer: (0, helpers_1.isSet)(object.signer) ? String(object.signer) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.portId !== void 0 && (obj.portId = message.portId);
        message.channelId !== void 0 && (obj.channelId = message.channelId);
        message.proofInit !== void 0 && (obj.proofInit = (0, helpers_1.base64FromBytes)(message.proofInit !== void 0 ? message.proofInit : new Uint8Array()));
        message.proofHeight !== void 0 && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : void 0);
        message.signer !== void 0 && (obj.signer = message.signer);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgChannelCloseConfirm();
        message.portId = object.portId ?? "";
        message.channelId = object.channelId ?? "";
        message.proofInit = object.proofInit ?? new Uint8Array();
        message.proofHeight = object.proofHeight !== void 0 && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : void 0;
        message.signer = object.signer ?? "";
        return message;
      }
    };
    function createBaseMsgChannelCloseConfirmResponse() {
      return {};
    }
    exports.MsgChannelCloseConfirmResponse = {
      encode(_3, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgChannelCloseConfirmResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_3) {
        return {};
      },
      toJSON(_3) {
        const obj = {};
        return obj;
      },
      fromPartial(_3) {
        const message = createBaseMsgChannelCloseConfirmResponse();
        return message;
      }
    };
    function createBaseMsgRecvPacket() {
      return {
        packet: void 0,
        proofCommitment: new Uint8Array(),
        proofHeight: void 0,
        signer: ""
      };
    }
    exports.MsgRecvPacket = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.packet !== void 0) {
          channel_1.Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();
        }
        if (message.proofCommitment.length !== 0) {
          writer.uint32(18).bytes(message.proofCommitment);
        }
        if (message.proofHeight !== void 0) {
          client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();
        }
        if (message.signer !== "") {
          writer.uint32(34).string(message.signer);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgRecvPacket();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.packet = channel_1.Packet.decode(reader, reader.uint32());
              break;
            case 2:
              message.proofCommitment = reader.bytes();
              break;
            case 3:
              message.proofHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            case 4:
              message.signer = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          packet: (0, helpers_1.isSet)(object.packet) ? channel_1.Packet.fromJSON(object.packet) : void 0,
          proofCommitment: (0, helpers_1.isSet)(object.proofCommitment) ? (0, helpers_1.bytesFromBase64)(object.proofCommitment) : new Uint8Array(),
          proofHeight: (0, helpers_1.isSet)(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : void 0,
          signer: (0, helpers_1.isSet)(object.signer) ? String(object.signer) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.packet !== void 0 && (obj.packet = message.packet ? channel_1.Packet.toJSON(message.packet) : void 0);
        message.proofCommitment !== void 0 && (obj.proofCommitment = (0, helpers_1.base64FromBytes)(message.proofCommitment !== void 0 ? message.proofCommitment : new Uint8Array()));
        message.proofHeight !== void 0 && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : void 0);
        message.signer !== void 0 && (obj.signer = message.signer);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgRecvPacket();
        message.packet = object.packet !== void 0 && object.packet !== null ? channel_1.Packet.fromPartial(object.packet) : void 0;
        message.proofCommitment = object.proofCommitment ?? new Uint8Array();
        message.proofHeight = object.proofHeight !== void 0 && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : void 0;
        message.signer = object.signer ?? "";
        return message;
      }
    };
    function createBaseMsgRecvPacketResponse() {
      return {
        result: 0
      };
    }
    exports.MsgRecvPacketResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.result !== 0) {
          writer.uint32(8).int32(message.result);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgRecvPacketResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.result = reader.int32();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          result: (0, helpers_1.isSet)(object.result) ? responseResultTypeFromJSON(object.result) : 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.result !== void 0 && (obj.result = responseResultTypeToJSON(message.result));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgRecvPacketResponse();
        message.result = object.result ?? 0;
        return message;
      }
    };
    function createBaseMsgTimeout() {
      return {
        packet: void 0,
        proofUnreceived: new Uint8Array(),
        proofHeight: void 0,
        nextSequenceRecv: helpers_1.Long.UZERO,
        signer: ""
      };
    }
    exports.MsgTimeout = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.packet !== void 0) {
          channel_1.Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();
        }
        if (message.proofUnreceived.length !== 0) {
          writer.uint32(18).bytes(message.proofUnreceived);
        }
        if (message.proofHeight !== void 0) {
          client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();
        }
        if (!message.nextSequenceRecv.isZero()) {
          writer.uint32(32).uint64(message.nextSequenceRecv);
        }
        if (message.signer !== "") {
          writer.uint32(42).string(message.signer);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgTimeout();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.packet = channel_1.Packet.decode(reader, reader.uint32());
              break;
            case 2:
              message.proofUnreceived = reader.bytes();
              break;
            case 3:
              message.proofHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            case 4:
              message.nextSequenceRecv = reader.uint64();
              break;
            case 5:
              message.signer = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          packet: (0, helpers_1.isSet)(object.packet) ? channel_1.Packet.fromJSON(object.packet) : void 0,
          proofUnreceived: (0, helpers_1.isSet)(object.proofUnreceived) ? (0, helpers_1.bytesFromBase64)(object.proofUnreceived) : new Uint8Array(),
          proofHeight: (0, helpers_1.isSet)(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : void 0,
          nextSequenceRecv: (0, helpers_1.isSet)(object.nextSequenceRecv) ? helpers_1.Long.fromValue(object.nextSequenceRecv) : helpers_1.Long.UZERO,
          signer: (0, helpers_1.isSet)(object.signer) ? String(object.signer) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.packet !== void 0 && (obj.packet = message.packet ? channel_1.Packet.toJSON(message.packet) : void 0);
        message.proofUnreceived !== void 0 && (obj.proofUnreceived = (0, helpers_1.base64FromBytes)(message.proofUnreceived !== void 0 ? message.proofUnreceived : new Uint8Array()));
        message.proofHeight !== void 0 && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : void 0);
        message.nextSequenceRecv !== void 0 && (obj.nextSequenceRecv = (message.nextSequenceRecv || helpers_1.Long.UZERO).toString());
        message.signer !== void 0 && (obj.signer = message.signer);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgTimeout();
        message.packet = object.packet !== void 0 && object.packet !== null ? channel_1.Packet.fromPartial(object.packet) : void 0;
        message.proofUnreceived = object.proofUnreceived ?? new Uint8Array();
        message.proofHeight = object.proofHeight !== void 0 && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : void 0;
        message.nextSequenceRecv = object.nextSequenceRecv !== void 0 && object.nextSequenceRecv !== null ? helpers_1.Long.fromValue(object.nextSequenceRecv) : helpers_1.Long.UZERO;
        message.signer = object.signer ?? "";
        return message;
      }
    };
    function createBaseMsgTimeoutResponse() {
      return {
        result: 0
      };
    }
    exports.MsgTimeoutResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.result !== 0) {
          writer.uint32(8).int32(message.result);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgTimeoutResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.result = reader.int32();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          result: (0, helpers_1.isSet)(object.result) ? responseResultTypeFromJSON(object.result) : 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.result !== void 0 && (obj.result = responseResultTypeToJSON(message.result));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgTimeoutResponse();
        message.result = object.result ?? 0;
        return message;
      }
    };
    function createBaseMsgTimeoutOnClose() {
      return {
        packet: void 0,
        proofUnreceived: new Uint8Array(),
        proofClose: new Uint8Array(),
        proofHeight: void 0,
        nextSequenceRecv: helpers_1.Long.UZERO,
        signer: ""
      };
    }
    exports.MsgTimeoutOnClose = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.packet !== void 0) {
          channel_1.Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();
        }
        if (message.proofUnreceived.length !== 0) {
          writer.uint32(18).bytes(message.proofUnreceived);
        }
        if (message.proofClose.length !== 0) {
          writer.uint32(26).bytes(message.proofClose);
        }
        if (message.proofHeight !== void 0) {
          client_1.Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();
        }
        if (!message.nextSequenceRecv.isZero()) {
          writer.uint32(40).uint64(message.nextSequenceRecv);
        }
        if (message.signer !== "") {
          writer.uint32(50).string(message.signer);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgTimeoutOnClose();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.packet = channel_1.Packet.decode(reader, reader.uint32());
              break;
            case 2:
              message.proofUnreceived = reader.bytes();
              break;
            case 3:
              message.proofClose = reader.bytes();
              break;
            case 4:
              message.proofHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            case 5:
              message.nextSequenceRecv = reader.uint64();
              break;
            case 6:
              message.signer = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          packet: (0, helpers_1.isSet)(object.packet) ? channel_1.Packet.fromJSON(object.packet) : void 0,
          proofUnreceived: (0, helpers_1.isSet)(object.proofUnreceived) ? (0, helpers_1.bytesFromBase64)(object.proofUnreceived) : new Uint8Array(),
          proofClose: (0, helpers_1.isSet)(object.proofClose) ? (0, helpers_1.bytesFromBase64)(object.proofClose) : new Uint8Array(),
          proofHeight: (0, helpers_1.isSet)(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : void 0,
          nextSequenceRecv: (0, helpers_1.isSet)(object.nextSequenceRecv) ? helpers_1.Long.fromValue(object.nextSequenceRecv) : helpers_1.Long.UZERO,
          signer: (0, helpers_1.isSet)(object.signer) ? String(object.signer) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.packet !== void 0 && (obj.packet = message.packet ? channel_1.Packet.toJSON(message.packet) : void 0);
        message.proofUnreceived !== void 0 && (obj.proofUnreceived = (0, helpers_1.base64FromBytes)(message.proofUnreceived !== void 0 ? message.proofUnreceived : new Uint8Array()));
        message.proofClose !== void 0 && (obj.proofClose = (0, helpers_1.base64FromBytes)(message.proofClose !== void 0 ? message.proofClose : new Uint8Array()));
        message.proofHeight !== void 0 && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : void 0);
        message.nextSequenceRecv !== void 0 && (obj.nextSequenceRecv = (message.nextSequenceRecv || helpers_1.Long.UZERO).toString());
        message.signer !== void 0 && (obj.signer = message.signer);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgTimeoutOnClose();
        message.packet = object.packet !== void 0 && object.packet !== null ? channel_1.Packet.fromPartial(object.packet) : void 0;
        message.proofUnreceived = object.proofUnreceived ?? new Uint8Array();
        message.proofClose = object.proofClose ?? new Uint8Array();
        message.proofHeight = object.proofHeight !== void 0 && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : void 0;
        message.nextSequenceRecv = object.nextSequenceRecv !== void 0 && object.nextSequenceRecv !== null ? helpers_1.Long.fromValue(object.nextSequenceRecv) : helpers_1.Long.UZERO;
        message.signer = object.signer ?? "";
        return message;
      }
    };
    function createBaseMsgTimeoutOnCloseResponse() {
      return {
        result: 0
      };
    }
    exports.MsgTimeoutOnCloseResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.result !== 0) {
          writer.uint32(8).int32(message.result);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgTimeoutOnCloseResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.result = reader.int32();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          result: (0, helpers_1.isSet)(object.result) ? responseResultTypeFromJSON(object.result) : 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.result !== void 0 && (obj.result = responseResultTypeToJSON(message.result));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgTimeoutOnCloseResponse();
        message.result = object.result ?? 0;
        return message;
      }
    };
    function createBaseMsgAcknowledgement() {
      return {
        packet: void 0,
        acknowledgement: new Uint8Array(),
        proofAcked: new Uint8Array(),
        proofHeight: void 0,
        signer: ""
      };
    }
    exports.MsgAcknowledgement = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.packet !== void 0) {
          channel_1.Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();
        }
        if (message.acknowledgement.length !== 0) {
          writer.uint32(18).bytes(message.acknowledgement);
        }
        if (message.proofAcked.length !== 0) {
          writer.uint32(26).bytes(message.proofAcked);
        }
        if (message.proofHeight !== void 0) {
          client_1.Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();
        }
        if (message.signer !== "") {
          writer.uint32(42).string(message.signer);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgAcknowledgement();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.packet = channel_1.Packet.decode(reader, reader.uint32());
              break;
            case 2:
              message.acknowledgement = reader.bytes();
              break;
            case 3:
              message.proofAcked = reader.bytes();
              break;
            case 4:
              message.proofHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            case 5:
              message.signer = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          packet: (0, helpers_1.isSet)(object.packet) ? channel_1.Packet.fromJSON(object.packet) : void 0,
          acknowledgement: (0, helpers_1.isSet)(object.acknowledgement) ? (0, helpers_1.bytesFromBase64)(object.acknowledgement) : new Uint8Array(),
          proofAcked: (0, helpers_1.isSet)(object.proofAcked) ? (0, helpers_1.bytesFromBase64)(object.proofAcked) : new Uint8Array(),
          proofHeight: (0, helpers_1.isSet)(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : void 0,
          signer: (0, helpers_1.isSet)(object.signer) ? String(object.signer) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.packet !== void 0 && (obj.packet = message.packet ? channel_1.Packet.toJSON(message.packet) : void 0);
        message.acknowledgement !== void 0 && (obj.acknowledgement = (0, helpers_1.base64FromBytes)(message.acknowledgement !== void 0 ? message.acknowledgement : new Uint8Array()));
        message.proofAcked !== void 0 && (obj.proofAcked = (0, helpers_1.base64FromBytes)(message.proofAcked !== void 0 ? message.proofAcked : new Uint8Array()));
        message.proofHeight !== void 0 && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : void 0);
        message.signer !== void 0 && (obj.signer = message.signer);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgAcknowledgement();
        message.packet = object.packet !== void 0 && object.packet !== null ? channel_1.Packet.fromPartial(object.packet) : void 0;
        message.acknowledgement = object.acknowledgement ?? new Uint8Array();
        message.proofAcked = object.proofAcked ?? new Uint8Array();
        message.proofHeight = object.proofHeight !== void 0 && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : void 0;
        message.signer = object.signer ?? "";
        return message;
      }
    };
    function createBaseMsgAcknowledgementResponse() {
      return {
        result: 0
      };
    }
    exports.MsgAcknowledgementResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.result !== 0) {
          writer.uint32(8).int32(message.result);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgAcknowledgementResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.result = reader.int32();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          result: (0, helpers_1.isSet)(object.result) ? responseResultTypeFromJSON(object.result) : 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.result !== void 0 && (obj.result = responseResultTypeToJSON(message.result));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgAcknowledgementResponse();
        message.result = object.result ?? 0;
        return message;
      }
    };
    var MsgClientImpl = class {
      constructor(rpc) {
        this.rpc = rpc;
        this.ChannelOpenInit = this.ChannelOpenInit.bind(this);
        this.ChannelOpenTry = this.ChannelOpenTry.bind(this);
        this.ChannelOpenAck = this.ChannelOpenAck.bind(this);
        this.ChannelOpenConfirm = this.ChannelOpenConfirm.bind(this);
        this.ChannelCloseInit = this.ChannelCloseInit.bind(this);
        this.ChannelCloseConfirm = this.ChannelCloseConfirm.bind(this);
        this.RecvPacket = this.RecvPacket.bind(this);
        this.Timeout = this.Timeout.bind(this);
        this.TimeoutOnClose = this.TimeoutOnClose.bind(this);
        this.Acknowledgement = this.Acknowledgement.bind(this);
      }
      ChannelOpenInit(request) {
        const data = exports.MsgChannelOpenInit.encode(request).finish();
        const promise = this.rpc.request("ibc.core.channel.v1.Msg", "ChannelOpenInit", data);
        return promise.then((data2) => exports.MsgChannelOpenInitResponse.decode(new _m0.Reader(data2)));
      }
      ChannelOpenTry(request) {
        const data = exports.MsgChannelOpenTry.encode(request).finish();
        const promise = this.rpc.request("ibc.core.channel.v1.Msg", "ChannelOpenTry", data);
        return promise.then((data2) => exports.MsgChannelOpenTryResponse.decode(new _m0.Reader(data2)));
      }
      ChannelOpenAck(request) {
        const data = exports.MsgChannelOpenAck.encode(request).finish();
        const promise = this.rpc.request("ibc.core.channel.v1.Msg", "ChannelOpenAck", data);
        return promise.then((data2) => exports.MsgChannelOpenAckResponse.decode(new _m0.Reader(data2)));
      }
      ChannelOpenConfirm(request) {
        const data = exports.MsgChannelOpenConfirm.encode(request).finish();
        const promise = this.rpc.request("ibc.core.channel.v1.Msg", "ChannelOpenConfirm", data);
        return promise.then((data2) => exports.MsgChannelOpenConfirmResponse.decode(new _m0.Reader(data2)));
      }
      ChannelCloseInit(request) {
        const data = exports.MsgChannelCloseInit.encode(request).finish();
        const promise = this.rpc.request("ibc.core.channel.v1.Msg", "ChannelCloseInit", data);
        return promise.then((data2) => exports.MsgChannelCloseInitResponse.decode(new _m0.Reader(data2)));
      }
      ChannelCloseConfirm(request) {
        const data = exports.MsgChannelCloseConfirm.encode(request).finish();
        const promise = this.rpc.request("ibc.core.channel.v1.Msg", "ChannelCloseConfirm", data);
        return promise.then((data2) => exports.MsgChannelCloseConfirmResponse.decode(new _m0.Reader(data2)));
      }
      RecvPacket(request) {
        const data = exports.MsgRecvPacket.encode(request).finish();
        const promise = this.rpc.request("ibc.core.channel.v1.Msg", "RecvPacket", data);
        return promise.then((data2) => exports.MsgRecvPacketResponse.decode(new _m0.Reader(data2)));
      }
      Timeout(request) {
        const data = exports.MsgTimeout.encode(request).finish();
        const promise = this.rpc.request("ibc.core.channel.v1.Msg", "Timeout", data);
        return promise.then((data2) => exports.MsgTimeoutResponse.decode(new _m0.Reader(data2)));
      }
      TimeoutOnClose(request) {
        const data = exports.MsgTimeoutOnClose.encode(request).finish();
        const promise = this.rpc.request("ibc.core.channel.v1.Msg", "TimeoutOnClose", data);
        return promise.then((data2) => exports.MsgTimeoutOnCloseResponse.decode(new _m0.Reader(data2)));
      }
      Acknowledgement(request) {
        const data = exports.MsgAcknowledgement.encode(request).finish();
        const promise = this.rpc.request("ibc.core.channel.v1.Msg", "Acknowledgement", data);
        return promise.then((data2) => exports.MsgAcknowledgementResponse.decode(new _m0.Reader(data2)));
      }
    };
    exports.MsgClientImpl = MsgClientImpl;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/ibc/core/client/v1/tx.js
var require_tx9 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/ibc/core/client/v1/tx.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.MsgClientImpl = exports.MsgSubmitMisbehaviourResponse = exports.MsgSubmitMisbehaviour = exports.MsgUpgradeClientResponse = exports.MsgUpgradeClient = exports.MsgUpdateClientResponse = exports.MsgUpdateClient = exports.MsgCreateClientResponse = exports.MsgCreateClient = exports.protobufPackage = void 0;
    var any_1 = require_any();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "ibc.core.client.v1";
    function createBaseMsgCreateClient() {
      return {
        clientState: void 0,
        consensusState: void 0,
        signer: ""
      };
    }
    exports.MsgCreateClient = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.clientState !== void 0) {
          any_1.Any.encode(message.clientState, writer.uint32(10).fork()).ldelim();
        }
        if (message.consensusState !== void 0) {
          any_1.Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();
        }
        if (message.signer !== "") {
          writer.uint32(26).string(message.signer);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgCreateClient();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.clientState = any_1.Any.decode(reader, reader.uint32());
              break;
            case 2:
              message.consensusState = any_1.Any.decode(reader, reader.uint32());
              break;
            case 3:
              message.signer = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          clientState: (0, helpers_1.isSet)(object.clientState) ? any_1.Any.fromJSON(object.clientState) : void 0,
          consensusState: (0, helpers_1.isSet)(object.consensusState) ? any_1.Any.fromJSON(object.consensusState) : void 0,
          signer: (0, helpers_1.isSet)(object.signer) ? String(object.signer) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.clientState !== void 0 && (obj.clientState = message.clientState ? any_1.Any.toJSON(message.clientState) : void 0);
        message.consensusState !== void 0 && (obj.consensusState = message.consensusState ? any_1.Any.toJSON(message.consensusState) : void 0);
        message.signer !== void 0 && (obj.signer = message.signer);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgCreateClient();
        message.clientState = object.clientState !== void 0 && object.clientState !== null ? any_1.Any.fromPartial(object.clientState) : void 0;
        message.consensusState = object.consensusState !== void 0 && object.consensusState !== null ? any_1.Any.fromPartial(object.consensusState) : void 0;
        message.signer = object.signer ?? "";
        return message;
      }
    };
    function createBaseMsgCreateClientResponse() {
      return {};
    }
    exports.MsgCreateClientResponse = {
      encode(_3, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgCreateClientResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_3) {
        return {};
      },
      toJSON(_3) {
        const obj = {};
        return obj;
      },
      fromPartial(_3) {
        const message = createBaseMsgCreateClientResponse();
        return message;
      }
    };
    function createBaseMsgUpdateClient() {
      return {
        clientId: "",
        header: void 0,
        signer: ""
      };
    }
    exports.MsgUpdateClient = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.clientId !== "") {
          writer.uint32(10).string(message.clientId);
        }
        if (message.header !== void 0) {
          any_1.Any.encode(message.header, writer.uint32(18).fork()).ldelim();
        }
        if (message.signer !== "") {
          writer.uint32(26).string(message.signer);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgUpdateClient();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.clientId = reader.string();
              break;
            case 2:
              message.header = any_1.Any.decode(reader, reader.uint32());
              break;
            case 3:
              message.signer = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          clientId: (0, helpers_1.isSet)(object.clientId) ? String(object.clientId) : "",
          header: (0, helpers_1.isSet)(object.header) ? any_1.Any.fromJSON(object.header) : void 0,
          signer: (0, helpers_1.isSet)(object.signer) ? String(object.signer) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.clientId !== void 0 && (obj.clientId = message.clientId);
        message.header !== void 0 && (obj.header = message.header ? any_1.Any.toJSON(message.header) : void 0);
        message.signer !== void 0 && (obj.signer = message.signer);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgUpdateClient();
        message.clientId = object.clientId ?? "";
        message.header = object.header !== void 0 && object.header !== null ? any_1.Any.fromPartial(object.header) : void 0;
        message.signer = object.signer ?? "";
        return message;
      }
    };
    function createBaseMsgUpdateClientResponse() {
      return {};
    }
    exports.MsgUpdateClientResponse = {
      encode(_3, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgUpdateClientResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_3) {
        return {};
      },
      toJSON(_3) {
        const obj = {};
        return obj;
      },
      fromPartial(_3) {
        const message = createBaseMsgUpdateClientResponse();
        return message;
      }
    };
    function createBaseMsgUpgradeClient() {
      return {
        clientId: "",
        clientState: void 0,
        consensusState: void 0,
        proofUpgradeClient: new Uint8Array(),
        proofUpgradeConsensusState: new Uint8Array(),
        signer: ""
      };
    }
    exports.MsgUpgradeClient = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.clientId !== "") {
          writer.uint32(10).string(message.clientId);
        }
        if (message.clientState !== void 0) {
          any_1.Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();
        }
        if (message.consensusState !== void 0) {
          any_1.Any.encode(message.consensusState, writer.uint32(26).fork()).ldelim();
        }
        if (message.proofUpgradeClient.length !== 0) {
          writer.uint32(34).bytes(message.proofUpgradeClient);
        }
        if (message.proofUpgradeConsensusState.length !== 0) {
          writer.uint32(42).bytes(message.proofUpgradeConsensusState);
        }
        if (message.signer !== "") {
          writer.uint32(50).string(message.signer);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgUpgradeClient();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.clientId = reader.string();
              break;
            case 2:
              message.clientState = any_1.Any.decode(reader, reader.uint32());
              break;
            case 3:
              message.consensusState = any_1.Any.decode(reader, reader.uint32());
              break;
            case 4:
              message.proofUpgradeClient = reader.bytes();
              break;
            case 5:
              message.proofUpgradeConsensusState = reader.bytes();
              break;
            case 6:
              message.signer = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          clientId: (0, helpers_1.isSet)(object.clientId) ? String(object.clientId) : "",
          clientState: (0, helpers_1.isSet)(object.clientState) ? any_1.Any.fromJSON(object.clientState) : void 0,
          consensusState: (0, helpers_1.isSet)(object.consensusState) ? any_1.Any.fromJSON(object.consensusState) : void 0,
          proofUpgradeClient: (0, helpers_1.isSet)(object.proofUpgradeClient) ? (0, helpers_1.bytesFromBase64)(object.proofUpgradeClient) : new Uint8Array(),
          proofUpgradeConsensusState: (0, helpers_1.isSet)(object.proofUpgradeConsensusState) ? (0, helpers_1.bytesFromBase64)(object.proofUpgradeConsensusState) : new Uint8Array(),
          signer: (0, helpers_1.isSet)(object.signer) ? String(object.signer) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.clientId !== void 0 && (obj.clientId = message.clientId);
        message.clientState !== void 0 && (obj.clientState = message.clientState ? any_1.Any.toJSON(message.clientState) : void 0);
        message.consensusState !== void 0 && (obj.consensusState = message.consensusState ? any_1.Any.toJSON(message.consensusState) : void 0);
        message.proofUpgradeClient !== void 0 && (obj.proofUpgradeClient = (0, helpers_1.base64FromBytes)(message.proofUpgradeClient !== void 0 ? message.proofUpgradeClient : new Uint8Array()));
        message.proofUpgradeConsensusState !== void 0 && (obj.proofUpgradeConsensusState = (0, helpers_1.base64FromBytes)(message.proofUpgradeConsensusState !== void 0 ? message.proofUpgradeConsensusState : new Uint8Array()));
        message.signer !== void 0 && (obj.signer = message.signer);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgUpgradeClient();
        message.clientId = object.clientId ?? "";
        message.clientState = object.clientState !== void 0 && object.clientState !== null ? any_1.Any.fromPartial(object.clientState) : void 0;
        message.consensusState = object.consensusState !== void 0 && object.consensusState !== null ? any_1.Any.fromPartial(object.consensusState) : void 0;
        message.proofUpgradeClient = object.proofUpgradeClient ?? new Uint8Array();
        message.proofUpgradeConsensusState = object.proofUpgradeConsensusState ?? new Uint8Array();
        message.signer = object.signer ?? "";
        return message;
      }
    };
    function createBaseMsgUpgradeClientResponse() {
      return {};
    }
    exports.MsgUpgradeClientResponse = {
      encode(_3, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgUpgradeClientResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_3) {
        return {};
      },
      toJSON(_3) {
        const obj = {};
        return obj;
      },
      fromPartial(_3) {
        const message = createBaseMsgUpgradeClientResponse();
        return message;
      }
    };
    function createBaseMsgSubmitMisbehaviour() {
      return {
        clientId: "",
        misbehaviour: void 0,
        signer: ""
      };
    }
    exports.MsgSubmitMisbehaviour = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.clientId !== "") {
          writer.uint32(10).string(message.clientId);
        }
        if (message.misbehaviour !== void 0) {
          any_1.Any.encode(message.misbehaviour, writer.uint32(18).fork()).ldelim();
        }
        if (message.signer !== "") {
          writer.uint32(26).string(message.signer);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgSubmitMisbehaviour();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.clientId = reader.string();
              break;
            case 2:
              message.misbehaviour = any_1.Any.decode(reader, reader.uint32());
              break;
            case 3:
              message.signer = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          clientId: (0, helpers_1.isSet)(object.clientId) ? String(object.clientId) : "",
          misbehaviour: (0, helpers_1.isSet)(object.misbehaviour) ? any_1.Any.fromJSON(object.misbehaviour) : void 0,
          signer: (0, helpers_1.isSet)(object.signer) ? String(object.signer) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.clientId !== void 0 && (obj.clientId = message.clientId);
        message.misbehaviour !== void 0 && (obj.misbehaviour = message.misbehaviour ? any_1.Any.toJSON(message.misbehaviour) : void 0);
        message.signer !== void 0 && (obj.signer = message.signer);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgSubmitMisbehaviour();
        message.clientId = object.clientId ?? "";
        message.misbehaviour = object.misbehaviour !== void 0 && object.misbehaviour !== null ? any_1.Any.fromPartial(object.misbehaviour) : void 0;
        message.signer = object.signer ?? "";
        return message;
      }
    };
    function createBaseMsgSubmitMisbehaviourResponse() {
      return {};
    }
    exports.MsgSubmitMisbehaviourResponse = {
      encode(_3, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgSubmitMisbehaviourResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_3) {
        return {};
      },
      toJSON(_3) {
        const obj = {};
        return obj;
      },
      fromPartial(_3) {
        const message = createBaseMsgSubmitMisbehaviourResponse();
        return message;
      }
    };
    var MsgClientImpl = class {
      constructor(rpc) {
        this.rpc = rpc;
        this.CreateClient = this.CreateClient.bind(this);
        this.UpdateClient = this.UpdateClient.bind(this);
        this.UpgradeClient = this.UpgradeClient.bind(this);
        this.SubmitMisbehaviour = this.SubmitMisbehaviour.bind(this);
      }
      CreateClient(request) {
        const data = exports.MsgCreateClient.encode(request).finish();
        const promise = this.rpc.request("ibc.core.client.v1.Msg", "CreateClient", data);
        return promise.then((data2) => exports.MsgCreateClientResponse.decode(new _m0.Reader(data2)));
      }
      UpdateClient(request) {
        const data = exports.MsgUpdateClient.encode(request).finish();
        const promise = this.rpc.request("ibc.core.client.v1.Msg", "UpdateClient", data);
        return promise.then((data2) => exports.MsgUpdateClientResponse.decode(new _m0.Reader(data2)));
      }
      UpgradeClient(request) {
        const data = exports.MsgUpgradeClient.encode(request).finish();
        const promise = this.rpc.request("ibc.core.client.v1.Msg", "UpgradeClient", data);
        return promise.then((data2) => exports.MsgUpgradeClientResponse.decode(new _m0.Reader(data2)));
      }
      SubmitMisbehaviour(request) {
        const data = exports.MsgSubmitMisbehaviour.encode(request).finish();
        const promise = this.rpc.request("ibc.core.client.v1.Msg", "SubmitMisbehaviour", data);
        return promise.then((data2) => exports.MsgSubmitMisbehaviourResponse.decode(new _m0.Reader(data2)));
      }
    };
    exports.MsgClientImpl = MsgClientImpl;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/proofs.js
var require_proofs = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/proofs.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.CompressedNonExistenceProof = exports.CompressedExistenceProof = exports.CompressedBatchEntry = exports.CompressedBatchProof = exports.BatchEntry = exports.BatchProof = exports.InnerSpec = exports.ProofSpec = exports.InnerOp = exports.LeafOp = exports.CommitmentProof = exports.NonExistenceProof = exports.ExistenceProof = exports.lengthOpToJSON = exports.lengthOpFromJSON = exports.LengthOp = exports.hashOpToJSON = exports.hashOpFromJSON = exports.HashOp = exports.protobufPackage = void 0;
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "ics23";
    var HashOp;
    (function(HashOp2) {
      HashOp2[HashOp2["NO_HASH"] = 0] = "NO_HASH";
      HashOp2[HashOp2["SHA256"] = 1] = "SHA256";
      HashOp2[HashOp2["SHA512"] = 2] = "SHA512";
      HashOp2[HashOp2["KECCAK"] = 3] = "KECCAK";
      HashOp2[HashOp2["RIPEMD160"] = 4] = "RIPEMD160";
      HashOp2[HashOp2["BITCOIN"] = 5] = "BITCOIN";
      HashOp2[HashOp2["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
    })(HashOp = exports.HashOp || (exports.HashOp = {}));
    function hashOpFromJSON(object) {
      switch (object) {
        case 0:
        case "NO_HASH":
          return HashOp.NO_HASH;
        case 1:
        case "SHA256":
          return HashOp.SHA256;
        case 2:
        case "SHA512":
          return HashOp.SHA512;
        case 3:
        case "KECCAK":
          return HashOp.KECCAK;
        case 4:
        case "RIPEMD160":
          return HashOp.RIPEMD160;
        case 5:
        case "BITCOIN":
          return HashOp.BITCOIN;
        case -1:
        case "UNRECOGNIZED":
        default:
          return HashOp.UNRECOGNIZED;
      }
    }
    exports.hashOpFromJSON = hashOpFromJSON;
    function hashOpToJSON(object) {
      switch (object) {
        case HashOp.NO_HASH:
          return "NO_HASH";
        case HashOp.SHA256:
          return "SHA256";
        case HashOp.SHA512:
          return "SHA512";
        case HashOp.KECCAK:
          return "KECCAK";
        case HashOp.RIPEMD160:
          return "RIPEMD160";
        case HashOp.BITCOIN:
          return "BITCOIN";
        case HashOp.UNRECOGNIZED:
        default:
          return "UNRECOGNIZED";
      }
    }
    exports.hashOpToJSON = hashOpToJSON;
    var LengthOp;
    (function(LengthOp2) {
      LengthOp2[LengthOp2["NO_PREFIX"] = 0] = "NO_PREFIX";
      LengthOp2[LengthOp2["VAR_PROTO"] = 1] = "VAR_PROTO";
      LengthOp2[LengthOp2["VAR_RLP"] = 2] = "VAR_RLP";
      LengthOp2[LengthOp2["FIXED32_BIG"] = 3] = "FIXED32_BIG";
      LengthOp2[LengthOp2["FIXED32_LITTLE"] = 4] = "FIXED32_LITTLE";
      LengthOp2[LengthOp2["FIXED64_BIG"] = 5] = "FIXED64_BIG";
      LengthOp2[LengthOp2["FIXED64_LITTLE"] = 6] = "FIXED64_LITTLE";
      LengthOp2[LengthOp2["REQUIRE_32_BYTES"] = 7] = "REQUIRE_32_BYTES";
      LengthOp2[LengthOp2["REQUIRE_64_BYTES"] = 8] = "REQUIRE_64_BYTES";
      LengthOp2[LengthOp2["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
    })(LengthOp = exports.LengthOp || (exports.LengthOp = {}));
    function lengthOpFromJSON(object) {
      switch (object) {
        case 0:
        case "NO_PREFIX":
          return LengthOp.NO_PREFIX;
        case 1:
        case "VAR_PROTO":
          return LengthOp.VAR_PROTO;
        case 2:
        case "VAR_RLP":
          return LengthOp.VAR_RLP;
        case 3:
        case "FIXED32_BIG":
          return LengthOp.FIXED32_BIG;
        case 4:
        case "FIXED32_LITTLE":
          return LengthOp.FIXED32_LITTLE;
        case 5:
        case "FIXED64_BIG":
          return LengthOp.FIXED64_BIG;
        case 6:
        case "FIXED64_LITTLE":
          return LengthOp.FIXED64_LITTLE;
        case 7:
        case "REQUIRE_32_BYTES":
          return LengthOp.REQUIRE_32_BYTES;
        case 8:
        case "REQUIRE_64_BYTES":
          return LengthOp.REQUIRE_64_BYTES;
        case -1:
        case "UNRECOGNIZED":
        default:
          return LengthOp.UNRECOGNIZED;
      }
    }
    exports.lengthOpFromJSON = lengthOpFromJSON;
    function lengthOpToJSON(object) {
      switch (object) {
        case LengthOp.NO_PREFIX:
          return "NO_PREFIX";
        case LengthOp.VAR_PROTO:
          return "VAR_PROTO";
        case LengthOp.VAR_RLP:
          return "VAR_RLP";
        case LengthOp.FIXED32_BIG:
          return "FIXED32_BIG";
        case LengthOp.FIXED32_LITTLE:
          return "FIXED32_LITTLE";
        case LengthOp.FIXED64_BIG:
          return "FIXED64_BIG";
        case LengthOp.FIXED64_LITTLE:
          return "FIXED64_LITTLE";
        case LengthOp.REQUIRE_32_BYTES:
          return "REQUIRE_32_BYTES";
        case LengthOp.REQUIRE_64_BYTES:
          return "REQUIRE_64_BYTES";
        case LengthOp.UNRECOGNIZED:
        default:
          return "UNRECOGNIZED";
      }
    }
    exports.lengthOpToJSON = lengthOpToJSON;
    function createBaseExistenceProof() {
      return {
        key: new Uint8Array(),
        value: new Uint8Array(),
        leaf: void 0,
        path: []
      };
    }
    exports.ExistenceProof = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.key.length !== 0) {
          writer.uint32(10).bytes(message.key);
        }
        if (message.value.length !== 0) {
          writer.uint32(18).bytes(message.value);
        }
        if (message.leaf !== void 0) {
          exports.LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();
        }
        for (const v3 of message.path) {
          exports.InnerOp.encode(v3, writer.uint32(34).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseExistenceProof();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.key = reader.bytes();
              break;
            case 2:
              message.value = reader.bytes();
              break;
            case 3:
              message.leaf = exports.LeafOp.decode(reader, reader.uint32());
              break;
            case 4:
              message.path.push(exports.InnerOp.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          key: (0, helpers_1.isSet)(object.key) ? (0, helpers_1.bytesFromBase64)(object.key) : new Uint8Array(),
          value: (0, helpers_1.isSet)(object.value) ? (0, helpers_1.bytesFromBase64)(object.value) : new Uint8Array(),
          leaf: (0, helpers_1.isSet)(object.leaf) ? exports.LeafOp.fromJSON(object.leaf) : void 0,
          path: Array.isArray(object == null ? void 0 : object.path) ? object.path.map((e2) => exports.InnerOp.fromJSON(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.key !== void 0 && (obj.key = (0, helpers_1.base64FromBytes)(message.key !== void 0 ? message.key : new Uint8Array()));
        message.value !== void 0 && (obj.value = (0, helpers_1.base64FromBytes)(message.value !== void 0 ? message.value : new Uint8Array()));
        message.leaf !== void 0 && (obj.leaf = message.leaf ? exports.LeafOp.toJSON(message.leaf) : void 0);
        if (message.path) {
          obj.path = message.path.map((e2) => e2 ? exports.InnerOp.toJSON(e2) : void 0);
        } else {
          obj.path = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseExistenceProof();
        message.key = object.key ?? new Uint8Array();
        message.value = object.value ?? new Uint8Array();
        message.leaf = object.leaf !== void 0 && object.leaf !== null ? exports.LeafOp.fromPartial(object.leaf) : void 0;
        message.path = ((_a = object.path) == null ? void 0 : _a.map((e2) => exports.InnerOp.fromPartial(e2))) || [];
        return message;
      }
    };
    function createBaseNonExistenceProof() {
      return {
        key: new Uint8Array(),
        left: void 0,
        right: void 0
      };
    }
    exports.NonExistenceProof = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.key.length !== 0) {
          writer.uint32(10).bytes(message.key);
        }
        if (message.left !== void 0) {
          exports.ExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();
        }
        if (message.right !== void 0) {
          exports.ExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseNonExistenceProof();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.key = reader.bytes();
              break;
            case 2:
              message.left = exports.ExistenceProof.decode(reader, reader.uint32());
              break;
            case 3:
              message.right = exports.ExistenceProof.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          key: (0, helpers_1.isSet)(object.key) ? (0, helpers_1.bytesFromBase64)(object.key) : new Uint8Array(),
          left: (0, helpers_1.isSet)(object.left) ? exports.ExistenceProof.fromJSON(object.left) : void 0,
          right: (0, helpers_1.isSet)(object.right) ? exports.ExistenceProof.fromJSON(object.right) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.key !== void 0 && (obj.key = (0, helpers_1.base64FromBytes)(message.key !== void 0 ? message.key : new Uint8Array()));
        message.left !== void 0 && (obj.left = message.left ? exports.ExistenceProof.toJSON(message.left) : void 0);
        message.right !== void 0 && (obj.right = message.right ? exports.ExistenceProof.toJSON(message.right) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseNonExistenceProof();
        message.key = object.key ?? new Uint8Array();
        message.left = object.left !== void 0 && object.left !== null ? exports.ExistenceProof.fromPartial(object.left) : void 0;
        message.right = object.right !== void 0 && object.right !== null ? exports.ExistenceProof.fromPartial(object.right) : void 0;
        return message;
      }
    };
    function createBaseCommitmentProof() {
      return {
        exist: void 0,
        nonexist: void 0,
        batch: void 0,
        compressed: void 0
      };
    }
    exports.CommitmentProof = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.exist !== void 0) {
          exports.ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();
        }
        if (message.nonexist !== void 0) {
          exports.NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();
        }
        if (message.batch !== void 0) {
          exports.BatchProof.encode(message.batch, writer.uint32(26).fork()).ldelim();
        }
        if (message.compressed !== void 0) {
          exports.CompressedBatchProof.encode(message.compressed, writer.uint32(34).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseCommitmentProof();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.exist = exports.ExistenceProof.decode(reader, reader.uint32());
              break;
            case 2:
              message.nonexist = exports.NonExistenceProof.decode(reader, reader.uint32());
              break;
            case 3:
              message.batch = exports.BatchProof.decode(reader, reader.uint32());
              break;
            case 4:
              message.compressed = exports.CompressedBatchProof.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          exist: (0, helpers_1.isSet)(object.exist) ? exports.ExistenceProof.fromJSON(object.exist) : void 0,
          nonexist: (0, helpers_1.isSet)(object.nonexist) ? exports.NonExistenceProof.fromJSON(object.nonexist) : void 0,
          batch: (0, helpers_1.isSet)(object.batch) ? exports.BatchProof.fromJSON(object.batch) : void 0,
          compressed: (0, helpers_1.isSet)(object.compressed) ? exports.CompressedBatchProof.fromJSON(object.compressed) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.exist !== void 0 && (obj.exist = message.exist ? exports.ExistenceProof.toJSON(message.exist) : void 0);
        message.nonexist !== void 0 && (obj.nonexist = message.nonexist ? exports.NonExistenceProof.toJSON(message.nonexist) : void 0);
        message.batch !== void 0 && (obj.batch = message.batch ? exports.BatchProof.toJSON(message.batch) : void 0);
        message.compressed !== void 0 && (obj.compressed = message.compressed ? exports.CompressedBatchProof.toJSON(message.compressed) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseCommitmentProof();
        message.exist = object.exist !== void 0 && object.exist !== null ? exports.ExistenceProof.fromPartial(object.exist) : void 0;
        message.nonexist = object.nonexist !== void 0 && object.nonexist !== null ? exports.NonExistenceProof.fromPartial(object.nonexist) : void 0;
        message.batch = object.batch !== void 0 && object.batch !== null ? exports.BatchProof.fromPartial(object.batch) : void 0;
        message.compressed = object.compressed !== void 0 && object.compressed !== null ? exports.CompressedBatchProof.fromPartial(object.compressed) : void 0;
        return message;
      }
    };
    function createBaseLeafOp() {
      return {
        hash: 0,
        prehashKey: 0,
        prehashValue: 0,
        length: 0,
        prefix: new Uint8Array()
      };
    }
    exports.LeafOp = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.hash !== 0) {
          writer.uint32(8).int32(message.hash);
        }
        if (message.prehashKey !== 0) {
          writer.uint32(16).int32(message.prehashKey);
        }
        if (message.prehashValue !== 0) {
          writer.uint32(24).int32(message.prehashValue);
        }
        if (message.length !== 0) {
          writer.uint32(32).int32(message.length);
        }
        if (message.prefix.length !== 0) {
          writer.uint32(42).bytes(message.prefix);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseLeafOp();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.hash = reader.int32();
              break;
            case 2:
              message.prehashKey = reader.int32();
              break;
            case 3:
              message.prehashValue = reader.int32();
              break;
            case 4:
              message.length = reader.int32();
              break;
            case 5:
              message.prefix = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          hash: (0, helpers_1.isSet)(object.hash) ? hashOpFromJSON(object.hash) : 0,
          prehashKey: (0, helpers_1.isSet)(object.prehashKey) ? hashOpFromJSON(object.prehashKey) : 0,
          prehashValue: (0, helpers_1.isSet)(object.prehashValue) ? hashOpFromJSON(object.prehashValue) : 0,
          length: (0, helpers_1.isSet)(object.length) ? lengthOpFromJSON(object.length) : 0,
          prefix: (0, helpers_1.isSet)(object.prefix) ? (0, helpers_1.bytesFromBase64)(object.prefix) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.hash !== void 0 && (obj.hash = hashOpToJSON(message.hash));
        message.prehashKey !== void 0 && (obj.prehashKey = hashOpToJSON(message.prehashKey));
        message.prehashValue !== void 0 && (obj.prehashValue = hashOpToJSON(message.prehashValue));
        message.length !== void 0 && (obj.length = lengthOpToJSON(message.length));
        message.prefix !== void 0 && (obj.prefix = (0, helpers_1.base64FromBytes)(message.prefix !== void 0 ? message.prefix : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseLeafOp();
        message.hash = object.hash ?? 0;
        message.prehashKey = object.prehashKey ?? 0;
        message.prehashValue = object.prehashValue ?? 0;
        message.length = object.length ?? 0;
        message.prefix = object.prefix ?? new Uint8Array();
        return message;
      }
    };
    function createBaseInnerOp() {
      return {
        hash: 0,
        prefix: new Uint8Array(),
        suffix: new Uint8Array()
      };
    }
    exports.InnerOp = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.hash !== 0) {
          writer.uint32(8).int32(message.hash);
        }
        if (message.prefix.length !== 0) {
          writer.uint32(18).bytes(message.prefix);
        }
        if (message.suffix.length !== 0) {
          writer.uint32(26).bytes(message.suffix);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseInnerOp();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.hash = reader.int32();
              break;
            case 2:
              message.prefix = reader.bytes();
              break;
            case 3:
              message.suffix = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          hash: (0, helpers_1.isSet)(object.hash) ? hashOpFromJSON(object.hash) : 0,
          prefix: (0, helpers_1.isSet)(object.prefix) ? (0, helpers_1.bytesFromBase64)(object.prefix) : new Uint8Array(),
          suffix: (0, helpers_1.isSet)(object.suffix) ? (0, helpers_1.bytesFromBase64)(object.suffix) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.hash !== void 0 && (obj.hash = hashOpToJSON(message.hash));
        message.prefix !== void 0 && (obj.prefix = (0, helpers_1.base64FromBytes)(message.prefix !== void 0 ? message.prefix : new Uint8Array()));
        message.suffix !== void 0 && (obj.suffix = (0, helpers_1.base64FromBytes)(message.suffix !== void 0 ? message.suffix : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseInnerOp();
        message.hash = object.hash ?? 0;
        message.prefix = object.prefix ?? new Uint8Array();
        message.suffix = object.suffix ?? new Uint8Array();
        return message;
      }
    };
    function createBaseProofSpec() {
      return {
        leafSpec: void 0,
        innerSpec: void 0,
        maxDepth: 0,
        minDepth: 0
      };
    }
    exports.ProofSpec = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.leafSpec !== void 0) {
          exports.LeafOp.encode(message.leafSpec, writer.uint32(10).fork()).ldelim();
        }
        if (message.innerSpec !== void 0) {
          exports.InnerSpec.encode(message.innerSpec, writer.uint32(18).fork()).ldelim();
        }
        if (message.maxDepth !== 0) {
          writer.uint32(24).int32(message.maxDepth);
        }
        if (message.minDepth !== 0) {
          writer.uint32(32).int32(message.minDepth);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseProofSpec();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.leafSpec = exports.LeafOp.decode(reader, reader.uint32());
              break;
            case 2:
              message.innerSpec = exports.InnerSpec.decode(reader, reader.uint32());
              break;
            case 3:
              message.maxDepth = reader.int32();
              break;
            case 4:
              message.minDepth = reader.int32();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          leafSpec: (0, helpers_1.isSet)(object.leafSpec) ? exports.LeafOp.fromJSON(object.leafSpec) : void 0,
          innerSpec: (0, helpers_1.isSet)(object.innerSpec) ? exports.InnerSpec.fromJSON(object.innerSpec) : void 0,
          maxDepth: (0, helpers_1.isSet)(object.maxDepth) ? Number(object.maxDepth) : 0,
          minDepth: (0, helpers_1.isSet)(object.minDepth) ? Number(object.minDepth) : 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.leafSpec !== void 0 && (obj.leafSpec = message.leafSpec ? exports.LeafOp.toJSON(message.leafSpec) : void 0);
        message.innerSpec !== void 0 && (obj.innerSpec = message.innerSpec ? exports.InnerSpec.toJSON(message.innerSpec) : void 0);
        message.maxDepth !== void 0 && (obj.maxDepth = Math.round(message.maxDepth));
        message.minDepth !== void 0 && (obj.minDepth = Math.round(message.minDepth));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseProofSpec();
        message.leafSpec = object.leafSpec !== void 0 && object.leafSpec !== null ? exports.LeafOp.fromPartial(object.leafSpec) : void 0;
        message.innerSpec = object.innerSpec !== void 0 && object.innerSpec !== null ? exports.InnerSpec.fromPartial(object.innerSpec) : void 0;
        message.maxDepth = object.maxDepth ?? 0;
        message.minDepth = object.minDepth ?? 0;
        return message;
      }
    };
    function createBaseInnerSpec() {
      return {
        childOrder: [],
        childSize: 0,
        minPrefixLength: 0,
        maxPrefixLength: 0,
        emptyChild: new Uint8Array(),
        hash: 0
      };
    }
    exports.InnerSpec = {
      encode(message, writer = _m0.Writer.create()) {
        writer.uint32(10).fork();
        for (const v3 of message.childOrder) {
          writer.int32(v3);
        }
        writer.ldelim();
        if (message.childSize !== 0) {
          writer.uint32(16).int32(message.childSize);
        }
        if (message.minPrefixLength !== 0) {
          writer.uint32(24).int32(message.minPrefixLength);
        }
        if (message.maxPrefixLength !== 0) {
          writer.uint32(32).int32(message.maxPrefixLength);
        }
        if (message.emptyChild.length !== 0) {
          writer.uint32(42).bytes(message.emptyChild);
        }
        if (message.hash !== 0) {
          writer.uint32(48).int32(message.hash);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseInnerSpec();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              if ((tag & 7) === 2) {
                const end2 = reader.uint32() + reader.pos;
                while (reader.pos < end2) {
                  message.childOrder.push(reader.int32());
                }
              } else {
                message.childOrder.push(reader.int32());
              }
              break;
            case 2:
              message.childSize = reader.int32();
              break;
            case 3:
              message.minPrefixLength = reader.int32();
              break;
            case 4:
              message.maxPrefixLength = reader.int32();
              break;
            case 5:
              message.emptyChild = reader.bytes();
              break;
            case 6:
              message.hash = reader.int32();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          childOrder: Array.isArray(object == null ? void 0 : object.childOrder) ? object.childOrder.map((e2) => Number(e2)) : [],
          childSize: (0, helpers_1.isSet)(object.childSize) ? Number(object.childSize) : 0,
          minPrefixLength: (0, helpers_1.isSet)(object.minPrefixLength) ? Number(object.minPrefixLength) : 0,
          maxPrefixLength: (0, helpers_1.isSet)(object.maxPrefixLength) ? Number(object.maxPrefixLength) : 0,
          emptyChild: (0, helpers_1.isSet)(object.emptyChild) ? (0, helpers_1.bytesFromBase64)(object.emptyChild) : new Uint8Array(),
          hash: (0, helpers_1.isSet)(object.hash) ? hashOpFromJSON(object.hash) : 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.childOrder) {
          obj.childOrder = message.childOrder.map((e2) => Math.round(e2));
        } else {
          obj.childOrder = [];
        }
        message.childSize !== void 0 && (obj.childSize = Math.round(message.childSize));
        message.minPrefixLength !== void 0 && (obj.minPrefixLength = Math.round(message.minPrefixLength));
        message.maxPrefixLength !== void 0 && (obj.maxPrefixLength = Math.round(message.maxPrefixLength));
        message.emptyChild !== void 0 && (obj.emptyChild = (0, helpers_1.base64FromBytes)(message.emptyChild !== void 0 ? message.emptyChild : new Uint8Array()));
        message.hash !== void 0 && (obj.hash = hashOpToJSON(message.hash));
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseInnerSpec();
        message.childOrder = ((_a = object.childOrder) == null ? void 0 : _a.map((e2) => e2)) || [];
        message.childSize = object.childSize ?? 0;
        message.minPrefixLength = object.minPrefixLength ?? 0;
        message.maxPrefixLength = object.maxPrefixLength ?? 0;
        message.emptyChild = object.emptyChild ?? new Uint8Array();
        message.hash = object.hash ?? 0;
        return message;
      }
    };
    function createBaseBatchProof() {
      return {
        entries: []
      };
    }
    exports.BatchProof = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.entries) {
          exports.BatchEntry.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseBatchProof();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.entries.push(exports.BatchEntry.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          entries: Array.isArray(object == null ? void 0 : object.entries) ? object.entries.map((e2) => exports.BatchEntry.fromJSON(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.entries) {
          obj.entries = message.entries.map((e2) => e2 ? exports.BatchEntry.toJSON(e2) : void 0);
        } else {
          obj.entries = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseBatchProof();
        message.entries = ((_a = object.entries) == null ? void 0 : _a.map((e2) => exports.BatchEntry.fromPartial(e2))) || [];
        return message;
      }
    };
    function createBaseBatchEntry() {
      return {
        exist: void 0,
        nonexist: void 0
      };
    }
    exports.BatchEntry = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.exist !== void 0) {
          exports.ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();
        }
        if (message.nonexist !== void 0) {
          exports.NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseBatchEntry();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.exist = exports.ExistenceProof.decode(reader, reader.uint32());
              break;
            case 2:
              message.nonexist = exports.NonExistenceProof.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          exist: (0, helpers_1.isSet)(object.exist) ? exports.ExistenceProof.fromJSON(object.exist) : void 0,
          nonexist: (0, helpers_1.isSet)(object.nonexist) ? exports.NonExistenceProof.fromJSON(object.nonexist) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.exist !== void 0 && (obj.exist = message.exist ? exports.ExistenceProof.toJSON(message.exist) : void 0);
        message.nonexist !== void 0 && (obj.nonexist = message.nonexist ? exports.NonExistenceProof.toJSON(message.nonexist) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseBatchEntry();
        message.exist = object.exist !== void 0 && object.exist !== null ? exports.ExistenceProof.fromPartial(object.exist) : void 0;
        message.nonexist = object.nonexist !== void 0 && object.nonexist !== null ? exports.NonExistenceProof.fromPartial(object.nonexist) : void 0;
        return message;
      }
    };
    function createBaseCompressedBatchProof() {
      return {
        entries: [],
        lookupInners: []
      };
    }
    exports.CompressedBatchProof = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.entries) {
          exports.CompressedBatchEntry.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        for (const v3 of message.lookupInners) {
          exports.InnerOp.encode(v3, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseCompressedBatchProof();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.entries.push(exports.CompressedBatchEntry.decode(reader, reader.uint32()));
              break;
            case 2:
              message.lookupInners.push(exports.InnerOp.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          entries: Array.isArray(object == null ? void 0 : object.entries) ? object.entries.map((e2) => exports.CompressedBatchEntry.fromJSON(e2)) : [],
          lookupInners: Array.isArray(object == null ? void 0 : object.lookupInners) ? object.lookupInners.map((e2) => exports.InnerOp.fromJSON(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.entries) {
          obj.entries = message.entries.map((e2) => e2 ? exports.CompressedBatchEntry.toJSON(e2) : void 0);
        } else {
          obj.entries = [];
        }
        if (message.lookupInners) {
          obj.lookupInners = message.lookupInners.map((e2) => e2 ? exports.InnerOp.toJSON(e2) : void 0);
        } else {
          obj.lookupInners = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a, _b;
        const message = createBaseCompressedBatchProof();
        message.entries = ((_a = object.entries) == null ? void 0 : _a.map((e2) => exports.CompressedBatchEntry.fromPartial(e2))) || [];
        message.lookupInners = ((_b = object.lookupInners) == null ? void 0 : _b.map((e2) => exports.InnerOp.fromPartial(e2))) || [];
        return message;
      }
    };
    function createBaseCompressedBatchEntry() {
      return {
        exist: void 0,
        nonexist: void 0
      };
    }
    exports.CompressedBatchEntry = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.exist !== void 0) {
          exports.CompressedExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();
        }
        if (message.nonexist !== void 0) {
          exports.CompressedNonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseCompressedBatchEntry();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.exist = exports.CompressedExistenceProof.decode(reader, reader.uint32());
              break;
            case 2:
              message.nonexist = exports.CompressedNonExistenceProof.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          exist: (0, helpers_1.isSet)(object.exist) ? exports.CompressedExistenceProof.fromJSON(object.exist) : void 0,
          nonexist: (0, helpers_1.isSet)(object.nonexist) ? exports.CompressedNonExistenceProof.fromJSON(object.nonexist) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.exist !== void 0 && (obj.exist = message.exist ? exports.CompressedExistenceProof.toJSON(message.exist) : void 0);
        message.nonexist !== void 0 && (obj.nonexist = message.nonexist ? exports.CompressedNonExistenceProof.toJSON(message.nonexist) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseCompressedBatchEntry();
        message.exist = object.exist !== void 0 && object.exist !== null ? exports.CompressedExistenceProof.fromPartial(object.exist) : void 0;
        message.nonexist = object.nonexist !== void 0 && object.nonexist !== null ? exports.CompressedNonExistenceProof.fromPartial(object.nonexist) : void 0;
        return message;
      }
    };
    function createBaseCompressedExistenceProof() {
      return {
        key: new Uint8Array(),
        value: new Uint8Array(),
        leaf: void 0,
        path: []
      };
    }
    exports.CompressedExistenceProof = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.key.length !== 0) {
          writer.uint32(10).bytes(message.key);
        }
        if (message.value.length !== 0) {
          writer.uint32(18).bytes(message.value);
        }
        if (message.leaf !== void 0) {
          exports.LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();
        }
        writer.uint32(34).fork();
        for (const v3 of message.path) {
          writer.int32(v3);
        }
        writer.ldelim();
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseCompressedExistenceProof();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.key = reader.bytes();
              break;
            case 2:
              message.value = reader.bytes();
              break;
            case 3:
              message.leaf = exports.LeafOp.decode(reader, reader.uint32());
              break;
            case 4:
              if ((tag & 7) === 2) {
                const end2 = reader.uint32() + reader.pos;
                while (reader.pos < end2) {
                  message.path.push(reader.int32());
                }
              } else {
                message.path.push(reader.int32());
              }
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          key: (0, helpers_1.isSet)(object.key) ? (0, helpers_1.bytesFromBase64)(object.key) : new Uint8Array(),
          value: (0, helpers_1.isSet)(object.value) ? (0, helpers_1.bytesFromBase64)(object.value) : new Uint8Array(),
          leaf: (0, helpers_1.isSet)(object.leaf) ? exports.LeafOp.fromJSON(object.leaf) : void 0,
          path: Array.isArray(object == null ? void 0 : object.path) ? object.path.map((e2) => Number(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.key !== void 0 && (obj.key = (0, helpers_1.base64FromBytes)(message.key !== void 0 ? message.key : new Uint8Array()));
        message.value !== void 0 && (obj.value = (0, helpers_1.base64FromBytes)(message.value !== void 0 ? message.value : new Uint8Array()));
        message.leaf !== void 0 && (obj.leaf = message.leaf ? exports.LeafOp.toJSON(message.leaf) : void 0);
        if (message.path) {
          obj.path = message.path.map((e2) => Math.round(e2));
        } else {
          obj.path = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseCompressedExistenceProof();
        message.key = object.key ?? new Uint8Array();
        message.value = object.value ?? new Uint8Array();
        message.leaf = object.leaf !== void 0 && object.leaf !== null ? exports.LeafOp.fromPartial(object.leaf) : void 0;
        message.path = ((_a = object.path) == null ? void 0 : _a.map((e2) => e2)) || [];
        return message;
      }
    };
    function createBaseCompressedNonExistenceProof() {
      return {
        key: new Uint8Array(),
        left: void 0,
        right: void 0
      };
    }
    exports.CompressedNonExistenceProof = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.key.length !== 0) {
          writer.uint32(10).bytes(message.key);
        }
        if (message.left !== void 0) {
          exports.CompressedExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();
        }
        if (message.right !== void 0) {
          exports.CompressedExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseCompressedNonExistenceProof();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.key = reader.bytes();
              break;
            case 2:
              message.left = exports.CompressedExistenceProof.decode(reader, reader.uint32());
              break;
            case 3:
              message.right = exports.CompressedExistenceProof.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          key: (0, helpers_1.isSet)(object.key) ? (0, helpers_1.bytesFromBase64)(object.key) : new Uint8Array(),
          left: (0, helpers_1.isSet)(object.left) ? exports.CompressedExistenceProof.fromJSON(object.left) : void 0,
          right: (0, helpers_1.isSet)(object.right) ? exports.CompressedExistenceProof.fromJSON(object.right) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.key !== void 0 && (obj.key = (0, helpers_1.base64FromBytes)(message.key !== void 0 ? message.key : new Uint8Array()));
        message.left !== void 0 && (obj.left = message.left ? exports.CompressedExistenceProof.toJSON(message.left) : void 0);
        message.right !== void 0 && (obj.right = message.right ? exports.CompressedExistenceProof.toJSON(message.right) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseCompressedNonExistenceProof();
        message.key = object.key ?? new Uint8Array();
        message.left = object.left !== void 0 && object.left !== null ? exports.CompressedExistenceProof.fromPartial(object.left) : void 0;
        message.right = object.right !== void 0 && object.right !== null ? exports.CompressedExistenceProof.fromPartial(object.right) : void 0;
        return message;
      }
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/ibc/core/commitment/v1/commitment.js
var require_commitment = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/ibc/core/commitment/v1/commitment.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.MerkleProof = exports.MerklePath = exports.MerklePrefix = exports.MerkleRoot = exports.protobufPackage = void 0;
    var proofs_1 = require_proofs();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "ibc.core.commitment.v1";
    function createBaseMerkleRoot() {
      return {
        hash: new Uint8Array()
      };
    }
    exports.MerkleRoot = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.hash.length !== 0) {
          writer.uint32(10).bytes(message.hash);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMerkleRoot();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.hash = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          hash: (0, helpers_1.isSet)(object.hash) ? (0, helpers_1.bytesFromBase64)(object.hash) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.hash !== void 0 && (obj.hash = (0, helpers_1.base64FromBytes)(message.hash !== void 0 ? message.hash : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMerkleRoot();
        message.hash = object.hash ?? new Uint8Array();
        return message;
      }
    };
    function createBaseMerklePrefix() {
      return {
        keyPrefix: new Uint8Array()
      };
    }
    exports.MerklePrefix = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.keyPrefix.length !== 0) {
          writer.uint32(10).bytes(message.keyPrefix);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMerklePrefix();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.keyPrefix = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          keyPrefix: (0, helpers_1.isSet)(object.keyPrefix) ? (0, helpers_1.bytesFromBase64)(object.keyPrefix) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.keyPrefix !== void 0 && (obj.keyPrefix = (0, helpers_1.base64FromBytes)(message.keyPrefix !== void 0 ? message.keyPrefix : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMerklePrefix();
        message.keyPrefix = object.keyPrefix ?? new Uint8Array();
        return message;
      }
    };
    function createBaseMerklePath() {
      return {
        keyPath: []
      };
    }
    exports.MerklePath = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.keyPath) {
          writer.uint32(10).string(v3);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMerklePath();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.keyPath.push(reader.string());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          keyPath: Array.isArray(object == null ? void 0 : object.keyPath) ? object.keyPath.map((e2) => String(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.keyPath) {
          obj.keyPath = message.keyPath.map((e2) => e2);
        } else {
          obj.keyPath = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseMerklePath();
        message.keyPath = ((_a = object.keyPath) == null ? void 0 : _a.map((e2) => e2)) || [];
        return message;
      }
    };
    function createBaseMerkleProof() {
      return {
        proofs: []
      };
    }
    exports.MerkleProof = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.proofs) {
          proofs_1.CommitmentProof.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMerkleProof();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.proofs.push(proofs_1.CommitmentProof.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          proofs: Array.isArray(object == null ? void 0 : object.proofs) ? object.proofs.map((e2) => proofs_1.CommitmentProof.fromJSON(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.proofs) {
          obj.proofs = message.proofs.map((e2) => e2 ? proofs_1.CommitmentProof.toJSON(e2) : void 0);
        } else {
          obj.proofs = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseMerkleProof();
        message.proofs = ((_a = object.proofs) == null ? void 0 : _a.map((e2) => proofs_1.CommitmentProof.fromPartial(e2))) || [];
        return message;
      }
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/ibc/core/connection/v1/connection.js
var require_connection = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/ibc/core/connection/v1/connection.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Params = exports.Version = exports.ConnectionPaths = exports.ClientPaths = exports.Counterparty = exports.IdentifiedConnection = exports.ConnectionEnd = exports.stateToJSON = exports.stateFromJSON = exports.State = exports.protobufPackage = void 0;
    var commitment_1 = require_commitment();
    var helpers_1 = require_helpers();
    var _m0 = __importStar(require_minimal());
    exports.protobufPackage = "ibc.core.connection.v1";
    var State;
    (function(State2) {
      State2[State2["STATE_UNINITIALIZED_UNSPECIFIED"] = 0] = "STATE_UNINITIALIZED_UNSPECIFIED";
      State2[State2["STATE_INIT"] = 1] = "STATE_INIT";
      State2[State2["STATE_TRYOPEN"] = 2] = "STATE_TRYOPEN";
      State2[State2["STATE_OPEN"] = 3] = "STATE_OPEN";
      State2[State2["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
    })(State = exports.State || (exports.State = {}));
    function stateFromJSON(object) {
      switch (object) {
        case 0:
        case "STATE_UNINITIALIZED_UNSPECIFIED":
          return State.STATE_UNINITIALIZED_UNSPECIFIED;
        case 1:
        case "STATE_INIT":
          return State.STATE_INIT;
        case 2:
        case "STATE_TRYOPEN":
          return State.STATE_TRYOPEN;
        case 3:
        case "STATE_OPEN":
          return State.STATE_OPEN;
        case -1:
        case "UNRECOGNIZED":
        default:
          return State.UNRECOGNIZED;
      }
    }
    exports.stateFromJSON = stateFromJSON;
    function stateToJSON(object) {
      switch (object) {
        case State.STATE_UNINITIALIZED_UNSPECIFIED:
          return "STATE_UNINITIALIZED_UNSPECIFIED";
        case State.STATE_INIT:
          return "STATE_INIT";
        case State.STATE_TRYOPEN:
          return "STATE_TRYOPEN";
        case State.STATE_OPEN:
          return "STATE_OPEN";
        case State.UNRECOGNIZED:
        default:
          return "UNRECOGNIZED";
      }
    }
    exports.stateToJSON = stateToJSON;
    function createBaseConnectionEnd() {
      return {
        clientId: "",
        versions: [],
        state: 0,
        counterparty: void 0,
        delayPeriod: helpers_1.Long.UZERO
      };
    }
    exports.ConnectionEnd = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.clientId !== "") {
          writer.uint32(10).string(message.clientId);
        }
        for (const v3 of message.versions) {
          exports.Version.encode(v3, writer.uint32(18).fork()).ldelim();
        }
        if (message.state !== 0) {
          writer.uint32(24).int32(message.state);
        }
        if (message.counterparty !== void 0) {
          exports.Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();
        }
        if (!message.delayPeriod.isZero()) {
          writer.uint32(40).uint64(message.delayPeriod);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseConnectionEnd();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.clientId = reader.string();
              break;
            case 2:
              message.versions.push(exports.Version.decode(reader, reader.uint32()));
              break;
            case 3:
              message.state = reader.int32();
              break;
            case 4:
              message.counterparty = exports.Counterparty.decode(reader, reader.uint32());
              break;
            case 5:
              message.delayPeriod = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          clientId: (0, helpers_1.isSet)(object.clientId) ? String(object.clientId) : "",
          versions: Array.isArray(object == null ? void 0 : object.versions) ? object.versions.map((e2) => exports.Version.fromJSON(e2)) : [],
          state: (0, helpers_1.isSet)(object.state) ? stateFromJSON(object.state) : 0,
          counterparty: (0, helpers_1.isSet)(object.counterparty) ? exports.Counterparty.fromJSON(object.counterparty) : void 0,
          delayPeriod: (0, helpers_1.isSet)(object.delayPeriod) ? helpers_1.Long.fromValue(object.delayPeriod) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.clientId !== void 0 && (obj.clientId = message.clientId);
        if (message.versions) {
          obj.versions = message.versions.map((e2) => e2 ? exports.Version.toJSON(e2) : void 0);
        } else {
          obj.versions = [];
        }
        message.state !== void 0 && (obj.state = stateToJSON(message.state));
        message.counterparty !== void 0 && (obj.counterparty = message.counterparty ? exports.Counterparty.toJSON(message.counterparty) : void 0);
        message.delayPeriod !== void 0 && (obj.delayPeriod = (message.delayPeriod || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseConnectionEnd();
        message.clientId = object.clientId ?? "";
        message.versions = ((_a = object.versions) == null ? void 0 : _a.map((e2) => exports.Version.fromPartial(e2))) || [];
        message.state = object.state ?? 0;
        message.counterparty = object.counterparty !== void 0 && object.counterparty !== null ? exports.Counterparty.fromPartial(object.counterparty) : void 0;
        message.delayPeriod = object.delayPeriod !== void 0 && object.delayPeriod !== null ? helpers_1.Long.fromValue(object.delayPeriod) : helpers_1.Long.UZERO;
        return message;
      }
    };
    function createBaseIdentifiedConnection() {
      return {
        id: "",
        clientId: "",
        versions: [],
        state: 0,
        counterparty: void 0,
        delayPeriod: helpers_1.Long.UZERO
      };
    }
    exports.IdentifiedConnection = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.id !== "") {
          writer.uint32(10).string(message.id);
        }
        if (message.clientId !== "") {
          writer.uint32(18).string(message.clientId);
        }
        for (const v3 of message.versions) {
          exports.Version.encode(v3, writer.uint32(26).fork()).ldelim();
        }
        if (message.state !== 0) {
          writer.uint32(32).int32(message.state);
        }
        if (message.counterparty !== void 0) {
          exports.Counterparty.encode(message.counterparty, writer.uint32(42).fork()).ldelim();
        }
        if (!message.delayPeriod.isZero()) {
          writer.uint32(48).uint64(message.delayPeriod);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseIdentifiedConnection();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.id = reader.string();
              break;
            case 2:
              message.clientId = reader.string();
              break;
            case 3:
              message.versions.push(exports.Version.decode(reader, reader.uint32()));
              break;
            case 4:
              message.state = reader.int32();
              break;
            case 5:
              message.counterparty = exports.Counterparty.decode(reader, reader.uint32());
              break;
            case 6:
              message.delayPeriod = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          id: (0, helpers_1.isSet)(object.id) ? String(object.id) : "",
          clientId: (0, helpers_1.isSet)(object.clientId) ? String(object.clientId) : "",
          versions: Array.isArray(object == null ? void 0 : object.versions) ? object.versions.map((e2) => exports.Version.fromJSON(e2)) : [],
          state: (0, helpers_1.isSet)(object.state) ? stateFromJSON(object.state) : 0,
          counterparty: (0, helpers_1.isSet)(object.counterparty) ? exports.Counterparty.fromJSON(object.counterparty) : void 0,
          delayPeriod: (0, helpers_1.isSet)(object.delayPeriod) ? helpers_1.Long.fromValue(object.delayPeriod) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.id !== void 0 && (obj.id = message.id);
        message.clientId !== void 0 && (obj.clientId = message.clientId);
        if (message.versions) {
          obj.versions = message.versions.map((e2) => e2 ? exports.Version.toJSON(e2) : void 0);
        } else {
          obj.versions = [];
        }
        message.state !== void 0 && (obj.state = stateToJSON(message.state));
        message.counterparty !== void 0 && (obj.counterparty = message.counterparty ? exports.Counterparty.toJSON(message.counterparty) : void 0);
        message.delayPeriod !== void 0 && (obj.delayPeriod = (message.delayPeriod || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseIdentifiedConnection();
        message.id = object.id ?? "";
        message.clientId = object.clientId ?? "";
        message.versions = ((_a = object.versions) == null ? void 0 : _a.map((e2) => exports.Version.fromPartial(e2))) || [];
        message.state = object.state ?? 0;
        message.counterparty = object.counterparty !== void 0 && object.counterparty !== null ? exports.Counterparty.fromPartial(object.counterparty) : void 0;
        message.delayPeriod = object.delayPeriod !== void 0 && object.delayPeriod !== null ? helpers_1.Long.fromValue(object.delayPeriod) : helpers_1.Long.UZERO;
        return message;
      }
    };
    function createBaseCounterparty() {
      return {
        clientId: "",
        connectionId: "",
        prefix: void 0
      };
    }
    exports.Counterparty = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.clientId !== "") {
          writer.uint32(10).string(message.clientId);
        }
        if (message.connectionId !== "") {
          writer.uint32(18).string(message.connectionId);
        }
        if (message.prefix !== void 0) {
          commitment_1.MerklePrefix.encode(message.prefix, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseCounterparty();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.clientId = reader.string();
              break;
            case 2:
              message.connectionId = reader.string();
              break;
            case 3:
              message.prefix = commitment_1.MerklePrefix.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          clientId: (0, helpers_1.isSet)(object.clientId) ? String(object.clientId) : "",
          connectionId: (0, helpers_1.isSet)(object.connectionId) ? String(object.connectionId) : "",
          prefix: (0, helpers_1.isSet)(object.prefix) ? commitment_1.MerklePrefix.fromJSON(object.prefix) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.clientId !== void 0 && (obj.clientId = message.clientId);
        message.connectionId !== void 0 && (obj.connectionId = message.connectionId);
        message.prefix !== void 0 && (obj.prefix = message.prefix ? commitment_1.MerklePrefix.toJSON(message.prefix) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseCounterparty();
        message.clientId = object.clientId ?? "";
        message.connectionId = object.connectionId ?? "";
        message.prefix = object.prefix !== void 0 && object.prefix !== null ? commitment_1.MerklePrefix.fromPartial(object.prefix) : void 0;
        return message;
      }
    };
    function createBaseClientPaths() {
      return {
        paths: []
      };
    }
    exports.ClientPaths = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.paths) {
          writer.uint32(10).string(v3);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseClientPaths();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.paths.push(reader.string());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          paths: Array.isArray(object == null ? void 0 : object.paths) ? object.paths.map((e2) => String(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.paths) {
          obj.paths = message.paths.map((e2) => e2);
        } else {
          obj.paths = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseClientPaths();
        message.paths = ((_a = object.paths) == null ? void 0 : _a.map((e2) => e2)) || [];
        return message;
      }
    };
    function createBaseConnectionPaths() {
      return {
        clientId: "",
        paths: []
      };
    }
    exports.ConnectionPaths = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.clientId !== "") {
          writer.uint32(10).string(message.clientId);
        }
        for (const v3 of message.paths) {
          writer.uint32(18).string(v3);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseConnectionPaths();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.clientId = reader.string();
              break;
            case 2:
              message.paths.push(reader.string());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          clientId: (0, helpers_1.isSet)(object.clientId) ? String(object.clientId) : "",
          paths: Array.isArray(object == null ? void 0 : object.paths) ? object.paths.map((e2) => String(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.clientId !== void 0 && (obj.clientId = message.clientId);
        if (message.paths) {
          obj.paths = message.paths.map((e2) => e2);
        } else {
          obj.paths = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseConnectionPaths();
        message.clientId = object.clientId ?? "";
        message.paths = ((_a = object.paths) == null ? void 0 : _a.map((e2) => e2)) || [];
        return message;
      }
    };
    function createBaseVersion() {
      return {
        identifier: "",
        features: []
      };
    }
    exports.Version = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.identifier !== "") {
          writer.uint32(10).string(message.identifier);
        }
        for (const v3 of message.features) {
          writer.uint32(18).string(v3);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseVersion();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.identifier = reader.string();
              break;
            case 2:
              message.features.push(reader.string());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          identifier: (0, helpers_1.isSet)(object.identifier) ? String(object.identifier) : "",
          features: Array.isArray(object == null ? void 0 : object.features) ? object.features.map((e2) => String(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.identifier !== void 0 && (obj.identifier = message.identifier);
        if (message.features) {
          obj.features = message.features.map((e2) => e2);
        } else {
          obj.features = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseVersion();
        message.identifier = object.identifier ?? "";
        message.features = ((_a = object.features) == null ? void 0 : _a.map((e2) => e2)) || [];
        return message;
      }
    };
    function createBaseParams() {
      return {
        maxExpectedTimePerBlock: helpers_1.Long.UZERO
      };
    }
    exports.Params = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.maxExpectedTimePerBlock.isZero()) {
          writer.uint32(8).uint64(message.maxExpectedTimePerBlock);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseParams();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.maxExpectedTimePerBlock = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          maxExpectedTimePerBlock: (0, helpers_1.isSet)(object.maxExpectedTimePerBlock) ? helpers_1.Long.fromValue(object.maxExpectedTimePerBlock) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.maxExpectedTimePerBlock !== void 0 && (obj.maxExpectedTimePerBlock = (message.maxExpectedTimePerBlock || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseParams();
        message.maxExpectedTimePerBlock = object.maxExpectedTimePerBlock !== void 0 && object.maxExpectedTimePerBlock !== null ? helpers_1.Long.fromValue(object.maxExpectedTimePerBlock) : helpers_1.Long.UZERO;
        return message;
      }
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/ibc/core/connection/v1/tx.js
var require_tx10 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/ibc/core/connection/v1/tx.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.MsgClientImpl = exports.MsgConnectionOpenConfirmResponse = exports.MsgConnectionOpenConfirm = exports.MsgConnectionOpenAckResponse = exports.MsgConnectionOpenAck = exports.MsgConnectionOpenTryResponse = exports.MsgConnectionOpenTry = exports.MsgConnectionOpenInitResponse = exports.MsgConnectionOpenInit = exports.protobufPackage = void 0;
    var connection_1 = require_connection();
    var any_1 = require_any();
    var client_1 = require_client();
    var helpers_1 = require_helpers();
    var _m0 = __importStar(require_minimal());
    exports.protobufPackage = "ibc.core.connection.v1";
    function createBaseMsgConnectionOpenInit() {
      return {
        clientId: "",
        counterparty: void 0,
        version: void 0,
        delayPeriod: helpers_1.Long.UZERO,
        signer: ""
      };
    }
    exports.MsgConnectionOpenInit = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.clientId !== "") {
          writer.uint32(10).string(message.clientId);
        }
        if (message.counterparty !== void 0) {
          connection_1.Counterparty.encode(message.counterparty, writer.uint32(18).fork()).ldelim();
        }
        if (message.version !== void 0) {
          connection_1.Version.encode(message.version, writer.uint32(26).fork()).ldelim();
        }
        if (!message.delayPeriod.isZero()) {
          writer.uint32(32).uint64(message.delayPeriod);
        }
        if (message.signer !== "") {
          writer.uint32(42).string(message.signer);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgConnectionOpenInit();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.clientId = reader.string();
              break;
            case 2:
              message.counterparty = connection_1.Counterparty.decode(reader, reader.uint32());
              break;
            case 3:
              message.version = connection_1.Version.decode(reader, reader.uint32());
              break;
            case 4:
              message.delayPeriod = reader.uint64();
              break;
            case 5:
              message.signer = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          clientId: (0, helpers_1.isSet)(object.clientId) ? String(object.clientId) : "",
          counterparty: (0, helpers_1.isSet)(object.counterparty) ? connection_1.Counterparty.fromJSON(object.counterparty) : void 0,
          version: (0, helpers_1.isSet)(object.version) ? connection_1.Version.fromJSON(object.version) : void 0,
          delayPeriod: (0, helpers_1.isSet)(object.delayPeriod) ? helpers_1.Long.fromValue(object.delayPeriod) : helpers_1.Long.UZERO,
          signer: (0, helpers_1.isSet)(object.signer) ? String(object.signer) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.clientId !== void 0 && (obj.clientId = message.clientId);
        message.counterparty !== void 0 && (obj.counterparty = message.counterparty ? connection_1.Counterparty.toJSON(message.counterparty) : void 0);
        message.version !== void 0 && (obj.version = message.version ? connection_1.Version.toJSON(message.version) : void 0);
        message.delayPeriod !== void 0 && (obj.delayPeriod = (message.delayPeriod || helpers_1.Long.UZERO).toString());
        message.signer !== void 0 && (obj.signer = message.signer);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgConnectionOpenInit();
        message.clientId = object.clientId ?? "";
        message.counterparty = object.counterparty !== void 0 && object.counterparty !== null ? connection_1.Counterparty.fromPartial(object.counterparty) : void 0;
        message.version = object.version !== void 0 && object.version !== null ? connection_1.Version.fromPartial(object.version) : void 0;
        message.delayPeriod = object.delayPeriod !== void 0 && object.delayPeriod !== null ? helpers_1.Long.fromValue(object.delayPeriod) : helpers_1.Long.UZERO;
        message.signer = object.signer ?? "";
        return message;
      }
    };
    function createBaseMsgConnectionOpenInitResponse() {
      return {};
    }
    exports.MsgConnectionOpenInitResponse = {
      encode(_3, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgConnectionOpenInitResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_3) {
        return {};
      },
      toJSON(_3) {
        const obj = {};
        return obj;
      },
      fromPartial(_3) {
        const message = createBaseMsgConnectionOpenInitResponse();
        return message;
      }
    };
    function createBaseMsgConnectionOpenTry() {
      return {
        clientId: "",
        previousConnectionId: "",
        clientState: void 0,
        counterparty: void 0,
        delayPeriod: helpers_1.Long.UZERO,
        counterpartyVersions: [],
        proofHeight: void 0,
        proofInit: new Uint8Array(),
        proofClient: new Uint8Array(),
        proofConsensus: new Uint8Array(),
        consensusHeight: void 0,
        signer: ""
      };
    }
    exports.MsgConnectionOpenTry = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.clientId !== "") {
          writer.uint32(10).string(message.clientId);
        }
        if (message.previousConnectionId !== "") {
          writer.uint32(18).string(message.previousConnectionId);
        }
        if (message.clientState !== void 0) {
          any_1.Any.encode(message.clientState, writer.uint32(26).fork()).ldelim();
        }
        if (message.counterparty !== void 0) {
          connection_1.Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();
        }
        if (!message.delayPeriod.isZero()) {
          writer.uint32(40).uint64(message.delayPeriod);
        }
        for (const v3 of message.counterpartyVersions) {
          connection_1.Version.encode(v3, writer.uint32(50).fork()).ldelim();
        }
        if (message.proofHeight !== void 0) {
          client_1.Height.encode(message.proofHeight, writer.uint32(58).fork()).ldelim();
        }
        if (message.proofInit.length !== 0) {
          writer.uint32(66).bytes(message.proofInit);
        }
        if (message.proofClient.length !== 0) {
          writer.uint32(74).bytes(message.proofClient);
        }
        if (message.proofConsensus.length !== 0) {
          writer.uint32(82).bytes(message.proofConsensus);
        }
        if (message.consensusHeight !== void 0) {
          client_1.Height.encode(message.consensusHeight, writer.uint32(90).fork()).ldelim();
        }
        if (message.signer !== "") {
          writer.uint32(98).string(message.signer);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgConnectionOpenTry();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.clientId = reader.string();
              break;
            case 2:
              message.previousConnectionId = reader.string();
              break;
            case 3:
              message.clientState = any_1.Any.decode(reader, reader.uint32());
              break;
            case 4:
              message.counterparty = connection_1.Counterparty.decode(reader, reader.uint32());
              break;
            case 5:
              message.delayPeriod = reader.uint64();
              break;
            case 6:
              message.counterpartyVersions.push(connection_1.Version.decode(reader, reader.uint32()));
              break;
            case 7:
              message.proofHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            case 8:
              message.proofInit = reader.bytes();
              break;
            case 9:
              message.proofClient = reader.bytes();
              break;
            case 10:
              message.proofConsensus = reader.bytes();
              break;
            case 11:
              message.consensusHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            case 12:
              message.signer = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          clientId: (0, helpers_1.isSet)(object.clientId) ? String(object.clientId) : "",
          previousConnectionId: (0, helpers_1.isSet)(object.previousConnectionId) ? String(object.previousConnectionId) : "",
          clientState: (0, helpers_1.isSet)(object.clientState) ? any_1.Any.fromJSON(object.clientState) : void 0,
          counterparty: (0, helpers_1.isSet)(object.counterparty) ? connection_1.Counterparty.fromJSON(object.counterparty) : void 0,
          delayPeriod: (0, helpers_1.isSet)(object.delayPeriod) ? helpers_1.Long.fromValue(object.delayPeriod) : helpers_1.Long.UZERO,
          counterpartyVersions: Array.isArray(object == null ? void 0 : object.counterpartyVersions) ? object.counterpartyVersions.map((e2) => connection_1.Version.fromJSON(e2)) : [],
          proofHeight: (0, helpers_1.isSet)(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : void 0,
          proofInit: (0, helpers_1.isSet)(object.proofInit) ? (0, helpers_1.bytesFromBase64)(object.proofInit) : new Uint8Array(),
          proofClient: (0, helpers_1.isSet)(object.proofClient) ? (0, helpers_1.bytesFromBase64)(object.proofClient) : new Uint8Array(),
          proofConsensus: (0, helpers_1.isSet)(object.proofConsensus) ? (0, helpers_1.bytesFromBase64)(object.proofConsensus) : new Uint8Array(),
          consensusHeight: (0, helpers_1.isSet)(object.consensusHeight) ? client_1.Height.fromJSON(object.consensusHeight) : void 0,
          signer: (0, helpers_1.isSet)(object.signer) ? String(object.signer) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.clientId !== void 0 && (obj.clientId = message.clientId);
        message.previousConnectionId !== void 0 && (obj.previousConnectionId = message.previousConnectionId);
        message.clientState !== void 0 && (obj.clientState = message.clientState ? any_1.Any.toJSON(message.clientState) : void 0);
        message.counterparty !== void 0 && (obj.counterparty = message.counterparty ? connection_1.Counterparty.toJSON(message.counterparty) : void 0);
        message.delayPeriod !== void 0 && (obj.delayPeriod = (message.delayPeriod || helpers_1.Long.UZERO).toString());
        if (message.counterpartyVersions) {
          obj.counterpartyVersions = message.counterpartyVersions.map((e2) => e2 ? connection_1.Version.toJSON(e2) : void 0);
        } else {
          obj.counterpartyVersions = [];
        }
        message.proofHeight !== void 0 && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : void 0);
        message.proofInit !== void 0 && (obj.proofInit = (0, helpers_1.base64FromBytes)(message.proofInit !== void 0 ? message.proofInit : new Uint8Array()));
        message.proofClient !== void 0 && (obj.proofClient = (0, helpers_1.base64FromBytes)(message.proofClient !== void 0 ? message.proofClient : new Uint8Array()));
        message.proofConsensus !== void 0 && (obj.proofConsensus = (0, helpers_1.base64FromBytes)(message.proofConsensus !== void 0 ? message.proofConsensus : new Uint8Array()));
        message.consensusHeight !== void 0 && (obj.consensusHeight = message.consensusHeight ? client_1.Height.toJSON(message.consensusHeight) : void 0);
        message.signer !== void 0 && (obj.signer = message.signer);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseMsgConnectionOpenTry();
        message.clientId = object.clientId ?? "";
        message.previousConnectionId = object.previousConnectionId ?? "";
        message.clientState = object.clientState !== void 0 && object.clientState !== null ? any_1.Any.fromPartial(object.clientState) : void 0;
        message.counterparty = object.counterparty !== void 0 && object.counterparty !== null ? connection_1.Counterparty.fromPartial(object.counterparty) : void 0;
        message.delayPeriod = object.delayPeriod !== void 0 && object.delayPeriod !== null ? helpers_1.Long.fromValue(object.delayPeriod) : helpers_1.Long.UZERO;
        message.counterpartyVersions = ((_a = object.counterpartyVersions) == null ? void 0 : _a.map((e2) => connection_1.Version.fromPartial(e2))) || [];
        message.proofHeight = object.proofHeight !== void 0 && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : void 0;
        message.proofInit = object.proofInit ?? new Uint8Array();
        message.proofClient = object.proofClient ?? new Uint8Array();
        message.proofConsensus = object.proofConsensus ?? new Uint8Array();
        message.consensusHeight = object.consensusHeight !== void 0 && object.consensusHeight !== null ? client_1.Height.fromPartial(object.consensusHeight) : void 0;
        message.signer = object.signer ?? "";
        return message;
      }
    };
    function createBaseMsgConnectionOpenTryResponse() {
      return {};
    }
    exports.MsgConnectionOpenTryResponse = {
      encode(_3, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgConnectionOpenTryResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_3) {
        return {};
      },
      toJSON(_3) {
        const obj = {};
        return obj;
      },
      fromPartial(_3) {
        const message = createBaseMsgConnectionOpenTryResponse();
        return message;
      }
    };
    function createBaseMsgConnectionOpenAck() {
      return {
        connectionId: "",
        counterpartyConnectionId: "",
        version: void 0,
        clientState: void 0,
        proofHeight: void 0,
        proofTry: new Uint8Array(),
        proofClient: new Uint8Array(),
        proofConsensus: new Uint8Array(),
        consensusHeight: void 0,
        signer: ""
      };
    }
    exports.MsgConnectionOpenAck = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.connectionId !== "") {
          writer.uint32(10).string(message.connectionId);
        }
        if (message.counterpartyConnectionId !== "") {
          writer.uint32(18).string(message.counterpartyConnectionId);
        }
        if (message.version !== void 0) {
          connection_1.Version.encode(message.version, writer.uint32(26).fork()).ldelim();
        }
        if (message.clientState !== void 0) {
          any_1.Any.encode(message.clientState, writer.uint32(34).fork()).ldelim();
        }
        if (message.proofHeight !== void 0) {
          client_1.Height.encode(message.proofHeight, writer.uint32(42).fork()).ldelim();
        }
        if (message.proofTry.length !== 0) {
          writer.uint32(50).bytes(message.proofTry);
        }
        if (message.proofClient.length !== 0) {
          writer.uint32(58).bytes(message.proofClient);
        }
        if (message.proofConsensus.length !== 0) {
          writer.uint32(66).bytes(message.proofConsensus);
        }
        if (message.consensusHeight !== void 0) {
          client_1.Height.encode(message.consensusHeight, writer.uint32(74).fork()).ldelim();
        }
        if (message.signer !== "") {
          writer.uint32(82).string(message.signer);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgConnectionOpenAck();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.connectionId = reader.string();
              break;
            case 2:
              message.counterpartyConnectionId = reader.string();
              break;
            case 3:
              message.version = connection_1.Version.decode(reader, reader.uint32());
              break;
            case 4:
              message.clientState = any_1.Any.decode(reader, reader.uint32());
              break;
            case 5:
              message.proofHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            case 6:
              message.proofTry = reader.bytes();
              break;
            case 7:
              message.proofClient = reader.bytes();
              break;
            case 8:
              message.proofConsensus = reader.bytes();
              break;
            case 9:
              message.consensusHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            case 10:
              message.signer = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          connectionId: (0, helpers_1.isSet)(object.connectionId) ? String(object.connectionId) : "",
          counterpartyConnectionId: (0, helpers_1.isSet)(object.counterpartyConnectionId) ? String(object.counterpartyConnectionId) : "",
          version: (0, helpers_1.isSet)(object.version) ? connection_1.Version.fromJSON(object.version) : void 0,
          clientState: (0, helpers_1.isSet)(object.clientState) ? any_1.Any.fromJSON(object.clientState) : void 0,
          proofHeight: (0, helpers_1.isSet)(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : void 0,
          proofTry: (0, helpers_1.isSet)(object.proofTry) ? (0, helpers_1.bytesFromBase64)(object.proofTry) : new Uint8Array(),
          proofClient: (0, helpers_1.isSet)(object.proofClient) ? (0, helpers_1.bytesFromBase64)(object.proofClient) : new Uint8Array(),
          proofConsensus: (0, helpers_1.isSet)(object.proofConsensus) ? (0, helpers_1.bytesFromBase64)(object.proofConsensus) : new Uint8Array(),
          consensusHeight: (0, helpers_1.isSet)(object.consensusHeight) ? client_1.Height.fromJSON(object.consensusHeight) : void 0,
          signer: (0, helpers_1.isSet)(object.signer) ? String(object.signer) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.connectionId !== void 0 && (obj.connectionId = message.connectionId);
        message.counterpartyConnectionId !== void 0 && (obj.counterpartyConnectionId = message.counterpartyConnectionId);
        message.version !== void 0 && (obj.version = message.version ? connection_1.Version.toJSON(message.version) : void 0);
        message.clientState !== void 0 && (obj.clientState = message.clientState ? any_1.Any.toJSON(message.clientState) : void 0);
        message.proofHeight !== void 0 && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : void 0);
        message.proofTry !== void 0 && (obj.proofTry = (0, helpers_1.base64FromBytes)(message.proofTry !== void 0 ? message.proofTry : new Uint8Array()));
        message.proofClient !== void 0 && (obj.proofClient = (0, helpers_1.base64FromBytes)(message.proofClient !== void 0 ? message.proofClient : new Uint8Array()));
        message.proofConsensus !== void 0 && (obj.proofConsensus = (0, helpers_1.base64FromBytes)(message.proofConsensus !== void 0 ? message.proofConsensus : new Uint8Array()));
        message.consensusHeight !== void 0 && (obj.consensusHeight = message.consensusHeight ? client_1.Height.toJSON(message.consensusHeight) : void 0);
        message.signer !== void 0 && (obj.signer = message.signer);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgConnectionOpenAck();
        message.connectionId = object.connectionId ?? "";
        message.counterpartyConnectionId = object.counterpartyConnectionId ?? "";
        message.version = object.version !== void 0 && object.version !== null ? connection_1.Version.fromPartial(object.version) : void 0;
        message.clientState = object.clientState !== void 0 && object.clientState !== null ? any_1.Any.fromPartial(object.clientState) : void 0;
        message.proofHeight = object.proofHeight !== void 0 && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : void 0;
        message.proofTry = object.proofTry ?? new Uint8Array();
        message.proofClient = object.proofClient ?? new Uint8Array();
        message.proofConsensus = object.proofConsensus ?? new Uint8Array();
        message.consensusHeight = object.consensusHeight !== void 0 && object.consensusHeight !== null ? client_1.Height.fromPartial(object.consensusHeight) : void 0;
        message.signer = object.signer ?? "";
        return message;
      }
    };
    function createBaseMsgConnectionOpenAckResponse() {
      return {};
    }
    exports.MsgConnectionOpenAckResponse = {
      encode(_3, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgConnectionOpenAckResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_3) {
        return {};
      },
      toJSON(_3) {
        const obj = {};
        return obj;
      },
      fromPartial(_3) {
        const message = createBaseMsgConnectionOpenAckResponse();
        return message;
      }
    };
    function createBaseMsgConnectionOpenConfirm() {
      return {
        connectionId: "",
        proofAck: new Uint8Array(),
        proofHeight: void 0,
        signer: ""
      };
    }
    exports.MsgConnectionOpenConfirm = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.connectionId !== "") {
          writer.uint32(10).string(message.connectionId);
        }
        if (message.proofAck.length !== 0) {
          writer.uint32(18).bytes(message.proofAck);
        }
        if (message.proofHeight !== void 0) {
          client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();
        }
        if (message.signer !== "") {
          writer.uint32(34).string(message.signer);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgConnectionOpenConfirm();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.connectionId = reader.string();
              break;
            case 2:
              message.proofAck = reader.bytes();
              break;
            case 3:
              message.proofHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            case 4:
              message.signer = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          connectionId: (0, helpers_1.isSet)(object.connectionId) ? String(object.connectionId) : "",
          proofAck: (0, helpers_1.isSet)(object.proofAck) ? (0, helpers_1.bytesFromBase64)(object.proofAck) : new Uint8Array(),
          proofHeight: (0, helpers_1.isSet)(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : void 0,
          signer: (0, helpers_1.isSet)(object.signer) ? String(object.signer) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.connectionId !== void 0 && (obj.connectionId = message.connectionId);
        message.proofAck !== void 0 && (obj.proofAck = (0, helpers_1.base64FromBytes)(message.proofAck !== void 0 ? message.proofAck : new Uint8Array()));
        message.proofHeight !== void 0 && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : void 0);
        message.signer !== void 0 && (obj.signer = message.signer);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgConnectionOpenConfirm();
        message.connectionId = object.connectionId ?? "";
        message.proofAck = object.proofAck ?? new Uint8Array();
        message.proofHeight = object.proofHeight !== void 0 && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : void 0;
        message.signer = object.signer ?? "";
        return message;
      }
    };
    function createBaseMsgConnectionOpenConfirmResponse() {
      return {};
    }
    exports.MsgConnectionOpenConfirmResponse = {
      encode(_3, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgConnectionOpenConfirmResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_3) {
        return {};
      },
      toJSON(_3) {
        const obj = {};
        return obj;
      },
      fromPartial(_3) {
        const message = createBaseMsgConnectionOpenConfirmResponse();
        return message;
      }
    };
    var MsgClientImpl = class {
      constructor(rpc) {
        this.rpc = rpc;
        this.ConnectionOpenInit = this.ConnectionOpenInit.bind(this);
        this.ConnectionOpenTry = this.ConnectionOpenTry.bind(this);
        this.ConnectionOpenAck = this.ConnectionOpenAck.bind(this);
        this.ConnectionOpenConfirm = this.ConnectionOpenConfirm.bind(this);
      }
      ConnectionOpenInit(request) {
        const data = exports.MsgConnectionOpenInit.encode(request).finish();
        const promise = this.rpc.request("ibc.core.connection.v1.Msg", "ConnectionOpenInit", data);
        return promise.then((data2) => exports.MsgConnectionOpenInitResponse.decode(new _m0.Reader(data2)));
      }
      ConnectionOpenTry(request) {
        const data = exports.MsgConnectionOpenTry.encode(request).finish();
        const promise = this.rpc.request("ibc.core.connection.v1.Msg", "ConnectionOpenTry", data);
        return promise.then((data2) => exports.MsgConnectionOpenTryResponse.decode(new _m0.Reader(data2)));
      }
      ConnectionOpenAck(request) {
        const data = exports.MsgConnectionOpenAck.encode(request).finish();
        const promise = this.rpc.request("ibc.core.connection.v1.Msg", "ConnectionOpenAck", data);
        return promise.then((data2) => exports.MsgConnectionOpenAckResponse.decode(new _m0.Reader(data2)));
      }
      ConnectionOpenConfirm(request) {
        const data = exports.MsgConnectionOpenConfirm.encode(request).finish();
        const promise = this.rpc.request("ibc.core.connection.v1.Msg", "ConnectionOpenConfirm", data);
        return promise.then((data2) => exports.MsgConnectionOpenConfirmResponse.decode(new _m0.Reader(data2)));
      }
    };
    exports.MsgClientImpl = MsgClientImpl;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/ibc/messages.js
var require_messages6 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/ibc/messages.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isMsgTransferEncodeObject = exports.ibcTypes = void 0;
    var tx_1 = require_tx7();
    var tx_2 = require_tx8();
    var tx_3 = require_tx9();
    var tx_4 = require_tx10();
    exports.ibcTypes = [
      ["/ibc.applications.transfer.v1.MsgTransfer", tx_1.MsgTransfer],
      ["/ibc.core.channel.v1.MsgAcknowledgement", tx_2.MsgAcknowledgement],
      ["/ibc.core.channel.v1.MsgChannelCloseConfirm", tx_2.MsgChannelCloseConfirm],
      ["/ibc.core.channel.v1.MsgChannelCloseInit", tx_2.MsgChannelCloseInit],
      ["/ibc.core.channel.v1.MsgChannelOpenAck", tx_2.MsgChannelOpenAck],
      ["/ibc.core.channel.v1.MsgChannelOpenConfirm", tx_2.MsgChannelOpenConfirm],
      ["/ibc.core.channel.v1.MsgChannelOpenInit", tx_2.MsgChannelOpenInit],
      ["/ibc.core.channel.v1.MsgChannelOpenTry", tx_2.MsgChannelOpenTry],
      ["/ibc.core.channel.v1.MsgRecvPacket", tx_2.MsgRecvPacket],
      ["/ibc.core.channel.v1.MsgTimeout", tx_2.MsgTimeout],
      ["/ibc.core.channel.v1.MsgTimeoutOnClose", tx_2.MsgTimeoutOnClose],
      ["/ibc.core.client.v1.MsgCreateClient", tx_3.MsgCreateClient],
      ["/ibc.core.client.v1.MsgSubmitMisbehaviour", tx_3.MsgSubmitMisbehaviour],
      ["/ibc.core.client.v1.MsgUpdateClient", tx_3.MsgUpdateClient],
      ["/ibc.core.client.v1.MsgUpgradeClient", tx_3.MsgUpgradeClient],
      ["/ibc.core.connection.v1.MsgConnectionOpenAck", tx_4.MsgConnectionOpenAck],
      ["/ibc.core.connection.v1.MsgConnectionOpenConfirm", tx_4.MsgConnectionOpenConfirm],
      ["/ibc.core.connection.v1.MsgConnectionOpenInit", tx_4.MsgConnectionOpenInit],
      ["/ibc.core.connection.v1.MsgConnectionOpenTry", tx_4.MsgConnectionOpenTry]
    ];
    function isMsgTransferEncodeObject(object) {
      return object.typeUrl === "/ibc.applications.transfer.v1.MsgTransfer";
    }
    exports.isMsgTransferEncodeObject = isMsgTransferEncodeObject;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/ibc/applications/transfer/v1/transfer.js
var require_transfer = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/ibc/applications/transfer/v1/transfer.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Params = exports.DenomTrace = exports.protobufPackage = void 0;
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "ibc.applications.transfer.v1";
    function createBaseDenomTrace() {
      return {
        path: "",
        baseDenom: ""
      };
    }
    exports.DenomTrace = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.path !== "") {
          writer.uint32(10).string(message.path);
        }
        if (message.baseDenom !== "") {
          writer.uint32(18).string(message.baseDenom);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseDenomTrace();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.path = reader.string();
              break;
            case 2:
              message.baseDenom = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          path: (0, helpers_1.isSet)(object.path) ? String(object.path) : "",
          baseDenom: (0, helpers_1.isSet)(object.baseDenom) ? String(object.baseDenom) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.path !== void 0 && (obj.path = message.path);
        message.baseDenom !== void 0 && (obj.baseDenom = message.baseDenom);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseDenomTrace();
        message.path = object.path ?? "";
        message.baseDenom = object.baseDenom ?? "";
        return message;
      }
    };
    function createBaseParams() {
      return {
        sendEnabled: false,
        receiveEnabled: false
      };
    }
    exports.Params = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.sendEnabled === true) {
          writer.uint32(8).bool(message.sendEnabled);
        }
        if (message.receiveEnabled === true) {
          writer.uint32(16).bool(message.receiveEnabled);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseParams();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.sendEnabled = reader.bool();
              break;
            case 2:
              message.receiveEnabled = reader.bool();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          sendEnabled: (0, helpers_1.isSet)(object.sendEnabled) ? Boolean(object.sendEnabled) : false,
          receiveEnabled: (0, helpers_1.isSet)(object.receiveEnabled) ? Boolean(object.receiveEnabled) : false
        };
      },
      toJSON(message) {
        const obj = {};
        message.sendEnabled !== void 0 && (obj.sendEnabled = message.sendEnabled);
        message.receiveEnabled !== void 0 && (obj.receiveEnabled = message.receiveEnabled);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseParams();
        message.sendEnabled = object.sendEnabled ?? false;
        message.receiveEnabled = object.receiveEnabled ?? false;
        return message;
      }
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/ibc/applications/transfer/v1/query.js
var require_query7 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/ibc/applications/transfer/v1/query.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.QueryClientImpl = exports.QueryEscrowAddressResponse = exports.QueryEscrowAddressRequest = exports.QueryDenomHashResponse = exports.QueryDenomHashRequest = exports.QueryParamsResponse = exports.QueryParamsRequest = exports.QueryDenomTracesResponse = exports.QueryDenomTracesRequest = exports.QueryDenomTraceResponse = exports.QueryDenomTraceRequest = exports.protobufPackage = void 0;
    var pagination_1 = require_pagination();
    var transfer_1 = require_transfer();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "ibc.applications.transfer.v1";
    function createBaseQueryDenomTraceRequest() {
      return {
        hash: ""
      };
    }
    exports.QueryDenomTraceRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.hash !== "") {
          writer.uint32(10).string(message.hash);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDenomTraceRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.hash = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          hash: (0, helpers_1.isSet)(object.hash) ? String(object.hash) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.hash !== void 0 && (obj.hash = message.hash);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryDenomTraceRequest();
        message.hash = object.hash ?? "";
        return message;
      }
    };
    function createBaseQueryDenomTraceResponse() {
      return {
        denomTrace: void 0
      };
    }
    exports.QueryDenomTraceResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.denomTrace !== void 0) {
          transfer_1.DenomTrace.encode(message.denomTrace, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDenomTraceResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.denomTrace = transfer_1.DenomTrace.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          denomTrace: (0, helpers_1.isSet)(object.denomTrace) ? transfer_1.DenomTrace.fromJSON(object.denomTrace) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.denomTrace !== void 0 && (obj.denomTrace = message.denomTrace ? transfer_1.DenomTrace.toJSON(message.denomTrace) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryDenomTraceResponse();
        message.denomTrace = object.denomTrace !== void 0 && object.denomTrace !== null ? transfer_1.DenomTrace.fromPartial(object.denomTrace) : void 0;
        return message;
      }
    };
    function createBaseQueryDenomTracesRequest() {
      return {
        pagination: void 0
      };
    }
    exports.QueryDenomTracesRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDenomTracesRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryDenomTracesRequest();
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryDenomTracesResponse() {
      return {
        denomTraces: [],
        pagination: void 0
      };
    }
    exports.QueryDenomTracesResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.denomTraces) {
          transfer_1.DenomTrace.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDenomTracesResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.denomTraces.push(transfer_1.DenomTrace.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          denomTraces: Array.isArray(object == null ? void 0 : object.denomTraces) ? object.denomTraces.map((e2) => transfer_1.DenomTrace.fromJSON(e2)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.denomTraces) {
          obj.denomTraces = message.denomTraces.map((e2) => e2 ? transfer_1.DenomTrace.toJSON(e2) : void 0);
        } else {
          obj.denomTraces = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryDenomTracesResponse();
        message.denomTraces = ((_a = object.denomTraces) == null ? void 0 : _a.map((e2) => transfer_1.DenomTrace.fromPartial(e2))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryParamsRequest() {
      return {};
    }
    exports.QueryParamsRequest = {
      encode(_3, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryParamsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_3) {
        return {};
      },
      toJSON(_3) {
        const obj = {};
        return obj;
      },
      fromPartial(_3) {
        const message = createBaseQueryParamsRequest();
        return message;
      }
    };
    function createBaseQueryParamsResponse() {
      return {
        params: void 0
      };
    }
    exports.QueryParamsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.params !== void 0) {
          transfer_1.Params.encode(message.params, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryParamsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.params = transfer_1.Params.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          params: (0, helpers_1.isSet)(object.params) ? transfer_1.Params.fromJSON(object.params) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.params !== void 0 && (obj.params = message.params ? transfer_1.Params.toJSON(message.params) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryParamsResponse();
        message.params = object.params !== void 0 && object.params !== null ? transfer_1.Params.fromPartial(object.params) : void 0;
        return message;
      }
    };
    function createBaseQueryDenomHashRequest() {
      return {
        trace: ""
      };
    }
    exports.QueryDenomHashRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.trace !== "") {
          writer.uint32(10).string(message.trace);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDenomHashRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.trace = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          trace: (0, helpers_1.isSet)(object.trace) ? String(object.trace) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.trace !== void 0 && (obj.trace = message.trace);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryDenomHashRequest();
        message.trace = object.trace ?? "";
        return message;
      }
    };
    function createBaseQueryDenomHashResponse() {
      return {
        hash: ""
      };
    }
    exports.QueryDenomHashResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.hash !== "") {
          writer.uint32(10).string(message.hash);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDenomHashResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.hash = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          hash: (0, helpers_1.isSet)(object.hash) ? String(object.hash) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.hash !== void 0 && (obj.hash = message.hash);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryDenomHashResponse();
        message.hash = object.hash ?? "";
        return message;
      }
    };
    function createBaseQueryEscrowAddressRequest() {
      return {
        portId: "",
        channelId: ""
      };
    }
    exports.QueryEscrowAddressRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.portId !== "") {
          writer.uint32(10).string(message.portId);
        }
        if (message.channelId !== "") {
          writer.uint32(18).string(message.channelId);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryEscrowAddressRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.portId = reader.string();
              break;
            case 2:
              message.channelId = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          portId: (0, helpers_1.isSet)(object.portId) ? String(object.portId) : "",
          channelId: (0, helpers_1.isSet)(object.channelId) ? String(object.channelId) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.portId !== void 0 && (obj.portId = message.portId);
        message.channelId !== void 0 && (obj.channelId = message.channelId);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryEscrowAddressRequest();
        message.portId = object.portId ?? "";
        message.channelId = object.channelId ?? "";
        return message;
      }
    };
    function createBaseQueryEscrowAddressResponse() {
      return {
        escrowAddress: ""
      };
    }
    exports.QueryEscrowAddressResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.escrowAddress !== "") {
          writer.uint32(10).string(message.escrowAddress);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryEscrowAddressResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.escrowAddress = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          escrowAddress: (0, helpers_1.isSet)(object.escrowAddress) ? String(object.escrowAddress) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.escrowAddress !== void 0 && (obj.escrowAddress = message.escrowAddress);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryEscrowAddressResponse();
        message.escrowAddress = object.escrowAddress ?? "";
        return message;
      }
    };
    var QueryClientImpl = class {
      constructor(rpc) {
        this.rpc = rpc;
        this.DenomTrace = this.DenomTrace.bind(this);
        this.DenomTraces = this.DenomTraces.bind(this);
        this.Params = this.Params.bind(this);
        this.DenomHash = this.DenomHash.bind(this);
        this.EscrowAddress = this.EscrowAddress.bind(this);
      }
      DenomTrace(request) {
        const data = exports.QueryDenomTraceRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.applications.transfer.v1.Query", "DenomTrace", data);
        return promise.then((data2) => exports.QueryDenomTraceResponse.decode(new _m0.Reader(data2)));
      }
      DenomTraces(request = {
        pagination: void 0
      }) {
        const data = exports.QueryDenomTracesRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.applications.transfer.v1.Query", "DenomTraces", data);
        return promise.then((data2) => exports.QueryDenomTracesResponse.decode(new _m0.Reader(data2)));
      }
      Params(request = {}) {
        const data = exports.QueryParamsRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.applications.transfer.v1.Query", "Params", data);
        return promise.then((data2) => exports.QueryParamsResponse.decode(new _m0.Reader(data2)));
      }
      DenomHash(request) {
        const data = exports.QueryDenomHashRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.applications.transfer.v1.Query", "DenomHash", data);
        return promise.then((data2) => exports.QueryDenomHashResponse.decode(new _m0.Reader(data2)));
      }
      EscrowAddress(request) {
        const data = exports.QueryEscrowAddressRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.applications.transfer.v1.Query", "EscrowAddress", data);
        return promise.then((data2) => exports.QueryEscrowAddressResponse.decode(new _m0.Reader(data2)));
      }
    };
    exports.QueryClientImpl = QueryClientImpl;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/ibc/core/channel/v1/query.js
var require_query8 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/ibc/core/channel/v1/query.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.QueryClientImpl = exports.QueryNextSequenceReceiveResponse = exports.QueryNextSequenceReceiveRequest = exports.QueryUnreceivedAcksResponse = exports.QueryUnreceivedAcksRequest = exports.QueryUnreceivedPacketsResponse = exports.QueryUnreceivedPacketsRequest = exports.QueryPacketAcknowledgementsResponse = exports.QueryPacketAcknowledgementsRequest = exports.QueryPacketAcknowledgementResponse = exports.QueryPacketAcknowledgementRequest = exports.QueryPacketReceiptResponse = exports.QueryPacketReceiptRequest = exports.QueryPacketCommitmentsResponse = exports.QueryPacketCommitmentsRequest = exports.QueryPacketCommitmentResponse = exports.QueryPacketCommitmentRequest = exports.QueryChannelConsensusStateResponse = exports.QueryChannelConsensusStateRequest = exports.QueryChannelClientStateResponse = exports.QueryChannelClientStateRequest = exports.QueryConnectionChannelsResponse = exports.QueryConnectionChannelsRequest = exports.QueryChannelsResponse = exports.QueryChannelsRequest = exports.QueryChannelResponse = exports.QueryChannelRequest = exports.protobufPackage = void 0;
    var pagination_1 = require_pagination();
    var channel_1 = require_channel();
    var client_1 = require_client();
    var any_1 = require_any();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "ibc.core.channel.v1";
    function createBaseQueryChannelRequest() {
      return {
        portId: "",
        channelId: ""
      };
    }
    exports.QueryChannelRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.portId !== "") {
          writer.uint32(10).string(message.portId);
        }
        if (message.channelId !== "") {
          writer.uint32(18).string(message.channelId);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryChannelRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.portId = reader.string();
              break;
            case 2:
              message.channelId = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          portId: (0, helpers_1.isSet)(object.portId) ? String(object.portId) : "",
          channelId: (0, helpers_1.isSet)(object.channelId) ? String(object.channelId) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.portId !== void 0 && (obj.portId = message.portId);
        message.channelId !== void 0 && (obj.channelId = message.channelId);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryChannelRequest();
        message.portId = object.portId ?? "";
        message.channelId = object.channelId ?? "";
        return message;
      }
    };
    function createBaseQueryChannelResponse() {
      return {
        channel: void 0,
        proof: new Uint8Array(),
        proofHeight: void 0
      };
    }
    exports.QueryChannelResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.channel !== void 0) {
          channel_1.Channel.encode(message.channel, writer.uint32(10).fork()).ldelim();
        }
        if (message.proof.length !== 0) {
          writer.uint32(18).bytes(message.proof);
        }
        if (message.proofHeight !== void 0) {
          client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryChannelResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.channel = channel_1.Channel.decode(reader, reader.uint32());
              break;
            case 2:
              message.proof = reader.bytes();
              break;
            case 3:
              message.proofHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          channel: (0, helpers_1.isSet)(object.channel) ? channel_1.Channel.fromJSON(object.channel) : void 0,
          proof: (0, helpers_1.isSet)(object.proof) ? (0, helpers_1.bytesFromBase64)(object.proof) : new Uint8Array(),
          proofHeight: (0, helpers_1.isSet)(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.channel !== void 0 && (obj.channel = message.channel ? channel_1.Channel.toJSON(message.channel) : void 0);
        message.proof !== void 0 && (obj.proof = (0, helpers_1.base64FromBytes)(message.proof !== void 0 ? message.proof : new Uint8Array()));
        message.proofHeight !== void 0 && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryChannelResponse();
        message.channel = object.channel !== void 0 && object.channel !== null ? channel_1.Channel.fromPartial(object.channel) : void 0;
        message.proof = object.proof ?? new Uint8Array();
        message.proofHeight = object.proofHeight !== void 0 && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : void 0;
        return message;
      }
    };
    function createBaseQueryChannelsRequest() {
      return {
        pagination: void 0
      };
    }
    exports.QueryChannelsRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryChannelsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryChannelsRequest();
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryChannelsResponse() {
      return {
        channels: [],
        pagination: void 0,
        height: void 0
      };
    }
    exports.QueryChannelsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.channels) {
          channel_1.IdentifiedChannel.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        if (message.height !== void 0) {
          client_1.Height.encode(message.height, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryChannelsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.channels.push(channel_1.IdentifiedChannel.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            case 3:
              message.height = client_1.Height.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          channels: Array.isArray(object == null ? void 0 : object.channels) ? object.channels.map((e2) => channel_1.IdentifiedChannel.fromJSON(e2)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0,
          height: (0, helpers_1.isSet)(object.height) ? client_1.Height.fromJSON(object.height) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.channels) {
          obj.channels = message.channels.map((e2) => e2 ? channel_1.IdentifiedChannel.toJSON(e2) : void 0);
        } else {
          obj.channels = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        message.height !== void 0 && (obj.height = message.height ? client_1.Height.toJSON(message.height) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryChannelsResponse();
        message.channels = ((_a = object.channels) == null ? void 0 : _a.map((e2) => channel_1.IdentifiedChannel.fromPartial(e2))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        message.height = object.height !== void 0 && object.height !== null ? client_1.Height.fromPartial(object.height) : void 0;
        return message;
      }
    };
    function createBaseQueryConnectionChannelsRequest() {
      return {
        connection: "",
        pagination: void 0
      };
    }
    exports.QueryConnectionChannelsRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.connection !== "") {
          writer.uint32(10).string(message.connection);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryConnectionChannelsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.connection = reader.string();
              break;
            case 2:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          connection: (0, helpers_1.isSet)(object.connection) ? String(object.connection) : "",
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.connection !== void 0 && (obj.connection = message.connection);
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryConnectionChannelsRequest();
        message.connection = object.connection ?? "";
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryConnectionChannelsResponse() {
      return {
        channels: [],
        pagination: void 0,
        height: void 0
      };
    }
    exports.QueryConnectionChannelsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.channels) {
          channel_1.IdentifiedChannel.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        if (message.height !== void 0) {
          client_1.Height.encode(message.height, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryConnectionChannelsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.channels.push(channel_1.IdentifiedChannel.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            case 3:
              message.height = client_1.Height.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          channels: Array.isArray(object == null ? void 0 : object.channels) ? object.channels.map((e2) => channel_1.IdentifiedChannel.fromJSON(e2)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0,
          height: (0, helpers_1.isSet)(object.height) ? client_1.Height.fromJSON(object.height) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.channels) {
          obj.channels = message.channels.map((e2) => e2 ? channel_1.IdentifiedChannel.toJSON(e2) : void 0);
        } else {
          obj.channels = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        message.height !== void 0 && (obj.height = message.height ? client_1.Height.toJSON(message.height) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryConnectionChannelsResponse();
        message.channels = ((_a = object.channels) == null ? void 0 : _a.map((e2) => channel_1.IdentifiedChannel.fromPartial(e2))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        message.height = object.height !== void 0 && object.height !== null ? client_1.Height.fromPartial(object.height) : void 0;
        return message;
      }
    };
    function createBaseQueryChannelClientStateRequest() {
      return {
        portId: "",
        channelId: ""
      };
    }
    exports.QueryChannelClientStateRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.portId !== "") {
          writer.uint32(10).string(message.portId);
        }
        if (message.channelId !== "") {
          writer.uint32(18).string(message.channelId);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryChannelClientStateRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.portId = reader.string();
              break;
            case 2:
              message.channelId = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          portId: (0, helpers_1.isSet)(object.portId) ? String(object.portId) : "",
          channelId: (0, helpers_1.isSet)(object.channelId) ? String(object.channelId) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.portId !== void 0 && (obj.portId = message.portId);
        message.channelId !== void 0 && (obj.channelId = message.channelId);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryChannelClientStateRequest();
        message.portId = object.portId ?? "";
        message.channelId = object.channelId ?? "";
        return message;
      }
    };
    function createBaseQueryChannelClientStateResponse() {
      return {
        identifiedClientState: void 0,
        proof: new Uint8Array(),
        proofHeight: void 0
      };
    }
    exports.QueryChannelClientStateResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.identifiedClientState !== void 0) {
          client_1.IdentifiedClientState.encode(message.identifiedClientState, writer.uint32(10).fork()).ldelim();
        }
        if (message.proof.length !== 0) {
          writer.uint32(18).bytes(message.proof);
        }
        if (message.proofHeight !== void 0) {
          client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryChannelClientStateResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.identifiedClientState = client_1.IdentifiedClientState.decode(reader, reader.uint32());
              break;
            case 2:
              message.proof = reader.bytes();
              break;
            case 3:
              message.proofHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          identifiedClientState: (0, helpers_1.isSet)(object.identifiedClientState) ? client_1.IdentifiedClientState.fromJSON(object.identifiedClientState) : void 0,
          proof: (0, helpers_1.isSet)(object.proof) ? (0, helpers_1.bytesFromBase64)(object.proof) : new Uint8Array(),
          proofHeight: (0, helpers_1.isSet)(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.identifiedClientState !== void 0 && (obj.identifiedClientState = message.identifiedClientState ? client_1.IdentifiedClientState.toJSON(message.identifiedClientState) : void 0);
        message.proof !== void 0 && (obj.proof = (0, helpers_1.base64FromBytes)(message.proof !== void 0 ? message.proof : new Uint8Array()));
        message.proofHeight !== void 0 && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryChannelClientStateResponse();
        message.identifiedClientState = object.identifiedClientState !== void 0 && object.identifiedClientState !== null ? client_1.IdentifiedClientState.fromPartial(object.identifiedClientState) : void 0;
        message.proof = object.proof ?? new Uint8Array();
        message.proofHeight = object.proofHeight !== void 0 && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : void 0;
        return message;
      }
    };
    function createBaseQueryChannelConsensusStateRequest() {
      return {
        portId: "",
        channelId: "",
        revisionNumber: helpers_1.Long.UZERO,
        revisionHeight: helpers_1.Long.UZERO
      };
    }
    exports.QueryChannelConsensusStateRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.portId !== "") {
          writer.uint32(10).string(message.portId);
        }
        if (message.channelId !== "") {
          writer.uint32(18).string(message.channelId);
        }
        if (!message.revisionNumber.isZero()) {
          writer.uint32(24).uint64(message.revisionNumber);
        }
        if (!message.revisionHeight.isZero()) {
          writer.uint32(32).uint64(message.revisionHeight);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryChannelConsensusStateRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.portId = reader.string();
              break;
            case 2:
              message.channelId = reader.string();
              break;
            case 3:
              message.revisionNumber = reader.uint64();
              break;
            case 4:
              message.revisionHeight = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          portId: (0, helpers_1.isSet)(object.portId) ? String(object.portId) : "",
          channelId: (0, helpers_1.isSet)(object.channelId) ? String(object.channelId) : "",
          revisionNumber: (0, helpers_1.isSet)(object.revisionNumber) ? helpers_1.Long.fromValue(object.revisionNumber) : helpers_1.Long.UZERO,
          revisionHeight: (0, helpers_1.isSet)(object.revisionHeight) ? helpers_1.Long.fromValue(object.revisionHeight) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.portId !== void 0 && (obj.portId = message.portId);
        message.channelId !== void 0 && (obj.channelId = message.channelId);
        message.revisionNumber !== void 0 && (obj.revisionNumber = (message.revisionNumber || helpers_1.Long.UZERO).toString());
        message.revisionHeight !== void 0 && (obj.revisionHeight = (message.revisionHeight || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryChannelConsensusStateRequest();
        message.portId = object.portId ?? "";
        message.channelId = object.channelId ?? "";
        message.revisionNumber = object.revisionNumber !== void 0 && object.revisionNumber !== null ? helpers_1.Long.fromValue(object.revisionNumber) : helpers_1.Long.UZERO;
        message.revisionHeight = object.revisionHeight !== void 0 && object.revisionHeight !== null ? helpers_1.Long.fromValue(object.revisionHeight) : helpers_1.Long.UZERO;
        return message;
      }
    };
    function createBaseQueryChannelConsensusStateResponse() {
      return {
        consensusState: void 0,
        clientId: "",
        proof: new Uint8Array(),
        proofHeight: void 0
      };
    }
    exports.QueryChannelConsensusStateResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.consensusState !== void 0) {
          any_1.Any.encode(message.consensusState, writer.uint32(10).fork()).ldelim();
        }
        if (message.clientId !== "") {
          writer.uint32(18).string(message.clientId);
        }
        if (message.proof.length !== 0) {
          writer.uint32(26).bytes(message.proof);
        }
        if (message.proofHeight !== void 0) {
          client_1.Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryChannelConsensusStateResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.consensusState = any_1.Any.decode(reader, reader.uint32());
              break;
            case 2:
              message.clientId = reader.string();
              break;
            case 3:
              message.proof = reader.bytes();
              break;
            case 4:
              message.proofHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          consensusState: (0, helpers_1.isSet)(object.consensusState) ? any_1.Any.fromJSON(object.consensusState) : void 0,
          clientId: (0, helpers_1.isSet)(object.clientId) ? String(object.clientId) : "",
          proof: (0, helpers_1.isSet)(object.proof) ? (0, helpers_1.bytesFromBase64)(object.proof) : new Uint8Array(),
          proofHeight: (0, helpers_1.isSet)(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.consensusState !== void 0 && (obj.consensusState = message.consensusState ? any_1.Any.toJSON(message.consensusState) : void 0);
        message.clientId !== void 0 && (obj.clientId = message.clientId);
        message.proof !== void 0 && (obj.proof = (0, helpers_1.base64FromBytes)(message.proof !== void 0 ? message.proof : new Uint8Array()));
        message.proofHeight !== void 0 && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryChannelConsensusStateResponse();
        message.consensusState = object.consensusState !== void 0 && object.consensusState !== null ? any_1.Any.fromPartial(object.consensusState) : void 0;
        message.clientId = object.clientId ?? "";
        message.proof = object.proof ?? new Uint8Array();
        message.proofHeight = object.proofHeight !== void 0 && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : void 0;
        return message;
      }
    };
    function createBaseQueryPacketCommitmentRequest() {
      return {
        portId: "",
        channelId: "",
        sequence: helpers_1.Long.UZERO
      };
    }
    exports.QueryPacketCommitmentRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.portId !== "") {
          writer.uint32(10).string(message.portId);
        }
        if (message.channelId !== "") {
          writer.uint32(18).string(message.channelId);
        }
        if (!message.sequence.isZero()) {
          writer.uint32(24).uint64(message.sequence);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryPacketCommitmentRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.portId = reader.string();
              break;
            case 2:
              message.channelId = reader.string();
              break;
            case 3:
              message.sequence = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          portId: (0, helpers_1.isSet)(object.portId) ? String(object.portId) : "",
          channelId: (0, helpers_1.isSet)(object.channelId) ? String(object.channelId) : "",
          sequence: (0, helpers_1.isSet)(object.sequence) ? helpers_1.Long.fromValue(object.sequence) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.portId !== void 0 && (obj.portId = message.portId);
        message.channelId !== void 0 && (obj.channelId = message.channelId);
        message.sequence !== void 0 && (obj.sequence = (message.sequence || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryPacketCommitmentRequest();
        message.portId = object.portId ?? "";
        message.channelId = object.channelId ?? "";
        message.sequence = object.sequence !== void 0 && object.sequence !== null ? helpers_1.Long.fromValue(object.sequence) : helpers_1.Long.UZERO;
        return message;
      }
    };
    function createBaseQueryPacketCommitmentResponse() {
      return {
        commitment: new Uint8Array(),
        proof: new Uint8Array(),
        proofHeight: void 0
      };
    }
    exports.QueryPacketCommitmentResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.commitment.length !== 0) {
          writer.uint32(10).bytes(message.commitment);
        }
        if (message.proof.length !== 0) {
          writer.uint32(18).bytes(message.proof);
        }
        if (message.proofHeight !== void 0) {
          client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryPacketCommitmentResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.commitment = reader.bytes();
              break;
            case 2:
              message.proof = reader.bytes();
              break;
            case 3:
              message.proofHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          commitment: (0, helpers_1.isSet)(object.commitment) ? (0, helpers_1.bytesFromBase64)(object.commitment) : new Uint8Array(),
          proof: (0, helpers_1.isSet)(object.proof) ? (0, helpers_1.bytesFromBase64)(object.proof) : new Uint8Array(),
          proofHeight: (0, helpers_1.isSet)(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.commitment !== void 0 && (obj.commitment = (0, helpers_1.base64FromBytes)(message.commitment !== void 0 ? message.commitment : new Uint8Array()));
        message.proof !== void 0 && (obj.proof = (0, helpers_1.base64FromBytes)(message.proof !== void 0 ? message.proof : new Uint8Array()));
        message.proofHeight !== void 0 && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryPacketCommitmentResponse();
        message.commitment = object.commitment ?? new Uint8Array();
        message.proof = object.proof ?? new Uint8Array();
        message.proofHeight = object.proofHeight !== void 0 && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : void 0;
        return message;
      }
    };
    function createBaseQueryPacketCommitmentsRequest() {
      return {
        portId: "",
        channelId: "",
        pagination: void 0
      };
    }
    exports.QueryPacketCommitmentsRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.portId !== "") {
          writer.uint32(10).string(message.portId);
        }
        if (message.channelId !== "") {
          writer.uint32(18).string(message.channelId);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryPacketCommitmentsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.portId = reader.string();
              break;
            case 2:
              message.channelId = reader.string();
              break;
            case 3:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          portId: (0, helpers_1.isSet)(object.portId) ? String(object.portId) : "",
          channelId: (0, helpers_1.isSet)(object.channelId) ? String(object.channelId) : "",
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.portId !== void 0 && (obj.portId = message.portId);
        message.channelId !== void 0 && (obj.channelId = message.channelId);
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryPacketCommitmentsRequest();
        message.portId = object.portId ?? "";
        message.channelId = object.channelId ?? "";
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryPacketCommitmentsResponse() {
      return {
        commitments: [],
        pagination: void 0,
        height: void 0
      };
    }
    exports.QueryPacketCommitmentsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.commitments) {
          channel_1.PacketState.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        if (message.height !== void 0) {
          client_1.Height.encode(message.height, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryPacketCommitmentsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.commitments.push(channel_1.PacketState.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            case 3:
              message.height = client_1.Height.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          commitments: Array.isArray(object == null ? void 0 : object.commitments) ? object.commitments.map((e2) => channel_1.PacketState.fromJSON(e2)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0,
          height: (0, helpers_1.isSet)(object.height) ? client_1.Height.fromJSON(object.height) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.commitments) {
          obj.commitments = message.commitments.map((e2) => e2 ? channel_1.PacketState.toJSON(e2) : void 0);
        } else {
          obj.commitments = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        message.height !== void 0 && (obj.height = message.height ? client_1.Height.toJSON(message.height) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryPacketCommitmentsResponse();
        message.commitments = ((_a = object.commitments) == null ? void 0 : _a.map((e2) => channel_1.PacketState.fromPartial(e2))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        message.height = object.height !== void 0 && object.height !== null ? client_1.Height.fromPartial(object.height) : void 0;
        return message;
      }
    };
    function createBaseQueryPacketReceiptRequest() {
      return {
        portId: "",
        channelId: "",
        sequence: helpers_1.Long.UZERO
      };
    }
    exports.QueryPacketReceiptRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.portId !== "") {
          writer.uint32(10).string(message.portId);
        }
        if (message.channelId !== "") {
          writer.uint32(18).string(message.channelId);
        }
        if (!message.sequence.isZero()) {
          writer.uint32(24).uint64(message.sequence);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryPacketReceiptRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.portId = reader.string();
              break;
            case 2:
              message.channelId = reader.string();
              break;
            case 3:
              message.sequence = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          portId: (0, helpers_1.isSet)(object.portId) ? String(object.portId) : "",
          channelId: (0, helpers_1.isSet)(object.channelId) ? String(object.channelId) : "",
          sequence: (0, helpers_1.isSet)(object.sequence) ? helpers_1.Long.fromValue(object.sequence) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.portId !== void 0 && (obj.portId = message.portId);
        message.channelId !== void 0 && (obj.channelId = message.channelId);
        message.sequence !== void 0 && (obj.sequence = (message.sequence || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryPacketReceiptRequest();
        message.portId = object.portId ?? "";
        message.channelId = object.channelId ?? "";
        message.sequence = object.sequence !== void 0 && object.sequence !== null ? helpers_1.Long.fromValue(object.sequence) : helpers_1.Long.UZERO;
        return message;
      }
    };
    function createBaseQueryPacketReceiptResponse() {
      return {
        received: false,
        proof: new Uint8Array(),
        proofHeight: void 0
      };
    }
    exports.QueryPacketReceiptResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.received === true) {
          writer.uint32(16).bool(message.received);
        }
        if (message.proof.length !== 0) {
          writer.uint32(26).bytes(message.proof);
        }
        if (message.proofHeight !== void 0) {
          client_1.Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryPacketReceiptResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 2:
              message.received = reader.bool();
              break;
            case 3:
              message.proof = reader.bytes();
              break;
            case 4:
              message.proofHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          received: (0, helpers_1.isSet)(object.received) ? Boolean(object.received) : false,
          proof: (0, helpers_1.isSet)(object.proof) ? (0, helpers_1.bytesFromBase64)(object.proof) : new Uint8Array(),
          proofHeight: (0, helpers_1.isSet)(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.received !== void 0 && (obj.received = message.received);
        message.proof !== void 0 && (obj.proof = (0, helpers_1.base64FromBytes)(message.proof !== void 0 ? message.proof : new Uint8Array()));
        message.proofHeight !== void 0 && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryPacketReceiptResponse();
        message.received = object.received ?? false;
        message.proof = object.proof ?? new Uint8Array();
        message.proofHeight = object.proofHeight !== void 0 && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : void 0;
        return message;
      }
    };
    function createBaseQueryPacketAcknowledgementRequest() {
      return {
        portId: "",
        channelId: "",
        sequence: helpers_1.Long.UZERO
      };
    }
    exports.QueryPacketAcknowledgementRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.portId !== "") {
          writer.uint32(10).string(message.portId);
        }
        if (message.channelId !== "") {
          writer.uint32(18).string(message.channelId);
        }
        if (!message.sequence.isZero()) {
          writer.uint32(24).uint64(message.sequence);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryPacketAcknowledgementRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.portId = reader.string();
              break;
            case 2:
              message.channelId = reader.string();
              break;
            case 3:
              message.sequence = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          portId: (0, helpers_1.isSet)(object.portId) ? String(object.portId) : "",
          channelId: (0, helpers_1.isSet)(object.channelId) ? String(object.channelId) : "",
          sequence: (0, helpers_1.isSet)(object.sequence) ? helpers_1.Long.fromValue(object.sequence) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.portId !== void 0 && (obj.portId = message.portId);
        message.channelId !== void 0 && (obj.channelId = message.channelId);
        message.sequence !== void 0 && (obj.sequence = (message.sequence || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryPacketAcknowledgementRequest();
        message.portId = object.portId ?? "";
        message.channelId = object.channelId ?? "";
        message.sequence = object.sequence !== void 0 && object.sequence !== null ? helpers_1.Long.fromValue(object.sequence) : helpers_1.Long.UZERO;
        return message;
      }
    };
    function createBaseQueryPacketAcknowledgementResponse() {
      return {
        acknowledgement: new Uint8Array(),
        proof: new Uint8Array(),
        proofHeight: void 0
      };
    }
    exports.QueryPacketAcknowledgementResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.acknowledgement.length !== 0) {
          writer.uint32(10).bytes(message.acknowledgement);
        }
        if (message.proof.length !== 0) {
          writer.uint32(18).bytes(message.proof);
        }
        if (message.proofHeight !== void 0) {
          client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryPacketAcknowledgementResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.acknowledgement = reader.bytes();
              break;
            case 2:
              message.proof = reader.bytes();
              break;
            case 3:
              message.proofHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          acknowledgement: (0, helpers_1.isSet)(object.acknowledgement) ? (0, helpers_1.bytesFromBase64)(object.acknowledgement) : new Uint8Array(),
          proof: (0, helpers_1.isSet)(object.proof) ? (0, helpers_1.bytesFromBase64)(object.proof) : new Uint8Array(),
          proofHeight: (0, helpers_1.isSet)(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.acknowledgement !== void 0 && (obj.acknowledgement = (0, helpers_1.base64FromBytes)(message.acknowledgement !== void 0 ? message.acknowledgement : new Uint8Array()));
        message.proof !== void 0 && (obj.proof = (0, helpers_1.base64FromBytes)(message.proof !== void 0 ? message.proof : new Uint8Array()));
        message.proofHeight !== void 0 && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryPacketAcknowledgementResponse();
        message.acknowledgement = object.acknowledgement ?? new Uint8Array();
        message.proof = object.proof ?? new Uint8Array();
        message.proofHeight = object.proofHeight !== void 0 && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : void 0;
        return message;
      }
    };
    function createBaseQueryPacketAcknowledgementsRequest() {
      return {
        portId: "",
        channelId: "",
        pagination: void 0,
        packetCommitmentSequences: []
      };
    }
    exports.QueryPacketAcknowledgementsRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.portId !== "") {
          writer.uint32(10).string(message.portId);
        }
        if (message.channelId !== "") {
          writer.uint32(18).string(message.channelId);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(26).fork()).ldelim();
        }
        writer.uint32(34).fork();
        for (const v3 of message.packetCommitmentSequences) {
          writer.uint64(v3);
        }
        writer.ldelim();
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryPacketAcknowledgementsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.portId = reader.string();
              break;
            case 2:
              message.channelId = reader.string();
              break;
            case 3:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            case 4:
              if ((tag & 7) === 2) {
                const end2 = reader.uint32() + reader.pos;
                while (reader.pos < end2) {
                  message.packetCommitmentSequences.push(reader.uint64());
                }
              } else {
                message.packetCommitmentSequences.push(reader.uint64());
              }
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          portId: (0, helpers_1.isSet)(object.portId) ? String(object.portId) : "",
          channelId: (0, helpers_1.isSet)(object.channelId) ? String(object.channelId) : "",
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0,
          packetCommitmentSequences: Array.isArray(object == null ? void 0 : object.packetCommitmentSequences) ? object.packetCommitmentSequences.map((e2) => helpers_1.Long.fromValue(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.portId !== void 0 && (obj.portId = message.portId);
        message.channelId !== void 0 && (obj.channelId = message.channelId);
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        if (message.packetCommitmentSequences) {
          obj.packetCommitmentSequences = message.packetCommitmentSequences.map((e2) => (e2 || helpers_1.Long.UZERO).toString());
        } else {
          obj.packetCommitmentSequences = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryPacketAcknowledgementsRequest();
        message.portId = object.portId ?? "";
        message.channelId = object.channelId ?? "";
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        message.packetCommitmentSequences = ((_a = object.packetCommitmentSequences) == null ? void 0 : _a.map((e2) => helpers_1.Long.fromValue(e2))) || [];
        return message;
      }
    };
    function createBaseQueryPacketAcknowledgementsResponse() {
      return {
        acknowledgements: [],
        pagination: void 0,
        height: void 0
      };
    }
    exports.QueryPacketAcknowledgementsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.acknowledgements) {
          channel_1.PacketState.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        if (message.height !== void 0) {
          client_1.Height.encode(message.height, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryPacketAcknowledgementsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.acknowledgements.push(channel_1.PacketState.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            case 3:
              message.height = client_1.Height.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          acknowledgements: Array.isArray(object == null ? void 0 : object.acknowledgements) ? object.acknowledgements.map((e2) => channel_1.PacketState.fromJSON(e2)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0,
          height: (0, helpers_1.isSet)(object.height) ? client_1.Height.fromJSON(object.height) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.acknowledgements) {
          obj.acknowledgements = message.acknowledgements.map((e2) => e2 ? channel_1.PacketState.toJSON(e2) : void 0);
        } else {
          obj.acknowledgements = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        message.height !== void 0 && (obj.height = message.height ? client_1.Height.toJSON(message.height) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryPacketAcknowledgementsResponse();
        message.acknowledgements = ((_a = object.acknowledgements) == null ? void 0 : _a.map((e2) => channel_1.PacketState.fromPartial(e2))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        message.height = object.height !== void 0 && object.height !== null ? client_1.Height.fromPartial(object.height) : void 0;
        return message;
      }
    };
    function createBaseQueryUnreceivedPacketsRequest() {
      return {
        portId: "",
        channelId: "",
        packetCommitmentSequences: []
      };
    }
    exports.QueryUnreceivedPacketsRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.portId !== "") {
          writer.uint32(10).string(message.portId);
        }
        if (message.channelId !== "") {
          writer.uint32(18).string(message.channelId);
        }
        writer.uint32(26).fork();
        for (const v3 of message.packetCommitmentSequences) {
          writer.uint64(v3);
        }
        writer.ldelim();
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryUnreceivedPacketsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.portId = reader.string();
              break;
            case 2:
              message.channelId = reader.string();
              break;
            case 3:
              if ((tag & 7) === 2) {
                const end2 = reader.uint32() + reader.pos;
                while (reader.pos < end2) {
                  message.packetCommitmentSequences.push(reader.uint64());
                }
              } else {
                message.packetCommitmentSequences.push(reader.uint64());
              }
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          portId: (0, helpers_1.isSet)(object.portId) ? String(object.portId) : "",
          channelId: (0, helpers_1.isSet)(object.channelId) ? String(object.channelId) : "",
          packetCommitmentSequences: Array.isArray(object == null ? void 0 : object.packetCommitmentSequences) ? object.packetCommitmentSequences.map((e2) => helpers_1.Long.fromValue(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.portId !== void 0 && (obj.portId = message.portId);
        message.channelId !== void 0 && (obj.channelId = message.channelId);
        if (message.packetCommitmentSequences) {
          obj.packetCommitmentSequences = message.packetCommitmentSequences.map((e2) => (e2 || helpers_1.Long.UZERO).toString());
        } else {
          obj.packetCommitmentSequences = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryUnreceivedPacketsRequest();
        message.portId = object.portId ?? "";
        message.channelId = object.channelId ?? "";
        message.packetCommitmentSequences = ((_a = object.packetCommitmentSequences) == null ? void 0 : _a.map((e2) => helpers_1.Long.fromValue(e2))) || [];
        return message;
      }
    };
    function createBaseQueryUnreceivedPacketsResponse() {
      return {
        sequences: [],
        height: void 0
      };
    }
    exports.QueryUnreceivedPacketsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        writer.uint32(10).fork();
        for (const v3 of message.sequences) {
          writer.uint64(v3);
        }
        writer.ldelim();
        if (message.height !== void 0) {
          client_1.Height.encode(message.height, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryUnreceivedPacketsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              if ((tag & 7) === 2) {
                const end2 = reader.uint32() + reader.pos;
                while (reader.pos < end2) {
                  message.sequences.push(reader.uint64());
                }
              } else {
                message.sequences.push(reader.uint64());
              }
              break;
            case 2:
              message.height = client_1.Height.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          sequences: Array.isArray(object == null ? void 0 : object.sequences) ? object.sequences.map((e2) => helpers_1.Long.fromValue(e2)) : [],
          height: (0, helpers_1.isSet)(object.height) ? client_1.Height.fromJSON(object.height) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.sequences) {
          obj.sequences = message.sequences.map((e2) => (e2 || helpers_1.Long.UZERO).toString());
        } else {
          obj.sequences = [];
        }
        message.height !== void 0 && (obj.height = message.height ? client_1.Height.toJSON(message.height) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryUnreceivedPacketsResponse();
        message.sequences = ((_a = object.sequences) == null ? void 0 : _a.map((e2) => helpers_1.Long.fromValue(e2))) || [];
        message.height = object.height !== void 0 && object.height !== null ? client_1.Height.fromPartial(object.height) : void 0;
        return message;
      }
    };
    function createBaseQueryUnreceivedAcksRequest() {
      return {
        portId: "",
        channelId: "",
        packetAckSequences: []
      };
    }
    exports.QueryUnreceivedAcksRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.portId !== "") {
          writer.uint32(10).string(message.portId);
        }
        if (message.channelId !== "") {
          writer.uint32(18).string(message.channelId);
        }
        writer.uint32(26).fork();
        for (const v3 of message.packetAckSequences) {
          writer.uint64(v3);
        }
        writer.ldelim();
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryUnreceivedAcksRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.portId = reader.string();
              break;
            case 2:
              message.channelId = reader.string();
              break;
            case 3:
              if ((tag & 7) === 2) {
                const end2 = reader.uint32() + reader.pos;
                while (reader.pos < end2) {
                  message.packetAckSequences.push(reader.uint64());
                }
              } else {
                message.packetAckSequences.push(reader.uint64());
              }
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          portId: (0, helpers_1.isSet)(object.portId) ? String(object.portId) : "",
          channelId: (0, helpers_1.isSet)(object.channelId) ? String(object.channelId) : "",
          packetAckSequences: Array.isArray(object == null ? void 0 : object.packetAckSequences) ? object.packetAckSequences.map((e2) => helpers_1.Long.fromValue(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.portId !== void 0 && (obj.portId = message.portId);
        message.channelId !== void 0 && (obj.channelId = message.channelId);
        if (message.packetAckSequences) {
          obj.packetAckSequences = message.packetAckSequences.map((e2) => (e2 || helpers_1.Long.UZERO).toString());
        } else {
          obj.packetAckSequences = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryUnreceivedAcksRequest();
        message.portId = object.portId ?? "";
        message.channelId = object.channelId ?? "";
        message.packetAckSequences = ((_a = object.packetAckSequences) == null ? void 0 : _a.map((e2) => helpers_1.Long.fromValue(e2))) || [];
        return message;
      }
    };
    function createBaseQueryUnreceivedAcksResponse() {
      return {
        sequences: [],
        height: void 0
      };
    }
    exports.QueryUnreceivedAcksResponse = {
      encode(message, writer = _m0.Writer.create()) {
        writer.uint32(10).fork();
        for (const v3 of message.sequences) {
          writer.uint64(v3);
        }
        writer.ldelim();
        if (message.height !== void 0) {
          client_1.Height.encode(message.height, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryUnreceivedAcksResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              if ((tag & 7) === 2) {
                const end2 = reader.uint32() + reader.pos;
                while (reader.pos < end2) {
                  message.sequences.push(reader.uint64());
                }
              } else {
                message.sequences.push(reader.uint64());
              }
              break;
            case 2:
              message.height = client_1.Height.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          sequences: Array.isArray(object == null ? void 0 : object.sequences) ? object.sequences.map((e2) => helpers_1.Long.fromValue(e2)) : [],
          height: (0, helpers_1.isSet)(object.height) ? client_1.Height.fromJSON(object.height) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.sequences) {
          obj.sequences = message.sequences.map((e2) => (e2 || helpers_1.Long.UZERO).toString());
        } else {
          obj.sequences = [];
        }
        message.height !== void 0 && (obj.height = message.height ? client_1.Height.toJSON(message.height) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryUnreceivedAcksResponse();
        message.sequences = ((_a = object.sequences) == null ? void 0 : _a.map((e2) => helpers_1.Long.fromValue(e2))) || [];
        message.height = object.height !== void 0 && object.height !== null ? client_1.Height.fromPartial(object.height) : void 0;
        return message;
      }
    };
    function createBaseQueryNextSequenceReceiveRequest() {
      return {
        portId: "",
        channelId: ""
      };
    }
    exports.QueryNextSequenceReceiveRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.portId !== "") {
          writer.uint32(10).string(message.portId);
        }
        if (message.channelId !== "") {
          writer.uint32(18).string(message.channelId);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryNextSequenceReceiveRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.portId = reader.string();
              break;
            case 2:
              message.channelId = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          portId: (0, helpers_1.isSet)(object.portId) ? String(object.portId) : "",
          channelId: (0, helpers_1.isSet)(object.channelId) ? String(object.channelId) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.portId !== void 0 && (obj.portId = message.portId);
        message.channelId !== void 0 && (obj.channelId = message.channelId);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryNextSequenceReceiveRequest();
        message.portId = object.portId ?? "";
        message.channelId = object.channelId ?? "";
        return message;
      }
    };
    function createBaseQueryNextSequenceReceiveResponse() {
      return {
        nextSequenceReceive: helpers_1.Long.UZERO,
        proof: new Uint8Array(),
        proofHeight: void 0
      };
    }
    exports.QueryNextSequenceReceiveResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.nextSequenceReceive.isZero()) {
          writer.uint32(8).uint64(message.nextSequenceReceive);
        }
        if (message.proof.length !== 0) {
          writer.uint32(18).bytes(message.proof);
        }
        if (message.proofHeight !== void 0) {
          client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryNextSequenceReceiveResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.nextSequenceReceive = reader.uint64();
              break;
            case 2:
              message.proof = reader.bytes();
              break;
            case 3:
              message.proofHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          nextSequenceReceive: (0, helpers_1.isSet)(object.nextSequenceReceive) ? helpers_1.Long.fromValue(object.nextSequenceReceive) : helpers_1.Long.UZERO,
          proof: (0, helpers_1.isSet)(object.proof) ? (0, helpers_1.bytesFromBase64)(object.proof) : new Uint8Array(),
          proofHeight: (0, helpers_1.isSet)(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.nextSequenceReceive !== void 0 && (obj.nextSequenceReceive = (message.nextSequenceReceive || helpers_1.Long.UZERO).toString());
        message.proof !== void 0 && (obj.proof = (0, helpers_1.base64FromBytes)(message.proof !== void 0 ? message.proof : new Uint8Array()));
        message.proofHeight !== void 0 && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryNextSequenceReceiveResponse();
        message.nextSequenceReceive = object.nextSequenceReceive !== void 0 && object.nextSequenceReceive !== null ? helpers_1.Long.fromValue(object.nextSequenceReceive) : helpers_1.Long.UZERO;
        message.proof = object.proof ?? new Uint8Array();
        message.proofHeight = object.proofHeight !== void 0 && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : void 0;
        return message;
      }
    };
    var QueryClientImpl = class {
      constructor(rpc) {
        this.rpc = rpc;
        this.Channel = this.Channel.bind(this);
        this.Channels = this.Channels.bind(this);
        this.ConnectionChannels = this.ConnectionChannels.bind(this);
        this.ChannelClientState = this.ChannelClientState.bind(this);
        this.ChannelConsensusState = this.ChannelConsensusState.bind(this);
        this.PacketCommitment = this.PacketCommitment.bind(this);
        this.PacketCommitments = this.PacketCommitments.bind(this);
        this.PacketReceipt = this.PacketReceipt.bind(this);
        this.PacketAcknowledgement = this.PacketAcknowledgement.bind(this);
        this.PacketAcknowledgements = this.PacketAcknowledgements.bind(this);
        this.UnreceivedPackets = this.UnreceivedPackets.bind(this);
        this.UnreceivedAcks = this.UnreceivedAcks.bind(this);
        this.NextSequenceReceive = this.NextSequenceReceive.bind(this);
      }
      Channel(request) {
        const data = exports.QueryChannelRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.core.channel.v1.Query", "Channel", data);
        return promise.then((data2) => exports.QueryChannelResponse.decode(new _m0.Reader(data2)));
      }
      Channels(request = {
        pagination: void 0
      }) {
        const data = exports.QueryChannelsRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.core.channel.v1.Query", "Channels", data);
        return promise.then((data2) => exports.QueryChannelsResponse.decode(new _m0.Reader(data2)));
      }
      ConnectionChannels(request) {
        const data = exports.QueryConnectionChannelsRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.core.channel.v1.Query", "ConnectionChannels", data);
        return promise.then((data2) => exports.QueryConnectionChannelsResponse.decode(new _m0.Reader(data2)));
      }
      ChannelClientState(request) {
        const data = exports.QueryChannelClientStateRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.core.channel.v1.Query", "ChannelClientState", data);
        return promise.then((data2) => exports.QueryChannelClientStateResponse.decode(new _m0.Reader(data2)));
      }
      ChannelConsensusState(request) {
        const data = exports.QueryChannelConsensusStateRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.core.channel.v1.Query", "ChannelConsensusState", data);
        return promise.then((data2) => exports.QueryChannelConsensusStateResponse.decode(new _m0.Reader(data2)));
      }
      PacketCommitment(request) {
        const data = exports.QueryPacketCommitmentRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.core.channel.v1.Query", "PacketCommitment", data);
        return promise.then((data2) => exports.QueryPacketCommitmentResponse.decode(new _m0.Reader(data2)));
      }
      PacketCommitments(request) {
        const data = exports.QueryPacketCommitmentsRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.core.channel.v1.Query", "PacketCommitments", data);
        return promise.then((data2) => exports.QueryPacketCommitmentsResponse.decode(new _m0.Reader(data2)));
      }
      PacketReceipt(request) {
        const data = exports.QueryPacketReceiptRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.core.channel.v1.Query", "PacketReceipt", data);
        return promise.then((data2) => exports.QueryPacketReceiptResponse.decode(new _m0.Reader(data2)));
      }
      PacketAcknowledgement(request) {
        const data = exports.QueryPacketAcknowledgementRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.core.channel.v1.Query", "PacketAcknowledgement", data);
        return promise.then((data2) => exports.QueryPacketAcknowledgementResponse.decode(new _m0.Reader(data2)));
      }
      PacketAcknowledgements(request) {
        const data = exports.QueryPacketAcknowledgementsRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.core.channel.v1.Query", "PacketAcknowledgements", data);
        return promise.then((data2) => exports.QueryPacketAcknowledgementsResponse.decode(new _m0.Reader(data2)));
      }
      UnreceivedPackets(request) {
        const data = exports.QueryUnreceivedPacketsRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.core.channel.v1.Query", "UnreceivedPackets", data);
        return promise.then((data2) => exports.QueryUnreceivedPacketsResponse.decode(new _m0.Reader(data2)));
      }
      UnreceivedAcks(request) {
        const data = exports.QueryUnreceivedAcksRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.core.channel.v1.Query", "UnreceivedAcks", data);
        return promise.then((data2) => exports.QueryUnreceivedAcksResponse.decode(new _m0.Reader(data2)));
      }
      NextSequenceReceive(request) {
        const data = exports.QueryNextSequenceReceiveRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.core.channel.v1.Query", "NextSequenceReceive", data);
        return promise.then((data2) => exports.QueryNextSequenceReceiveResponse.decode(new _m0.Reader(data2)));
      }
    };
    exports.QueryClientImpl = QueryClientImpl;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/ibc/core/client/v1/query.js
var require_query9 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/ibc/core/client/v1/query.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.QueryClientImpl = exports.QueryUpgradedConsensusStateResponse = exports.QueryUpgradedConsensusStateRequest = exports.QueryUpgradedClientStateResponse = exports.QueryUpgradedClientStateRequest = exports.QueryClientParamsResponse = exports.QueryClientParamsRequest = exports.QueryClientStatusResponse = exports.QueryClientStatusRequest = exports.QueryConsensusStateHeightsResponse = exports.QueryConsensusStateHeightsRequest = exports.QueryConsensusStatesResponse = exports.QueryConsensusStatesRequest = exports.QueryConsensusStateResponse = exports.QueryConsensusStateRequest = exports.QueryClientStatesResponse = exports.QueryClientStatesRequest = exports.QueryClientStateResponse = exports.QueryClientStateRequest = exports.protobufPackage = void 0;
    var pagination_1 = require_pagination();
    var any_1 = require_any();
    var client_1 = require_client();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "ibc.core.client.v1";
    function createBaseQueryClientStateRequest() {
      return {
        clientId: ""
      };
    }
    exports.QueryClientStateRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.clientId !== "") {
          writer.uint32(10).string(message.clientId);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryClientStateRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.clientId = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          clientId: (0, helpers_1.isSet)(object.clientId) ? String(object.clientId) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.clientId !== void 0 && (obj.clientId = message.clientId);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryClientStateRequest();
        message.clientId = object.clientId ?? "";
        return message;
      }
    };
    function createBaseQueryClientStateResponse() {
      return {
        clientState: void 0,
        proof: new Uint8Array(),
        proofHeight: void 0
      };
    }
    exports.QueryClientStateResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.clientState !== void 0) {
          any_1.Any.encode(message.clientState, writer.uint32(10).fork()).ldelim();
        }
        if (message.proof.length !== 0) {
          writer.uint32(18).bytes(message.proof);
        }
        if (message.proofHeight !== void 0) {
          client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryClientStateResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.clientState = any_1.Any.decode(reader, reader.uint32());
              break;
            case 2:
              message.proof = reader.bytes();
              break;
            case 3:
              message.proofHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          clientState: (0, helpers_1.isSet)(object.clientState) ? any_1.Any.fromJSON(object.clientState) : void 0,
          proof: (0, helpers_1.isSet)(object.proof) ? (0, helpers_1.bytesFromBase64)(object.proof) : new Uint8Array(),
          proofHeight: (0, helpers_1.isSet)(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.clientState !== void 0 && (obj.clientState = message.clientState ? any_1.Any.toJSON(message.clientState) : void 0);
        message.proof !== void 0 && (obj.proof = (0, helpers_1.base64FromBytes)(message.proof !== void 0 ? message.proof : new Uint8Array()));
        message.proofHeight !== void 0 && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryClientStateResponse();
        message.clientState = object.clientState !== void 0 && object.clientState !== null ? any_1.Any.fromPartial(object.clientState) : void 0;
        message.proof = object.proof ?? new Uint8Array();
        message.proofHeight = object.proofHeight !== void 0 && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : void 0;
        return message;
      }
    };
    function createBaseQueryClientStatesRequest() {
      return {
        pagination: void 0
      };
    }
    exports.QueryClientStatesRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryClientStatesRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryClientStatesRequest();
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryClientStatesResponse() {
      return {
        clientStates: [],
        pagination: void 0
      };
    }
    exports.QueryClientStatesResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.clientStates) {
          client_1.IdentifiedClientState.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryClientStatesResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.clientStates.push(client_1.IdentifiedClientState.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          clientStates: Array.isArray(object == null ? void 0 : object.clientStates) ? object.clientStates.map((e2) => client_1.IdentifiedClientState.fromJSON(e2)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.clientStates) {
          obj.clientStates = message.clientStates.map((e2) => e2 ? client_1.IdentifiedClientState.toJSON(e2) : void 0);
        } else {
          obj.clientStates = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryClientStatesResponse();
        message.clientStates = ((_a = object.clientStates) == null ? void 0 : _a.map((e2) => client_1.IdentifiedClientState.fromPartial(e2))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryConsensusStateRequest() {
      return {
        clientId: "",
        revisionNumber: helpers_1.Long.UZERO,
        revisionHeight: helpers_1.Long.UZERO,
        latestHeight: false
      };
    }
    exports.QueryConsensusStateRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.clientId !== "") {
          writer.uint32(10).string(message.clientId);
        }
        if (!message.revisionNumber.isZero()) {
          writer.uint32(16).uint64(message.revisionNumber);
        }
        if (!message.revisionHeight.isZero()) {
          writer.uint32(24).uint64(message.revisionHeight);
        }
        if (message.latestHeight === true) {
          writer.uint32(32).bool(message.latestHeight);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryConsensusStateRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.clientId = reader.string();
              break;
            case 2:
              message.revisionNumber = reader.uint64();
              break;
            case 3:
              message.revisionHeight = reader.uint64();
              break;
            case 4:
              message.latestHeight = reader.bool();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          clientId: (0, helpers_1.isSet)(object.clientId) ? String(object.clientId) : "",
          revisionNumber: (0, helpers_1.isSet)(object.revisionNumber) ? helpers_1.Long.fromValue(object.revisionNumber) : helpers_1.Long.UZERO,
          revisionHeight: (0, helpers_1.isSet)(object.revisionHeight) ? helpers_1.Long.fromValue(object.revisionHeight) : helpers_1.Long.UZERO,
          latestHeight: (0, helpers_1.isSet)(object.latestHeight) ? Boolean(object.latestHeight) : false
        };
      },
      toJSON(message) {
        const obj = {};
        message.clientId !== void 0 && (obj.clientId = message.clientId);
        message.revisionNumber !== void 0 && (obj.revisionNumber = (message.revisionNumber || helpers_1.Long.UZERO).toString());
        message.revisionHeight !== void 0 && (obj.revisionHeight = (message.revisionHeight || helpers_1.Long.UZERO).toString());
        message.latestHeight !== void 0 && (obj.latestHeight = message.latestHeight);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryConsensusStateRequest();
        message.clientId = object.clientId ?? "";
        message.revisionNumber = object.revisionNumber !== void 0 && object.revisionNumber !== null ? helpers_1.Long.fromValue(object.revisionNumber) : helpers_1.Long.UZERO;
        message.revisionHeight = object.revisionHeight !== void 0 && object.revisionHeight !== null ? helpers_1.Long.fromValue(object.revisionHeight) : helpers_1.Long.UZERO;
        message.latestHeight = object.latestHeight ?? false;
        return message;
      }
    };
    function createBaseQueryConsensusStateResponse() {
      return {
        consensusState: void 0,
        proof: new Uint8Array(),
        proofHeight: void 0
      };
    }
    exports.QueryConsensusStateResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.consensusState !== void 0) {
          any_1.Any.encode(message.consensusState, writer.uint32(10).fork()).ldelim();
        }
        if (message.proof.length !== 0) {
          writer.uint32(18).bytes(message.proof);
        }
        if (message.proofHeight !== void 0) {
          client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryConsensusStateResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.consensusState = any_1.Any.decode(reader, reader.uint32());
              break;
            case 2:
              message.proof = reader.bytes();
              break;
            case 3:
              message.proofHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          consensusState: (0, helpers_1.isSet)(object.consensusState) ? any_1.Any.fromJSON(object.consensusState) : void 0,
          proof: (0, helpers_1.isSet)(object.proof) ? (0, helpers_1.bytesFromBase64)(object.proof) : new Uint8Array(),
          proofHeight: (0, helpers_1.isSet)(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.consensusState !== void 0 && (obj.consensusState = message.consensusState ? any_1.Any.toJSON(message.consensusState) : void 0);
        message.proof !== void 0 && (obj.proof = (0, helpers_1.base64FromBytes)(message.proof !== void 0 ? message.proof : new Uint8Array()));
        message.proofHeight !== void 0 && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryConsensusStateResponse();
        message.consensusState = object.consensusState !== void 0 && object.consensusState !== null ? any_1.Any.fromPartial(object.consensusState) : void 0;
        message.proof = object.proof ?? new Uint8Array();
        message.proofHeight = object.proofHeight !== void 0 && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : void 0;
        return message;
      }
    };
    function createBaseQueryConsensusStatesRequest() {
      return {
        clientId: "",
        pagination: void 0
      };
    }
    exports.QueryConsensusStatesRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.clientId !== "") {
          writer.uint32(10).string(message.clientId);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryConsensusStatesRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.clientId = reader.string();
              break;
            case 2:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          clientId: (0, helpers_1.isSet)(object.clientId) ? String(object.clientId) : "",
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.clientId !== void 0 && (obj.clientId = message.clientId);
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryConsensusStatesRequest();
        message.clientId = object.clientId ?? "";
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryConsensusStatesResponse() {
      return {
        consensusStates: [],
        pagination: void 0
      };
    }
    exports.QueryConsensusStatesResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.consensusStates) {
          client_1.ConsensusStateWithHeight.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryConsensusStatesResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.consensusStates.push(client_1.ConsensusStateWithHeight.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          consensusStates: Array.isArray(object == null ? void 0 : object.consensusStates) ? object.consensusStates.map((e2) => client_1.ConsensusStateWithHeight.fromJSON(e2)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.consensusStates) {
          obj.consensusStates = message.consensusStates.map((e2) => e2 ? client_1.ConsensusStateWithHeight.toJSON(e2) : void 0);
        } else {
          obj.consensusStates = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryConsensusStatesResponse();
        message.consensusStates = ((_a = object.consensusStates) == null ? void 0 : _a.map((e2) => client_1.ConsensusStateWithHeight.fromPartial(e2))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryConsensusStateHeightsRequest() {
      return {
        clientId: "",
        pagination: void 0
      };
    }
    exports.QueryConsensusStateHeightsRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.clientId !== "") {
          writer.uint32(10).string(message.clientId);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryConsensusStateHeightsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.clientId = reader.string();
              break;
            case 2:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          clientId: (0, helpers_1.isSet)(object.clientId) ? String(object.clientId) : "",
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.clientId !== void 0 && (obj.clientId = message.clientId);
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryConsensusStateHeightsRequest();
        message.clientId = object.clientId ?? "";
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryConsensusStateHeightsResponse() {
      return {
        consensusStateHeights: [],
        pagination: void 0
      };
    }
    exports.QueryConsensusStateHeightsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.consensusStateHeights) {
          client_1.Height.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryConsensusStateHeightsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.consensusStateHeights.push(client_1.Height.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          consensusStateHeights: Array.isArray(object == null ? void 0 : object.consensusStateHeights) ? object.consensusStateHeights.map((e2) => client_1.Height.fromJSON(e2)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.consensusStateHeights) {
          obj.consensusStateHeights = message.consensusStateHeights.map((e2) => e2 ? client_1.Height.toJSON(e2) : void 0);
        } else {
          obj.consensusStateHeights = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryConsensusStateHeightsResponse();
        message.consensusStateHeights = ((_a = object.consensusStateHeights) == null ? void 0 : _a.map((e2) => client_1.Height.fromPartial(e2))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryClientStatusRequest() {
      return {
        clientId: ""
      };
    }
    exports.QueryClientStatusRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.clientId !== "") {
          writer.uint32(10).string(message.clientId);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryClientStatusRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.clientId = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          clientId: (0, helpers_1.isSet)(object.clientId) ? String(object.clientId) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.clientId !== void 0 && (obj.clientId = message.clientId);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryClientStatusRequest();
        message.clientId = object.clientId ?? "";
        return message;
      }
    };
    function createBaseQueryClientStatusResponse() {
      return {
        status: ""
      };
    }
    exports.QueryClientStatusResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.status !== "") {
          writer.uint32(10).string(message.status);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryClientStatusResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.status = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          status: (0, helpers_1.isSet)(object.status) ? String(object.status) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.status !== void 0 && (obj.status = message.status);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryClientStatusResponse();
        message.status = object.status ?? "";
        return message;
      }
    };
    function createBaseQueryClientParamsRequest() {
      return {};
    }
    exports.QueryClientParamsRequest = {
      encode(_3, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryClientParamsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_3) {
        return {};
      },
      toJSON(_3) {
        const obj = {};
        return obj;
      },
      fromPartial(_3) {
        const message = createBaseQueryClientParamsRequest();
        return message;
      }
    };
    function createBaseQueryClientParamsResponse() {
      return {
        params: void 0
      };
    }
    exports.QueryClientParamsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.params !== void 0) {
          client_1.Params.encode(message.params, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryClientParamsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.params = client_1.Params.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          params: (0, helpers_1.isSet)(object.params) ? client_1.Params.fromJSON(object.params) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.params !== void 0 && (obj.params = message.params ? client_1.Params.toJSON(message.params) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryClientParamsResponse();
        message.params = object.params !== void 0 && object.params !== null ? client_1.Params.fromPartial(object.params) : void 0;
        return message;
      }
    };
    function createBaseQueryUpgradedClientStateRequest() {
      return {};
    }
    exports.QueryUpgradedClientStateRequest = {
      encode(_3, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryUpgradedClientStateRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_3) {
        return {};
      },
      toJSON(_3) {
        const obj = {};
        return obj;
      },
      fromPartial(_3) {
        const message = createBaseQueryUpgradedClientStateRequest();
        return message;
      }
    };
    function createBaseQueryUpgradedClientStateResponse() {
      return {
        upgradedClientState: void 0
      };
    }
    exports.QueryUpgradedClientStateResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.upgradedClientState !== void 0) {
          any_1.Any.encode(message.upgradedClientState, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryUpgradedClientStateResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.upgradedClientState = any_1.Any.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          upgradedClientState: (0, helpers_1.isSet)(object.upgradedClientState) ? any_1.Any.fromJSON(object.upgradedClientState) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.upgradedClientState !== void 0 && (obj.upgradedClientState = message.upgradedClientState ? any_1.Any.toJSON(message.upgradedClientState) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryUpgradedClientStateResponse();
        message.upgradedClientState = object.upgradedClientState !== void 0 && object.upgradedClientState !== null ? any_1.Any.fromPartial(object.upgradedClientState) : void 0;
        return message;
      }
    };
    function createBaseQueryUpgradedConsensusStateRequest() {
      return {};
    }
    exports.QueryUpgradedConsensusStateRequest = {
      encode(_3, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryUpgradedConsensusStateRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_3) {
        return {};
      },
      toJSON(_3) {
        const obj = {};
        return obj;
      },
      fromPartial(_3) {
        const message = createBaseQueryUpgradedConsensusStateRequest();
        return message;
      }
    };
    function createBaseQueryUpgradedConsensusStateResponse() {
      return {
        upgradedConsensusState: void 0
      };
    }
    exports.QueryUpgradedConsensusStateResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.upgradedConsensusState !== void 0) {
          any_1.Any.encode(message.upgradedConsensusState, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryUpgradedConsensusStateResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.upgradedConsensusState = any_1.Any.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          upgradedConsensusState: (0, helpers_1.isSet)(object.upgradedConsensusState) ? any_1.Any.fromJSON(object.upgradedConsensusState) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.upgradedConsensusState !== void 0 && (obj.upgradedConsensusState = message.upgradedConsensusState ? any_1.Any.toJSON(message.upgradedConsensusState) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryUpgradedConsensusStateResponse();
        message.upgradedConsensusState = object.upgradedConsensusState !== void 0 && object.upgradedConsensusState !== null ? any_1.Any.fromPartial(object.upgradedConsensusState) : void 0;
        return message;
      }
    };
    var QueryClientImpl = class {
      constructor(rpc) {
        this.rpc = rpc;
        this.ClientState = this.ClientState.bind(this);
        this.ClientStates = this.ClientStates.bind(this);
        this.ConsensusState = this.ConsensusState.bind(this);
        this.ConsensusStates = this.ConsensusStates.bind(this);
        this.ConsensusStateHeights = this.ConsensusStateHeights.bind(this);
        this.ClientStatus = this.ClientStatus.bind(this);
        this.ClientParams = this.ClientParams.bind(this);
        this.UpgradedClientState = this.UpgradedClientState.bind(this);
        this.UpgradedConsensusState = this.UpgradedConsensusState.bind(this);
      }
      ClientState(request) {
        const data = exports.QueryClientStateRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.core.client.v1.Query", "ClientState", data);
        return promise.then((data2) => exports.QueryClientStateResponse.decode(new _m0.Reader(data2)));
      }
      ClientStates(request = {
        pagination: void 0
      }) {
        const data = exports.QueryClientStatesRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.core.client.v1.Query", "ClientStates", data);
        return promise.then((data2) => exports.QueryClientStatesResponse.decode(new _m0.Reader(data2)));
      }
      ConsensusState(request) {
        const data = exports.QueryConsensusStateRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.core.client.v1.Query", "ConsensusState", data);
        return promise.then((data2) => exports.QueryConsensusStateResponse.decode(new _m0.Reader(data2)));
      }
      ConsensusStates(request) {
        const data = exports.QueryConsensusStatesRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.core.client.v1.Query", "ConsensusStates", data);
        return promise.then((data2) => exports.QueryConsensusStatesResponse.decode(new _m0.Reader(data2)));
      }
      ConsensusStateHeights(request) {
        const data = exports.QueryConsensusStateHeightsRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.core.client.v1.Query", "ConsensusStateHeights", data);
        return promise.then((data2) => exports.QueryConsensusStateHeightsResponse.decode(new _m0.Reader(data2)));
      }
      ClientStatus(request) {
        const data = exports.QueryClientStatusRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.core.client.v1.Query", "ClientStatus", data);
        return promise.then((data2) => exports.QueryClientStatusResponse.decode(new _m0.Reader(data2)));
      }
      ClientParams(request = {}) {
        const data = exports.QueryClientParamsRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.core.client.v1.Query", "ClientParams", data);
        return promise.then((data2) => exports.QueryClientParamsResponse.decode(new _m0.Reader(data2)));
      }
      UpgradedClientState(request = {}) {
        const data = exports.QueryUpgradedClientStateRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.core.client.v1.Query", "UpgradedClientState", data);
        return promise.then((data2) => exports.QueryUpgradedClientStateResponse.decode(new _m0.Reader(data2)));
      }
      UpgradedConsensusState(request = {}) {
        const data = exports.QueryUpgradedConsensusStateRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.core.client.v1.Query", "UpgradedConsensusState", data);
        return promise.then((data2) => exports.QueryUpgradedConsensusStateResponse.decode(new _m0.Reader(data2)));
      }
    };
    exports.QueryClientImpl = QueryClientImpl;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/ibc/core/connection/v1/query.js
var require_query10 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/ibc/core/connection/v1/query.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.QueryClientImpl = exports.QueryConnectionConsensusStateResponse = exports.QueryConnectionConsensusStateRequest = exports.QueryConnectionClientStateResponse = exports.QueryConnectionClientStateRequest = exports.QueryClientConnectionsResponse = exports.QueryClientConnectionsRequest = exports.QueryConnectionsResponse = exports.QueryConnectionsRequest = exports.QueryConnectionResponse = exports.QueryConnectionRequest = exports.protobufPackage = void 0;
    var pagination_1 = require_pagination();
    var connection_1 = require_connection();
    var client_1 = require_client();
    var any_1 = require_any();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "ibc.core.connection.v1";
    function createBaseQueryConnectionRequest() {
      return {
        connectionId: ""
      };
    }
    exports.QueryConnectionRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.connectionId !== "") {
          writer.uint32(10).string(message.connectionId);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryConnectionRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.connectionId = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          connectionId: (0, helpers_1.isSet)(object.connectionId) ? String(object.connectionId) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.connectionId !== void 0 && (obj.connectionId = message.connectionId);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryConnectionRequest();
        message.connectionId = object.connectionId ?? "";
        return message;
      }
    };
    function createBaseQueryConnectionResponse() {
      return {
        connection: void 0,
        proof: new Uint8Array(),
        proofHeight: void 0
      };
    }
    exports.QueryConnectionResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.connection !== void 0) {
          connection_1.ConnectionEnd.encode(message.connection, writer.uint32(10).fork()).ldelim();
        }
        if (message.proof.length !== 0) {
          writer.uint32(18).bytes(message.proof);
        }
        if (message.proofHeight !== void 0) {
          client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryConnectionResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.connection = connection_1.ConnectionEnd.decode(reader, reader.uint32());
              break;
            case 2:
              message.proof = reader.bytes();
              break;
            case 3:
              message.proofHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          connection: (0, helpers_1.isSet)(object.connection) ? connection_1.ConnectionEnd.fromJSON(object.connection) : void 0,
          proof: (0, helpers_1.isSet)(object.proof) ? (0, helpers_1.bytesFromBase64)(object.proof) : new Uint8Array(),
          proofHeight: (0, helpers_1.isSet)(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.connection !== void 0 && (obj.connection = message.connection ? connection_1.ConnectionEnd.toJSON(message.connection) : void 0);
        message.proof !== void 0 && (obj.proof = (0, helpers_1.base64FromBytes)(message.proof !== void 0 ? message.proof : new Uint8Array()));
        message.proofHeight !== void 0 && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryConnectionResponse();
        message.connection = object.connection !== void 0 && object.connection !== null ? connection_1.ConnectionEnd.fromPartial(object.connection) : void 0;
        message.proof = object.proof ?? new Uint8Array();
        message.proofHeight = object.proofHeight !== void 0 && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : void 0;
        return message;
      }
    };
    function createBaseQueryConnectionsRequest() {
      return {
        pagination: void 0
      };
    }
    exports.QueryConnectionsRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryConnectionsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryConnectionsRequest();
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryConnectionsResponse() {
      return {
        connections: [],
        pagination: void 0,
        height: void 0
      };
    }
    exports.QueryConnectionsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.connections) {
          connection_1.IdentifiedConnection.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        if (message.height !== void 0) {
          client_1.Height.encode(message.height, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryConnectionsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.connections.push(connection_1.IdentifiedConnection.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            case 3:
              message.height = client_1.Height.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          connections: Array.isArray(object == null ? void 0 : object.connections) ? object.connections.map((e2) => connection_1.IdentifiedConnection.fromJSON(e2)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0,
          height: (0, helpers_1.isSet)(object.height) ? client_1.Height.fromJSON(object.height) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.connections) {
          obj.connections = message.connections.map((e2) => e2 ? connection_1.IdentifiedConnection.toJSON(e2) : void 0);
        } else {
          obj.connections = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        message.height !== void 0 && (obj.height = message.height ? client_1.Height.toJSON(message.height) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryConnectionsResponse();
        message.connections = ((_a = object.connections) == null ? void 0 : _a.map((e2) => connection_1.IdentifiedConnection.fromPartial(e2))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        message.height = object.height !== void 0 && object.height !== null ? client_1.Height.fromPartial(object.height) : void 0;
        return message;
      }
    };
    function createBaseQueryClientConnectionsRequest() {
      return {
        clientId: ""
      };
    }
    exports.QueryClientConnectionsRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.clientId !== "") {
          writer.uint32(10).string(message.clientId);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryClientConnectionsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.clientId = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          clientId: (0, helpers_1.isSet)(object.clientId) ? String(object.clientId) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.clientId !== void 0 && (obj.clientId = message.clientId);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryClientConnectionsRequest();
        message.clientId = object.clientId ?? "";
        return message;
      }
    };
    function createBaseQueryClientConnectionsResponse() {
      return {
        connectionPaths: [],
        proof: new Uint8Array(),
        proofHeight: void 0
      };
    }
    exports.QueryClientConnectionsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.connectionPaths) {
          writer.uint32(10).string(v3);
        }
        if (message.proof.length !== 0) {
          writer.uint32(18).bytes(message.proof);
        }
        if (message.proofHeight !== void 0) {
          client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryClientConnectionsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.connectionPaths.push(reader.string());
              break;
            case 2:
              message.proof = reader.bytes();
              break;
            case 3:
              message.proofHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          connectionPaths: Array.isArray(object == null ? void 0 : object.connectionPaths) ? object.connectionPaths.map((e2) => String(e2)) : [],
          proof: (0, helpers_1.isSet)(object.proof) ? (0, helpers_1.bytesFromBase64)(object.proof) : new Uint8Array(),
          proofHeight: (0, helpers_1.isSet)(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.connectionPaths) {
          obj.connectionPaths = message.connectionPaths.map((e2) => e2);
        } else {
          obj.connectionPaths = [];
        }
        message.proof !== void 0 && (obj.proof = (0, helpers_1.base64FromBytes)(message.proof !== void 0 ? message.proof : new Uint8Array()));
        message.proofHeight !== void 0 && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryClientConnectionsResponse();
        message.connectionPaths = ((_a = object.connectionPaths) == null ? void 0 : _a.map((e2) => e2)) || [];
        message.proof = object.proof ?? new Uint8Array();
        message.proofHeight = object.proofHeight !== void 0 && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : void 0;
        return message;
      }
    };
    function createBaseQueryConnectionClientStateRequest() {
      return {
        connectionId: ""
      };
    }
    exports.QueryConnectionClientStateRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.connectionId !== "") {
          writer.uint32(10).string(message.connectionId);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryConnectionClientStateRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.connectionId = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          connectionId: (0, helpers_1.isSet)(object.connectionId) ? String(object.connectionId) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.connectionId !== void 0 && (obj.connectionId = message.connectionId);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryConnectionClientStateRequest();
        message.connectionId = object.connectionId ?? "";
        return message;
      }
    };
    function createBaseQueryConnectionClientStateResponse() {
      return {
        identifiedClientState: void 0,
        proof: new Uint8Array(),
        proofHeight: void 0
      };
    }
    exports.QueryConnectionClientStateResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.identifiedClientState !== void 0) {
          client_1.IdentifiedClientState.encode(message.identifiedClientState, writer.uint32(10).fork()).ldelim();
        }
        if (message.proof.length !== 0) {
          writer.uint32(18).bytes(message.proof);
        }
        if (message.proofHeight !== void 0) {
          client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryConnectionClientStateResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.identifiedClientState = client_1.IdentifiedClientState.decode(reader, reader.uint32());
              break;
            case 2:
              message.proof = reader.bytes();
              break;
            case 3:
              message.proofHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          identifiedClientState: (0, helpers_1.isSet)(object.identifiedClientState) ? client_1.IdentifiedClientState.fromJSON(object.identifiedClientState) : void 0,
          proof: (0, helpers_1.isSet)(object.proof) ? (0, helpers_1.bytesFromBase64)(object.proof) : new Uint8Array(),
          proofHeight: (0, helpers_1.isSet)(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.identifiedClientState !== void 0 && (obj.identifiedClientState = message.identifiedClientState ? client_1.IdentifiedClientState.toJSON(message.identifiedClientState) : void 0);
        message.proof !== void 0 && (obj.proof = (0, helpers_1.base64FromBytes)(message.proof !== void 0 ? message.proof : new Uint8Array()));
        message.proofHeight !== void 0 && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryConnectionClientStateResponse();
        message.identifiedClientState = object.identifiedClientState !== void 0 && object.identifiedClientState !== null ? client_1.IdentifiedClientState.fromPartial(object.identifiedClientState) : void 0;
        message.proof = object.proof ?? new Uint8Array();
        message.proofHeight = object.proofHeight !== void 0 && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : void 0;
        return message;
      }
    };
    function createBaseQueryConnectionConsensusStateRequest() {
      return {
        connectionId: "",
        revisionNumber: helpers_1.Long.UZERO,
        revisionHeight: helpers_1.Long.UZERO
      };
    }
    exports.QueryConnectionConsensusStateRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.connectionId !== "") {
          writer.uint32(10).string(message.connectionId);
        }
        if (!message.revisionNumber.isZero()) {
          writer.uint32(16).uint64(message.revisionNumber);
        }
        if (!message.revisionHeight.isZero()) {
          writer.uint32(24).uint64(message.revisionHeight);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryConnectionConsensusStateRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.connectionId = reader.string();
              break;
            case 2:
              message.revisionNumber = reader.uint64();
              break;
            case 3:
              message.revisionHeight = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          connectionId: (0, helpers_1.isSet)(object.connectionId) ? String(object.connectionId) : "",
          revisionNumber: (0, helpers_1.isSet)(object.revisionNumber) ? helpers_1.Long.fromValue(object.revisionNumber) : helpers_1.Long.UZERO,
          revisionHeight: (0, helpers_1.isSet)(object.revisionHeight) ? helpers_1.Long.fromValue(object.revisionHeight) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.connectionId !== void 0 && (obj.connectionId = message.connectionId);
        message.revisionNumber !== void 0 && (obj.revisionNumber = (message.revisionNumber || helpers_1.Long.UZERO).toString());
        message.revisionHeight !== void 0 && (obj.revisionHeight = (message.revisionHeight || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryConnectionConsensusStateRequest();
        message.connectionId = object.connectionId ?? "";
        message.revisionNumber = object.revisionNumber !== void 0 && object.revisionNumber !== null ? helpers_1.Long.fromValue(object.revisionNumber) : helpers_1.Long.UZERO;
        message.revisionHeight = object.revisionHeight !== void 0 && object.revisionHeight !== null ? helpers_1.Long.fromValue(object.revisionHeight) : helpers_1.Long.UZERO;
        return message;
      }
    };
    function createBaseQueryConnectionConsensusStateResponse() {
      return {
        consensusState: void 0,
        clientId: "",
        proof: new Uint8Array(),
        proofHeight: void 0
      };
    }
    exports.QueryConnectionConsensusStateResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.consensusState !== void 0) {
          any_1.Any.encode(message.consensusState, writer.uint32(10).fork()).ldelim();
        }
        if (message.clientId !== "") {
          writer.uint32(18).string(message.clientId);
        }
        if (message.proof.length !== 0) {
          writer.uint32(26).bytes(message.proof);
        }
        if (message.proofHeight !== void 0) {
          client_1.Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryConnectionConsensusStateResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.consensusState = any_1.Any.decode(reader, reader.uint32());
              break;
            case 2:
              message.clientId = reader.string();
              break;
            case 3:
              message.proof = reader.bytes();
              break;
            case 4:
              message.proofHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          consensusState: (0, helpers_1.isSet)(object.consensusState) ? any_1.Any.fromJSON(object.consensusState) : void 0,
          clientId: (0, helpers_1.isSet)(object.clientId) ? String(object.clientId) : "",
          proof: (0, helpers_1.isSet)(object.proof) ? (0, helpers_1.bytesFromBase64)(object.proof) : new Uint8Array(),
          proofHeight: (0, helpers_1.isSet)(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.consensusState !== void 0 && (obj.consensusState = message.consensusState ? any_1.Any.toJSON(message.consensusState) : void 0);
        message.clientId !== void 0 && (obj.clientId = message.clientId);
        message.proof !== void 0 && (obj.proof = (0, helpers_1.base64FromBytes)(message.proof !== void 0 ? message.proof : new Uint8Array()));
        message.proofHeight !== void 0 && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryConnectionConsensusStateResponse();
        message.consensusState = object.consensusState !== void 0 && object.consensusState !== null ? any_1.Any.fromPartial(object.consensusState) : void 0;
        message.clientId = object.clientId ?? "";
        message.proof = object.proof ?? new Uint8Array();
        message.proofHeight = object.proofHeight !== void 0 && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : void 0;
        return message;
      }
    };
    var QueryClientImpl = class {
      constructor(rpc) {
        this.rpc = rpc;
        this.Connection = this.Connection.bind(this);
        this.Connections = this.Connections.bind(this);
        this.ClientConnections = this.ClientConnections.bind(this);
        this.ConnectionClientState = this.ConnectionClientState.bind(this);
        this.ConnectionConsensusState = this.ConnectionConsensusState.bind(this);
      }
      Connection(request) {
        const data = exports.QueryConnectionRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.core.connection.v1.Query", "Connection", data);
        return promise.then((data2) => exports.QueryConnectionResponse.decode(new _m0.Reader(data2)));
      }
      Connections(request = {
        pagination: void 0
      }) {
        const data = exports.QueryConnectionsRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.core.connection.v1.Query", "Connections", data);
        return promise.then((data2) => exports.QueryConnectionsResponse.decode(new _m0.Reader(data2)));
      }
      ClientConnections(request) {
        const data = exports.QueryClientConnectionsRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.core.connection.v1.Query", "ClientConnections", data);
        return promise.then((data2) => exports.QueryClientConnectionsResponse.decode(new _m0.Reader(data2)));
      }
      ConnectionClientState(request) {
        const data = exports.QueryConnectionClientStateRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.core.connection.v1.Query", "ConnectionClientState", data);
        return promise.then((data2) => exports.QueryConnectionClientStateResponse.decode(new _m0.Reader(data2)));
      }
      ConnectionConsensusState(request) {
        const data = exports.QueryConnectionConsensusStateRequest.encode(request).finish();
        const promise = this.rpc.request("ibc.core.connection.v1.Query", "ConnectionConsensusState", data);
        return promise.then((data2) => exports.QueryConnectionConsensusStateResponse.decode(new _m0.Reader(data2)));
      }
    };
    exports.QueryClientImpl = QueryClientImpl;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/tendermint/crypto/proof.js
var require_proof = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/tendermint/crypto/proof.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ProofOps = exports.ProofOp = exports.DominoOp = exports.ValueOp = exports.Proof = exports.protobufPackage = void 0;
    var helpers_1 = require_helpers();
    var _m0 = __importStar(require_minimal());
    exports.protobufPackage = "tendermint.crypto";
    function createBaseProof() {
      return {
        total: helpers_1.Long.ZERO,
        index: helpers_1.Long.ZERO,
        leafHash: new Uint8Array(),
        aunts: []
      };
    }
    exports.Proof = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.total.isZero()) {
          writer.uint32(8).int64(message.total);
        }
        if (!message.index.isZero()) {
          writer.uint32(16).int64(message.index);
        }
        if (message.leafHash.length !== 0) {
          writer.uint32(26).bytes(message.leafHash);
        }
        for (const v3 of message.aunts) {
          writer.uint32(34).bytes(v3);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseProof();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.total = reader.int64();
              break;
            case 2:
              message.index = reader.int64();
              break;
            case 3:
              message.leafHash = reader.bytes();
              break;
            case 4:
              message.aunts.push(reader.bytes());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          total: (0, helpers_1.isSet)(object.total) ? helpers_1.Long.fromValue(object.total) : helpers_1.Long.ZERO,
          index: (0, helpers_1.isSet)(object.index) ? helpers_1.Long.fromValue(object.index) : helpers_1.Long.ZERO,
          leafHash: (0, helpers_1.isSet)(object.leafHash) ? (0, helpers_1.bytesFromBase64)(object.leafHash) : new Uint8Array(),
          aunts: Array.isArray(object == null ? void 0 : object.aunts) ? object.aunts.map((e2) => (0, helpers_1.bytesFromBase64)(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.total !== void 0 && (obj.total = (message.total || helpers_1.Long.ZERO).toString());
        message.index !== void 0 && (obj.index = (message.index || helpers_1.Long.ZERO).toString());
        message.leafHash !== void 0 && (obj.leafHash = (0, helpers_1.base64FromBytes)(message.leafHash !== void 0 ? message.leafHash : new Uint8Array()));
        if (message.aunts) {
          obj.aunts = message.aunts.map((e2) => (0, helpers_1.base64FromBytes)(e2 !== void 0 ? e2 : new Uint8Array()));
        } else {
          obj.aunts = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseProof();
        message.total = object.total !== void 0 && object.total !== null ? helpers_1.Long.fromValue(object.total) : helpers_1.Long.ZERO;
        message.index = object.index !== void 0 && object.index !== null ? helpers_1.Long.fromValue(object.index) : helpers_1.Long.ZERO;
        message.leafHash = object.leafHash ?? new Uint8Array();
        message.aunts = ((_a = object.aunts) == null ? void 0 : _a.map((e2) => e2)) || [];
        return message;
      }
    };
    function createBaseValueOp() {
      return {
        key: new Uint8Array(),
        proof: void 0
      };
    }
    exports.ValueOp = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.key.length !== 0) {
          writer.uint32(10).bytes(message.key);
        }
        if (message.proof !== void 0) {
          exports.Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseValueOp();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.key = reader.bytes();
              break;
            case 2:
              message.proof = exports.Proof.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          key: (0, helpers_1.isSet)(object.key) ? (0, helpers_1.bytesFromBase64)(object.key) : new Uint8Array(),
          proof: (0, helpers_1.isSet)(object.proof) ? exports.Proof.fromJSON(object.proof) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.key !== void 0 && (obj.key = (0, helpers_1.base64FromBytes)(message.key !== void 0 ? message.key : new Uint8Array()));
        message.proof !== void 0 && (obj.proof = message.proof ? exports.Proof.toJSON(message.proof) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseValueOp();
        message.key = object.key ?? new Uint8Array();
        message.proof = object.proof !== void 0 && object.proof !== null ? exports.Proof.fromPartial(object.proof) : void 0;
        return message;
      }
    };
    function createBaseDominoOp() {
      return {
        key: "",
        input: "",
        output: ""
      };
    }
    exports.DominoOp = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.key !== "") {
          writer.uint32(10).string(message.key);
        }
        if (message.input !== "") {
          writer.uint32(18).string(message.input);
        }
        if (message.output !== "") {
          writer.uint32(26).string(message.output);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseDominoOp();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.key = reader.string();
              break;
            case 2:
              message.input = reader.string();
              break;
            case 3:
              message.output = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          key: (0, helpers_1.isSet)(object.key) ? String(object.key) : "",
          input: (0, helpers_1.isSet)(object.input) ? String(object.input) : "",
          output: (0, helpers_1.isSet)(object.output) ? String(object.output) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.key !== void 0 && (obj.key = message.key);
        message.input !== void 0 && (obj.input = message.input);
        message.output !== void 0 && (obj.output = message.output);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseDominoOp();
        message.key = object.key ?? "";
        message.input = object.input ?? "";
        message.output = object.output ?? "";
        return message;
      }
    };
    function createBaseProofOp() {
      return {
        type: "",
        key: new Uint8Array(),
        data: new Uint8Array()
      };
    }
    exports.ProofOp = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.type !== "") {
          writer.uint32(10).string(message.type);
        }
        if (message.key.length !== 0) {
          writer.uint32(18).bytes(message.key);
        }
        if (message.data.length !== 0) {
          writer.uint32(26).bytes(message.data);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseProofOp();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.type = reader.string();
              break;
            case 2:
              message.key = reader.bytes();
              break;
            case 3:
              message.data = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          type: (0, helpers_1.isSet)(object.type) ? String(object.type) : "",
          key: (0, helpers_1.isSet)(object.key) ? (0, helpers_1.bytesFromBase64)(object.key) : new Uint8Array(),
          data: (0, helpers_1.isSet)(object.data) ? (0, helpers_1.bytesFromBase64)(object.data) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.type !== void 0 && (obj.type = message.type);
        message.key !== void 0 && (obj.key = (0, helpers_1.base64FromBytes)(message.key !== void 0 ? message.key : new Uint8Array()));
        message.data !== void 0 && (obj.data = (0, helpers_1.base64FromBytes)(message.data !== void 0 ? message.data : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseProofOp();
        message.type = object.type ?? "";
        message.key = object.key ?? new Uint8Array();
        message.data = object.data ?? new Uint8Array();
        return message;
      }
    };
    function createBaseProofOps() {
      return {
        ops: []
      };
    }
    exports.ProofOps = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.ops) {
          exports.ProofOp.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseProofOps();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.ops.push(exports.ProofOp.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          ops: Array.isArray(object == null ? void 0 : object.ops) ? object.ops.map((e2) => exports.ProofOp.fromJSON(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.ops) {
          obj.ops = message.ops.map((e2) => e2 ? exports.ProofOp.toJSON(e2) : void 0);
        } else {
          obj.ops = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseProofOps();
        message.ops = ((_a = object.ops) == null ? void 0 : _a.map((e2) => exports.ProofOp.fromPartial(e2))) || [];
        return message;
      }
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/tendermint/version/types.js
var require_types = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/tendermint/version/types.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Consensus = exports.App = exports.protobufPackage = void 0;
    var helpers_1 = require_helpers();
    var _m0 = __importStar(require_minimal());
    exports.protobufPackage = "tendermint.version";
    function createBaseApp() {
      return {
        protocol: helpers_1.Long.UZERO,
        software: ""
      };
    }
    exports.App = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.protocol.isZero()) {
          writer.uint32(8).uint64(message.protocol);
        }
        if (message.software !== "") {
          writer.uint32(18).string(message.software);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseApp();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.protocol = reader.uint64();
              break;
            case 2:
              message.software = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          protocol: (0, helpers_1.isSet)(object.protocol) ? helpers_1.Long.fromValue(object.protocol) : helpers_1.Long.UZERO,
          software: (0, helpers_1.isSet)(object.software) ? String(object.software) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.protocol !== void 0 && (obj.protocol = (message.protocol || helpers_1.Long.UZERO).toString());
        message.software !== void 0 && (obj.software = message.software);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseApp();
        message.protocol = object.protocol !== void 0 && object.protocol !== null ? helpers_1.Long.fromValue(object.protocol) : helpers_1.Long.UZERO;
        message.software = object.software ?? "";
        return message;
      }
    };
    function createBaseConsensus() {
      return {
        block: helpers_1.Long.UZERO,
        app: helpers_1.Long.UZERO
      };
    }
    exports.Consensus = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.block.isZero()) {
          writer.uint32(8).uint64(message.block);
        }
        if (!message.app.isZero()) {
          writer.uint32(16).uint64(message.app);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseConsensus();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.block = reader.uint64();
              break;
            case 2:
              message.app = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          block: (0, helpers_1.isSet)(object.block) ? helpers_1.Long.fromValue(object.block) : helpers_1.Long.UZERO,
          app: (0, helpers_1.isSet)(object.app) ? helpers_1.Long.fromValue(object.app) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.block !== void 0 && (obj.block = (message.block || helpers_1.Long.UZERO).toString());
        message.app !== void 0 && (obj.app = (message.app || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseConsensus();
        message.block = object.block !== void 0 && object.block !== null ? helpers_1.Long.fromValue(object.block) : helpers_1.Long.UZERO;
        message.app = object.app !== void 0 && object.app !== null ? helpers_1.Long.fromValue(object.app) : helpers_1.Long.UZERO;
        return message;
      }
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/tendermint/crypto/keys.js
var require_keys4 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/tendermint/crypto/keys.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PublicKey = exports.protobufPackage = void 0;
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "tendermint.crypto";
    function createBasePublicKey() {
      return {
        ed25519: void 0,
        secp256k1: void 0
      };
    }
    exports.PublicKey = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.ed25519 !== void 0) {
          writer.uint32(10).bytes(message.ed25519);
        }
        if (message.secp256k1 !== void 0) {
          writer.uint32(18).bytes(message.secp256k1);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBasePublicKey();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.ed25519 = reader.bytes();
              break;
            case 2:
              message.secp256k1 = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          ed25519: (0, helpers_1.isSet)(object.ed25519) ? (0, helpers_1.bytesFromBase64)(object.ed25519) : void 0,
          secp256k1: (0, helpers_1.isSet)(object.secp256k1) ? (0, helpers_1.bytesFromBase64)(object.secp256k1) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.ed25519 !== void 0 && (obj.ed25519 = message.ed25519 !== void 0 ? (0, helpers_1.base64FromBytes)(message.ed25519) : void 0);
        message.secp256k1 !== void 0 && (obj.secp256k1 = message.secp256k1 !== void 0 ? (0, helpers_1.base64FromBytes)(message.secp256k1) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBasePublicKey();
        message.ed25519 = object.ed25519 ?? void 0;
        message.secp256k1 = object.secp256k1 ?? void 0;
        return message;
      }
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/tendermint/types/validator.js
var require_validator = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/tendermint/types/validator.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SimpleValidator = exports.Validator = exports.ValidatorSet = exports.protobufPackage = void 0;
    var keys_1 = require_keys4();
    var helpers_1 = require_helpers();
    var _m0 = __importStar(require_minimal());
    exports.protobufPackage = "tendermint.types";
    function createBaseValidatorSet() {
      return {
        validators: [],
        proposer: void 0,
        totalVotingPower: helpers_1.Long.ZERO
      };
    }
    exports.ValidatorSet = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.validators) {
          exports.Validator.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        if (message.proposer !== void 0) {
          exports.Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();
        }
        if (!message.totalVotingPower.isZero()) {
          writer.uint32(24).int64(message.totalVotingPower);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseValidatorSet();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.validators.push(exports.Validator.decode(reader, reader.uint32()));
              break;
            case 2:
              message.proposer = exports.Validator.decode(reader, reader.uint32());
              break;
            case 3:
              message.totalVotingPower = reader.int64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          validators: Array.isArray(object == null ? void 0 : object.validators) ? object.validators.map((e2) => exports.Validator.fromJSON(e2)) : [],
          proposer: (0, helpers_1.isSet)(object.proposer) ? exports.Validator.fromJSON(object.proposer) : void 0,
          totalVotingPower: (0, helpers_1.isSet)(object.totalVotingPower) ? helpers_1.Long.fromValue(object.totalVotingPower) : helpers_1.Long.ZERO
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.validators) {
          obj.validators = message.validators.map((e2) => e2 ? exports.Validator.toJSON(e2) : void 0);
        } else {
          obj.validators = [];
        }
        message.proposer !== void 0 && (obj.proposer = message.proposer ? exports.Validator.toJSON(message.proposer) : void 0);
        message.totalVotingPower !== void 0 && (obj.totalVotingPower = (message.totalVotingPower || helpers_1.Long.ZERO).toString());
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseValidatorSet();
        message.validators = ((_a = object.validators) == null ? void 0 : _a.map((e2) => exports.Validator.fromPartial(e2))) || [];
        message.proposer = object.proposer !== void 0 && object.proposer !== null ? exports.Validator.fromPartial(object.proposer) : void 0;
        message.totalVotingPower = object.totalVotingPower !== void 0 && object.totalVotingPower !== null ? helpers_1.Long.fromValue(object.totalVotingPower) : helpers_1.Long.ZERO;
        return message;
      }
    };
    function createBaseValidator() {
      return {
        address: new Uint8Array(),
        pubKey: void 0,
        votingPower: helpers_1.Long.ZERO,
        proposerPriority: helpers_1.Long.ZERO
      };
    }
    exports.Validator = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.address.length !== 0) {
          writer.uint32(10).bytes(message.address);
        }
        if (message.pubKey !== void 0) {
          keys_1.PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();
        }
        if (!message.votingPower.isZero()) {
          writer.uint32(24).int64(message.votingPower);
        }
        if (!message.proposerPriority.isZero()) {
          writer.uint32(32).int64(message.proposerPriority);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseValidator();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.address = reader.bytes();
              break;
            case 2:
              message.pubKey = keys_1.PublicKey.decode(reader, reader.uint32());
              break;
            case 3:
              message.votingPower = reader.int64();
              break;
            case 4:
              message.proposerPriority = reader.int64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          address: (0, helpers_1.isSet)(object.address) ? (0, helpers_1.bytesFromBase64)(object.address) : new Uint8Array(),
          pubKey: (0, helpers_1.isSet)(object.pubKey) ? keys_1.PublicKey.fromJSON(object.pubKey) : void 0,
          votingPower: (0, helpers_1.isSet)(object.votingPower) ? helpers_1.Long.fromValue(object.votingPower) : helpers_1.Long.ZERO,
          proposerPriority: (0, helpers_1.isSet)(object.proposerPriority) ? helpers_1.Long.fromValue(object.proposerPriority) : helpers_1.Long.ZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.address !== void 0 && (obj.address = (0, helpers_1.base64FromBytes)(message.address !== void 0 ? message.address : new Uint8Array()));
        message.pubKey !== void 0 && (obj.pubKey = message.pubKey ? keys_1.PublicKey.toJSON(message.pubKey) : void 0);
        message.votingPower !== void 0 && (obj.votingPower = (message.votingPower || helpers_1.Long.ZERO).toString());
        message.proposerPriority !== void 0 && (obj.proposerPriority = (message.proposerPriority || helpers_1.Long.ZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseValidator();
        message.address = object.address ?? new Uint8Array();
        message.pubKey = object.pubKey !== void 0 && object.pubKey !== null ? keys_1.PublicKey.fromPartial(object.pubKey) : void 0;
        message.votingPower = object.votingPower !== void 0 && object.votingPower !== null ? helpers_1.Long.fromValue(object.votingPower) : helpers_1.Long.ZERO;
        message.proposerPriority = object.proposerPriority !== void 0 && object.proposerPriority !== null ? helpers_1.Long.fromValue(object.proposerPriority) : helpers_1.Long.ZERO;
        return message;
      }
    };
    function createBaseSimpleValidator() {
      return {
        pubKey: void 0,
        votingPower: helpers_1.Long.ZERO
      };
    }
    exports.SimpleValidator = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.pubKey !== void 0) {
          keys_1.PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();
        }
        if (!message.votingPower.isZero()) {
          writer.uint32(16).int64(message.votingPower);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseSimpleValidator();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.pubKey = keys_1.PublicKey.decode(reader, reader.uint32());
              break;
            case 2:
              message.votingPower = reader.int64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          pubKey: (0, helpers_1.isSet)(object.pubKey) ? keys_1.PublicKey.fromJSON(object.pubKey) : void 0,
          votingPower: (0, helpers_1.isSet)(object.votingPower) ? helpers_1.Long.fromValue(object.votingPower) : helpers_1.Long.ZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.pubKey !== void 0 && (obj.pubKey = message.pubKey ? keys_1.PublicKey.toJSON(message.pubKey) : void 0);
        message.votingPower !== void 0 && (obj.votingPower = (message.votingPower || helpers_1.Long.ZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseSimpleValidator();
        message.pubKey = object.pubKey !== void 0 && object.pubKey !== null ? keys_1.PublicKey.fromPartial(object.pubKey) : void 0;
        message.votingPower = object.votingPower !== void 0 && object.votingPower !== null ? helpers_1.Long.fromValue(object.votingPower) : helpers_1.Long.ZERO;
        return message;
      }
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/tendermint/types/types.js
var require_types2 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/tendermint/types/types.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TxProof = exports.BlockMeta = exports.LightBlock = exports.SignedHeader = exports.Proposal = exports.CommitSig = exports.Commit = exports.Vote = exports.Data = exports.Header = exports.BlockID = exports.Part = exports.PartSetHeader = exports.signedMsgTypeToJSON = exports.signedMsgTypeFromJSON = exports.SignedMsgType = exports.blockIDFlagToJSON = exports.blockIDFlagFromJSON = exports.BlockIDFlag = exports.protobufPackage = void 0;
    var proof_1 = require_proof();
    var types_1 = require_types();
    var timestamp_1 = require_timestamp();
    var validator_1 = require_validator();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "tendermint.types";
    var BlockIDFlag;
    (function(BlockIDFlag2) {
      BlockIDFlag2[BlockIDFlag2["BLOCK_ID_FLAG_UNKNOWN"] = 0] = "BLOCK_ID_FLAG_UNKNOWN";
      BlockIDFlag2[BlockIDFlag2["BLOCK_ID_FLAG_ABSENT"] = 1] = "BLOCK_ID_FLAG_ABSENT";
      BlockIDFlag2[BlockIDFlag2["BLOCK_ID_FLAG_COMMIT"] = 2] = "BLOCK_ID_FLAG_COMMIT";
      BlockIDFlag2[BlockIDFlag2["BLOCK_ID_FLAG_NIL"] = 3] = "BLOCK_ID_FLAG_NIL";
      BlockIDFlag2[BlockIDFlag2["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
    })(BlockIDFlag = exports.BlockIDFlag || (exports.BlockIDFlag = {}));
    function blockIDFlagFromJSON(object) {
      switch (object) {
        case 0:
        case "BLOCK_ID_FLAG_UNKNOWN":
          return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;
        case 1:
        case "BLOCK_ID_FLAG_ABSENT":
          return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;
        case 2:
        case "BLOCK_ID_FLAG_COMMIT":
          return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;
        case 3:
        case "BLOCK_ID_FLAG_NIL":
          return BlockIDFlag.BLOCK_ID_FLAG_NIL;
        case -1:
        case "UNRECOGNIZED":
        default:
          return BlockIDFlag.UNRECOGNIZED;
      }
    }
    exports.blockIDFlagFromJSON = blockIDFlagFromJSON;
    function blockIDFlagToJSON(object) {
      switch (object) {
        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:
          return "BLOCK_ID_FLAG_UNKNOWN";
        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:
          return "BLOCK_ID_FLAG_ABSENT";
        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:
          return "BLOCK_ID_FLAG_COMMIT";
        case BlockIDFlag.BLOCK_ID_FLAG_NIL:
          return "BLOCK_ID_FLAG_NIL";
        case BlockIDFlag.UNRECOGNIZED:
        default:
          return "UNRECOGNIZED";
      }
    }
    exports.blockIDFlagToJSON = blockIDFlagToJSON;
    var SignedMsgType;
    (function(SignedMsgType2) {
      SignedMsgType2[SignedMsgType2["SIGNED_MSG_TYPE_UNKNOWN"] = 0] = "SIGNED_MSG_TYPE_UNKNOWN";
      SignedMsgType2[SignedMsgType2["SIGNED_MSG_TYPE_PREVOTE"] = 1] = "SIGNED_MSG_TYPE_PREVOTE";
      SignedMsgType2[SignedMsgType2["SIGNED_MSG_TYPE_PRECOMMIT"] = 2] = "SIGNED_MSG_TYPE_PRECOMMIT";
      SignedMsgType2[SignedMsgType2["SIGNED_MSG_TYPE_PROPOSAL"] = 32] = "SIGNED_MSG_TYPE_PROPOSAL";
      SignedMsgType2[SignedMsgType2["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
    })(SignedMsgType = exports.SignedMsgType || (exports.SignedMsgType = {}));
    function signedMsgTypeFromJSON(object) {
      switch (object) {
        case 0:
        case "SIGNED_MSG_TYPE_UNKNOWN":
          return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;
        case 1:
        case "SIGNED_MSG_TYPE_PREVOTE":
          return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;
        case 2:
        case "SIGNED_MSG_TYPE_PRECOMMIT":
          return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;
        case 32:
        case "SIGNED_MSG_TYPE_PROPOSAL":
          return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;
        case -1:
        case "UNRECOGNIZED":
        default:
          return SignedMsgType.UNRECOGNIZED;
      }
    }
    exports.signedMsgTypeFromJSON = signedMsgTypeFromJSON;
    function signedMsgTypeToJSON(object) {
      switch (object) {
        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:
          return "SIGNED_MSG_TYPE_UNKNOWN";
        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:
          return "SIGNED_MSG_TYPE_PREVOTE";
        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:
          return "SIGNED_MSG_TYPE_PRECOMMIT";
        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:
          return "SIGNED_MSG_TYPE_PROPOSAL";
        case SignedMsgType.UNRECOGNIZED:
        default:
          return "UNRECOGNIZED";
      }
    }
    exports.signedMsgTypeToJSON = signedMsgTypeToJSON;
    function createBasePartSetHeader() {
      return {
        total: 0,
        hash: new Uint8Array()
      };
    }
    exports.PartSetHeader = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.total !== 0) {
          writer.uint32(8).uint32(message.total);
        }
        if (message.hash.length !== 0) {
          writer.uint32(18).bytes(message.hash);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBasePartSetHeader();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.total = reader.uint32();
              break;
            case 2:
              message.hash = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          total: (0, helpers_1.isSet)(object.total) ? Number(object.total) : 0,
          hash: (0, helpers_1.isSet)(object.hash) ? (0, helpers_1.bytesFromBase64)(object.hash) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.total !== void 0 && (obj.total = Math.round(message.total));
        message.hash !== void 0 && (obj.hash = (0, helpers_1.base64FromBytes)(message.hash !== void 0 ? message.hash : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBasePartSetHeader();
        message.total = object.total ?? 0;
        message.hash = object.hash ?? new Uint8Array();
        return message;
      }
    };
    function createBasePart() {
      return {
        index: 0,
        bytes: new Uint8Array(),
        proof: void 0
      };
    }
    exports.Part = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.index !== 0) {
          writer.uint32(8).uint32(message.index);
        }
        if (message.bytes.length !== 0) {
          writer.uint32(18).bytes(message.bytes);
        }
        if (message.proof !== void 0) {
          proof_1.Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBasePart();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.index = reader.uint32();
              break;
            case 2:
              message.bytes = reader.bytes();
              break;
            case 3:
              message.proof = proof_1.Proof.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          index: (0, helpers_1.isSet)(object.index) ? Number(object.index) : 0,
          bytes: (0, helpers_1.isSet)(object.bytes) ? (0, helpers_1.bytesFromBase64)(object.bytes) : new Uint8Array(),
          proof: (0, helpers_1.isSet)(object.proof) ? proof_1.Proof.fromJSON(object.proof) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.index !== void 0 && (obj.index = Math.round(message.index));
        message.bytes !== void 0 && (obj.bytes = (0, helpers_1.base64FromBytes)(message.bytes !== void 0 ? message.bytes : new Uint8Array()));
        message.proof !== void 0 && (obj.proof = message.proof ? proof_1.Proof.toJSON(message.proof) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBasePart();
        message.index = object.index ?? 0;
        message.bytes = object.bytes ?? new Uint8Array();
        message.proof = object.proof !== void 0 && object.proof !== null ? proof_1.Proof.fromPartial(object.proof) : void 0;
        return message;
      }
    };
    function createBaseBlockID() {
      return {
        hash: new Uint8Array(),
        partSetHeader: void 0
      };
    }
    exports.BlockID = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.hash.length !== 0) {
          writer.uint32(10).bytes(message.hash);
        }
        if (message.partSetHeader !== void 0) {
          exports.PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseBlockID();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.hash = reader.bytes();
              break;
            case 2:
              message.partSetHeader = exports.PartSetHeader.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          hash: (0, helpers_1.isSet)(object.hash) ? (0, helpers_1.bytesFromBase64)(object.hash) : new Uint8Array(),
          partSetHeader: (0, helpers_1.isSet)(object.partSetHeader) ? exports.PartSetHeader.fromJSON(object.partSetHeader) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.hash !== void 0 && (obj.hash = (0, helpers_1.base64FromBytes)(message.hash !== void 0 ? message.hash : new Uint8Array()));
        message.partSetHeader !== void 0 && (obj.partSetHeader = message.partSetHeader ? exports.PartSetHeader.toJSON(message.partSetHeader) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseBlockID();
        message.hash = object.hash ?? new Uint8Array();
        message.partSetHeader = object.partSetHeader !== void 0 && object.partSetHeader !== null ? exports.PartSetHeader.fromPartial(object.partSetHeader) : void 0;
        return message;
      }
    };
    function createBaseHeader() {
      return {
        version: void 0,
        chainId: "",
        height: helpers_1.Long.ZERO,
        time: void 0,
        lastBlockId: void 0,
        lastCommitHash: new Uint8Array(),
        dataHash: new Uint8Array(),
        validatorsHash: new Uint8Array(),
        nextValidatorsHash: new Uint8Array(),
        consensusHash: new Uint8Array(),
        appHash: new Uint8Array(),
        lastResultsHash: new Uint8Array(),
        evidenceHash: new Uint8Array(),
        proposerAddress: new Uint8Array()
      };
    }
    exports.Header = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.version !== void 0) {
          types_1.Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();
        }
        if (message.chainId !== "") {
          writer.uint32(18).string(message.chainId);
        }
        if (!message.height.isZero()) {
          writer.uint32(24).int64(message.height);
        }
        if (message.time !== void 0) {
          timestamp_1.Timestamp.encode(message.time, writer.uint32(34).fork()).ldelim();
        }
        if (message.lastBlockId !== void 0) {
          exports.BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();
        }
        if (message.lastCommitHash.length !== 0) {
          writer.uint32(50).bytes(message.lastCommitHash);
        }
        if (message.dataHash.length !== 0) {
          writer.uint32(58).bytes(message.dataHash);
        }
        if (message.validatorsHash.length !== 0) {
          writer.uint32(66).bytes(message.validatorsHash);
        }
        if (message.nextValidatorsHash.length !== 0) {
          writer.uint32(74).bytes(message.nextValidatorsHash);
        }
        if (message.consensusHash.length !== 0) {
          writer.uint32(82).bytes(message.consensusHash);
        }
        if (message.appHash.length !== 0) {
          writer.uint32(90).bytes(message.appHash);
        }
        if (message.lastResultsHash.length !== 0) {
          writer.uint32(98).bytes(message.lastResultsHash);
        }
        if (message.evidenceHash.length !== 0) {
          writer.uint32(106).bytes(message.evidenceHash);
        }
        if (message.proposerAddress.length !== 0) {
          writer.uint32(114).bytes(message.proposerAddress);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseHeader();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.version = types_1.Consensus.decode(reader, reader.uint32());
              break;
            case 2:
              message.chainId = reader.string();
              break;
            case 3:
              message.height = reader.int64();
              break;
            case 4:
              message.time = timestamp_1.Timestamp.decode(reader, reader.uint32());
              break;
            case 5:
              message.lastBlockId = exports.BlockID.decode(reader, reader.uint32());
              break;
            case 6:
              message.lastCommitHash = reader.bytes();
              break;
            case 7:
              message.dataHash = reader.bytes();
              break;
            case 8:
              message.validatorsHash = reader.bytes();
              break;
            case 9:
              message.nextValidatorsHash = reader.bytes();
              break;
            case 10:
              message.consensusHash = reader.bytes();
              break;
            case 11:
              message.appHash = reader.bytes();
              break;
            case 12:
              message.lastResultsHash = reader.bytes();
              break;
            case 13:
              message.evidenceHash = reader.bytes();
              break;
            case 14:
              message.proposerAddress = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          version: (0, helpers_1.isSet)(object.version) ? types_1.Consensus.fromJSON(object.version) : void 0,
          chainId: (0, helpers_1.isSet)(object.chainId) ? String(object.chainId) : "",
          height: (0, helpers_1.isSet)(object.height) ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.ZERO,
          time: (0, helpers_1.isSet)(object.time) ? (0, helpers_1.fromJsonTimestamp)(object.time) : void 0,
          lastBlockId: (0, helpers_1.isSet)(object.lastBlockId) ? exports.BlockID.fromJSON(object.lastBlockId) : void 0,
          lastCommitHash: (0, helpers_1.isSet)(object.lastCommitHash) ? (0, helpers_1.bytesFromBase64)(object.lastCommitHash) : new Uint8Array(),
          dataHash: (0, helpers_1.isSet)(object.dataHash) ? (0, helpers_1.bytesFromBase64)(object.dataHash) : new Uint8Array(),
          validatorsHash: (0, helpers_1.isSet)(object.validatorsHash) ? (0, helpers_1.bytesFromBase64)(object.validatorsHash) : new Uint8Array(),
          nextValidatorsHash: (0, helpers_1.isSet)(object.nextValidatorsHash) ? (0, helpers_1.bytesFromBase64)(object.nextValidatorsHash) : new Uint8Array(),
          consensusHash: (0, helpers_1.isSet)(object.consensusHash) ? (0, helpers_1.bytesFromBase64)(object.consensusHash) : new Uint8Array(),
          appHash: (0, helpers_1.isSet)(object.appHash) ? (0, helpers_1.bytesFromBase64)(object.appHash) : new Uint8Array(),
          lastResultsHash: (0, helpers_1.isSet)(object.lastResultsHash) ? (0, helpers_1.bytesFromBase64)(object.lastResultsHash) : new Uint8Array(),
          evidenceHash: (0, helpers_1.isSet)(object.evidenceHash) ? (0, helpers_1.bytesFromBase64)(object.evidenceHash) : new Uint8Array(),
          proposerAddress: (0, helpers_1.isSet)(object.proposerAddress) ? (0, helpers_1.bytesFromBase64)(object.proposerAddress) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.version !== void 0 && (obj.version = message.version ? types_1.Consensus.toJSON(message.version) : void 0);
        message.chainId !== void 0 && (obj.chainId = message.chainId);
        message.height !== void 0 && (obj.height = (message.height || helpers_1.Long.ZERO).toString());
        message.time !== void 0 && (obj.time = (0, helpers_1.fromTimestamp)(message.time).toISOString());
        message.lastBlockId !== void 0 && (obj.lastBlockId = message.lastBlockId ? exports.BlockID.toJSON(message.lastBlockId) : void 0);
        message.lastCommitHash !== void 0 && (obj.lastCommitHash = (0, helpers_1.base64FromBytes)(message.lastCommitHash !== void 0 ? message.lastCommitHash : new Uint8Array()));
        message.dataHash !== void 0 && (obj.dataHash = (0, helpers_1.base64FromBytes)(message.dataHash !== void 0 ? message.dataHash : new Uint8Array()));
        message.validatorsHash !== void 0 && (obj.validatorsHash = (0, helpers_1.base64FromBytes)(message.validatorsHash !== void 0 ? message.validatorsHash : new Uint8Array()));
        message.nextValidatorsHash !== void 0 && (obj.nextValidatorsHash = (0, helpers_1.base64FromBytes)(message.nextValidatorsHash !== void 0 ? message.nextValidatorsHash : new Uint8Array()));
        message.consensusHash !== void 0 && (obj.consensusHash = (0, helpers_1.base64FromBytes)(message.consensusHash !== void 0 ? message.consensusHash : new Uint8Array()));
        message.appHash !== void 0 && (obj.appHash = (0, helpers_1.base64FromBytes)(message.appHash !== void 0 ? message.appHash : new Uint8Array()));
        message.lastResultsHash !== void 0 && (obj.lastResultsHash = (0, helpers_1.base64FromBytes)(message.lastResultsHash !== void 0 ? message.lastResultsHash : new Uint8Array()));
        message.evidenceHash !== void 0 && (obj.evidenceHash = (0, helpers_1.base64FromBytes)(message.evidenceHash !== void 0 ? message.evidenceHash : new Uint8Array()));
        message.proposerAddress !== void 0 && (obj.proposerAddress = (0, helpers_1.base64FromBytes)(message.proposerAddress !== void 0 ? message.proposerAddress : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseHeader();
        message.version = object.version !== void 0 && object.version !== null ? types_1.Consensus.fromPartial(object.version) : void 0;
        message.chainId = object.chainId ?? "";
        message.height = object.height !== void 0 && object.height !== null ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.ZERO;
        message.time = object.time !== void 0 && object.time !== null ? timestamp_1.Timestamp.fromPartial(object.time) : void 0;
        message.lastBlockId = object.lastBlockId !== void 0 && object.lastBlockId !== null ? exports.BlockID.fromPartial(object.lastBlockId) : void 0;
        message.lastCommitHash = object.lastCommitHash ?? new Uint8Array();
        message.dataHash = object.dataHash ?? new Uint8Array();
        message.validatorsHash = object.validatorsHash ?? new Uint8Array();
        message.nextValidatorsHash = object.nextValidatorsHash ?? new Uint8Array();
        message.consensusHash = object.consensusHash ?? new Uint8Array();
        message.appHash = object.appHash ?? new Uint8Array();
        message.lastResultsHash = object.lastResultsHash ?? new Uint8Array();
        message.evidenceHash = object.evidenceHash ?? new Uint8Array();
        message.proposerAddress = object.proposerAddress ?? new Uint8Array();
        return message;
      }
    };
    function createBaseData() {
      return {
        txs: []
      };
    }
    exports.Data = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.txs) {
          writer.uint32(10).bytes(v3);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseData();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.txs.push(reader.bytes());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          txs: Array.isArray(object == null ? void 0 : object.txs) ? object.txs.map((e2) => (0, helpers_1.bytesFromBase64)(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.txs) {
          obj.txs = message.txs.map((e2) => (0, helpers_1.base64FromBytes)(e2 !== void 0 ? e2 : new Uint8Array()));
        } else {
          obj.txs = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseData();
        message.txs = ((_a = object.txs) == null ? void 0 : _a.map((e2) => e2)) || [];
        return message;
      }
    };
    function createBaseVote() {
      return {
        type: 0,
        height: helpers_1.Long.ZERO,
        round: 0,
        blockId: void 0,
        timestamp: void 0,
        validatorAddress: new Uint8Array(),
        validatorIndex: 0,
        signature: new Uint8Array()
      };
    }
    exports.Vote = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.type !== 0) {
          writer.uint32(8).int32(message.type);
        }
        if (!message.height.isZero()) {
          writer.uint32(16).int64(message.height);
        }
        if (message.round !== 0) {
          writer.uint32(24).int32(message.round);
        }
        if (message.blockId !== void 0) {
          exports.BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();
        }
        if (message.timestamp !== void 0) {
          timestamp_1.Timestamp.encode(message.timestamp, writer.uint32(42).fork()).ldelim();
        }
        if (message.validatorAddress.length !== 0) {
          writer.uint32(50).bytes(message.validatorAddress);
        }
        if (message.validatorIndex !== 0) {
          writer.uint32(56).int32(message.validatorIndex);
        }
        if (message.signature.length !== 0) {
          writer.uint32(66).bytes(message.signature);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseVote();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.type = reader.int32();
              break;
            case 2:
              message.height = reader.int64();
              break;
            case 3:
              message.round = reader.int32();
              break;
            case 4:
              message.blockId = exports.BlockID.decode(reader, reader.uint32());
              break;
            case 5:
              message.timestamp = timestamp_1.Timestamp.decode(reader, reader.uint32());
              break;
            case 6:
              message.validatorAddress = reader.bytes();
              break;
            case 7:
              message.validatorIndex = reader.int32();
              break;
            case 8:
              message.signature = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          type: (0, helpers_1.isSet)(object.type) ? signedMsgTypeFromJSON(object.type) : 0,
          height: (0, helpers_1.isSet)(object.height) ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.ZERO,
          round: (0, helpers_1.isSet)(object.round) ? Number(object.round) : 0,
          blockId: (0, helpers_1.isSet)(object.blockId) ? exports.BlockID.fromJSON(object.blockId) : void 0,
          timestamp: (0, helpers_1.isSet)(object.timestamp) ? (0, helpers_1.fromJsonTimestamp)(object.timestamp) : void 0,
          validatorAddress: (0, helpers_1.isSet)(object.validatorAddress) ? (0, helpers_1.bytesFromBase64)(object.validatorAddress) : new Uint8Array(),
          validatorIndex: (0, helpers_1.isSet)(object.validatorIndex) ? Number(object.validatorIndex) : 0,
          signature: (0, helpers_1.isSet)(object.signature) ? (0, helpers_1.bytesFromBase64)(object.signature) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.type !== void 0 && (obj.type = signedMsgTypeToJSON(message.type));
        message.height !== void 0 && (obj.height = (message.height || helpers_1.Long.ZERO).toString());
        message.round !== void 0 && (obj.round = Math.round(message.round));
        message.blockId !== void 0 && (obj.blockId = message.blockId ? exports.BlockID.toJSON(message.blockId) : void 0);
        message.timestamp !== void 0 && (obj.timestamp = (0, helpers_1.fromTimestamp)(message.timestamp).toISOString());
        message.validatorAddress !== void 0 && (obj.validatorAddress = (0, helpers_1.base64FromBytes)(message.validatorAddress !== void 0 ? message.validatorAddress : new Uint8Array()));
        message.validatorIndex !== void 0 && (obj.validatorIndex = Math.round(message.validatorIndex));
        message.signature !== void 0 && (obj.signature = (0, helpers_1.base64FromBytes)(message.signature !== void 0 ? message.signature : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseVote();
        message.type = object.type ?? 0;
        message.height = object.height !== void 0 && object.height !== null ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.ZERO;
        message.round = object.round ?? 0;
        message.blockId = object.blockId !== void 0 && object.blockId !== null ? exports.BlockID.fromPartial(object.blockId) : void 0;
        message.timestamp = object.timestamp !== void 0 && object.timestamp !== null ? timestamp_1.Timestamp.fromPartial(object.timestamp) : void 0;
        message.validatorAddress = object.validatorAddress ?? new Uint8Array();
        message.validatorIndex = object.validatorIndex ?? 0;
        message.signature = object.signature ?? new Uint8Array();
        return message;
      }
    };
    function createBaseCommit() {
      return {
        height: helpers_1.Long.ZERO,
        round: 0,
        blockId: void 0,
        signatures: []
      };
    }
    exports.Commit = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.height.isZero()) {
          writer.uint32(8).int64(message.height);
        }
        if (message.round !== 0) {
          writer.uint32(16).int32(message.round);
        }
        if (message.blockId !== void 0) {
          exports.BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();
        }
        for (const v3 of message.signatures) {
          exports.CommitSig.encode(v3, writer.uint32(34).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseCommit();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.height = reader.int64();
              break;
            case 2:
              message.round = reader.int32();
              break;
            case 3:
              message.blockId = exports.BlockID.decode(reader, reader.uint32());
              break;
            case 4:
              message.signatures.push(exports.CommitSig.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          height: (0, helpers_1.isSet)(object.height) ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.ZERO,
          round: (0, helpers_1.isSet)(object.round) ? Number(object.round) : 0,
          blockId: (0, helpers_1.isSet)(object.blockId) ? exports.BlockID.fromJSON(object.blockId) : void 0,
          signatures: Array.isArray(object == null ? void 0 : object.signatures) ? object.signatures.map((e2) => exports.CommitSig.fromJSON(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.height !== void 0 && (obj.height = (message.height || helpers_1.Long.ZERO).toString());
        message.round !== void 0 && (obj.round = Math.round(message.round));
        message.blockId !== void 0 && (obj.blockId = message.blockId ? exports.BlockID.toJSON(message.blockId) : void 0);
        if (message.signatures) {
          obj.signatures = message.signatures.map((e2) => e2 ? exports.CommitSig.toJSON(e2) : void 0);
        } else {
          obj.signatures = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseCommit();
        message.height = object.height !== void 0 && object.height !== null ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.ZERO;
        message.round = object.round ?? 0;
        message.blockId = object.blockId !== void 0 && object.blockId !== null ? exports.BlockID.fromPartial(object.blockId) : void 0;
        message.signatures = ((_a = object.signatures) == null ? void 0 : _a.map((e2) => exports.CommitSig.fromPartial(e2))) || [];
        return message;
      }
    };
    function createBaseCommitSig() {
      return {
        blockIdFlag: 0,
        validatorAddress: new Uint8Array(),
        timestamp: void 0,
        signature: new Uint8Array()
      };
    }
    exports.CommitSig = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.blockIdFlag !== 0) {
          writer.uint32(8).int32(message.blockIdFlag);
        }
        if (message.validatorAddress.length !== 0) {
          writer.uint32(18).bytes(message.validatorAddress);
        }
        if (message.timestamp !== void 0) {
          timestamp_1.Timestamp.encode(message.timestamp, writer.uint32(26).fork()).ldelim();
        }
        if (message.signature.length !== 0) {
          writer.uint32(34).bytes(message.signature);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseCommitSig();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.blockIdFlag = reader.int32();
              break;
            case 2:
              message.validatorAddress = reader.bytes();
              break;
            case 3:
              message.timestamp = timestamp_1.Timestamp.decode(reader, reader.uint32());
              break;
            case 4:
              message.signature = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          blockIdFlag: (0, helpers_1.isSet)(object.blockIdFlag) ? blockIDFlagFromJSON(object.blockIdFlag) : 0,
          validatorAddress: (0, helpers_1.isSet)(object.validatorAddress) ? (0, helpers_1.bytesFromBase64)(object.validatorAddress) : new Uint8Array(),
          timestamp: (0, helpers_1.isSet)(object.timestamp) ? (0, helpers_1.fromJsonTimestamp)(object.timestamp) : void 0,
          signature: (0, helpers_1.isSet)(object.signature) ? (0, helpers_1.bytesFromBase64)(object.signature) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.blockIdFlag !== void 0 && (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));
        message.validatorAddress !== void 0 && (obj.validatorAddress = (0, helpers_1.base64FromBytes)(message.validatorAddress !== void 0 ? message.validatorAddress : new Uint8Array()));
        message.timestamp !== void 0 && (obj.timestamp = (0, helpers_1.fromTimestamp)(message.timestamp).toISOString());
        message.signature !== void 0 && (obj.signature = (0, helpers_1.base64FromBytes)(message.signature !== void 0 ? message.signature : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseCommitSig();
        message.blockIdFlag = object.blockIdFlag ?? 0;
        message.validatorAddress = object.validatorAddress ?? new Uint8Array();
        message.timestamp = object.timestamp !== void 0 && object.timestamp !== null ? timestamp_1.Timestamp.fromPartial(object.timestamp) : void 0;
        message.signature = object.signature ?? new Uint8Array();
        return message;
      }
    };
    function createBaseProposal() {
      return {
        type: 0,
        height: helpers_1.Long.ZERO,
        round: 0,
        polRound: 0,
        blockId: void 0,
        timestamp: void 0,
        signature: new Uint8Array()
      };
    }
    exports.Proposal = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.type !== 0) {
          writer.uint32(8).int32(message.type);
        }
        if (!message.height.isZero()) {
          writer.uint32(16).int64(message.height);
        }
        if (message.round !== 0) {
          writer.uint32(24).int32(message.round);
        }
        if (message.polRound !== 0) {
          writer.uint32(32).int32(message.polRound);
        }
        if (message.blockId !== void 0) {
          exports.BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();
        }
        if (message.timestamp !== void 0) {
          timestamp_1.Timestamp.encode(message.timestamp, writer.uint32(50).fork()).ldelim();
        }
        if (message.signature.length !== 0) {
          writer.uint32(58).bytes(message.signature);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseProposal();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.type = reader.int32();
              break;
            case 2:
              message.height = reader.int64();
              break;
            case 3:
              message.round = reader.int32();
              break;
            case 4:
              message.polRound = reader.int32();
              break;
            case 5:
              message.blockId = exports.BlockID.decode(reader, reader.uint32());
              break;
            case 6:
              message.timestamp = timestamp_1.Timestamp.decode(reader, reader.uint32());
              break;
            case 7:
              message.signature = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          type: (0, helpers_1.isSet)(object.type) ? signedMsgTypeFromJSON(object.type) : 0,
          height: (0, helpers_1.isSet)(object.height) ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.ZERO,
          round: (0, helpers_1.isSet)(object.round) ? Number(object.round) : 0,
          polRound: (0, helpers_1.isSet)(object.polRound) ? Number(object.polRound) : 0,
          blockId: (0, helpers_1.isSet)(object.blockId) ? exports.BlockID.fromJSON(object.blockId) : void 0,
          timestamp: (0, helpers_1.isSet)(object.timestamp) ? (0, helpers_1.fromJsonTimestamp)(object.timestamp) : void 0,
          signature: (0, helpers_1.isSet)(object.signature) ? (0, helpers_1.bytesFromBase64)(object.signature) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.type !== void 0 && (obj.type = signedMsgTypeToJSON(message.type));
        message.height !== void 0 && (obj.height = (message.height || helpers_1.Long.ZERO).toString());
        message.round !== void 0 && (obj.round = Math.round(message.round));
        message.polRound !== void 0 && (obj.polRound = Math.round(message.polRound));
        message.blockId !== void 0 && (obj.blockId = message.blockId ? exports.BlockID.toJSON(message.blockId) : void 0);
        message.timestamp !== void 0 && (obj.timestamp = (0, helpers_1.fromTimestamp)(message.timestamp).toISOString());
        message.signature !== void 0 && (obj.signature = (0, helpers_1.base64FromBytes)(message.signature !== void 0 ? message.signature : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseProposal();
        message.type = object.type ?? 0;
        message.height = object.height !== void 0 && object.height !== null ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.ZERO;
        message.round = object.round ?? 0;
        message.polRound = object.polRound ?? 0;
        message.blockId = object.blockId !== void 0 && object.blockId !== null ? exports.BlockID.fromPartial(object.blockId) : void 0;
        message.timestamp = object.timestamp !== void 0 && object.timestamp !== null ? timestamp_1.Timestamp.fromPartial(object.timestamp) : void 0;
        message.signature = object.signature ?? new Uint8Array();
        return message;
      }
    };
    function createBaseSignedHeader() {
      return {
        header: void 0,
        commit: void 0
      };
    }
    exports.SignedHeader = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.header !== void 0) {
          exports.Header.encode(message.header, writer.uint32(10).fork()).ldelim();
        }
        if (message.commit !== void 0) {
          exports.Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseSignedHeader();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.header = exports.Header.decode(reader, reader.uint32());
              break;
            case 2:
              message.commit = exports.Commit.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          header: (0, helpers_1.isSet)(object.header) ? exports.Header.fromJSON(object.header) : void 0,
          commit: (0, helpers_1.isSet)(object.commit) ? exports.Commit.fromJSON(object.commit) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.header !== void 0 && (obj.header = message.header ? exports.Header.toJSON(message.header) : void 0);
        message.commit !== void 0 && (obj.commit = message.commit ? exports.Commit.toJSON(message.commit) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseSignedHeader();
        message.header = object.header !== void 0 && object.header !== null ? exports.Header.fromPartial(object.header) : void 0;
        message.commit = object.commit !== void 0 && object.commit !== null ? exports.Commit.fromPartial(object.commit) : void 0;
        return message;
      }
    };
    function createBaseLightBlock() {
      return {
        signedHeader: void 0,
        validatorSet: void 0
      };
    }
    exports.LightBlock = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.signedHeader !== void 0) {
          exports.SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();
        }
        if (message.validatorSet !== void 0) {
          validator_1.ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseLightBlock();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.signedHeader = exports.SignedHeader.decode(reader, reader.uint32());
              break;
            case 2:
              message.validatorSet = validator_1.ValidatorSet.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          signedHeader: (0, helpers_1.isSet)(object.signedHeader) ? exports.SignedHeader.fromJSON(object.signedHeader) : void 0,
          validatorSet: (0, helpers_1.isSet)(object.validatorSet) ? validator_1.ValidatorSet.fromJSON(object.validatorSet) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.signedHeader !== void 0 && (obj.signedHeader = message.signedHeader ? exports.SignedHeader.toJSON(message.signedHeader) : void 0);
        message.validatorSet !== void 0 && (obj.validatorSet = message.validatorSet ? validator_1.ValidatorSet.toJSON(message.validatorSet) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseLightBlock();
        message.signedHeader = object.signedHeader !== void 0 && object.signedHeader !== null ? exports.SignedHeader.fromPartial(object.signedHeader) : void 0;
        message.validatorSet = object.validatorSet !== void 0 && object.validatorSet !== null ? validator_1.ValidatorSet.fromPartial(object.validatorSet) : void 0;
        return message;
      }
    };
    function createBaseBlockMeta() {
      return {
        blockId: void 0,
        blockSize: helpers_1.Long.ZERO,
        header: void 0,
        numTxs: helpers_1.Long.ZERO
      };
    }
    exports.BlockMeta = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.blockId !== void 0) {
          exports.BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();
        }
        if (!message.blockSize.isZero()) {
          writer.uint32(16).int64(message.blockSize);
        }
        if (message.header !== void 0) {
          exports.Header.encode(message.header, writer.uint32(26).fork()).ldelim();
        }
        if (!message.numTxs.isZero()) {
          writer.uint32(32).int64(message.numTxs);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseBlockMeta();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.blockId = exports.BlockID.decode(reader, reader.uint32());
              break;
            case 2:
              message.blockSize = reader.int64();
              break;
            case 3:
              message.header = exports.Header.decode(reader, reader.uint32());
              break;
            case 4:
              message.numTxs = reader.int64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          blockId: (0, helpers_1.isSet)(object.blockId) ? exports.BlockID.fromJSON(object.blockId) : void 0,
          blockSize: (0, helpers_1.isSet)(object.blockSize) ? helpers_1.Long.fromValue(object.blockSize) : helpers_1.Long.ZERO,
          header: (0, helpers_1.isSet)(object.header) ? exports.Header.fromJSON(object.header) : void 0,
          numTxs: (0, helpers_1.isSet)(object.numTxs) ? helpers_1.Long.fromValue(object.numTxs) : helpers_1.Long.ZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.blockId !== void 0 && (obj.blockId = message.blockId ? exports.BlockID.toJSON(message.blockId) : void 0);
        message.blockSize !== void 0 && (obj.blockSize = (message.blockSize || helpers_1.Long.ZERO).toString());
        message.header !== void 0 && (obj.header = message.header ? exports.Header.toJSON(message.header) : void 0);
        message.numTxs !== void 0 && (obj.numTxs = (message.numTxs || helpers_1.Long.ZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseBlockMeta();
        message.blockId = object.blockId !== void 0 && object.blockId !== null ? exports.BlockID.fromPartial(object.blockId) : void 0;
        message.blockSize = object.blockSize !== void 0 && object.blockSize !== null ? helpers_1.Long.fromValue(object.blockSize) : helpers_1.Long.ZERO;
        message.header = object.header !== void 0 && object.header !== null ? exports.Header.fromPartial(object.header) : void 0;
        message.numTxs = object.numTxs !== void 0 && object.numTxs !== null ? helpers_1.Long.fromValue(object.numTxs) : helpers_1.Long.ZERO;
        return message;
      }
    };
    function createBaseTxProof() {
      return {
        rootHash: new Uint8Array(),
        data: new Uint8Array(),
        proof: void 0
      };
    }
    exports.TxProof = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.rootHash.length !== 0) {
          writer.uint32(10).bytes(message.rootHash);
        }
        if (message.data.length !== 0) {
          writer.uint32(18).bytes(message.data);
        }
        if (message.proof !== void 0) {
          proof_1.Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseTxProof();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.rootHash = reader.bytes();
              break;
            case 2:
              message.data = reader.bytes();
              break;
            case 3:
              message.proof = proof_1.Proof.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          rootHash: (0, helpers_1.isSet)(object.rootHash) ? (0, helpers_1.bytesFromBase64)(object.rootHash) : new Uint8Array(),
          data: (0, helpers_1.isSet)(object.data) ? (0, helpers_1.bytesFromBase64)(object.data) : new Uint8Array(),
          proof: (0, helpers_1.isSet)(object.proof) ? proof_1.Proof.fromJSON(object.proof) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.rootHash !== void 0 && (obj.rootHash = (0, helpers_1.base64FromBytes)(message.rootHash !== void 0 ? message.rootHash : new Uint8Array()));
        message.data !== void 0 && (obj.data = (0, helpers_1.base64FromBytes)(message.data !== void 0 ? message.data : new Uint8Array()));
        message.proof !== void 0 && (obj.proof = message.proof ? proof_1.Proof.toJSON(message.proof) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseTxProof();
        message.rootHash = object.rootHash ?? new Uint8Array();
        message.data = object.data ?? new Uint8Array();
        message.proof = object.proof !== void 0 && object.proof !== null ? proof_1.Proof.fromPartial(object.proof) : void 0;
        return message;
      }
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/ibc/lightclients/tendermint/v1/tendermint.js
var require_tendermint = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/ibc/lightclients/tendermint/v1/tendermint.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Fraction = exports.Header = exports.Misbehaviour = exports.ConsensusState = exports.ClientState = exports.protobufPackage = void 0;
    var duration_1 = require_duration();
    var client_1 = require_client();
    var proofs_1 = require_proofs();
    var timestamp_1 = require_timestamp();
    var commitment_1 = require_commitment();
    var types_1 = require_types2();
    var validator_1 = require_validator();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "ibc.lightclients.tendermint.v1";
    function createBaseClientState() {
      return {
        chainId: "",
        trustLevel: void 0,
        trustingPeriod: void 0,
        unbondingPeriod: void 0,
        maxClockDrift: void 0,
        frozenHeight: void 0,
        latestHeight: void 0,
        proofSpecs: [],
        upgradePath: [],
        allowUpdateAfterExpiry: false,
        allowUpdateAfterMisbehaviour: false
      };
    }
    exports.ClientState = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.chainId !== "") {
          writer.uint32(10).string(message.chainId);
        }
        if (message.trustLevel !== void 0) {
          exports.Fraction.encode(message.trustLevel, writer.uint32(18).fork()).ldelim();
        }
        if (message.trustingPeriod !== void 0) {
          duration_1.Duration.encode(message.trustingPeriod, writer.uint32(26).fork()).ldelim();
        }
        if (message.unbondingPeriod !== void 0) {
          duration_1.Duration.encode(message.unbondingPeriod, writer.uint32(34).fork()).ldelim();
        }
        if (message.maxClockDrift !== void 0) {
          duration_1.Duration.encode(message.maxClockDrift, writer.uint32(42).fork()).ldelim();
        }
        if (message.frozenHeight !== void 0) {
          client_1.Height.encode(message.frozenHeight, writer.uint32(50).fork()).ldelim();
        }
        if (message.latestHeight !== void 0) {
          client_1.Height.encode(message.latestHeight, writer.uint32(58).fork()).ldelim();
        }
        for (const v3 of message.proofSpecs) {
          proofs_1.ProofSpec.encode(v3, writer.uint32(66).fork()).ldelim();
        }
        for (const v3 of message.upgradePath) {
          writer.uint32(74).string(v3);
        }
        if (message.allowUpdateAfterExpiry === true) {
          writer.uint32(80).bool(message.allowUpdateAfterExpiry);
        }
        if (message.allowUpdateAfterMisbehaviour === true) {
          writer.uint32(88).bool(message.allowUpdateAfterMisbehaviour);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseClientState();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.chainId = reader.string();
              break;
            case 2:
              message.trustLevel = exports.Fraction.decode(reader, reader.uint32());
              break;
            case 3:
              message.trustingPeriod = duration_1.Duration.decode(reader, reader.uint32());
              break;
            case 4:
              message.unbondingPeriod = duration_1.Duration.decode(reader, reader.uint32());
              break;
            case 5:
              message.maxClockDrift = duration_1.Duration.decode(reader, reader.uint32());
              break;
            case 6:
              message.frozenHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            case 7:
              message.latestHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            case 8:
              message.proofSpecs.push(proofs_1.ProofSpec.decode(reader, reader.uint32()));
              break;
            case 9:
              message.upgradePath.push(reader.string());
              break;
            case 10:
              message.allowUpdateAfterExpiry = reader.bool();
              break;
            case 11:
              message.allowUpdateAfterMisbehaviour = reader.bool();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          chainId: (0, helpers_1.isSet)(object.chainId) ? String(object.chainId) : "",
          trustLevel: (0, helpers_1.isSet)(object.trustLevel) ? exports.Fraction.fromJSON(object.trustLevel) : void 0,
          trustingPeriod: (0, helpers_1.isSet)(object.trustingPeriod) ? duration_1.Duration.fromJSON(object.trustingPeriod) : void 0,
          unbondingPeriod: (0, helpers_1.isSet)(object.unbondingPeriod) ? duration_1.Duration.fromJSON(object.unbondingPeriod) : void 0,
          maxClockDrift: (0, helpers_1.isSet)(object.maxClockDrift) ? duration_1.Duration.fromJSON(object.maxClockDrift) : void 0,
          frozenHeight: (0, helpers_1.isSet)(object.frozenHeight) ? client_1.Height.fromJSON(object.frozenHeight) : void 0,
          latestHeight: (0, helpers_1.isSet)(object.latestHeight) ? client_1.Height.fromJSON(object.latestHeight) : void 0,
          proofSpecs: Array.isArray(object == null ? void 0 : object.proofSpecs) ? object.proofSpecs.map((e2) => proofs_1.ProofSpec.fromJSON(e2)) : [],
          upgradePath: Array.isArray(object == null ? void 0 : object.upgradePath) ? object.upgradePath.map((e2) => String(e2)) : [],
          allowUpdateAfterExpiry: (0, helpers_1.isSet)(object.allowUpdateAfterExpiry) ? Boolean(object.allowUpdateAfterExpiry) : false,
          allowUpdateAfterMisbehaviour: (0, helpers_1.isSet)(object.allowUpdateAfterMisbehaviour) ? Boolean(object.allowUpdateAfterMisbehaviour) : false
        };
      },
      toJSON(message) {
        const obj = {};
        message.chainId !== void 0 && (obj.chainId = message.chainId);
        message.trustLevel !== void 0 && (obj.trustLevel = message.trustLevel ? exports.Fraction.toJSON(message.trustLevel) : void 0);
        message.trustingPeriod !== void 0 && (obj.trustingPeriod = message.trustingPeriod ? duration_1.Duration.toJSON(message.trustingPeriod) : void 0);
        message.unbondingPeriod !== void 0 && (obj.unbondingPeriod = message.unbondingPeriod ? duration_1.Duration.toJSON(message.unbondingPeriod) : void 0);
        message.maxClockDrift !== void 0 && (obj.maxClockDrift = message.maxClockDrift ? duration_1.Duration.toJSON(message.maxClockDrift) : void 0);
        message.frozenHeight !== void 0 && (obj.frozenHeight = message.frozenHeight ? client_1.Height.toJSON(message.frozenHeight) : void 0);
        message.latestHeight !== void 0 && (obj.latestHeight = message.latestHeight ? client_1.Height.toJSON(message.latestHeight) : void 0);
        if (message.proofSpecs) {
          obj.proofSpecs = message.proofSpecs.map((e2) => e2 ? proofs_1.ProofSpec.toJSON(e2) : void 0);
        } else {
          obj.proofSpecs = [];
        }
        if (message.upgradePath) {
          obj.upgradePath = message.upgradePath.map((e2) => e2);
        } else {
          obj.upgradePath = [];
        }
        message.allowUpdateAfterExpiry !== void 0 && (obj.allowUpdateAfterExpiry = message.allowUpdateAfterExpiry);
        message.allowUpdateAfterMisbehaviour !== void 0 && (obj.allowUpdateAfterMisbehaviour = message.allowUpdateAfterMisbehaviour);
        return obj;
      },
      fromPartial(object) {
        var _a, _b;
        const message = createBaseClientState();
        message.chainId = object.chainId ?? "";
        message.trustLevel = object.trustLevel !== void 0 && object.trustLevel !== null ? exports.Fraction.fromPartial(object.trustLevel) : void 0;
        message.trustingPeriod = object.trustingPeriod !== void 0 && object.trustingPeriod !== null ? duration_1.Duration.fromPartial(object.trustingPeriod) : void 0;
        message.unbondingPeriod = object.unbondingPeriod !== void 0 && object.unbondingPeriod !== null ? duration_1.Duration.fromPartial(object.unbondingPeriod) : void 0;
        message.maxClockDrift = object.maxClockDrift !== void 0 && object.maxClockDrift !== null ? duration_1.Duration.fromPartial(object.maxClockDrift) : void 0;
        message.frozenHeight = object.frozenHeight !== void 0 && object.frozenHeight !== null ? client_1.Height.fromPartial(object.frozenHeight) : void 0;
        message.latestHeight = object.latestHeight !== void 0 && object.latestHeight !== null ? client_1.Height.fromPartial(object.latestHeight) : void 0;
        message.proofSpecs = ((_a = object.proofSpecs) == null ? void 0 : _a.map((e2) => proofs_1.ProofSpec.fromPartial(e2))) || [];
        message.upgradePath = ((_b = object.upgradePath) == null ? void 0 : _b.map((e2) => e2)) || [];
        message.allowUpdateAfterExpiry = object.allowUpdateAfterExpiry ?? false;
        message.allowUpdateAfterMisbehaviour = object.allowUpdateAfterMisbehaviour ?? false;
        return message;
      }
    };
    function createBaseConsensusState() {
      return {
        timestamp: void 0,
        root: void 0,
        nextValidatorsHash: new Uint8Array()
      };
    }
    exports.ConsensusState = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.timestamp !== void 0) {
          timestamp_1.Timestamp.encode(message.timestamp, writer.uint32(10).fork()).ldelim();
        }
        if (message.root !== void 0) {
          commitment_1.MerkleRoot.encode(message.root, writer.uint32(18).fork()).ldelim();
        }
        if (message.nextValidatorsHash.length !== 0) {
          writer.uint32(26).bytes(message.nextValidatorsHash);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseConsensusState();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.timestamp = timestamp_1.Timestamp.decode(reader, reader.uint32());
              break;
            case 2:
              message.root = commitment_1.MerkleRoot.decode(reader, reader.uint32());
              break;
            case 3:
              message.nextValidatorsHash = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          timestamp: (0, helpers_1.isSet)(object.timestamp) ? (0, helpers_1.fromJsonTimestamp)(object.timestamp) : void 0,
          root: (0, helpers_1.isSet)(object.root) ? commitment_1.MerkleRoot.fromJSON(object.root) : void 0,
          nextValidatorsHash: (0, helpers_1.isSet)(object.nextValidatorsHash) ? (0, helpers_1.bytesFromBase64)(object.nextValidatorsHash) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.timestamp !== void 0 && (obj.timestamp = (0, helpers_1.fromTimestamp)(message.timestamp).toISOString());
        message.root !== void 0 && (obj.root = message.root ? commitment_1.MerkleRoot.toJSON(message.root) : void 0);
        message.nextValidatorsHash !== void 0 && (obj.nextValidatorsHash = (0, helpers_1.base64FromBytes)(message.nextValidatorsHash !== void 0 ? message.nextValidatorsHash : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseConsensusState();
        message.timestamp = object.timestamp !== void 0 && object.timestamp !== null ? timestamp_1.Timestamp.fromPartial(object.timestamp) : void 0;
        message.root = object.root !== void 0 && object.root !== null ? commitment_1.MerkleRoot.fromPartial(object.root) : void 0;
        message.nextValidatorsHash = object.nextValidatorsHash ?? new Uint8Array();
        return message;
      }
    };
    function createBaseMisbehaviour() {
      return {
        clientId: "",
        header1: void 0,
        header2: void 0
      };
    }
    exports.Misbehaviour = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.clientId !== "") {
          writer.uint32(10).string(message.clientId);
        }
        if (message.header1 !== void 0) {
          exports.Header.encode(message.header1, writer.uint32(18).fork()).ldelim();
        }
        if (message.header2 !== void 0) {
          exports.Header.encode(message.header2, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMisbehaviour();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.clientId = reader.string();
              break;
            case 2:
              message.header1 = exports.Header.decode(reader, reader.uint32());
              break;
            case 3:
              message.header2 = exports.Header.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          clientId: (0, helpers_1.isSet)(object.clientId) ? String(object.clientId) : "",
          header1: (0, helpers_1.isSet)(object.header1) ? exports.Header.fromJSON(object.header1) : void 0,
          header2: (0, helpers_1.isSet)(object.header2) ? exports.Header.fromJSON(object.header2) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.clientId !== void 0 && (obj.clientId = message.clientId);
        message.header1 !== void 0 && (obj.header1 = message.header1 ? exports.Header.toJSON(message.header1) : void 0);
        message.header2 !== void 0 && (obj.header2 = message.header2 ? exports.Header.toJSON(message.header2) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMisbehaviour();
        message.clientId = object.clientId ?? "";
        message.header1 = object.header1 !== void 0 && object.header1 !== null ? exports.Header.fromPartial(object.header1) : void 0;
        message.header2 = object.header2 !== void 0 && object.header2 !== null ? exports.Header.fromPartial(object.header2) : void 0;
        return message;
      }
    };
    function createBaseHeader() {
      return {
        signedHeader: void 0,
        validatorSet: void 0,
        trustedHeight: void 0,
        trustedValidators: void 0
      };
    }
    exports.Header = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.signedHeader !== void 0) {
          types_1.SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();
        }
        if (message.validatorSet !== void 0) {
          validator_1.ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();
        }
        if (message.trustedHeight !== void 0) {
          client_1.Height.encode(message.trustedHeight, writer.uint32(26).fork()).ldelim();
        }
        if (message.trustedValidators !== void 0) {
          validator_1.ValidatorSet.encode(message.trustedValidators, writer.uint32(34).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseHeader();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.signedHeader = types_1.SignedHeader.decode(reader, reader.uint32());
              break;
            case 2:
              message.validatorSet = validator_1.ValidatorSet.decode(reader, reader.uint32());
              break;
            case 3:
              message.trustedHeight = client_1.Height.decode(reader, reader.uint32());
              break;
            case 4:
              message.trustedValidators = validator_1.ValidatorSet.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          signedHeader: (0, helpers_1.isSet)(object.signedHeader) ? types_1.SignedHeader.fromJSON(object.signedHeader) : void 0,
          validatorSet: (0, helpers_1.isSet)(object.validatorSet) ? validator_1.ValidatorSet.fromJSON(object.validatorSet) : void 0,
          trustedHeight: (0, helpers_1.isSet)(object.trustedHeight) ? client_1.Height.fromJSON(object.trustedHeight) : void 0,
          trustedValidators: (0, helpers_1.isSet)(object.trustedValidators) ? validator_1.ValidatorSet.fromJSON(object.trustedValidators) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.signedHeader !== void 0 && (obj.signedHeader = message.signedHeader ? types_1.SignedHeader.toJSON(message.signedHeader) : void 0);
        message.validatorSet !== void 0 && (obj.validatorSet = message.validatorSet ? validator_1.ValidatorSet.toJSON(message.validatorSet) : void 0);
        message.trustedHeight !== void 0 && (obj.trustedHeight = message.trustedHeight ? client_1.Height.toJSON(message.trustedHeight) : void 0);
        message.trustedValidators !== void 0 && (obj.trustedValidators = message.trustedValidators ? validator_1.ValidatorSet.toJSON(message.trustedValidators) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseHeader();
        message.signedHeader = object.signedHeader !== void 0 && object.signedHeader !== null ? types_1.SignedHeader.fromPartial(object.signedHeader) : void 0;
        message.validatorSet = object.validatorSet !== void 0 && object.validatorSet !== null ? validator_1.ValidatorSet.fromPartial(object.validatorSet) : void 0;
        message.trustedHeight = object.trustedHeight !== void 0 && object.trustedHeight !== null ? client_1.Height.fromPartial(object.trustedHeight) : void 0;
        message.trustedValidators = object.trustedValidators !== void 0 && object.trustedValidators !== null ? validator_1.ValidatorSet.fromPartial(object.trustedValidators) : void 0;
        return message;
      }
    };
    function createBaseFraction() {
      return {
        numerator: helpers_1.Long.UZERO,
        denominator: helpers_1.Long.UZERO
      };
    }
    exports.Fraction = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.numerator.isZero()) {
          writer.uint32(8).uint64(message.numerator);
        }
        if (!message.denominator.isZero()) {
          writer.uint32(16).uint64(message.denominator);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseFraction();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.numerator = reader.uint64();
              break;
            case 2:
              message.denominator = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          numerator: (0, helpers_1.isSet)(object.numerator) ? helpers_1.Long.fromValue(object.numerator) : helpers_1.Long.UZERO,
          denominator: (0, helpers_1.isSet)(object.denominator) ? helpers_1.Long.fromValue(object.denominator) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.numerator !== void 0 && (obj.numerator = (message.numerator || helpers_1.Long.UZERO).toString());
        message.denominator !== void 0 && (obj.denominator = (message.denominator || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseFraction();
        message.numerator = object.numerator !== void 0 && object.numerator !== null ? helpers_1.Long.fromValue(object.numerator) : helpers_1.Long.UZERO;
        message.denominator = object.denominator !== void 0 && object.denominator !== null ? helpers_1.Long.fromValue(object.denominator) : helpers_1.Long.UZERO;
        return message;
      }
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/ibc/queries.js
var require_queries7 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/ibc/queries.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.setupIbcExtension = void 0;
    var encoding_1 = require_build2();
    var math_1 = require_build3();
    var query_1 = require_query7();
    var channel_1 = require_channel();
    var query_2 = require_query8();
    var query_3 = require_query9();
    var query_4 = require_query10();
    var tendermint_1 = require_tendermint();
    var long_1 = __importDefault(require_long());
    var queryclient_1 = require_queryclient2();
    function decodeTendermintClientStateAny(clientState) {
      if ((clientState == null ? void 0 : clientState.typeUrl) !== "/ibc.lightclients.tendermint.v1.ClientState") {
        throw new Error(`Unexpected client state type: ${clientState == null ? void 0 : clientState.typeUrl}`);
      }
      return tendermint_1.ClientState.decode(clientState.value);
    }
    function decodeTendermintConsensusStateAny(clientState) {
      if ((clientState == null ? void 0 : clientState.typeUrl) !== "/ibc.lightclients.tendermint.v1.ConsensusState") {
        throw new Error(`Unexpected client state type: ${clientState == null ? void 0 : clientState.typeUrl}`);
      }
      return tendermint_1.ConsensusState.decode(clientState.value);
    }
    function setupIbcExtension(base) {
      const rpc = (0, queryclient_1.createProtobufRpcClient)(base);
      const channelQueryService = new query_2.QueryClientImpl(rpc);
      const clientQueryService = new query_3.QueryClientImpl(rpc);
      const connectionQueryService = new query_4.QueryClientImpl(rpc);
      const transferQueryService = new query_1.QueryClientImpl(rpc);
      return {
        ibc: {
          channel: {
            channel: async (portId, channelId) => channelQueryService.Channel({
              portId,
              channelId
            }),
            channels: async (paginationKey) => channelQueryService.Channels({
              pagination: (0, queryclient_1.createPagination)(paginationKey)
            }),
            allChannels: async () => {
              var _a;
              const channels = [];
              let response;
              let key;
              do {
                response = await channelQueryService.Channels({
                  pagination: (0, queryclient_1.createPagination)(key)
                });
                channels.push(...response.channels);
                key = (_a = response.pagination) == null ? void 0 : _a.nextKey;
              } while (key && key.length);
              return {
                channels,
                height: response.height
              };
            },
            connectionChannels: async (connection, paginationKey) => channelQueryService.ConnectionChannels({
              connection,
              pagination: (0, queryclient_1.createPagination)(paginationKey)
            }),
            allConnectionChannels: async (connection) => {
              var _a;
              const channels = [];
              let response;
              let key;
              do {
                response = await channelQueryService.ConnectionChannels({
                  connection,
                  pagination: (0, queryclient_1.createPagination)(key)
                });
                channels.push(...response.channels);
                key = (_a = response.pagination) == null ? void 0 : _a.nextKey;
              } while (key && key.length);
              return {
                channels,
                height: response.height
              };
            },
            clientState: async (portId, channelId) => channelQueryService.ChannelClientState({
              portId,
              channelId
            }),
            consensusState: async (portId, channelId, revisionNumber, revisionHeight) => channelQueryService.ChannelConsensusState({
              portId,
              channelId,
              revisionNumber: long_1.default.fromNumber(revisionNumber, true),
              revisionHeight: long_1.default.fromNumber(revisionHeight, true)
            }),
            packetCommitment: async (portId, channelId, sequence) => channelQueryService.PacketCommitment({
              portId,
              channelId,
              sequence: long_1.default.fromNumber(sequence, true)
            }),
            packetCommitments: async (portId, channelId, paginationKey) => channelQueryService.PacketCommitments({
              channelId,
              portId,
              pagination: (0, queryclient_1.createPagination)(paginationKey)
            }),
            allPacketCommitments: async (portId, channelId) => {
              var _a;
              const commitments = [];
              let response;
              let key;
              do {
                response = await channelQueryService.PacketCommitments({
                  channelId,
                  portId,
                  pagination: (0, queryclient_1.createPagination)(key)
                });
                commitments.push(...response.commitments);
                key = (_a = response.pagination) == null ? void 0 : _a.nextKey;
              } while (key && key.length);
              return {
                commitments,
                height: response.height
              };
            },
            packetReceipt: async (portId, channelId, sequence) => channelQueryService.PacketReceipt({
              portId,
              channelId,
              sequence: long_1.default.fromNumber(sequence, true)
            }),
            packetAcknowledgement: async (portId, channelId, sequence) => channelQueryService.PacketAcknowledgement({
              portId,
              channelId,
              sequence: long_1.default.fromNumber(sequence, true)
            }),
            packetAcknowledgements: async (portId, channelId, paginationKey) => {
              const request = query_2.QueryPacketAcknowledgementsRequest.fromPartial({
                portId,
                channelId,
                pagination: (0, queryclient_1.createPagination)(paginationKey)
              });
              return channelQueryService.PacketAcknowledgements(request);
            },
            allPacketAcknowledgements: async (portId, channelId) => {
              var _a;
              const acknowledgements = [];
              let response;
              let key;
              do {
                const request = query_2.QueryPacketAcknowledgementsRequest.fromPartial({
                  channelId,
                  portId,
                  pagination: (0, queryclient_1.createPagination)(key)
                });
                response = await channelQueryService.PacketAcknowledgements(request);
                acknowledgements.push(...response.acknowledgements);
                key = (_a = response.pagination) == null ? void 0 : _a.nextKey;
              } while (key && key.length);
              return {
                acknowledgements,
                height: response.height
              };
            },
            unreceivedPackets: async (portId, channelId, packetCommitmentSequences) => channelQueryService.UnreceivedPackets({
              portId,
              channelId,
              packetCommitmentSequences: packetCommitmentSequences.map((s2) => long_1.default.fromNumber(s2, true))
            }),
            unreceivedAcks: async (portId, channelId, packetAckSequences) => channelQueryService.UnreceivedAcks({
              portId,
              channelId,
              packetAckSequences: packetAckSequences.map((s2) => long_1.default.fromNumber(s2, true))
            }),
            nextSequenceReceive: async (portId, channelId) => channelQueryService.NextSequenceReceive({
              portId,
              channelId
            })
          },
          client: {
            state: async (clientId) => clientQueryService.ClientState({ clientId }),
            states: async (paginationKey) => clientQueryService.ClientStates({
              pagination: (0, queryclient_1.createPagination)(paginationKey)
            }),
            allStates: async () => {
              var _a;
              const clientStates = [];
              let response;
              let key;
              do {
                response = await clientQueryService.ClientStates({
                  pagination: (0, queryclient_1.createPagination)(key)
                });
                clientStates.push(...response.clientStates);
                key = (_a = response.pagination) == null ? void 0 : _a.nextKey;
              } while (key && key.length);
              return {
                clientStates
              };
            },
            consensusState: async (clientId, consensusHeight) => clientQueryService.ConsensusState(query_3.QueryConsensusStateRequest.fromPartial({
              clientId,
              revisionHeight: consensusHeight !== void 0 ? long_1.default.fromNumber(consensusHeight, true) : void 0,
              latestHeight: consensusHeight === void 0
            })),
            consensusStates: async (clientId, paginationKey) => clientQueryService.ConsensusStates({
              clientId,
              pagination: (0, queryclient_1.createPagination)(paginationKey)
            }),
            allConsensusStates: async (clientId) => {
              var _a;
              const consensusStates = [];
              let response;
              let key;
              do {
                response = await clientQueryService.ConsensusStates({
                  clientId,
                  pagination: (0, queryclient_1.createPagination)(key)
                });
                consensusStates.push(...response.consensusStates);
                key = (_a = response.pagination) == null ? void 0 : _a.nextKey;
              } while (key && key.length);
              return {
                consensusStates
              };
            },
            params: async () => clientQueryService.ClientParams({}),
            stateTm: async (clientId) => {
              const response = await clientQueryService.ClientState({ clientId });
              return decodeTendermintClientStateAny(response.clientState);
            },
            statesTm: async (paginationKey) => {
              const { clientStates } = await clientQueryService.ClientStates({
                pagination: (0, queryclient_1.createPagination)(paginationKey)
              });
              return clientStates.map(({ clientState }) => decodeTendermintClientStateAny(clientState));
            },
            allStatesTm: async () => {
              var _a;
              const clientStates = [];
              let response;
              let key;
              do {
                response = await clientQueryService.ClientStates({
                  pagination: (0, queryclient_1.createPagination)(key)
                });
                clientStates.push(...response.clientStates);
                key = (_a = response.pagination) == null ? void 0 : _a.nextKey;
              } while (key && key.length);
              return clientStates.map(({ clientState }) => decodeTendermintClientStateAny(clientState));
            },
            consensusStateTm: async (clientId, consensusHeight) => {
              const response = await clientQueryService.ConsensusState(query_3.QueryConsensusStateRequest.fromPartial({
                clientId,
                revisionHeight: consensusHeight == null ? void 0 : consensusHeight.revisionHeight,
                revisionNumber: consensusHeight == null ? void 0 : consensusHeight.revisionNumber,
                latestHeight: consensusHeight === void 0
              }));
              return decodeTendermintConsensusStateAny(response.consensusState);
            }
          },
          connection: {
            connection: async (connectionId) => connectionQueryService.Connection({
              connectionId
            }),
            connections: async (paginationKey) => connectionQueryService.Connections({
              pagination: (0, queryclient_1.createPagination)(paginationKey)
            }),
            allConnections: async () => {
              var _a;
              const connections = [];
              let response;
              let key;
              do {
                response = await connectionQueryService.Connections({
                  pagination: (0, queryclient_1.createPagination)(key)
                });
                connections.push(...response.connections);
                key = (_a = response.pagination) == null ? void 0 : _a.nextKey;
              } while (key && key.length);
              return {
                connections,
                height: response.height
              };
            },
            clientConnections: async (clientId) => connectionQueryService.ClientConnections({
              clientId
            }),
            clientState: async (connectionId) => connectionQueryService.ConnectionClientState({
              connectionId
            }),
            consensusState: async (connectionId, revisionHeight) => connectionQueryService.ConnectionConsensusState(query_4.QueryConnectionConsensusStateRequest.fromPartial({
              connectionId,
              revisionHeight: long_1.default.fromNumber(revisionHeight, true)
            }))
          },
          transfer: {
            denomTrace: async (hash) => transferQueryService.DenomTrace({ hash }),
            denomTraces: async (paginationKey) => transferQueryService.DenomTraces({
              pagination: (0, queryclient_1.createPagination)(paginationKey)
            }),
            allDenomTraces: async () => {
              var _a;
              const denomTraces = [];
              let response;
              let key;
              do {
                response = await transferQueryService.DenomTraces({
                  pagination: (0, queryclient_1.createPagination)(key)
                });
                denomTraces.push(...response.denomTraces);
                key = (_a = response.pagination) == null ? void 0 : _a.nextKey;
              } while (key && key.length);
              return {
                denomTraces
              };
            },
            params: async () => transferQueryService.Params({})
          },
          verified: {
            channel: {
              channel: async (portId, channelId) => {
                const key = (0, encoding_1.toAscii)(`channelEnds/ports/${portId}/channels/${channelId}`);
                const { value } = await base.queryStoreVerified("ibc", key);
                return value.length ? channel_1.Channel.decode(value) : null;
              },
              packetCommitment: async (portId, channelId, sequence) => {
                const key = (0, encoding_1.toAscii)(`commitments/ports/${portId}/channels/${channelId}/packets/${sequence}`);
                const { value } = await base.queryStoreVerified("ibc", key);
                return value;
              },
              packetAcknowledgement: async (portId, channelId, sequence) => {
                const key = (0, encoding_1.toAscii)(`acks/ports/${portId}/channels/${channelId}/acknowledgements/${sequence}`);
                const { value } = await base.queryStoreVerified("ibc", key);
                return value;
              },
              nextSequenceReceive: async (portId, channelId) => {
                const key = (0, encoding_1.toAscii)(`seqAcks/ports/${portId}/channels/${channelId}/nextSequenceAck`);
                const { value } = await base.queryStoreVerified("ibc", key);
                return value.length ? math_1.Uint64.fromBytes(value).toNumber() : null;
              }
            }
          }
        }
      };
    }
    exports.setupIbcExtension = setupIbcExtension;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/mint/v1beta1/mint.js
var require_mint = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/mint/v1beta1/mint.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Params = exports.Minter = exports.protobufPackage = void 0;
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.mint.v1beta1";
    function createBaseMinter() {
      return {
        inflation: "",
        annualProvisions: ""
      };
    }
    exports.Minter = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.inflation !== "") {
          writer.uint32(10).string(message.inflation);
        }
        if (message.annualProvisions !== "") {
          writer.uint32(18).string(message.annualProvisions);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMinter();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.inflation = reader.string();
              break;
            case 2:
              message.annualProvisions = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          inflation: (0, helpers_1.isSet)(object.inflation) ? String(object.inflation) : "",
          annualProvisions: (0, helpers_1.isSet)(object.annualProvisions) ? String(object.annualProvisions) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.inflation !== void 0 && (obj.inflation = message.inflation);
        message.annualProvisions !== void 0 && (obj.annualProvisions = message.annualProvisions);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMinter();
        message.inflation = object.inflation ?? "";
        message.annualProvisions = object.annualProvisions ?? "";
        return message;
      }
    };
    function createBaseParams() {
      return {
        mintDenom: "",
        inflationRateChange: "",
        inflationMax: "",
        inflationMin: "",
        goalBonded: "",
        blocksPerYear: helpers_1.Long.UZERO
      };
    }
    exports.Params = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.mintDenom !== "") {
          writer.uint32(10).string(message.mintDenom);
        }
        if (message.inflationRateChange !== "") {
          writer.uint32(18).string(message.inflationRateChange);
        }
        if (message.inflationMax !== "") {
          writer.uint32(26).string(message.inflationMax);
        }
        if (message.inflationMin !== "") {
          writer.uint32(34).string(message.inflationMin);
        }
        if (message.goalBonded !== "") {
          writer.uint32(42).string(message.goalBonded);
        }
        if (!message.blocksPerYear.isZero()) {
          writer.uint32(48).uint64(message.blocksPerYear);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseParams();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.mintDenom = reader.string();
              break;
            case 2:
              message.inflationRateChange = reader.string();
              break;
            case 3:
              message.inflationMax = reader.string();
              break;
            case 4:
              message.inflationMin = reader.string();
              break;
            case 5:
              message.goalBonded = reader.string();
              break;
            case 6:
              message.blocksPerYear = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          mintDenom: (0, helpers_1.isSet)(object.mintDenom) ? String(object.mintDenom) : "",
          inflationRateChange: (0, helpers_1.isSet)(object.inflationRateChange) ? String(object.inflationRateChange) : "",
          inflationMax: (0, helpers_1.isSet)(object.inflationMax) ? String(object.inflationMax) : "",
          inflationMin: (0, helpers_1.isSet)(object.inflationMin) ? String(object.inflationMin) : "",
          goalBonded: (0, helpers_1.isSet)(object.goalBonded) ? String(object.goalBonded) : "",
          blocksPerYear: (0, helpers_1.isSet)(object.blocksPerYear) ? helpers_1.Long.fromValue(object.blocksPerYear) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.mintDenom !== void 0 && (obj.mintDenom = message.mintDenom);
        message.inflationRateChange !== void 0 && (obj.inflationRateChange = message.inflationRateChange);
        message.inflationMax !== void 0 && (obj.inflationMax = message.inflationMax);
        message.inflationMin !== void 0 && (obj.inflationMin = message.inflationMin);
        message.goalBonded !== void 0 && (obj.goalBonded = message.goalBonded);
        message.blocksPerYear !== void 0 && (obj.blocksPerYear = (message.blocksPerYear || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseParams();
        message.mintDenom = object.mintDenom ?? "";
        message.inflationRateChange = object.inflationRateChange ?? "";
        message.inflationMax = object.inflationMax ?? "";
        message.inflationMin = object.inflationMin ?? "";
        message.goalBonded = object.goalBonded ?? "";
        message.blocksPerYear = object.blocksPerYear !== void 0 && object.blocksPerYear !== null ? helpers_1.Long.fromValue(object.blocksPerYear) : helpers_1.Long.UZERO;
        return message;
      }
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/mint/v1beta1/query.js
var require_query11 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/mint/v1beta1/query.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.QueryClientImpl = exports.QueryAnnualProvisionsResponse = exports.QueryAnnualProvisionsRequest = exports.QueryInflationResponse = exports.QueryInflationRequest = exports.QueryParamsResponse = exports.QueryParamsRequest = exports.protobufPackage = void 0;
    var mint_1 = require_mint();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.mint.v1beta1";
    function createBaseQueryParamsRequest() {
      return {};
    }
    exports.QueryParamsRequest = {
      encode(_3, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryParamsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_3) {
        return {};
      },
      toJSON(_3) {
        const obj = {};
        return obj;
      },
      fromPartial(_3) {
        const message = createBaseQueryParamsRequest();
        return message;
      }
    };
    function createBaseQueryParamsResponse() {
      return {
        params: void 0
      };
    }
    exports.QueryParamsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.params !== void 0) {
          mint_1.Params.encode(message.params, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryParamsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.params = mint_1.Params.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          params: (0, helpers_1.isSet)(object.params) ? mint_1.Params.fromJSON(object.params) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.params !== void 0 && (obj.params = message.params ? mint_1.Params.toJSON(message.params) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryParamsResponse();
        message.params = object.params !== void 0 && object.params !== null ? mint_1.Params.fromPartial(object.params) : void 0;
        return message;
      }
    };
    function createBaseQueryInflationRequest() {
      return {};
    }
    exports.QueryInflationRequest = {
      encode(_3, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryInflationRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_3) {
        return {};
      },
      toJSON(_3) {
        const obj = {};
        return obj;
      },
      fromPartial(_3) {
        const message = createBaseQueryInflationRequest();
        return message;
      }
    };
    function createBaseQueryInflationResponse() {
      return {
        inflation: new Uint8Array()
      };
    }
    exports.QueryInflationResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.inflation.length !== 0) {
          writer.uint32(10).bytes(message.inflation);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryInflationResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.inflation = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          inflation: (0, helpers_1.isSet)(object.inflation) ? (0, helpers_1.bytesFromBase64)(object.inflation) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.inflation !== void 0 && (obj.inflation = (0, helpers_1.base64FromBytes)(message.inflation !== void 0 ? message.inflation : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryInflationResponse();
        message.inflation = object.inflation ?? new Uint8Array();
        return message;
      }
    };
    function createBaseQueryAnnualProvisionsRequest() {
      return {};
    }
    exports.QueryAnnualProvisionsRequest = {
      encode(_3, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryAnnualProvisionsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_3) {
        return {};
      },
      toJSON(_3) {
        const obj = {};
        return obj;
      },
      fromPartial(_3) {
        const message = createBaseQueryAnnualProvisionsRequest();
        return message;
      }
    };
    function createBaseQueryAnnualProvisionsResponse() {
      return {
        annualProvisions: new Uint8Array()
      };
    }
    exports.QueryAnnualProvisionsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.annualProvisions.length !== 0) {
          writer.uint32(10).bytes(message.annualProvisions);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryAnnualProvisionsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.annualProvisions = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          annualProvisions: (0, helpers_1.isSet)(object.annualProvisions) ? (0, helpers_1.bytesFromBase64)(object.annualProvisions) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.annualProvisions !== void 0 && (obj.annualProvisions = (0, helpers_1.base64FromBytes)(message.annualProvisions !== void 0 ? message.annualProvisions : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryAnnualProvisionsResponse();
        message.annualProvisions = object.annualProvisions ?? new Uint8Array();
        return message;
      }
    };
    var QueryClientImpl = class {
      constructor(rpc) {
        this.rpc = rpc;
        this.Params = this.Params.bind(this);
        this.Inflation = this.Inflation.bind(this);
        this.AnnualProvisions = this.AnnualProvisions.bind(this);
      }
      Params(request = {}) {
        const data = exports.QueryParamsRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.mint.v1beta1.Query", "Params", data);
        return promise.then((data2) => exports.QueryParamsResponse.decode(new _m0.Reader(data2)));
      }
      Inflation(request = {}) {
        const data = exports.QueryInflationRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.mint.v1beta1.Query", "Inflation", data);
        return promise.then((data2) => exports.QueryInflationResponse.decode(new _m0.Reader(data2)));
      }
      AnnualProvisions(request = {}) {
        const data = exports.QueryAnnualProvisionsRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.mint.v1beta1.Query", "AnnualProvisions", data);
        return promise.then((data2) => exports.QueryAnnualProvisionsResponse.decode(new _m0.Reader(data2)));
      }
    };
    exports.QueryClientImpl = QueryClientImpl;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/mint/queries.js
var require_queries8 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/mint/queries.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.setupMintExtension = void 0;
    var utils_1 = require_build4();
    var query_1 = require_query11();
    var queryclient_1 = require_queryclient2();
    function setupMintExtension(base) {
      const rpc = (0, queryclient_1.createProtobufRpcClient)(base);
      const queryService = new query_1.QueryClientImpl(rpc);
      return {
        mint: {
          params: async () => {
            const { params } = await queryService.Params({});
            (0, utils_1.assert)(params);
            return {
              blocksPerYear: params.blocksPerYear,
              goalBonded: (0, queryclient_1.decodeCosmosSdkDecFromProto)(params.goalBonded),
              inflationMin: (0, queryclient_1.decodeCosmosSdkDecFromProto)(params.inflationMin),
              inflationMax: (0, queryclient_1.decodeCosmosSdkDecFromProto)(params.inflationMax),
              inflationRateChange: (0, queryclient_1.decodeCosmosSdkDecFromProto)(params.inflationRateChange),
              mintDenom: params.mintDenom
            };
          },
          inflation: async () => {
            const { inflation } = await queryService.Inflation({});
            return (0, queryclient_1.decodeCosmosSdkDecFromProto)(inflation);
          },
          annualProvisions: async () => {
            const { annualProvisions } = await queryService.AnnualProvisions({});
            return (0, queryclient_1.decodeCosmosSdkDecFromProto)(annualProvisions);
          }
        }
      };
    }
    exports.setupMintExtension = setupMintExtension;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/slashing/aminomessages.js
var require_aminomessages9 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/slashing/aminomessages.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createSlashingAminoConverters = exports.isAminoMsgUnjail = void 0;
    function isAminoMsgUnjail(msg) {
      return msg.type === "cosmos-sdk/MsgUnjail";
    }
    exports.isAminoMsgUnjail = isAminoMsgUnjail;
    function createSlashingAminoConverters() {
      throw new Error("Not implemented");
    }
    exports.createSlashingAminoConverters = createSlashingAminoConverters;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/slashing/v1beta1/slashing.js
var require_slashing = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/slashing/v1beta1/slashing.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Params = exports.ValidatorSigningInfo = exports.protobufPackage = void 0;
    var timestamp_1 = require_timestamp();
    var duration_1 = require_duration();
    var helpers_1 = require_helpers();
    var _m0 = __importStar(require_minimal());
    exports.protobufPackage = "cosmos.slashing.v1beta1";
    function createBaseValidatorSigningInfo() {
      return {
        address: "",
        startHeight: helpers_1.Long.ZERO,
        indexOffset: helpers_1.Long.ZERO,
        jailedUntil: void 0,
        tombstoned: false,
        missedBlocksCounter: helpers_1.Long.ZERO
      };
    }
    exports.ValidatorSigningInfo = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.address !== "") {
          writer.uint32(10).string(message.address);
        }
        if (!message.startHeight.isZero()) {
          writer.uint32(16).int64(message.startHeight);
        }
        if (!message.indexOffset.isZero()) {
          writer.uint32(24).int64(message.indexOffset);
        }
        if (message.jailedUntil !== void 0) {
          timestamp_1.Timestamp.encode(message.jailedUntil, writer.uint32(34).fork()).ldelim();
        }
        if (message.tombstoned === true) {
          writer.uint32(40).bool(message.tombstoned);
        }
        if (!message.missedBlocksCounter.isZero()) {
          writer.uint32(48).int64(message.missedBlocksCounter);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseValidatorSigningInfo();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.address = reader.string();
              break;
            case 2:
              message.startHeight = reader.int64();
              break;
            case 3:
              message.indexOffset = reader.int64();
              break;
            case 4:
              message.jailedUntil = timestamp_1.Timestamp.decode(reader, reader.uint32());
              break;
            case 5:
              message.tombstoned = reader.bool();
              break;
            case 6:
              message.missedBlocksCounter = reader.int64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          address: (0, helpers_1.isSet)(object.address) ? String(object.address) : "",
          startHeight: (0, helpers_1.isSet)(object.startHeight) ? helpers_1.Long.fromValue(object.startHeight) : helpers_1.Long.ZERO,
          indexOffset: (0, helpers_1.isSet)(object.indexOffset) ? helpers_1.Long.fromValue(object.indexOffset) : helpers_1.Long.ZERO,
          jailedUntil: (0, helpers_1.isSet)(object.jailedUntil) ? (0, helpers_1.fromJsonTimestamp)(object.jailedUntil) : void 0,
          tombstoned: (0, helpers_1.isSet)(object.tombstoned) ? Boolean(object.tombstoned) : false,
          missedBlocksCounter: (0, helpers_1.isSet)(object.missedBlocksCounter) ? helpers_1.Long.fromValue(object.missedBlocksCounter) : helpers_1.Long.ZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.address !== void 0 && (obj.address = message.address);
        message.startHeight !== void 0 && (obj.startHeight = (message.startHeight || helpers_1.Long.ZERO).toString());
        message.indexOffset !== void 0 && (obj.indexOffset = (message.indexOffset || helpers_1.Long.ZERO).toString());
        message.jailedUntil !== void 0 && (obj.jailedUntil = (0, helpers_1.fromTimestamp)(message.jailedUntil).toISOString());
        message.tombstoned !== void 0 && (obj.tombstoned = message.tombstoned);
        message.missedBlocksCounter !== void 0 && (obj.missedBlocksCounter = (message.missedBlocksCounter || helpers_1.Long.ZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseValidatorSigningInfo();
        message.address = object.address ?? "";
        message.startHeight = object.startHeight !== void 0 && object.startHeight !== null ? helpers_1.Long.fromValue(object.startHeight) : helpers_1.Long.ZERO;
        message.indexOffset = object.indexOffset !== void 0 && object.indexOffset !== null ? helpers_1.Long.fromValue(object.indexOffset) : helpers_1.Long.ZERO;
        message.jailedUntil = object.jailedUntil !== void 0 && object.jailedUntil !== null ? timestamp_1.Timestamp.fromPartial(object.jailedUntil) : void 0;
        message.tombstoned = object.tombstoned ?? false;
        message.missedBlocksCounter = object.missedBlocksCounter !== void 0 && object.missedBlocksCounter !== null ? helpers_1.Long.fromValue(object.missedBlocksCounter) : helpers_1.Long.ZERO;
        return message;
      }
    };
    function createBaseParams() {
      return {
        signedBlocksWindow: helpers_1.Long.ZERO,
        minSignedPerWindow: new Uint8Array(),
        downtimeJailDuration: void 0,
        slashFractionDoubleSign: new Uint8Array(),
        slashFractionDowntime: new Uint8Array()
      };
    }
    exports.Params = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.signedBlocksWindow.isZero()) {
          writer.uint32(8).int64(message.signedBlocksWindow);
        }
        if (message.minSignedPerWindow.length !== 0) {
          writer.uint32(18).bytes(message.minSignedPerWindow);
        }
        if (message.downtimeJailDuration !== void 0) {
          duration_1.Duration.encode(message.downtimeJailDuration, writer.uint32(26).fork()).ldelim();
        }
        if (message.slashFractionDoubleSign.length !== 0) {
          writer.uint32(34).bytes(message.slashFractionDoubleSign);
        }
        if (message.slashFractionDowntime.length !== 0) {
          writer.uint32(42).bytes(message.slashFractionDowntime);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseParams();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.signedBlocksWindow = reader.int64();
              break;
            case 2:
              message.minSignedPerWindow = reader.bytes();
              break;
            case 3:
              message.downtimeJailDuration = duration_1.Duration.decode(reader, reader.uint32());
              break;
            case 4:
              message.slashFractionDoubleSign = reader.bytes();
              break;
            case 5:
              message.slashFractionDowntime = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          signedBlocksWindow: (0, helpers_1.isSet)(object.signedBlocksWindow) ? helpers_1.Long.fromValue(object.signedBlocksWindow) : helpers_1.Long.ZERO,
          minSignedPerWindow: (0, helpers_1.isSet)(object.minSignedPerWindow) ? (0, helpers_1.bytesFromBase64)(object.minSignedPerWindow) : new Uint8Array(),
          downtimeJailDuration: (0, helpers_1.isSet)(object.downtimeJailDuration) ? duration_1.Duration.fromJSON(object.downtimeJailDuration) : void 0,
          slashFractionDoubleSign: (0, helpers_1.isSet)(object.slashFractionDoubleSign) ? (0, helpers_1.bytesFromBase64)(object.slashFractionDoubleSign) : new Uint8Array(),
          slashFractionDowntime: (0, helpers_1.isSet)(object.slashFractionDowntime) ? (0, helpers_1.bytesFromBase64)(object.slashFractionDowntime) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.signedBlocksWindow !== void 0 && (obj.signedBlocksWindow = (message.signedBlocksWindow || helpers_1.Long.ZERO).toString());
        message.minSignedPerWindow !== void 0 && (obj.minSignedPerWindow = (0, helpers_1.base64FromBytes)(message.minSignedPerWindow !== void 0 ? message.minSignedPerWindow : new Uint8Array()));
        message.downtimeJailDuration !== void 0 && (obj.downtimeJailDuration = message.downtimeJailDuration ? duration_1.Duration.toJSON(message.downtimeJailDuration) : void 0);
        message.slashFractionDoubleSign !== void 0 && (obj.slashFractionDoubleSign = (0, helpers_1.base64FromBytes)(message.slashFractionDoubleSign !== void 0 ? message.slashFractionDoubleSign : new Uint8Array()));
        message.slashFractionDowntime !== void 0 && (obj.slashFractionDowntime = (0, helpers_1.base64FromBytes)(message.slashFractionDowntime !== void 0 ? message.slashFractionDowntime : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseParams();
        message.signedBlocksWindow = object.signedBlocksWindow !== void 0 && object.signedBlocksWindow !== null ? helpers_1.Long.fromValue(object.signedBlocksWindow) : helpers_1.Long.ZERO;
        message.minSignedPerWindow = object.minSignedPerWindow ?? new Uint8Array();
        message.downtimeJailDuration = object.downtimeJailDuration !== void 0 && object.downtimeJailDuration !== null ? duration_1.Duration.fromPartial(object.downtimeJailDuration) : void 0;
        message.slashFractionDoubleSign = object.slashFractionDoubleSign ?? new Uint8Array();
        message.slashFractionDowntime = object.slashFractionDowntime ?? new Uint8Array();
        return message;
      }
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/slashing/v1beta1/query.js
var require_query12 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/slashing/v1beta1/query.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.QueryClientImpl = exports.QuerySigningInfosResponse = exports.QuerySigningInfosRequest = exports.QuerySigningInfoResponse = exports.QuerySigningInfoRequest = exports.QueryParamsResponse = exports.QueryParamsRequest = exports.protobufPackage = void 0;
    var pagination_1 = require_pagination();
    var slashing_1 = require_slashing();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.slashing.v1beta1";
    function createBaseQueryParamsRequest() {
      return {};
    }
    exports.QueryParamsRequest = {
      encode(_3, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryParamsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_3) {
        return {};
      },
      toJSON(_3) {
        const obj = {};
        return obj;
      },
      fromPartial(_3) {
        const message = createBaseQueryParamsRequest();
        return message;
      }
    };
    function createBaseQueryParamsResponse() {
      return {
        params: void 0
      };
    }
    exports.QueryParamsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.params !== void 0) {
          slashing_1.Params.encode(message.params, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryParamsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.params = slashing_1.Params.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          params: (0, helpers_1.isSet)(object.params) ? slashing_1.Params.fromJSON(object.params) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.params !== void 0 && (obj.params = message.params ? slashing_1.Params.toJSON(message.params) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryParamsResponse();
        message.params = object.params !== void 0 && object.params !== null ? slashing_1.Params.fromPartial(object.params) : void 0;
        return message;
      }
    };
    function createBaseQuerySigningInfoRequest() {
      return {
        consAddress: ""
      };
    }
    exports.QuerySigningInfoRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.consAddress !== "") {
          writer.uint32(10).string(message.consAddress);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQuerySigningInfoRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.consAddress = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          consAddress: (0, helpers_1.isSet)(object.consAddress) ? String(object.consAddress) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.consAddress !== void 0 && (obj.consAddress = message.consAddress);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQuerySigningInfoRequest();
        message.consAddress = object.consAddress ?? "";
        return message;
      }
    };
    function createBaseQuerySigningInfoResponse() {
      return {
        valSigningInfo: void 0
      };
    }
    exports.QuerySigningInfoResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.valSigningInfo !== void 0) {
          slashing_1.ValidatorSigningInfo.encode(message.valSigningInfo, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQuerySigningInfoResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.valSigningInfo = slashing_1.ValidatorSigningInfo.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          valSigningInfo: (0, helpers_1.isSet)(object.valSigningInfo) ? slashing_1.ValidatorSigningInfo.fromJSON(object.valSigningInfo) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.valSigningInfo !== void 0 && (obj.valSigningInfo = message.valSigningInfo ? slashing_1.ValidatorSigningInfo.toJSON(message.valSigningInfo) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQuerySigningInfoResponse();
        message.valSigningInfo = object.valSigningInfo !== void 0 && object.valSigningInfo !== null ? slashing_1.ValidatorSigningInfo.fromPartial(object.valSigningInfo) : void 0;
        return message;
      }
    };
    function createBaseQuerySigningInfosRequest() {
      return {
        pagination: void 0
      };
    }
    exports.QuerySigningInfosRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQuerySigningInfosRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQuerySigningInfosRequest();
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQuerySigningInfosResponse() {
      return {
        info: [],
        pagination: void 0
      };
    }
    exports.QuerySigningInfosResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.info) {
          slashing_1.ValidatorSigningInfo.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQuerySigningInfosResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.info.push(slashing_1.ValidatorSigningInfo.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          info: Array.isArray(object == null ? void 0 : object.info) ? object.info.map((e2) => slashing_1.ValidatorSigningInfo.fromJSON(e2)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.info) {
          obj.info = message.info.map((e2) => e2 ? slashing_1.ValidatorSigningInfo.toJSON(e2) : void 0);
        } else {
          obj.info = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQuerySigningInfosResponse();
        message.info = ((_a = object.info) == null ? void 0 : _a.map((e2) => slashing_1.ValidatorSigningInfo.fromPartial(e2))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    var QueryClientImpl = class {
      constructor(rpc) {
        this.rpc = rpc;
        this.Params = this.Params.bind(this);
        this.SigningInfo = this.SigningInfo.bind(this);
        this.SigningInfos = this.SigningInfos.bind(this);
      }
      Params(request = {}) {
        const data = exports.QueryParamsRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.slashing.v1beta1.Query", "Params", data);
        return promise.then((data2) => exports.QueryParamsResponse.decode(new _m0.Reader(data2)));
      }
      SigningInfo(request) {
        const data = exports.QuerySigningInfoRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.slashing.v1beta1.Query", "SigningInfo", data);
        return promise.then((data2) => exports.QuerySigningInfoResponse.decode(new _m0.Reader(data2)));
      }
      SigningInfos(request = {
        pagination: void 0
      }) {
        const data = exports.QuerySigningInfosRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.slashing.v1beta1.Query", "SigningInfos", data);
        return promise.then((data2) => exports.QuerySigningInfosResponse.decode(new _m0.Reader(data2)));
      }
    };
    exports.QueryClientImpl = QueryClientImpl;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/slashing/queries.js
var require_queries9 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/slashing/queries.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.setupSlashingExtension = void 0;
    var query_1 = require_query12();
    var queryclient_1 = require_queryclient2();
    function setupSlashingExtension(base) {
      const rpc = (0, queryclient_1.createProtobufRpcClient)(base);
      const queryService = new query_1.QueryClientImpl(rpc);
      return {
        slashing: {
          signingInfo: async (consAddress) => {
            const response = await queryService.SigningInfo({
              consAddress
            });
            return response;
          },
          signingInfos: async (paginationKey) => {
            const response = await queryService.SigningInfos({
              pagination: (0, queryclient_1.createPagination)(paginationKey)
            });
            return response;
          },
          params: async () => {
            const response = await queryService.Params({});
            return response;
          }
        }
      };
    }
    exports.setupSlashingExtension = setupSlashingExtension;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/staking/aminomessages.js
var require_aminomessages10 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/staking/aminomessages.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createStakingAminoConverters = exports.isAminoMsgUndelegate = exports.isAminoMsgBeginRedelegate = exports.isAminoMsgDelegate = exports.isAminoMsgEditValidator = exports.isAminoMsgCreateValidator = exports.protoDecimalToJson = void 0;
    var math_1 = require_build3();
    var proto_signing_1 = require_build7();
    var utils_1 = require_build4();
    function protoDecimalToJson(decimal) {
      const parsed = math_1.Decimal.fromAtomics(decimal, 18);
      const [whole, fractional] = parsed.toString().split(".");
      return `${whole}.${(fractional ?? "").padEnd(18, "0")}`;
    }
    exports.protoDecimalToJson = protoDecimalToJson;
    function jsonDecimalToProto(decimal) {
      const parsed = math_1.Decimal.fromUserInput(decimal, 18);
      return parsed.atomics;
    }
    function isAminoMsgCreateValidator(msg) {
      return msg.type === "cosmos-sdk/MsgCreateValidator";
    }
    exports.isAminoMsgCreateValidator = isAminoMsgCreateValidator;
    function isAminoMsgEditValidator(msg) {
      return msg.type === "cosmos-sdk/MsgEditValidator";
    }
    exports.isAminoMsgEditValidator = isAminoMsgEditValidator;
    function isAminoMsgDelegate(msg) {
      return msg.type === "cosmos-sdk/MsgDelegate";
    }
    exports.isAminoMsgDelegate = isAminoMsgDelegate;
    function isAminoMsgBeginRedelegate(msg) {
      return msg.type === "cosmos-sdk/MsgBeginRedelegate";
    }
    exports.isAminoMsgBeginRedelegate = isAminoMsgBeginRedelegate;
    function isAminoMsgUndelegate(msg) {
      return msg.type === "cosmos-sdk/MsgUndelegate";
    }
    exports.isAminoMsgUndelegate = isAminoMsgUndelegate;
    function createStakingAminoConverters() {
      return {
        "/cosmos.staking.v1beta1.MsgBeginRedelegate": {
          aminoType: "cosmos-sdk/MsgBeginRedelegate",
          toAmino: ({ delegatorAddress, validatorSrcAddress, validatorDstAddress, amount }) => {
            (0, utils_1.assertDefinedAndNotNull)(amount, "missing amount");
            return {
              delegator_address: delegatorAddress,
              validator_src_address: validatorSrcAddress,
              validator_dst_address: validatorDstAddress,
              amount
            };
          },
          fromAmino: ({ delegator_address, validator_src_address, validator_dst_address, amount }) => ({
            delegatorAddress: delegator_address,
            validatorSrcAddress: validator_src_address,
            validatorDstAddress: validator_dst_address,
            amount
          })
        },
        "/cosmos.staking.v1beta1.MsgCreateValidator": {
          aminoType: "cosmos-sdk/MsgCreateValidator",
          toAmino: ({ description, commission, minSelfDelegation, delegatorAddress, validatorAddress, pubkey, value }) => {
            (0, utils_1.assertDefinedAndNotNull)(description, "missing description");
            (0, utils_1.assertDefinedAndNotNull)(commission, "missing commission");
            (0, utils_1.assertDefinedAndNotNull)(pubkey, "missing pubkey");
            (0, utils_1.assertDefinedAndNotNull)(value, "missing value");
            return {
              description: {
                moniker: description.moniker,
                identity: description.identity,
                website: description.website,
                security_contact: description.securityContact,
                details: description.details
              },
              commission: {
                rate: protoDecimalToJson(commission.rate),
                max_rate: protoDecimalToJson(commission.maxRate),
                max_change_rate: protoDecimalToJson(commission.maxChangeRate)
              },
              min_self_delegation: minSelfDelegation,
              delegator_address: delegatorAddress,
              validator_address: validatorAddress,
              pubkey: (0, proto_signing_1.decodePubkey)(pubkey),
              value
            };
          },
          fromAmino: ({ description, commission, min_self_delegation, delegator_address, validator_address, pubkey, value }) => {
            return {
              description: {
                moniker: description.moniker,
                identity: description.identity,
                website: description.website,
                securityContact: description.security_contact,
                details: description.details
              },
              commission: {
                rate: jsonDecimalToProto(commission.rate),
                maxRate: jsonDecimalToProto(commission.max_rate),
                maxChangeRate: jsonDecimalToProto(commission.max_change_rate)
              },
              minSelfDelegation: min_self_delegation,
              delegatorAddress: delegator_address,
              validatorAddress: validator_address,
              pubkey: (0, proto_signing_1.encodePubkey)(pubkey),
              value
            };
          }
        },
        "/cosmos.staking.v1beta1.MsgDelegate": {
          aminoType: "cosmos-sdk/MsgDelegate",
          toAmino: ({ delegatorAddress, validatorAddress, amount }) => {
            (0, utils_1.assertDefinedAndNotNull)(amount, "missing amount");
            return {
              delegator_address: delegatorAddress,
              validator_address: validatorAddress,
              amount
            };
          },
          fromAmino: ({ delegator_address, validator_address, amount }) => ({
            delegatorAddress: delegator_address,
            validatorAddress: validator_address,
            amount
          })
        },
        "/cosmos.staking.v1beta1.MsgEditValidator": {
          aminoType: "cosmos-sdk/MsgEditValidator",
          toAmino: ({ description, commissionRate, minSelfDelegation, validatorAddress }) => {
            (0, utils_1.assertDefinedAndNotNull)(description, "missing description");
            return {
              description: {
                moniker: description.moniker,
                identity: description.identity,
                website: description.website,
                security_contact: description.securityContact,
                details: description.details
              },
              // empty string in the protobuf document means "do not change"
              commission_rate: commissionRate ? protoDecimalToJson(commissionRate) : void 0,
              // empty string in the protobuf document means "do not change"
              min_self_delegation: minSelfDelegation ? minSelfDelegation : void 0,
              validator_address: validatorAddress
            };
          },
          fromAmino: ({ description, commission_rate, min_self_delegation, validator_address }) => ({
            description: {
              moniker: description.moniker,
              identity: description.identity,
              website: description.website,
              securityContact: description.security_contact,
              details: description.details
            },
            // empty string in the protobuf document means "do not change"
            commissionRate: commission_rate ? jsonDecimalToProto(commission_rate) : "",
            // empty string in the protobuf document means "do not change"
            minSelfDelegation: min_self_delegation ?? "",
            validatorAddress: validator_address
          })
        },
        "/cosmos.staking.v1beta1.MsgUndelegate": {
          aminoType: "cosmos-sdk/MsgUndelegate",
          toAmino: ({ delegatorAddress, validatorAddress, amount }) => {
            (0, utils_1.assertDefinedAndNotNull)(amount, "missing amount");
            return {
              delegator_address: delegatorAddress,
              validator_address: validatorAddress,
              amount
            };
          },
          fromAmino: ({ delegator_address, validator_address, amount }) => ({
            delegatorAddress: delegator_address,
            validatorAddress: validator_address,
            amount
          })
        }
      };
    }
    exports.createStakingAminoConverters = createStakingAminoConverters;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/staking/v1beta1/staking.js
var require_staking = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/staking/v1beta1/staking.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Pool = exports.RedelegationResponse = exports.RedelegationEntryResponse = exports.DelegationResponse = exports.Params = exports.Redelegation = exports.RedelegationEntry = exports.UnbondingDelegationEntry = exports.UnbondingDelegation = exports.Delegation = exports.DVVTriplets = exports.DVVTriplet = exports.DVPairs = exports.DVPair = exports.ValAddresses = exports.Validator = exports.Description = exports.Commission = exports.CommissionRates = exports.HistoricalInfo = exports.bondStatusToJSON = exports.bondStatusFromJSON = exports.BondStatus = exports.protobufPackage = void 0;
    var types_1 = require_types2();
    var timestamp_1 = require_timestamp();
    var any_1 = require_any();
    var duration_1 = require_duration();
    var coin_1 = require_coin();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.staking.v1beta1";
    var BondStatus;
    (function(BondStatus2) {
      BondStatus2[BondStatus2["BOND_STATUS_UNSPECIFIED"] = 0] = "BOND_STATUS_UNSPECIFIED";
      BondStatus2[BondStatus2["BOND_STATUS_UNBONDED"] = 1] = "BOND_STATUS_UNBONDED";
      BondStatus2[BondStatus2["BOND_STATUS_UNBONDING"] = 2] = "BOND_STATUS_UNBONDING";
      BondStatus2[BondStatus2["BOND_STATUS_BONDED"] = 3] = "BOND_STATUS_BONDED";
      BondStatus2[BondStatus2["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
    })(BondStatus = exports.BondStatus || (exports.BondStatus = {}));
    function bondStatusFromJSON(object) {
      switch (object) {
        case 0:
        case "BOND_STATUS_UNSPECIFIED":
          return BondStatus.BOND_STATUS_UNSPECIFIED;
        case 1:
        case "BOND_STATUS_UNBONDED":
          return BondStatus.BOND_STATUS_UNBONDED;
        case 2:
        case "BOND_STATUS_UNBONDING":
          return BondStatus.BOND_STATUS_UNBONDING;
        case 3:
        case "BOND_STATUS_BONDED":
          return BondStatus.BOND_STATUS_BONDED;
        case -1:
        case "UNRECOGNIZED":
        default:
          return BondStatus.UNRECOGNIZED;
      }
    }
    exports.bondStatusFromJSON = bondStatusFromJSON;
    function bondStatusToJSON(object) {
      switch (object) {
        case BondStatus.BOND_STATUS_UNSPECIFIED:
          return "BOND_STATUS_UNSPECIFIED";
        case BondStatus.BOND_STATUS_UNBONDED:
          return "BOND_STATUS_UNBONDED";
        case BondStatus.BOND_STATUS_UNBONDING:
          return "BOND_STATUS_UNBONDING";
        case BondStatus.BOND_STATUS_BONDED:
          return "BOND_STATUS_BONDED";
        case BondStatus.UNRECOGNIZED:
        default:
          return "UNRECOGNIZED";
      }
    }
    exports.bondStatusToJSON = bondStatusToJSON;
    function createBaseHistoricalInfo() {
      return {
        header: void 0,
        valset: []
      };
    }
    exports.HistoricalInfo = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.header !== void 0) {
          types_1.Header.encode(message.header, writer.uint32(10).fork()).ldelim();
        }
        for (const v3 of message.valset) {
          exports.Validator.encode(v3, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseHistoricalInfo();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.header = types_1.Header.decode(reader, reader.uint32());
              break;
            case 2:
              message.valset.push(exports.Validator.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          header: (0, helpers_1.isSet)(object.header) ? types_1.Header.fromJSON(object.header) : void 0,
          valset: Array.isArray(object == null ? void 0 : object.valset) ? object.valset.map((e2) => exports.Validator.fromJSON(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.header !== void 0 && (obj.header = message.header ? types_1.Header.toJSON(message.header) : void 0);
        if (message.valset) {
          obj.valset = message.valset.map((e2) => e2 ? exports.Validator.toJSON(e2) : void 0);
        } else {
          obj.valset = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseHistoricalInfo();
        message.header = object.header !== void 0 && object.header !== null ? types_1.Header.fromPartial(object.header) : void 0;
        message.valset = ((_a = object.valset) == null ? void 0 : _a.map((e2) => exports.Validator.fromPartial(e2))) || [];
        return message;
      }
    };
    function createBaseCommissionRates() {
      return {
        rate: "",
        maxRate: "",
        maxChangeRate: ""
      };
    }
    exports.CommissionRates = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.rate !== "") {
          writer.uint32(10).string(message.rate);
        }
        if (message.maxRate !== "") {
          writer.uint32(18).string(message.maxRate);
        }
        if (message.maxChangeRate !== "") {
          writer.uint32(26).string(message.maxChangeRate);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseCommissionRates();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.rate = reader.string();
              break;
            case 2:
              message.maxRate = reader.string();
              break;
            case 3:
              message.maxChangeRate = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          rate: (0, helpers_1.isSet)(object.rate) ? String(object.rate) : "",
          maxRate: (0, helpers_1.isSet)(object.maxRate) ? String(object.maxRate) : "",
          maxChangeRate: (0, helpers_1.isSet)(object.maxChangeRate) ? String(object.maxChangeRate) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.rate !== void 0 && (obj.rate = message.rate);
        message.maxRate !== void 0 && (obj.maxRate = message.maxRate);
        message.maxChangeRate !== void 0 && (obj.maxChangeRate = message.maxChangeRate);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseCommissionRates();
        message.rate = object.rate ?? "";
        message.maxRate = object.maxRate ?? "";
        message.maxChangeRate = object.maxChangeRate ?? "";
        return message;
      }
    };
    function createBaseCommission() {
      return {
        commissionRates: void 0,
        updateTime: void 0
      };
    }
    exports.Commission = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.commissionRates !== void 0) {
          exports.CommissionRates.encode(message.commissionRates, writer.uint32(10).fork()).ldelim();
        }
        if (message.updateTime !== void 0) {
          timestamp_1.Timestamp.encode(message.updateTime, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseCommission();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.commissionRates = exports.CommissionRates.decode(reader, reader.uint32());
              break;
            case 2:
              message.updateTime = timestamp_1.Timestamp.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          commissionRates: (0, helpers_1.isSet)(object.commissionRates) ? exports.CommissionRates.fromJSON(object.commissionRates) : void 0,
          updateTime: (0, helpers_1.isSet)(object.updateTime) ? (0, helpers_1.fromJsonTimestamp)(object.updateTime) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.commissionRates !== void 0 && (obj.commissionRates = message.commissionRates ? exports.CommissionRates.toJSON(message.commissionRates) : void 0);
        message.updateTime !== void 0 && (obj.updateTime = (0, helpers_1.fromTimestamp)(message.updateTime).toISOString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseCommission();
        message.commissionRates = object.commissionRates !== void 0 && object.commissionRates !== null ? exports.CommissionRates.fromPartial(object.commissionRates) : void 0;
        message.updateTime = object.updateTime !== void 0 && object.updateTime !== null ? timestamp_1.Timestamp.fromPartial(object.updateTime) : void 0;
        return message;
      }
    };
    function createBaseDescription() {
      return {
        moniker: "",
        identity: "",
        website: "",
        securityContact: "",
        details: ""
      };
    }
    exports.Description = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.moniker !== "") {
          writer.uint32(10).string(message.moniker);
        }
        if (message.identity !== "") {
          writer.uint32(18).string(message.identity);
        }
        if (message.website !== "") {
          writer.uint32(26).string(message.website);
        }
        if (message.securityContact !== "") {
          writer.uint32(34).string(message.securityContact);
        }
        if (message.details !== "") {
          writer.uint32(42).string(message.details);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseDescription();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.moniker = reader.string();
              break;
            case 2:
              message.identity = reader.string();
              break;
            case 3:
              message.website = reader.string();
              break;
            case 4:
              message.securityContact = reader.string();
              break;
            case 5:
              message.details = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          moniker: (0, helpers_1.isSet)(object.moniker) ? String(object.moniker) : "",
          identity: (0, helpers_1.isSet)(object.identity) ? String(object.identity) : "",
          website: (0, helpers_1.isSet)(object.website) ? String(object.website) : "",
          securityContact: (0, helpers_1.isSet)(object.securityContact) ? String(object.securityContact) : "",
          details: (0, helpers_1.isSet)(object.details) ? String(object.details) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.moniker !== void 0 && (obj.moniker = message.moniker);
        message.identity !== void 0 && (obj.identity = message.identity);
        message.website !== void 0 && (obj.website = message.website);
        message.securityContact !== void 0 && (obj.securityContact = message.securityContact);
        message.details !== void 0 && (obj.details = message.details);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseDescription();
        message.moniker = object.moniker ?? "";
        message.identity = object.identity ?? "";
        message.website = object.website ?? "";
        message.securityContact = object.securityContact ?? "";
        message.details = object.details ?? "";
        return message;
      }
    };
    function createBaseValidator() {
      return {
        operatorAddress: "",
        consensusPubkey: void 0,
        jailed: false,
        status: 0,
        tokens: "",
        delegatorShares: "",
        description: void 0,
        unbondingHeight: helpers_1.Long.ZERO,
        unbondingTime: void 0,
        commission: void 0,
        minSelfDelegation: ""
      };
    }
    exports.Validator = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.operatorAddress !== "") {
          writer.uint32(10).string(message.operatorAddress);
        }
        if (message.consensusPubkey !== void 0) {
          any_1.Any.encode(message.consensusPubkey, writer.uint32(18).fork()).ldelim();
        }
        if (message.jailed === true) {
          writer.uint32(24).bool(message.jailed);
        }
        if (message.status !== 0) {
          writer.uint32(32).int32(message.status);
        }
        if (message.tokens !== "") {
          writer.uint32(42).string(message.tokens);
        }
        if (message.delegatorShares !== "") {
          writer.uint32(50).string(message.delegatorShares);
        }
        if (message.description !== void 0) {
          exports.Description.encode(message.description, writer.uint32(58).fork()).ldelim();
        }
        if (!message.unbondingHeight.isZero()) {
          writer.uint32(64).int64(message.unbondingHeight);
        }
        if (message.unbondingTime !== void 0) {
          timestamp_1.Timestamp.encode(message.unbondingTime, writer.uint32(74).fork()).ldelim();
        }
        if (message.commission !== void 0) {
          exports.Commission.encode(message.commission, writer.uint32(82).fork()).ldelim();
        }
        if (message.minSelfDelegation !== "") {
          writer.uint32(90).string(message.minSelfDelegation);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseValidator();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.operatorAddress = reader.string();
              break;
            case 2:
              message.consensusPubkey = any_1.Any.decode(reader, reader.uint32());
              break;
            case 3:
              message.jailed = reader.bool();
              break;
            case 4:
              message.status = reader.int32();
              break;
            case 5:
              message.tokens = reader.string();
              break;
            case 6:
              message.delegatorShares = reader.string();
              break;
            case 7:
              message.description = exports.Description.decode(reader, reader.uint32());
              break;
            case 8:
              message.unbondingHeight = reader.int64();
              break;
            case 9:
              message.unbondingTime = timestamp_1.Timestamp.decode(reader, reader.uint32());
              break;
            case 10:
              message.commission = exports.Commission.decode(reader, reader.uint32());
              break;
            case 11:
              message.minSelfDelegation = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          operatorAddress: (0, helpers_1.isSet)(object.operatorAddress) ? String(object.operatorAddress) : "",
          consensusPubkey: (0, helpers_1.isSet)(object.consensusPubkey) ? any_1.Any.fromJSON(object.consensusPubkey) : void 0,
          jailed: (0, helpers_1.isSet)(object.jailed) ? Boolean(object.jailed) : false,
          status: (0, helpers_1.isSet)(object.status) ? bondStatusFromJSON(object.status) : 0,
          tokens: (0, helpers_1.isSet)(object.tokens) ? String(object.tokens) : "",
          delegatorShares: (0, helpers_1.isSet)(object.delegatorShares) ? String(object.delegatorShares) : "",
          description: (0, helpers_1.isSet)(object.description) ? exports.Description.fromJSON(object.description) : void 0,
          unbondingHeight: (0, helpers_1.isSet)(object.unbondingHeight) ? helpers_1.Long.fromValue(object.unbondingHeight) : helpers_1.Long.ZERO,
          unbondingTime: (0, helpers_1.isSet)(object.unbondingTime) ? (0, helpers_1.fromJsonTimestamp)(object.unbondingTime) : void 0,
          commission: (0, helpers_1.isSet)(object.commission) ? exports.Commission.fromJSON(object.commission) : void 0,
          minSelfDelegation: (0, helpers_1.isSet)(object.minSelfDelegation) ? String(object.minSelfDelegation) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.operatorAddress !== void 0 && (obj.operatorAddress = message.operatorAddress);
        message.consensusPubkey !== void 0 && (obj.consensusPubkey = message.consensusPubkey ? any_1.Any.toJSON(message.consensusPubkey) : void 0);
        message.jailed !== void 0 && (obj.jailed = message.jailed);
        message.status !== void 0 && (obj.status = bondStatusToJSON(message.status));
        message.tokens !== void 0 && (obj.tokens = message.tokens);
        message.delegatorShares !== void 0 && (obj.delegatorShares = message.delegatorShares);
        message.description !== void 0 && (obj.description = message.description ? exports.Description.toJSON(message.description) : void 0);
        message.unbondingHeight !== void 0 && (obj.unbondingHeight = (message.unbondingHeight || helpers_1.Long.ZERO).toString());
        message.unbondingTime !== void 0 && (obj.unbondingTime = (0, helpers_1.fromTimestamp)(message.unbondingTime).toISOString());
        message.commission !== void 0 && (obj.commission = message.commission ? exports.Commission.toJSON(message.commission) : void 0);
        message.minSelfDelegation !== void 0 && (obj.minSelfDelegation = message.minSelfDelegation);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseValidator();
        message.operatorAddress = object.operatorAddress ?? "";
        message.consensusPubkey = object.consensusPubkey !== void 0 && object.consensusPubkey !== null ? any_1.Any.fromPartial(object.consensusPubkey) : void 0;
        message.jailed = object.jailed ?? false;
        message.status = object.status ?? 0;
        message.tokens = object.tokens ?? "";
        message.delegatorShares = object.delegatorShares ?? "";
        message.description = object.description !== void 0 && object.description !== null ? exports.Description.fromPartial(object.description) : void 0;
        message.unbondingHeight = object.unbondingHeight !== void 0 && object.unbondingHeight !== null ? helpers_1.Long.fromValue(object.unbondingHeight) : helpers_1.Long.ZERO;
        message.unbondingTime = object.unbondingTime !== void 0 && object.unbondingTime !== null ? timestamp_1.Timestamp.fromPartial(object.unbondingTime) : void 0;
        message.commission = object.commission !== void 0 && object.commission !== null ? exports.Commission.fromPartial(object.commission) : void 0;
        message.minSelfDelegation = object.minSelfDelegation ?? "";
        return message;
      }
    };
    function createBaseValAddresses() {
      return {
        addresses: []
      };
    }
    exports.ValAddresses = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.addresses) {
          writer.uint32(10).string(v3);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseValAddresses();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.addresses.push(reader.string());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          addresses: Array.isArray(object == null ? void 0 : object.addresses) ? object.addresses.map((e2) => String(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.addresses) {
          obj.addresses = message.addresses.map((e2) => e2);
        } else {
          obj.addresses = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseValAddresses();
        message.addresses = ((_a = object.addresses) == null ? void 0 : _a.map((e2) => e2)) || [];
        return message;
      }
    };
    function createBaseDVPair() {
      return {
        delegatorAddress: "",
        validatorAddress: ""
      };
    }
    exports.DVPair = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.delegatorAddress !== "") {
          writer.uint32(10).string(message.delegatorAddress);
        }
        if (message.validatorAddress !== "") {
          writer.uint32(18).string(message.validatorAddress);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseDVPair();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.delegatorAddress = reader.string();
              break;
            case 2:
              message.validatorAddress = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          delegatorAddress: (0, helpers_1.isSet)(object.delegatorAddress) ? String(object.delegatorAddress) : "",
          validatorAddress: (0, helpers_1.isSet)(object.validatorAddress) ? String(object.validatorAddress) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.delegatorAddress !== void 0 && (obj.delegatorAddress = message.delegatorAddress);
        message.validatorAddress !== void 0 && (obj.validatorAddress = message.validatorAddress);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseDVPair();
        message.delegatorAddress = object.delegatorAddress ?? "";
        message.validatorAddress = object.validatorAddress ?? "";
        return message;
      }
    };
    function createBaseDVPairs() {
      return {
        pairs: []
      };
    }
    exports.DVPairs = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.pairs) {
          exports.DVPair.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseDVPairs();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.pairs.push(exports.DVPair.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          pairs: Array.isArray(object == null ? void 0 : object.pairs) ? object.pairs.map((e2) => exports.DVPair.fromJSON(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.pairs) {
          obj.pairs = message.pairs.map((e2) => e2 ? exports.DVPair.toJSON(e2) : void 0);
        } else {
          obj.pairs = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseDVPairs();
        message.pairs = ((_a = object.pairs) == null ? void 0 : _a.map((e2) => exports.DVPair.fromPartial(e2))) || [];
        return message;
      }
    };
    function createBaseDVVTriplet() {
      return {
        delegatorAddress: "",
        validatorSrcAddress: "",
        validatorDstAddress: ""
      };
    }
    exports.DVVTriplet = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.delegatorAddress !== "") {
          writer.uint32(10).string(message.delegatorAddress);
        }
        if (message.validatorSrcAddress !== "") {
          writer.uint32(18).string(message.validatorSrcAddress);
        }
        if (message.validatorDstAddress !== "") {
          writer.uint32(26).string(message.validatorDstAddress);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseDVVTriplet();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.delegatorAddress = reader.string();
              break;
            case 2:
              message.validatorSrcAddress = reader.string();
              break;
            case 3:
              message.validatorDstAddress = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          delegatorAddress: (0, helpers_1.isSet)(object.delegatorAddress) ? String(object.delegatorAddress) : "",
          validatorSrcAddress: (0, helpers_1.isSet)(object.validatorSrcAddress) ? String(object.validatorSrcAddress) : "",
          validatorDstAddress: (0, helpers_1.isSet)(object.validatorDstAddress) ? String(object.validatorDstAddress) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.delegatorAddress !== void 0 && (obj.delegatorAddress = message.delegatorAddress);
        message.validatorSrcAddress !== void 0 && (obj.validatorSrcAddress = message.validatorSrcAddress);
        message.validatorDstAddress !== void 0 && (obj.validatorDstAddress = message.validatorDstAddress);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseDVVTriplet();
        message.delegatorAddress = object.delegatorAddress ?? "";
        message.validatorSrcAddress = object.validatorSrcAddress ?? "";
        message.validatorDstAddress = object.validatorDstAddress ?? "";
        return message;
      }
    };
    function createBaseDVVTriplets() {
      return {
        triplets: []
      };
    }
    exports.DVVTriplets = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.triplets) {
          exports.DVVTriplet.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseDVVTriplets();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.triplets.push(exports.DVVTriplet.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          triplets: Array.isArray(object == null ? void 0 : object.triplets) ? object.triplets.map((e2) => exports.DVVTriplet.fromJSON(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.triplets) {
          obj.triplets = message.triplets.map((e2) => e2 ? exports.DVVTriplet.toJSON(e2) : void 0);
        } else {
          obj.triplets = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseDVVTriplets();
        message.triplets = ((_a = object.triplets) == null ? void 0 : _a.map((e2) => exports.DVVTriplet.fromPartial(e2))) || [];
        return message;
      }
    };
    function createBaseDelegation() {
      return {
        delegatorAddress: "",
        validatorAddress: "",
        shares: ""
      };
    }
    exports.Delegation = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.delegatorAddress !== "") {
          writer.uint32(10).string(message.delegatorAddress);
        }
        if (message.validatorAddress !== "") {
          writer.uint32(18).string(message.validatorAddress);
        }
        if (message.shares !== "") {
          writer.uint32(26).string(message.shares);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseDelegation();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.delegatorAddress = reader.string();
              break;
            case 2:
              message.validatorAddress = reader.string();
              break;
            case 3:
              message.shares = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          delegatorAddress: (0, helpers_1.isSet)(object.delegatorAddress) ? String(object.delegatorAddress) : "",
          validatorAddress: (0, helpers_1.isSet)(object.validatorAddress) ? String(object.validatorAddress) : "",
          shares: (0, helpers_1.isSet)(object.shares) ? String(object.shares) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.delegatorAddress !== void 0 && (obj.delegatorAddress = message.delegatorAddress);
        message.validatorAddress !== void 0 && (obj.validatorAddress = message.validatorAddress);
        message.shares !== void 0 && (obj.shares = message.shares);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseDelegation();
        message.delegatorAddress = object.delegatorAddress ?? "";
        message.validatorAddress = object.validatorAddress ?? "";
        message.shares = object.shares ?? "";
        return message;
      }
    };
    function createBaseUnbondingDelegation() {
      return {
        delegatorAddress: "",
        validatorAddress: "",
        entries: []
      };
    }
    exports.UnbondingDelegation = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.delegatorAddress !== "") {
          writer.uint32(10).string(message.delegatorAddress);
        }
        if (message.validatorAddress !== "") {
          writer.uint32(18).string(message.validatorAddress);
        }
        for (const v3 of message.entries) {
          exports.UnbondingDelegationEntry.encode(v3, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseUnbondingDelegation();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.delegatorAddress = reader.string();
              break;
            case 2:
              message.validatorAddress = reader.string();
              break;
            case 3:
              message.entries.push(exports.UnbondingDelegationEntry.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          delegatorAddress: (0, helpers_1.isSet)(object.delegatorAddress) ? String(object.delegatorAddress) : "",
          validatorAddress: (0, helpers_1.isSet)(object.validatorAddress) ? String(object.validatorAddress) : "",
          entries: Array.isArray(object == null ? void 0 : object.entries) ? object.entries.map((e2) => exports.UnbondingDelegationEntry.fromJSON(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.delegatorAddress !== void 0 && (obj.delegatorAddress = message.delegatorAddress);
        message.validatorAddress !== void 0 && (obj.validatorAddress = message.validatorAddress);
        if (message.entries) {
          obj.entries = message.entries.map((e2) => e2 ? exports.UnbondingDelegationEntry.toJSON(e2) : void 0);
        } else {
          obj.entries = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseUnbondingDelegation();
        message.delegatorAddress = object.delegatorAddress ?? "";
        message.validatorAddress = object.validatorAddress ?? "";
        message.entries = ((_a = object.entries) == null ? void 0 : _a.map((e2) => exports.UnbondingDelegationEntry.fromPartial(e2))) || [];
        return message;
      }
    };
    function createBaseUnbondingDelegationEntry() {
      return {
        creationHeight: helpers_1.Long.ZERO,
        completionTime: void 0,
        initialBalance: "",
        balance: ""
      };
    }
    exports.UnbondingDelegationEntry = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.creationHeight.isZero()) {
          writer.uint32(8).int64(message.creationHeight);
        }
        if (message.completionTime !== void 0) {
          timestamp_1.Timestamp.encode(message.completionTime, writer.uint32(18).fork()).ldelim();
        }
        if (message.initialBalance !== "") {
          writer.uint32(26).string(message.initialBalance);
        }
        if (message.balance !== "") {
          writer.uint32(34).string(message.balance);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseUnbondingDelegationEntry();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.creationHeight = reader.int64();
              break;
            case 2:
              message.completionTime = timestamp_1.Timestamp.decode(reader, reader.uint32());
              break;
            case 3:
              message.initialBalance = reader.string();
              break;
            case 4:
              message.balance = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          creationHeight: (0, helpers_1.isSet)(object.creationHeight) ? helpers_1.Long.fromValue(object.creationHeight) : helpers_1.Long.ZERO,
          completionTime: (0, helpers_1.isSet)(object.completionTime) ? (0, helpers_1.fromJsonTimestamp)(object.completionTime) : void 0,
          initialBalance: (0, helpers_1.isSet)(object.initialBalance) ? String(object.initialBalance) : "",
          balance: (0, helpers_1.isSet)(object.balance) ? String(object.balance) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.creationHeight !== void 0 && (obj.creationHeight = (message.creationHeight || helpers_1.Long.ZERO).toString());
        message.completionTime !== void 0 && (obj.completionTime = (0, helpers_1.fromTimestamp)(message.completionTime).toISOString());
        message.initialBalance !== void 0 && (obj.initialBalance = message.initialBalance);
        message.balance !== void 0 && (obj.balance = message.balance);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseUnbondingDelegationEntry();
        message.creationHeight = object.creationHeight !== void 0 && object.creationHeight !== null ? helpers_1.Long.fromValue(object.creationHeight) : helpers_1.Long.ZERO;
        message.completionTime = object.completionTime !== void 0 && object.completionTime !== null ? timestamp_1.Timestamp.fromPartial(object.completionTime) : void 0;
        message.initialBalance = object.initialBalance ?? "";
        message.balance = object.balance ?? "";
        return message;
      }
    };
    function createBaseRedelegationEntry() {
      return {
        creationHeight: helpers_1.Long.ZERO,
        completionTime: void 0,
        initialBalance: "",
        sharesDst: ""
      };
    }
    exports.RedelegationEntry = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.creationHeight.isZero()) {
          writer.uint32(8).int64(message.creationHeight);
        }
        if (message.completionTime !== void 0) {
          timestamp_1.Timestamp.encode(message.completionTime, writer.uint32(18).fork()).ldelim();
        }
        if (message.initialBalance !== "") {
          writer.uint32(26).string(message.initialBalance);
        }
        if (message.sharesDst !== "") {
          writer.uint32(34).string(message.sharesDst);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseRedelegationEntry();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.creationHeight = reader.int64();
              break;
            case 2:
              message.completionTime = timestamp_1.Timestamp.decode(reader, reader.uint32());
              break;
            case 3:
              message.initialBalance = reader.string();
              break;
            case 4:
              message.sharesDst = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          creationHeight: (0, helpers_1.isSet)(object.creationHeight) ? helpers_1.Long.fromValue(object.creationHeight) : helpers_1.Long.ZERO,
          completionTime: (0, helpers_1.isSet)(object.completionTime) ? (0, helpers_1.fromJsonTimestamp)(object.completionTime) : void 0,
          initialBalance: (0, helpers_1.isSet)(object.initialBalance) ? String(object.initialBalance) : "",
          sharesDst: (0, helpers_1.isSet)(object.sharesDst) ? String(object.sharesDst) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.creationHeight !== void 0 && (obj.creationHeight = (message.creationHeight || helpers_1.Long.ZERO).toString());
        message.completionTime !== void 0 && (obj.completionTime = (0, helpers_1.fromTimestamp)(message.completionTime).toISOString());
        message.initialBalance !== void 0 && (obj.initialBalance = message.initialBalance);
        message.sharesDst !== void 0 && (obj.sharesDst = message.sharesDst);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseRedelegationEntry();
        message.creationHeight = object.creationHeight !== void 0 && object.creationHeight !== null ? helpers_1.Long.fromValue(object.creationHeight) : helpers_1.Long.ZERO;
        message.completionTime = object.completionTime !== void 0 && object.completionTime !== null ? timestamp_1.Timestamp.fromPartial(object.completionTime) : void 0;
        message.initialBalance = object.initialBalance ?? "";
        message.sharesDst = object.sharesDst ?? "";
        return message;
      }
    };
    function createBaseRedelegation() {
      return {
        delegatorAddress: "",
        validatorSrcAddress: "",
        validatorDstAddress: "",
        entries: []
      };
    }
    exports.Redelegation = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.delegatorAddress !== "") {
          writer.uint32(10).string(message.delegatorAddress);
        }
        if (message.validatorSrcAddress !== "") {
          writer.uint32(18).string(message.validatorSrcAddress);
        }
        if (message.validatorDstAddress !== "") {
          writer.uint32(26).string(message.validatorDstAddress);
        }
        for (const v3 of message.entries) {
          exports.RedelegationEntry.encode(v3, writer.uint32(34).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseRedelegation();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.delegatorAddress = reader.string();
              break;
            case 2:
              message.validatorSrcAddress = reader.string();
              break;
            case 3:
              message.validatorDstAddress = reader.string();
              break;
            case 4:
              message.entries.push(exports.RedelegationEntry.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          delegatorAddress: (0, helpers_1.isSet)(object.delegatorAddress) ? String(object.delegatorAddress) : "",
          validatorSrcAddress: (0, helpers_1.isSet)(object.validatorSrcAddress) ? String(object.validatorSrcAddress) : "",
          validatorDstAddress: (0, helpers_1.isSet)(object.validatorDstAddress) ? String(object.validatorDstAddress) : "",
          entries: Array.isArray(object == null ? void 0 : object.entries) ? object.entries.map((e2) => exports.RedelegationEntry.fromJSON(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.delegatorAddress !== void 0 && (obj.delegatorAddress = message.delegatorAddress);
        message.validatorSrcAddress !== void 0 && (obj.validatorSrcAddress = message.validatorSrcAddress);
        message.validatorDstAddress !== void 0 && (obj.validatorDstAddress = message.validatorDstAddress);
        if (message.entries) {
          obj.entries = message.entries.map((e2) => e2 ? exports.RedelegationEntry.toJSON(e2) : void 0);
        } else {
          obj.entries = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseRedelegation();
        message.delegatorAddress = object.delegatorAddress ?? "";
        message.validatorSrcAddress = object.validatorSrcAddress ?? "";
        message.validatorDstAddress = object.validatorDstAddress ?? "";
        message.entries = ((_a = object.entries) == null ? void 0 : _a.map((e2) => exports.RedelegationEntry.fromPartial(e2))) || [];
        return message;
      }
    };
    function createBaseParams() {
      return {
        unbondingTime: void 0,
        maxValidators: 0,
        maxEntries: 0,
        historicalEntries: 0,
        bondDenom: ""
      };
    }
    exports.Params = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.unbondingTime !== void 0) {
          duration_1.Duration.encode(message.unbondingTime, writer.uint32(10).fork()).ldelim();
        }
        if (message.maxValidators !== 0) {
          writer.uint32(16).uint32(message.maxValidators);
        }
        if (message.maxEntries !== 0) {
          writer.uint32(24).uint32(message.maxEntries);
        }
        if (message.historicalEntries !== 0) {
          writer.uint32(32).uint32(message.historicalEntries);
        }
        if (message.bondDenom !== "") {
          writer.uint32(42).string(message.bondDenom);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseParams();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.unbondingTime = duration_1.Duration.decode(reader, reader.uint32());
              break;
            case 2:
              message.maxValidators = reader.uint32();
              break;
            case 3:
              message.maxEntries = reader.uint32();
              break;
            case 4:
              message.historicalEntries = reader.uint32();
              break;
            case 5:
              message.bondDenom = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          unbondingTime: (0, helpers_1.isSet)(object.unbondingTime) ? duration_1.Duration.fromJSON(object.unbondingTime) : void 0,
          maxValidators: (0, helpers_1.isSet)(object.maxValidators) ? Number(object.maxValidators) : 0,
          maxEntries: (0, helpers_1.isSet)(object.maxEntries) ? Number(object.maxEntries) : 0,
          historicalEntries: (0, helpers_1.isSet)(object.historicalEntries) ? Number(object.historicalEntries) : 0,
          bondDenom: (0, helpers_1.isSet)(object.bondDenom) ? String(object.bondDenom) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.unbondingTime !== void 0 && (obj.unbondingTime = message.unbondingTime ? duration_1.Duration.toJSON(message.unbondingTime) : void 0);
        message.maxValidators !== void 0 && (obj.maxValidators = Math.round(message.maxValidators));
        message.maxEntries !== void 0 && (obj.maxEntries = Math.round(message.maxEntries));
        message.historicalEntries !== void 0 && (obj.historicalEntries = Math.round(message.historicalEntries));
        message.bondDenom !== void 0 && (obj.bondDenom = message.bondDenom);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseParams();
        message.unbondingTime = object.unbondingTime !== void 0 && object.unbondingTime !== null ? duration_1.Duration.fromPartial(object.unbondingTime) : void 0;
        message.maxValidators = object.maxValidators ?? 0;
        message.maxEntries = object.maxEntries ?? 0;
        message.historicalEntries = object.historicalEntries ?? 0;
        message.bondDenom = object.bondDenom ?? "";
        return message;
      }
    };
    function createBaseDelegationResponse() {
      return {
        delegation: void 0,
        balance: void 0
      };
    }
    exports.DelegationResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.delegation !== void 0) {
          exports.Delegation.encode(message.delegation, writer.uint32(10).fork()).ldelim();
        }
        if (message.balance !== void 0) {
          coin_1.Coin.encode(message.balance, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseDelegationResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.delegation = exports.Delegation.decode(reader, reader.uint32());
              break;
            case 2:
              message.balance = coin_1.Coin.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          delegation: (0, helpers_1.isSet)(object.delegation) ? exports.Delegation.fromJSON(object.delegation) : void 0,
          balance: (0, helpers_1.isSet)(object.balance) ? coin_1.Coin.fromJSON(object.balance) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.delegation !== void 0 && (obj.delegation = message.delegation ? exports.Delegation.toJSON(message.delegation) : void 0);
        message.balance !== void 0 && (obj.balance = message.balance ? coin_1.Coin.toJSON(message.balance) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseDelegationResponse();
        message.delegation = object.delegation !== void 0 && object.delegation !== null ? exports.Delegation.fromPartial(object.delegation) : void 0;
        message.balance = object.balance !== void 0 && object.balance !== null ? coin_1.Coin.fromPartial(object.balance) : void 0;
        return message;
      }
    };
    function createBaseRedelegationEntryResponse() {
      return {
        redelegationEntry: void 0,
        balance: ""
      };
    }
    exports.RedelegationEntryResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.redelegationEntry !== void 0) {
          exports.RedelegationEntry.encode(message.redelegationEntry, writer.uint32(10).fork()).ldelim();
        }
        if (message.balance !== "") {
          writer.uint32(34).string(message.balance);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseRedelegationEntryResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.redelegationEntry = exports.RedelegationEntry.decode(reader, reader.uint32());
              break;
            case 4:
              message.balance = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          redelegationEntry: (0, helpers_1.isSet)(object.redelegationEntry) ? exports.RedelegationEntry.fromJSON(object.redelegationEntry) : void 0,
          balance: (0, helpers_1.isSet)(object.balance) ? String(object.balance) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.redelegationEntry !== void 0 && (obj.redelegationEntry = message.redelegationEntry ? exports.RedelegationEntry.toJSON(message.redelegationEntry) : void 0);
        message.balance !== void 0 && (obj.balance = message.balance);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseRedelegationEntryResponse();
        message.redelegationEntry = object.redelegationEntry !== void 0 && object.redelegationEntry !== null ? exports.RedelegationEntry.fromPartial(object.redelegationEntry) : void 0;
        message.balance = object.balance ?? "";
        return message;
      }
    };
    function createBaseRedelegationResponse() {
      return {
        redelegation: void 0,
        entries: []
      };
    }
    exports.RedelegationResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.redelegation !== void 0) {
          exports.Redelegation.encode(message.redelegation, writer.uint32(10).fork()).ldelim();
        }
        for (const v3 of message.entries) {
          exports.RedelegationEntryResponse.encode(v3, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseRedelegationResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.redelegation = exports.Redelegation.decode(reader, reader.uint32());
              break;
            case 2:
              message.entries.push(exports.RedelegationEntryResponse.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          redelegation: (0, helpers_1.isSet)(object.redelegation) ? exports.Redelegation.fromJSON(object.redelegation) : void 0,
          entries: Array.isArray(object == null ? void 0 : object.entries) ? object.entries.map((e2) => exports.RedelegationEntryResponse.fromJSON(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.redelegation !== void 0 && (obj.redelegation = message.redelegation ? exports.Redelegation.toJSON(message.redelegation) : void 0);
        if (message.entries) {
          obj.entries = message.entries.map((e2) => e2 ? exports.RedelegationEntryResponse.toJSON(e2) : void 0);
        } else {
          obj.entries = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseRedelegationResponse();
        message.redelegation = object.redelegation !== void 0 && object.redelegation !== null ? exports.Redelegation.fromPartial(object.redelegation) : void 0;
        message.entries = ((_a = object.entries) == null ? void 0 : _a.map((e2) => exports.RedelegationEntryResponse.fromPartial(e2))) || [];
        return message;
      }
    };
    function createBasePool() {
      return {
        notBondedTokens: "",
        bondedTokens: ""
      };
    }
    exports.Pool = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.notBondedTokens !== "") {
          writer.uint32(10).string(message.notBondedTokens);
        }
        if (message.bondedTokens !== "") {
          writer.uint32(18).string(message.bondedTokens);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBasePool();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.notBondedTokens = reader.string();
              break;
            case 2:
              message.bondedTokens = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          notBondedTokens: (0, helpers_1.isSet)(object.notBondedTokens) ? String(object.notBondedTokens) : "",
          bondedTokens: (0, helpers_1.isSet)(object.bondedTokens) ? String(object.bondedTokens) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.notBondedTokens !== void 0 && (obj.notBondedTokens = message.notBondedTokens);
        message.bondedTokens !== void 0 && (obj.bondedTokens = message.bondedTokens);
        return obj;
      },
      fromPartial(object) {
        const message = createBasePool();
        message.notBondedTokens = object.notBondedTokens ?? "";
        message.bondedTokens = object.bondedTokens ?? "";
        return message;
      }
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/staking/v1beta1/tx.js
var require_tx11 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/staking/v1beta1/tx.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.MsgClientImpl = exports.MsgUndelegateResponse = exports.MsgUndelegate = exports.MsgBeginRedelegateResponse = exports.MsgBeginRedelegate = exports.MsgDelegateResponse = exports.MsgDelegate = exports.MsgEditValidatorResponse = exports.MsgEditValidator = exports.MsgCreateValidatorResponse = exports.MsgCreateValidator = exports.protobufPackage = void 0;
    var staking_1 = require_staking();
    var any_1 = require_any();
    var coin_1 = require_coin();
    var timestamp_1 = require_timestamp();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.staking.v1beta1";
    function createBaseMsgCreateValidator() {
      return {
        description: void 0,
        commission: void 0,
        minSelfDelegation: "",
        delegatorAddress: "",
        validatorAddress: "",
        pubkey: void 0,
        value: void 0
      };
    }
    exports.MsgCreateValidator = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.description !== void 0) {
          staking_1.Description.encode(message.description, writer.uint32(10).fork()).ldelim();
        }
        if (message.commission !== void 0) {
          staking_1.CommissionRates.encode(message.commission, writer.uint32(18).fork()).ldelim();
        }
        if (message.minSelfDelegation !== "") {
          writer.uint32(26).string(message.minSelfDelegation);
        }
        if (message.delegatorAddress !== "") {
          writer.uint32(34).string(message.delegatorAddress);
        }
        if (message.validatorAddress !== "") {
          writer.uint32(42).string(message.validatorAddress);
        }
        if (message.pubkey !== void 0) {
          any_1.Any.encode(message.pubkey, writer.uint32(50).fork()).ldelim();
        }
        if (message.value !== void 0) {
          coin_1.Coin.encode(message.value, writer.uint32(58).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgCreateValidator();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.description = staking_1.Description.decode(reader, reader.uint32());
              break;
            case 2:
              message.commission = staking_1.CommissionRates.decode(reader, reader.uint32());
              break;
            case 3:
              message.minSelfDelegation = reader.string();
              break;
            case 4:
              message.delegatorAddress = reader.string();
              break;
            case 5:
              message.validatorAddress = reader.string();
              break;
            case 6:
              message.pubkey = any_1.Any.decode(reader, reader.uint32());
              break;
            case 7:
              message.value = coin_1.Coin.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          description: (0, helpers_1.isSet)(object.description) ? staking_1.Description.fromJSON(object.description) : void 0,
          commission: (0, helpers_1.isSet)(object.commission) ? staking_1.CommissionRates.fromJSON(object.commission) : void 0,
          minSelfDelegation: (0, helpers_1.isSet)(object.minSelfDelegation) ? String(object.minSelfDelegation) : "",
          delegatorAddress: (0, helpers_1.isSet)(object.delegatorAddress) ? String(object.delegatorAddress) : "",
          validatorAddress: (0, helpers_1.isSet)(object.validatorAddress) ? String(object.validatorAddress) : "",
          pubkey: (0, helpers_1.isSet)(object.pubkey) ? any_1.Any.fromJSON(object.pubkey) : void 0,
          value: (0, helpers_1.isSet)(object.value) ? coin_1.Coin.fromJSON(object.value) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.description !== void 0 && (obj.description = message.description ? staking_1.Description.toJSON(message.description) : void 0);
        message.commission !== void 0 && (obj.commission = message.commission ? staking_1.CommissionRates.toJSON(message.commission) : void 0);
        message.minSelfDelegation !== void 0 && (obj.minSelfDelegation = message.minSelfDelegation);
        message.delegatorAddress !== void 0 && (obj.delegatorAddress = message.delegatorAddress);
        message.validatorAddress !== void 0 && (obj.validatorAddress = message.validatorAddress);
        message.pubkey !== void 0 && (obj.pubkey = message.pubkey ? any_1.Any.toJSON(message.pubkey) : void 0);
        message.value !== void 0 && (obj.value = message.value ? coin_1.Coin.toJSON(message.value) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgCreateValidator();
        message.description = object.description !== void 0 && object.description !== null ? staking_1.Description.fromPartial(object.description) : void 0;
        message.commission = object.commission !== void 0 && object.commission !== null ? staking_1.CommissionRates.fromPartial(object.commission) : void 0;
        message.minSelfDelegation = object.minSelfDelegation ?? "";
        message.delegatorAddress = object.delegatorAddress ?? "";
        message.validatorAddress = object.validatorAddress ?? "";
        message.pubkey = object.pubkey !== void 0 && object.pubkey !== null ? any_1.Any.fromPartial(object.pubkey) : void 0;
        message.value = object.value !== void 0 && object.value !== null ? coin_1.Coin.fromPartial(object.value) : void 0;
        return message;
      }
    };
    function createBaseMsgCreateValidatorResponse() {
      return {};
    }
    exports.MsgCreateValidatorResponse = {
      encode(_3, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgCreateValidatorResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_3) {
        return {};
      },
      toJSON(_3) {
        const obj = {};
        return obj;
      },
      fromPartial(_3) {
        const message = createBaseMsgCreateValidatorResponse();
        return message;
      }
    };
    function createBaseMsgEditValidator() {
      return {
        description: void 0,
        validatorAddress: "",
        commissionRate: "",
        minSelfDelegation: ""
      };
    }
    exports.MsgEditValidator = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.description !== void 0) {
          staking_1.Description.encode(message.description, writer.uint32(10).fork()).ldelim();
        }
        if (message.validatorAddress !== "") {
          writer.uint32(18).string(message.validatorAddress);
        }
        if (message.commissionRate !== "") {
          writer.uint32(26).string(message.commissionRate);
        }
        if (message.minSelfDelegation !== "") {
          writer.uint32(34).string(message.minSelfDelegation);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgEditValidator();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.description = staking_1.Description.decode(reader, reader.uint32());
              break;
            case 2:
              message.validatorAddress = reader.string();
              break;
            case 3:
              message.commissionRate = reader.string();
              break;
            case 4:
              message.minSelfDelegation = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          description: (0, helpers_1.isSet)(object.description) ? staking_1.Description.fromJSON(object.description) : void 0,
          validatorAddress: (0, helpers_1.isSet)(object.validatorAddress) ? String(object.validatorAddress) : "",
          commissionRate: (0, helpers_1.isSet)(object.commissionRate) ? String(object.commissionRate) : "",
          minSelfDelegation: (0, helpers_1.isSet)(object.minSelfDelegation) ? String(object.minSelfDelegation) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.description !== void 0 && (obj.description = message.description ? staking_1.Description.toJSON(message.description) : void 0);
        message.validatorAddress !== void 0 && (obj.validatorAddress = message.validatorAddress);
        message.commissionRate !== void 0 && (obj.commissionRate = message.commissionRate);
        message.minSelfDelegation !== void 0 && (obj.minSelfDelegation = message.minSelfDelegation);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgEditValidator();
        message.description = object.description !== void 0 && object.description !== null ? staking_1.Description.fromPartial(object.description) : void 0;
        message.validatorAddress = object.validatorAddress ?? "";
        message.commissionRate = object.commissionRate ?? "";
        message.minSelfDelegation = object.minSelfDelegation ?? "";
        return message;
      }
    };
    function createBaseMsgEditValidatorResponse() {
      return {};
    }
    exports.MsgEditValidatorResponse = {
      encode(_3, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgEditValidatorResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_3) {
        return {};
      },
      toJSON(_3) {
        const obj = {};
        return obj;
      },
      fromPartial(_3) {
        const message = createBaseMsgEditValidatorResponse();
        return message;
      }
    };
    function createBaseMsgDelegate() {
      return {
        delegatorAddress: "",
        validatorAddress: "",
        amount: void 0
      };
    }
    exports.MsgDelegate = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.delegatorAddress !== "") {
          writer.uint32(10).string(message.delegatorAddress);
        }
        if (message.validatorAddress !== "") {
          writer.uint32(18).string(message.validatorAddress);
        }
        if (message.amount !== void 0) {
          coin_1.Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgDelegate();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.delegatorAddress = reader.string();
              break;
            case 2:
              message.validatorAddress = reader.string();
              break;
            case 3:
              message.amount = coin_1.Coin.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          delegatorAddress: (0, helpers_1.isSet)(object.delegatorAddress) ? String(object.delegatorAddress) : "",
          validatorAddress: (0, helpers_1.isSet)(object.validatorAddress) ? String(object.validatorAddress) : "",
          amount: (0, helpers_1.isSet)(object.amount) ? coin_1.Coin.fromJSON(object.amount) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.delegatorAddress !== void 0 && (obj.delegatorAddress = message.delegatorAddress);
        message.validatorAddress !== void 0 && (obj.validatorAddress = message.validatorAddress);
        message.amount !== void 0 && (obj.amount = message.amount ? coin_1.Coin.toJSON(message.amount) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgDelegate();
        message.delegatorAddress = object.delegatorAddress ?? "";
        message.validatorAddress = object.validatorAddress ?? "";
        message.amount = object.amount !== void 0 && object.amount !== null ? coin_1.Coin.fromPartial(object.amount) : void 0;
        return message;
      }
    };
    function createBaseMsgDelegateResponse() {
      return {};
    }
    exports.MsgDelegateResponse = {
      encode(_3, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgDelegateResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_3) {
        return {};
      },
      toJSON(_3) {
        const obj = {};
        return obj;
      },
      fromPartial(_3) {
        const message = createBaseMsgDelegateResponse();
        return message;
      }
    };
    function createBaseMsgBeginRedelegate() {
      return {
        delegatorAddress: "",
        validatorSrcAddress: "",
        validatorDstAddress: "",
        amount: void 0
      };
    }
    exports.MsgBeginRedelegate = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.delegatorAddress !== "") {
          writer.uint32(10).string(message.delegatorAddress);
        }
        if (message.validatorSrcAddress !== "") {
          writer.uint32(18).string(message.validatorSrcAddress);
        }
        if (message.validatorDstAddress !== "") {
          writer.uint32(26).string(message.validatorDstAddress);
        }
        if (message.amount !== void 0) {
          coin_1.Coin.encode(message.amount, writer.uint32(34).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgBeginRedelegate();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.delegatorAddress = reader.string();
              break;
            case 2:
              message.validatorSrcAddress = reader.string();
              break;
            case 3:
              message.validatorDstAddress = reader.string();
              break;
            case 4:
              message.amount = coin_1.Coin.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          delegatorAddress: (0, helpers_1.isSet)(object.delegatorAddress) ? String(object.delegatorAddress) : "",
          validatorSrcAddress: (0, helpers_1.isSet)(object.validatorSrcAddress) ? String(object.validatorSrcAddress) : "",
          validatorDstAddress: (0, helpers_1.isSet)(object.validatorDstAddress) ? String(object.validatorDstAddress) : "",
          amount: (0, helpers_1.isSet)(object.amount) ? coin_1.Coin.fromJSON(object.amount) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.delegatorAddress !== void 0 && (obj.delegatorAddress = message.delegatorAddress);
        message.validatorSrcAddress !== void 0 && (obj.validatorSrcAddress = message.validatorSrcAddress);
        message.validatorDstAddress !== void 0 && (obj.validatorDstAddress = message.validatorDstAddress);
        message.amount !== void 0 && (obj.amount = message.amount ? coin_1.Coin.toJSON(message.amount) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgBeginRedelegate();
        message.delegatorAddress = object.delegatorAddress ?? "";
        message.validatorSrcAddress = object.validatorSrcAddress ?? "";
        message.validatorDstAddress = object.validatorDstAddress ?? "";
        message.amount = object.amount !== void 0 && object.amount !== null ? coin_1.Coin.fromPartial(object.amount) : void 0;
        return message;
      }
    };
    function createBaseMsgBeginRedelegateResponse() {
      return {
        completionTime: void 0
      };
    }
    exports.MsgBeginRedelegateResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.completionTime !== void 0) {
          timestamp_1.Timestamp.encode(message.completionTime, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgBeginRedelegateResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.completionTime = timestamp_1.Timestamp.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          completionTime: (0, helpers_1.isSet)(object.completionTime) ? (0, helpers_1.fromJsonTimestamp)(object.completionTime) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.completionTime !== void 0 && (obj.completionTime = (0, helpers_1.fromTimestamp)(message.completionTime).toISOString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgBeginRedelegateResponse();
        message.completionTime = object.completionTime !== void 0 && object.completionTime !== null ? timestamp_1.Timestamp.fromPartial(object.completionTime) : void 0;
        return message;
      }
    };
    function createBaseMsgUndelegate() {
      return {
        delegatorAddress: "",
        validatorAddress: "",
        amount: void 0
      };
    }
    exports.MsgUndelegate = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.delegatorAddress !== "") {
          writer.uint32(10).string(message.delegatorAddress);
        }
        if (message.validatorAddress !== "") {
          writer.uint32(18).string(message.validatorAddress);
        }
        if (message.amount !== void 0) {
          coin_1.Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgUndelegate();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.delegatorAddress = reader.string();
              break;
            case 2:
              message.validatorAddress = reader.string();
              break;
            case 3:
              message.amount = coin_1.Coin.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          delegatorAddress: (0, helpers_1.isSet)(object.delegatorAddress) ? String(object.delegatorAddress) : "",
          validatorAddress: (0, helpers_1.isSet)(object.validatorAddress) ? String(object.validatorAddress) : "",
          amount: (0, helpers_1.isSet)(object.amount) ? coin_1.Coin.fromJSON(object.amount) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.delegatorAddress !== void 0 && (obj.delegatorAddress = message.delegatorAddress);
        message.validatorAddress !== void 0 && (obj.validatorAddress = message.validatorAddress);
        message.amount !== void 0 && (obj.amount = message.amount ? coin_1.Coin.toJSON(message.amount) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgUndelegate();
        message.delegatorAddress = object.delegatorAddress ?? "";
        message.validatorAddress = object.validatorAddress ?? "";
        message.amount = object.amount !== void 0 && object.amount !== null ? coin_1.Coin.fromPartial(object.amount) : void 0;
        return message;
      }
    };
    function createBaseMsgUndelegateResponse() {
      return {
        completionTime: void 0
      };
    }
    exports.MsgUndelegateResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.completionTime !== void 0) {
          timestamp_1.Timestamp.encode(message.completionTime, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgUndelegateResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.completionTime = timestamp_1.Timestamp.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          completionTime: (0, helpers_1.isSet)(object.completionTime) ? (0, helpers_1.fromJsonTimestamp)(object.completionTime) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.completionTime !== void 0 && (obj.completionTime = (0, helpers_1.fromTimestamp)(message.completionTime).toISOString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgUndelegateResponse();
        message.completionTime = object.completionTime !== void 0 && object.completionTime !== null ? timestamp_1.Timestamp.fromPartial(object.completionTime) : void 0;
        return message;
      }
    };
    var MsgClientImpl = class {
      constructor(rpc) {
        this.rpc = rpc;
        this.CreateValidator = this.CreateValidator.bind(this);
        this.EditValidator = this.EditValidator.bind(this);
        this.Delegate = this.Delegate.bind(this);
        this.BeginRedelegate = this.BeginRedelegate.bind(this);
        this.Undelegate = this.Undelegate.bind(this);
      }
      CreateValidator(request) {
        const data = exports.MsgCreateValidator.encode(request).finish();
        const promise = this.rpc.request("cosmos.staking.v1beta1.Msg", "CreateValidator", data);
        return promise.then((data2) => exports.MsgCreateValidatorResponse.decode(new _m0.Reader(data2)));
      }
      EditValidator(request) {
        const data = exports.MsgEditValidator.encode(request).finish();
        const promise = this.rpc.request("cosmos.staking.v1beta1.Msg", "EditValidator", data);
        return promise.then((data2) => exports.MsgEditValidatorResponse.decode(new _m0.Reader(data2)));
      }
      Delegate(request) {
        const data = exports.MsgDelegate.encode(request).finish();
        const promise = this.rpc.request("cosmos.staking.v1beta1.Msg", "Delegate", data);
        return promise.then((data2) => exports.MsgDelegateResponse.decode(new _m0.Reader(data2)));
      }
      BeginRedelegate(request) {
        const data = exports.MsgBeginRedelegate.encode(request).finish();
        const promise = this.rpc.request("cosmos.staking.v1beta1.Msg", "BeginRedelegate", data);
        return promise.then((data2) => exports.MsgBeginRedelegateResponse.decode(new _m0.Reader(data2)));
      }
      Undelegate(request) {
        const data = exports.MsgUndelegate.encode(request).finish();
        const promise = this.rpc.request("cosmos.staking.v1beta1.Msg", "Undelegate", data);
        return promise.then((data2) => exports.MsgUndelegateResponse.decode(new _m0.Reader(data2)));
      }
    };
    exports.MsgClientImpl = MsgClientImpl;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/staking/messages.js
var require_messages7 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/staking/messages.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isMsgUndelegateEncodeObject = exports.isMsgEditValidatorEncodeObject = exports.isMsgDelegateEncodeObject = exports.isMsgCreateValidatorEncodeObject = exports.isMsgBeginRedelegateEncodeObject = exports.stakingTypes = void 0;
    var tx_1 = require_tx11();
    exports.stakingTypes = [
      ["/cosmos.staking.v1beta1.MsgBeginRedelegate", tx_1.MsgBeginRedelegate],
      ["/cosmos.staking.v1beta1.MsgCreateValidator", tx_1.MsgCreateValidator],
      ["/cosmos.staking.v1beta1.MsgDelegate", tx_1.MsgDelegate],
      ["/cosmos.staking.v1beta1.MsgEditValidator", tx_1.MsgEditValidator],
      ["/cosmos.staking.v1beta1.MsgUndelegate", tx_1.MsgUndelegate]
    ];
    function isMsgBeginRedelegateEncodeObject(o2) {
      return o2.typeUrl === "/cosmos.staking.v1beta1.MsgBeginRedelegate";
    }
    exports.isMsgBeginRedelegateEncodeObject = isMsgBeginRedelegateEncodeObject;
    function isMsgCreateValidatorEncodeObject(o2) {
      return o2.typeUrl === "/cosmos.staking.v1beta1.MsgCreateValidator";
    }
    exports.isMsgCreateValidatorEncodeObject = isMsgCreateValidatorEncodeObject;
    function isMsgDelegateEncodeObject(object) {
      return object.typeUrl === "/cosmos.staking.v1beta1.MsgDelegate";
    }
    exports.isMsgDelegateEncodeObject = isMsgDelegateEncodeObject;
    function isMsgEditValidatorEncodeObject(o2) {
      return o2.typeUrl === "/cosmos.staking.v1beta1.MsgEditValidator";
    }
    exports.isMsgEditValidatorEncodeObject = isMsgEditValidatorEncodeObject;
    function isMsgUndelegateEncodeObject(object) {
      return object.typeUrl === "/cosmos.staking.v1beta1.MsgUndelegate";
    }
    exports.isMsgUndelegateEncodeObject = isMsgUndelegateEncodeObject;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/staking/v1beta1/query.js
var require_query13 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/staking/v1beta1/query.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.QueryClientImpl = exports.QueryParamsResponse = exports.QueryParamsRequest = exports.QueryPoolResponse = exports.QueryPoolRequest = exports.QueryHistoricalInfoResponse = exports.QueryHistoricalInfoRequest = exports.QueryDelegatorValidatorResponse = exports.QueryDelegatorValidatorRequest = exports.QueryDelegatorValidatorsResponse = exports.QueryDelegatorValidatorsRequest = exports.QueryRedelegationsResponse = exports.QueryRedelegationsRequest = exports.QueryDelegatorUnbondingDelegationsResponse = exports.QueryDelegatorUnbondingDelegationsRequest = exports.QueryDelegatorDelegationsResponse = exports.QueryDelegatorDelegationsRequest = exports.QueryUnbondingDelegationResponse = exports.QueryUnbondingDelegationRequest = exports.QueryDelegationResponse = exports.QueryDelegationRequest = exports.QueryValidatorUnbondingDelegationsResponse = exports.QueryValidatorUnbondingDelegationsRequest = exports.QueryValidatorDelegationsResponse = exports.QueryValidatorDelegationsRequest = exports.QueryValidatorResponse = exports.QueryValidatorRequest = exports.QueryValidatorsResponse = exports.QueryValidatorsRequest = exports.protobufPackage = void 0;
    var pagination_1 = require_pagination();
    var staking_1 = require_staking();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.staking.v1beta1";
    function createBaseQueryValidatorsRequest() {
      return {
        status: "",
        pagination: void 0
      };
    }
    exports.QueryValidatorsRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.status !== "") {
          writer.uint32(10).string(message.status);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryValidatorsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.status = reader.string();
              break;
            case 2:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          status: (0, helpers_1.isSet)(object.status) ? String(object.status) : "",
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.status !== void 0 && (obj.status = message.status);
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryValidatorsRequest();
        message.status = object.status ?? "";
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryValidatorsResponse() {
      return {
        validators: [],
        pagination: void 0
      };
    }
    exports.QueryValidatorsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.validators) {
          staking_1.Validator.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryValidatorsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.validators.push(staking_1.Validator.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          validators: Array.isArray(object == null ? void 0 : object.validators) ? object.validators.map((e2) => staking_1.Validator.fromJSON(e2)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.validators) {
          obj.validators = message.validators.map((e2) => e2 ? staking_1.Validator.toJSON(e2) : void 0);
        } else {
          obj.validators = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryValidatorsResponse();
        message.validators = ((_a = object.validators) == null ? void 0 : _a.map((e2) => staking_1.Validator.fromPartial(e2))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryValidatorRequest() {
      return {
        validatorAddr: ""
      };
    }
    exports.QueryValidatorRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.validatorAddr !== "") {
          writer.uint32(10).string(message.validatorAddr);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryValidatorRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.validatorAddr = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          validatorAddr: (0, helpers_1.isSet)(object.validatorAddr) ? String(object.validatorAddr) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.validatorAddr !== void 0 && (obj.validatorAddr = message.validatorAddr);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryValidatorRequest();
        message.validatorAddr = object.validatorAddr ?? "";
        return message;
      }
    };
    function createBaseQueryValidatorResponse() {
      return {
        validator: void 0
      };
    }
    exports.QueryValidatorResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.validator !== void 0) {
          staking_1.Validator.encode(message.validator, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryValidatorResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.validator = staking_1.Validator.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          validator: (0, helpers_1.isSet)(object.validator) ? staking_1.Validator.fromJSON(object.validator) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.validator !== void 0 && (obj.validator = message.validator ? staking_1.Validator.toJSON(message.validator) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryValidatorResponse();
        message.validator = object.validator !== void 0 && object.validator !== null ? staking_1.Validator.fromPartial(object.validator) : void 0;
        return message;
      }
    };
    function createBaseQueryValidatorDelegationsRequest() {
      return {
        validatorAddr: "",
        pagination: void 0
      };
    }
    exports.QueryValidatorDelegationsRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.validatorAddr !== "") {
          writer.uint32(10).string(message.validatorAddr);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryValidatorDelegationsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.validatorAddr = reader.string();
              break;
            case 2:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          validatorAddr: (0, helpers_1.isSet)(object.validatorAddr) ? String(object.validatorAddr) : "",
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.validatorAddr !== void 0 && (obj.validatorAddr = message.validatorAddr);
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryValidatorDelegationsRequest();
        message.validatorAddr = object.validatorAddr ?? "";
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryValidatorDelegationsResponse() {
      return {
        delegationResponses: [],
        pagination: void 0
      };
    }
    exports.QueryValidatorDelegationsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.delegationResponses) {
          staking_1.DelegationResponse.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryValidatorDelegationsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.delegationResponses.push(staking_1.DelegationResponse.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          delegationResponses: Array.isArray(object == null ? void 0 : object.delegationResponses) ? object.delegationResponses.map((e2) => staking_1.DelegationResponse.fromJSON(e2)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.delegationResponses) {
          obj.delegationResponses = message.delegationResponses.map((e2) => e2 ? staking_1.DelegationResponse.toJSON(e2) : void 0);
        } else {
          obj.delegationResponses = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryValidatorDelegationsResponse();
        message.delegationResponses = ((_a = object.delegationResponses) == null ? void 0 : _a.map((e2) => staking_1.DelegationResponse.fromPartial(e2))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryValidatorUnbondingDelegationsRequest() {
      return {
        validatorAddr: "",
        pagination: void 0
      };
    }
    exports.QueryValidatorUnbondingDelegationsRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.validatorAddr !== "") {
          writer.uint32(10).string(message.validatorAddr);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryValidatorUnbondingDelegationsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.validatorAddr = reader.string();
              break;
            case 2:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          validatorAddr: (0, helpers_1.isSet)(object.validatorAddr) ? String(object.validatorAddr) : "",
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.validatorAddr !== void 0 && (obj.validatorAddr = message.validatorAddr);
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryValidatorUnbondingDelegationsRequest();
        message.validatorAddr = object.validatorAddr ?? "";
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryValidatorUnbondingDelegationsResponse() {
      return {
        unbondingResponses: [],
        pagination: void 0
      };
    }
    exports.QueryValidatorUnbondingDelegationsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.unbondingResponses) {
          staking_1.UnbondingDelegation.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryValidatorUnbondingDelegationsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.unbondingResponses.push(staking_1.UnbondingDelegation.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          unbondingResponses: Array.isArray(object == null ? void 0 : object.unbondingResponses) ? object.unbondingResponses.map((e2) => staking_1.UnbondingDelegation.fromJSON(e2)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.unbondingResponses) {
          obj.unbondingResponses = message.unbondingResponses.map((e2) => e2 ? staking_1.UnbondingDelegation.toJSON(e2) : void 0);
        } else {
          obj.unbondingResponses = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryValidatorUnbondingDelegationsResponse();
        message.unbondingResponses = ((_a = object.unbondingResponses) == null ? void 0 : _a.map((e2) => staking_1.UnbondingDelegation.fromPartial(e2))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryDelegationRequest() {
      return {
        delegatorAddr: "",
        validatorAddr: ""
      };
    }
    exports.QueryDelegationRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.delegatorAddr !== "") {
          writer.uint32(10).string(message.delegatorAddr);
        }
        if (message.validatorAddr !== "") {
          writer.uint32(18).string(message.validatorAddr);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDelegationRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.delegatorAddr = reader.string();
              break;
            case 2:
              message.validatorAddr = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          delegatorAddr: (0, helpers_1.isSet)(object.delegatorAddr) ? String(object.delegatorAddr) : "",
          validatorAddr: (0, helpers_1.isSet)(object.validatorAddr) ? String(object.validatorAddr) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.delegatorAddr !== void 0 && (obj.delegatorAddr = message.delegatorAddr);
        message.validatorAddr !== void 0 && (obj.validatorAddr = message.validatorAddr);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryDelegationRequest();
        message.delegatorAddr = object.delegatorAddr ?? "";
        message.validatorAddr = object.validatorAddr ?? "";
        return message;
      }
    };
    function createBaseQueryDelegationResponse() {
      return {
        delegationResponse: void 0
      };
    }
    exports.QueryDelegationResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.delegationResponse !== void 0) {
          staking_1.DelegationResponse.encode(message.delegationResponse, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDelegationResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.delegationResponse = staking_1.DelegationResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          delegationResponse: (0, helpers_1.isSet)(object.delegationResponse) ? staking_1.DelegationResponse.fromJSON(object.delegationResponse) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.delegationResponse !== void 0 && (obj.delegationResponse = message.delegationResponse ? staking_1.DelegationResponse.toJSON(message.delegationResponse) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryDelegationResponse();
        message.delegationResponse = object.delegationResponse !== void 0 && object.delegationResponse !== null ? staking_1.DelegationResponse.fromPartial(object.delegationResponse) : void 0;
        return message;
      }
    };
    function createBaseQueryUnbondingDelegationRequest() {
      return {
        delegatorAddr: "",
        validatorAddr: ""
      };
    }
    exports.QueryUnbondingDelegationRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.delegatorAddr !== "") {
          writer.uint32(10).string(message.delegatorAddr);
        }
        if (message.validatorAddr !== "") {
          writer.uint32(18).string(message.validatorAddr);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryUnbondingDelegationRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.delegatorAddr = reader.string();
              break;
            case 2:
              message.validatorAddr = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          delegatorAddr: (0, helpers_1.isSet)(object.delegatorAddr) ? String(object.delegatorAddr) : "",
          validatorAddr: (0, helpers_1.isSet)(object.validatorAddr) ? String(object.validatorAddr) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.delegatorAddr !== void 0 && (obj.delegatorAddr = message.delegatorAddr);
        message.validatorAddr !== void 0 && (obj.validatorAddr = message.validatorAddr);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryUnbondingDelegationRequest();
        message.delegatorAddr = object.delegatorAddr ?? "";
        message.validatorAddr = object.validatorAddr ?? "";
        return message;
      }
    };
    function createBaseQueryUnbondingDelegationResponse() {
      return {
        unbond: void 0
      };
    }
    exports.QueryUnbondingDelegationResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.unbond !== void 0) {
          staking_1.UnbondingDelegation.encode(message.unbond, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryUnbondingDelegationResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.unbond = staking_1.UnbondingDelegation.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          unbond: (0, helpers_1.isSet)(object.unbond) ? staking_1.UnbondingDelegation.fromJSON(object.unbond) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.unbond !== void 0 && (obj.unbond = message.unbond ? staking_1.UnbondingDelegation.toJSON(message.unbond) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryUnbondingDelegationResponse();
        message.unbond = object.unbond !== void 0 && object.unbond !== null ? staking_1.UnbondingDelegation.fromPartial(object.unbond) : void 0;
        return message;
      }
    };
    function createBaseQueryDelegatorDelegationsRequest() {
      return {
        delegatorAddr: "",
        pagination: void 0
      };
    }
    exports.QueryDelegatorDelegationsRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.delegatorAddr !== "") {
          writer.uint32(10).string(message.delegatorAddr);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDelegatorDelegationsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.delegatorAddr = reader.string();
              break;
            case 2:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          delegatorAddr: (0, helpers_1.isSet)(object.delegatorAddr) ? String(object.delegatorAddr) : "",
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.delegatorAddr !== void 0 && (obj.delegatorAddr = message.delegatorAddr);
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryDelegatorDelegationsRequest();
        message.delegatorAddr = object.delegatorAddr ?? "";
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryDelegatorDelegationsResponse() {
      return {
        delegationResponses: [],
        pagination: void 0
      };
    }
    exports.QueryDelegatorDelegationsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.delegationResponses) {
          staking_1.DelegationResponse.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDelegatorDelegationsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.delegationResponses.push(staking_1.DelegationResponse.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          delegationResponses: Array.isArray(object == null ? void 0 : object.delegationResponses) ? object.delegationResponses.map((e2) => staking_1.DelegationResponse.fromJSON(e2)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.delegationResponses) {
          obj.delegationResponses = message.delegationResponses.map((e2) => e2 ? staking_1.DelegationResponse.toJSON(e2) : void 0);
        } else {
          obj.delegationResponses = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryDelegatorDelegationsResponse();
        message.delegationResponses = ((_a = object.delegationResponses) == null ? void 0 : _a.map((e2) => staking_1.DelegationResponse.fromPartial(e2))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryDelegatorUnbondingDelegationsRequest() {
      return {
        delegatorAddr: "",
        pagination: void 0
      };
    }
    exports.QueryDelegatorUnbondingDelegationsRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.delegatorAddr !== "") {
          writer.uint32(10).string(message.delegatorAddr);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDelegatorUnbondingDelegationsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.delegatorAddr = reader.string();
              break;
            case 2:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          delegatorAddr: (0, helpers_1.isSet)(object.delegatorAddr) ? String(object.delegatorAddr) : "",
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.delegatorAddr !== void 0 && (obj.delegatorAddr = message.delegatorAddr);
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryDelegatorUnbondingDelegationsRequest();
        message.delegatorAddr = object.delegatorAddr ?? "";
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryDelegatorUnbondingDelegationsResponse() {
      return {
        unbondingResponses: [],
        pagination: void 0
      };
    }
    exports.QueryDelegatorUnbondingDelegationsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.unbondingResponses) {
          staking_1.UnbondingDelegation.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDelegatorUnbondingDelegationsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.unbondingResponses.push(staking_1.UnbondingDelegation.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          unbondingResponses: Array.isArray(object == null ? void 0 : object.unbondingResponses) ? object.unbondingResponses.map((e2) => staking_1.UnbondingDelegation.fromJSON(e2)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.unbondingResponses) {
          obj.unbondingResponses = message.unbondingResponses.map((e2) => e2 ? staking_1.UnbondingDelegation.toJSON(e2) : void 0);
        } else {
          obj.unbondingResponses = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryDelegatorUnbondingDelegationsResponse();
        message.unbondingResponses = ((_a = object.unbondingResponses) == null ? void 0 : _a.map((e2) => staking_1.UnbondingDelegation.fromPartial(e2))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryRedelegationsRequest() {
      return {
        delegatorAddr: "",
        srcValidatorAddr: "",
        dstValidatorAddr: "",
        pagination: void 0
      };
    }
    exports.QueryRedelegationsRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.delegatorAddr !== "") {
          writer.uint32(10).string(message.delegatorAddr);
        }
        if (message.srcValidatorAddr !== "") {
          writer.uint32(18).string(message.srcValidatorAddr);
        }
        if (message.dstValidatorAddr !== "") {
          writer.uint32(26).string(message.dstValidatorAddr);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(34).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryRedelegationsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.delegatorAddr = reader.string();
              break;
            case 2:
              message.srcValidatorAddr = reader.string();
              break;
            case 3:
              message.dstValidatorAddr = reader.string();
              break;
            case 4:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          delegatorAddr: (0, helpers_1.isSet)(object.delegatorAddr) ? String(object.delegatorAddr) : "",
          srcValidatorAddr: (0, helpers_1.isSet)(object.srcValidatorAddr) ? String(object.srcValidatorAddr) : "",
          dstValidatorAddr: (0, helpers_1.isSet)(object.dstValidatorAddr) ? String(object.dstValidatorAddr) : "",
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.delegatorAddr !== void 0 && (obj.delegatorAddr = message.delegatorAddr);
        message.srcValidatorAddr !== void 0 && (obj.srcValidatorAddr = message.srcValidatorAddr);
        message.dstValidatorAddr !== void 0 && (obj.dstValidatorAddr = message.dstValidatorAddr);
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryRedelegationsRequest();
        message.delegatorAddr = object.delegatorAddr ?? "";
        message.srcValidatorAddr = object.srcValidatorAddr ?? "";
        message.dstValidatorAddr = object.dstValidatorAddr ?? "";
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryRedelegationsResponse() {
      return {
        redelegationResponses: [],
        pagination: void 0
      };
    }
    exports.QueryRedelegationsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.redelegationResponses) {
          staking_1.RedelegationResponse.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryRedelegationsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.redelegationResponses.push(staking_1.RedelegationResponse.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          redelegationResponses: Array.isArray(object == null ? void 0 : object.redelegationResponses) ? object.redelegationResponses.map((e2) => staking_1.RedelegationResponse.fromJSON(e2)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.redelegationResponses) {
          obj.redelegationResponses = message.redelegationResponses.map((e2) => e2 ? staking_1.RedelegationResponse.toJSON(e2) : void 0);
        } else {
          obj.redelegationResponses = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryRedelegationsResponse();
        message.redelegationResponses = ((_a = object.redelegationResponses) == null ? void 0 : _a.map((e2) => staking_1.RedelegationResponse.fromPartial(e2))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryDelegatorValidatorsRequest() {
      return {
        delegatorAddr: "",
        pagination: void 0
      };
    }
    exports.QueryDelegatorValidatorsRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.delegatorAddr !== "") {
          writer.uint32(10).string(message.delegatorAddr);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDelegatorValidatorsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.delegatorAddr = reader.string();
              break;
            case 2:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          delegatorAddr: (0, helpers_1.isSet)(object.delegatorAddr) ? String(object.delegatorAddr) : "",
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.delegatorAddr !== void 0 && (obj.delegatorAddr = message.delegatorAddr);
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryDelegatorValidatorsRequest();
        message.delegatorAddr = object.delegatorAddr ?? "";
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryDelegatorValidatorsResponse() {
      return {
        validators: [],
        pagination: void 0
      };
    }
    exports.QueryDelegatorValidatorsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.validators) {
          staking_1.Validator.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDelegatorValidatorsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.validators.push(staking_1.Validator.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          validators: Array.isArray(object == null ? void 0 : object.validators) ? object.validators.map((e2) => staking_1.Validator.fromJSON(e2)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.validators) {
          obj.validators = message.validators.map((e2) => e2 ? staking_1.Validator.toJSON(e2) : void 0);
        } else {
          obj.validators = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryDelegatorValidatorsResponse();
        message.validators = ((_a = object.validators) == null ? void 0 : _a.map((e2) => staking_1.Validator.fromPartial(e2))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryDelegatorValidatorRequest() {
      return {
        delegatorAddr: "",
        validatorAddr: ""
      };
    }
    exports.QueryDelegatorValidatorRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.delegatorAddr !== "") {
          writer.uint32(10).string(message.delegatorAddr);
        }
        if (message.validatorAddr !== "") {
          writer.uint32(18).string(message.validatorAddr);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDelegatorValidatorRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.delegatorAddr = reader.string();
              break;
            case 2:
              message.validatorAddr = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          delegatorAddr: (0, helpers_1.isSet)(object.delegatorAddr) ? String(object.delegatorAddr) : "",
          validatorAddr: (0, helpers_1.isSet)(object.validatorAddr) ? String(object.validatorAddr) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.delegatorAddr !== void 0 && (obj.delegatorAddr = message.delegatorAddr);
        message.validatorAddr !== void 0 && (obj.validatorAddr = message.validatorAddr);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryDelegatorValidatorRequest();
        message.delegatorAddr = object.delegatorAddr ?? "";
        message.validatorAddr = object.validatorAddr ?? "";
        return message;
      }
    };
    function createBaseQueryDelegatorValidatorResponse() {
      return {
        validator: void 0
      };
    }
    exports.QueryDelegatorValidatorResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.validator !== void 0) {
          staking_1.Validator.encode(message.validator, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryDelegatorValidatorResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.validator = staking_1.Validator.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          validator: (0, helpers_1.isSet)(object.validator) ? staking_1.Validator.fromJSON(object.validator) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.validator !== void 0 && (obj.validator = message.validator ? staking_1.Validator.toJSON(message.validator) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryDelegatorValidatorResponse();
        message.validator = object.validator !== void 0 && object.validator !== null ? staking_1.Validator.fromPartial(object.validator) : void 0;
        return message;
      }
    };
    function createBaseQueryHistoricalInfoRequest() {
      return {
        height: helpers_1.Long.ZERO
      };
    }
    exports.QueryHistoricalInfoRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.height.isZero()) {
          writer.uint32(8).int64(message.height);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryHistoricalInfoRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.height = reader.int64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          height: (0, helpers_1.isSet)(object.height) ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.ZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.height !== void 0 && (obj.height = (message.height || helpers_1.Long.ZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryHistoricalInfoRequest();
        message.height = object.height !== void 0 && object.height !== null ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.ZERO;
        return message;
      }
    };
    function createBaseQueryHistoricalInfoResponse() {
      return {
        hist: void 0
      };
    }
    exports.QueryHistoricalInfoResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.hist !== void 0) {
          staking_1.HistoricalInfo.encode(message.hist, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryHistoricalInfoResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.hist = staking_1.HistoricalInfo.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          hist: (0, helpers_1.isSet)(object.hist) ? staking_1.HistoricalInfo.fromJSON(object.hist) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.hist !== void 0 && (obj.hist = message.hist ? staking_1.HistoricalInfo.toJSON(message.hist) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryHistoricalInfoResponse();
        message.hist = object.hist !== void 0 && object.hist !== null ? staking_1.HistoricalInfo.fromPartial(object.hist) : void 0;
        return message;
      }
    };
    function createBaseQueryPoolRequest() {
      return {};
    }
    exports.QueryPoolRequest = {
      encode(_3, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryPoolRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_3) {
        return {};
      },
      toJSON(_3) {
        const obj = {};
        return obj;
      },
      fromPartial(_3) {
        const message = createBaseQueryPoolRequest();
        return message;
      }
    };
    function createBaseQueryPoolResponse() {
      return {
        pool: void 0
      };
    }
    exports.QueryPoolResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.pool !== void 0) {
          staking_1.Pool.encode(message.pool, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryPoolResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.pool = staking_1.Pool.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          pool: (0, helpers_1.isSet)(object.pool) ? staking_1.Pool.fromJSON(object.pool) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.pool !== void 0 && (obj.pool = message.pool ? staking_1.Pool.toJSON(message.pool) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryPoolResponse();
        message.pool = object.pool !== void 0 && object.pool !== null ? staking_1.Pool.fromPartial(object.pool) : void 0;
        return message;
      }
    };
    function createBaseQueryParamsRequest() {
      return {};
    }
    exports.QueryParamsRequest = {
      encode(_3, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryParamsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_3) {
        return {};
      },
      toJSON(_3) {
        const obj = {};
        return obj;
      },
      fromPartial(_3) {
        const message = createBaseQueryParamsRequest();
        return message;
      }
    };
    function createBaseQueryParamsResponse() {
      return {
        params: void 0
      };
    }
    exports.QueryParamsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.params !== void 0) {
          staking_1.Params.encode(message.params, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryParamsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.params = staking_1.Params.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          params: (0, helpers_1.isSet)(object.params) ? staking_1.Params.fromJSON(object.params) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.params !== void 0 && (obj.params = message.params ? staking_1.Params.toJSON(message.params) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryParamsResponse();
        message.params = object.params !== void 0 && object.params !== null ? staking_1.Params.fromPartial(object.params) : void 0;
        return message;
      }
    };
    var QueryClientImpl = class {
      constructor(rpc) {
        this.rpc = rpc;
        this.Validators = this.Validators.bind(this);
        this.Validator = this.Validator.bind(this);
        this.ValidatorDelegations = this.ValidatorDelegations.bind(this);
        this.ValidatorUnbondingDelegations = this.ValidatorUnbondingDelegations.bind(this);
        this.Delegation = this.Delegation.bind(this);
        this.UnbondingDelegation = this.UnbondingDelegation.bind(this);
        this.DelegatorDelegations = this.DelegatorDelegations.bind(this);
        this.DelegatorUnbondingDelegations = this.DelegatorUnbondingDelegations.bind(this);
        this.Redelegations = this.Redelegations.bind(this);
        this.DelegatorValidators = this.DelegatorValidators.bind(this);
        this.DelegatorValidator = this.DelegatorValidator.bind(this);
        this.HistoricalInfo = this.HistoricalInfo.bind(this);
        this.Pool = this.Pool.bind(this);
        this.Params = this.Params.bind(this);
      }
      Validators(request) {
        const data = exports.QueryValidatorsRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.staking.v1beta1.Query", "Validators", data);
        return promise.then((data2) => exports.QueryValidatorsResponse.decode(new _m0.Reader(data2)));
      }
      Validator(request) {
        const data = exports.QueryValidatorRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.staking.v1beta1.Query", "Validator", data);
        return promise.then((data2) => exports.QueryValidatorResponse.decode(new _m0.Reader(data2)));
      }
      ValidatorDelegations(request) {
        const data = exports.QueryValidatorDelegationsRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.staking.v1beta1.Query", "ValidatorDelegations", data);
        return promise.then((data2) => exports.QueryValidatorDelegationsResponse.decode(new _m0.Reader(data2)));
      }
      ValidatorUnbondingDelegations(request) {
        const data = exports.QueryValidatorUnbondingDelegationsRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.staking.v1beta1.Query", "ValidatorUnbondingDelegations", data);
        return promise.then((data2) => exports.QueryValidatorUnbondingDelegationsResponse.decode(new _m0.Reader(data2)));
      }
      Delegation(request) {
        const data = exports.QueryDelegationRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.staking.v1beta1.Query", "Delegation", data);
        return promise.then((data2) => exports.QueryDelegationResponse.decode(new _m0.Reader(data2)));
      }
      UnbondingDelegation(request) {
        const data = exports.QueryUnbondingDelegationRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.staking.v1beta1.Query", "UnbondingDelegation", data);
        return promise.then((data2) => exports.QueryUnbondingDelegationResponse.decode(new _m0.Reader(data2)));
      }
      DelegatorDelegations(request) {
        const data = exports.QueryDelegatorDelegationsRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.staking.v1beta1.Query", "DelegatorDelegations", data);
        return promise.then((data2) => exports.QueryDelegatorDelegationsResponse.decode(new _m0.Reader(data2)));
      }
      DelegatorUnbondingDelegations(request) {
        const data = exports.QueryDelegatorUnbondingDelegationsRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.staking.v1beta1.Query", "DelegatorUnbondingDelegations", data);
        return promise.then((data2) => exports.QueryDelegatorUnbondingDelegationsResponse.decode(new _m0.Reader(data2)));
      }
      Redelegations(request) {
        const data = exports.QueryRedelegationsRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.staking.v1beta1.Query", "Redelegations", data);
        return promise.then((data2) => exports.QueryRedelegationsResponse.decode(new _m0.Reader(data2)));
      }
      DelegatorValidators(request) {
        const data = exports.QueryDelegatorValidatorsRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.staking.v1beta1.Query", "DelegatorValidators", data);
        return promise.then((data2) => exports.QueryDelegatorValidatorsResponse.decode(new _m0.Reader(data2)));
      }
      DelegatorValidator(request) {
        const data = exports.QueryDelegatorValidatorRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.staking.v1beta1.Query", "DelegatorValidator", data);
        return promise.then((data2) => exports.QueryDelegatorValidatorResponse.decode(new _m0.Reader(data2)));
      }
      HistoricalInfo(request) {
        const data = exports.QueryHistoricalInfoRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.staking.v1beta1.Query", "HistoricalInfo", data);
        return promise.then((data2) => exports.QueryHistoricalInfoResponse.decode(new _m0.Reader(data2)));
      }
      Pool(request = {}) {
        const data = exports.QueryPoolRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.staking.v1beta1.Query", "Pool", data);
        return promise.then((data2) => exports.QueryPoolResponse.decode(new _m0.Reader(data2)));
      }
      Params(request = {}) {
        const data = exports.QueryParamsRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.staking.v1beta1.Query", "Params", data);
        return promise.then((data2) => exports.QueryParamsResponse.decode(new _m0.Reader(data2)));
      }
    };
    exports.QueryClientImpl = QueryClientImpl;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/staking/queries.js
var require_queries10 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/staking/queries.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.setupStakingExtension = void 0;
    var query_1 = require_query13();
    var long_1 = __importDefault(require_long());
    var queryclient_1 = require_queryclient2();
    function setupStakingExtension(base) {
      const rpc = (0, queryclient_1.createProtobufRpcClient)(base);
      const queryService = new query_1.QueryClientImpl(rpc);
      return {
        staking: {
          delegation: async (delegatorAddress, validatorAddress) => {
            const response = await queryService.Delegation({
              delegatorAddr: delegatorAddress,
              validatorAddr: validatorAddress
            });
            return response;
          },
          delegatorDelegations: async (delegatorAddress, paginationKey) => {
            const response = await queryService.DelegatorDelegations({
              delegatorAddr: delegatorAddress,
              pagination: (0, queryclient_1.createPagination)(paginationKey)
            });
            return response;
          },
          delegatorUnbondingDelegations: async (delegatorAddress, paginationKey) => {
            const response = await queryService.DelegatorUnbondingDelegations({
              delegatorAddr: delegatorAddress,
              pagination: (0, queryclient_1.createPagination)(paginationKey)
            });
            return response;
          },
          delegatorValidator: async (delegatorAddress, validatorAddress) => {
            const response = await queryService.DelegatorValidator({
              delegatorAddr: delegatorAddress,
              validatorAddr: validatorAddress
            });
            return response;
          },
          delegatorValidators: async (delegatorAddress, paginationKey) => {
            const response = await queryService.DelegatorValidators({
              delegatorAddr: delegatorAddress,
              pagination: (0, queryclient_1.createPagination)(paginationKey)
            });
            return response;
          },
          historicalInfo: async (height) => {
            const response = await queryService.HistoricalInfo({
              height: long_1.default.fromNumber(height, true)
            });
            return response;
          },
          params: async () => {
            const response = await queryService.Params({});
            return response;
          },
          pool: async () => {
            const response = await queryService.Pool({});
            return response;
          },
          redelegations: async (delegatorAddress, sourceValidatorAddress, destinationValidatorAddress, paginationKey) => {
            const response = await queryService.Redelegations({
              delegatorAddr: delegatorAddress,
              srcValidatorAddr: sourceValidatorAddress,
              dstValidatorAddr: destinationValidatorAddress,
              pagination: (0, queryclient_1.createPagination)(paginationKey)
            });
            return response;
          },
          unbondingDelegation: async (delegatorAddress, validatorAddress) => {
            const response = await queryService.UnbondingDelegation({
              delegatorAddr: delegatorAddress,
              validatorAddr: validatorAddress
            });
            return response;
          },
          validator: async (validatorAddress) => {
            const response = await queryService.Validator({ validatorAddr: validatorAddress });
            return response;
          },
          validatorDelegations: async (validatorAddress, paginationKey) => {
            const response = await queryService.ValidatorDelegations({
              validatorAddr: validatorAddress,
              pagination: (0, queryclient_1.createPagination)(paginationKey)
            });
            return response;
          },
          validators: async (status, paginationKey) => {
            const response = await queryService.Validators({
              status,
              pagination: (0, queryclient_1.createPagination)(paginationKey)
            });
            return response;
          },
          validatorUnbondingDelegations: async (validatorAddress, paginationKey) => {
            const response = await queryService.ValidatorUnbondingDelegations({
              validatorAddr: validatorAddress,
              pagination: (0, queryclient_1.createPagination)(paginationKey)
            });
            return response;
          }
        }
      };
    }
    exports.setupStakingExtension = setupStakingExtension;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/tendermint/types/params.js
var require_params = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/tendermint/types/params.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.HashedParams = exports.VersionParams = exports.ValidatorParams = exports.EvidenceParams = exports.BlockParams = exports.ConsensusParams = exports.protobufPackage = void 0;
    var duration_1 = require_duration();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "tendermint.types";
    function createBaseConsensusParams() {
      return {
        block: void 0,
        evidence: void 0,
        validator: void 0,
        version: void 0
      };
    }
    exports.ConsensusParams = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.block !== void 0) {
          exports.BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();
        }
        if (message.evidence !== void 0) {
          exports.EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();
        }
        if (message.validator !== void 0) {
          exports.ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();
        }
        if (message.version !== void 0) {
          exports.VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseConsensusParams();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.block = exports.BlockParams.decode(reader, reader.uint32());
              break;
            case 2:
              message.evidence = exports.EvidenceParams.decode(reader, reader.uint32());
              break;
            case 3:
              message.validator = exports.ValidatorParams.decode(reader, reader.uint32());
              break;
            case 4:
              message.version = exports.VersionParams.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          block: (0, helpers_1.isSet)(object.block) ? exports.BlockParams.fromJSON(object.block) : void 0,
          evidence: (0, helpers_1.isSet)(object.evidence) ? exports.EvidenceParams.fromJSON(object.evidence) : void 0,
          validator: (0, helpers_1.isSet)(object.validator) ? exports.ValidatorParams.fromJSON(object.validator) : void 0,
          version: (0, helpers_1.isSet)(object.version) ? exports.VersionParams.fromJSON(object.version) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.block !== void 0 && (obj.block = message.block ? exports.BlockParams.toJSON(message.block) : void 0);
        message.evidence !== void 0 && (obj.evidence = message.evidence ? exports.EvidenceParams.toJSON(message.evidence) : void 0);
        message.validator !== void 0 && (obj.validator = message.validator ? exports.ValidatorParams.toJSON(message.validator) : void 0);
        message.version !== void 0 && (obj.version = message.version ? exports.VersionParams.toJSON(message.version) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseConsensusParams();
        message.block = object.block !== void 0 && object.block !== null ? exports.BlockParams.fromPartial(object.block) : void 0;
        message.evidence = object.evidence !== void 0 && object.evidence !== null ? exports.EvidenceParams.fromPartial(object.evidence) : void 0;
        message.validator = object.validator !== void 0 && object.validator !== null ? exports.ValidatorParams.fromPartial(object.validator) : void 0;
        message.version = object.version !== void 0 && object.version !== null ? exports.VersionParams.fromPartial(object.version) : void 0;
        return message;
      }
    };
    function createBaseBlockParams() {
      return {
        maxBytes: helpers_1.Long.ZERO,
        maxGas: helpers_1.Long.ZERO,
        timeIotaMs: helpers_1.Long.ZERO
      };
    }
    exports.BlockParams = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.maxBytes.isZero()) {
          writer.uint32(8).int64(message.maxBytes);
        }
        if (!message.maxGas.isZero()) {
          writer.uint32(16).int64(message.maxGas);
        }
        if (!message.timeIotaMs.isZero()) {
          writer.uint32(24).int64(message.timeIotaMs);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseBlockParams();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.maxBytes = reader.int64();
              break;
            case 2:
              message.maxGas = reader.int64();
              break;
            case 3:
              message.timeIotaMs = reader.int64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          maxBytes: (0, helpers_1.isSet)(object.maxBytes) ? helpers_1.Long.fromValue(object.maxBytes) : helpers_1.Long.ZERO,
          maxGas: (0, helpers_1.isSet)(object.maxGas) ? helpers_1.Long.fromValue(object.maxGas) : helpers_1.Long.ZERO,
          timeIotaMs: (0, helpers_1.isSet)(object.timeIotaMs) ? helpers_1.Long.fromValue(object.timeIotaMs) : helpers_1.Long.ZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.maxBytes !== void 0 && (obj.maxBytes = (message.maxBytes || helpers_1.Long.ZERO).toString());
        message.maxGas !== void 0 && (obj.maxGas = (message.maxGas || helpers_1.Long.ZERO).toString());
        message.timeIotaMs !== void 0 && (obj.timeIotaMs = (message.timeIotaMs || helpers_1.Long.ZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseBlockParams();
        message.maxBytes = object.maxBytes !== void 0 && object.maxBytes !== null ? helpers_1.Long.fromValue(object.maxBytes) : helpers_1.Long.ZERO;
        message.maxGas = object.maxGas !== void 0 && object.maxGas !== null ? helpers_1.Long.fromValue(object.maxGas) : helpers_1.Long.ZERO;
        message.timeIotaMs = object.timeIotaMs !== void 0 && object.timeIotaMs !== null ? helpers_1.Long.fromValue(object.timeIotaMs) : helpers_1.Long.ZERO;
        return message;
      }
    };
    function createBaseEvidenceParams() {
      return {
        maxAgeNumBlocks: helpers_1.Long.ZERO,
        maxAgeDuration: void 0,
        maxBytes: helpers_1.Long.ZERO
      };
    }
    exports.EvidenceParams = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.maxAgeNumBlocks.isZero()) {
          writer.uint32(8).int64(message.maxAgeNumBlocks);
        }
        if (message.maxAgeDuration !== void 0) {
          duration_1.Duration.encode(message.maxAgeDuration, writer.uint32(18).fork()).ldelim();
        }
        if (!message.maxBytes.isZero()) {
          writer.uint32(24).int64(message.maxBytes);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseEvidenceParams();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.maxAgeNumBlocks = reader.int64();
              break;
            case 2:
              message.maxAgeDuration = duration_1.Duration.decode(reader, reader.uint32());
              break;
            case 3:
              message.maxBytes = reader.int64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          maxAgeNumBlocks: (0, helpers_1.isSet)(object.maxAgeNumBlocks) ? helpers_1.Long.fromValue(object.maxAgeNumBlocks) : helpers_1.Long.ZERO,
          maxAgeDuration: (0, helpers_1.isSet)(object.maxAgeDuration) ? duration_1.Duration.fromJSON(object.maxAgeDuration) : void 0,
          maxBytes: (0, helpers_1.isSet)(object.maxBytes) ? helpers_1.Long.fromValue(object.maxBytes) : helpers_1.Long.ZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.maxAgeNumBlocks !== void 0 && (obj.maxAgeNumBlocks = (message.maxAgeNumBlocks || helpers_1.Long.ZERO).toString());
        message.maxAgeDuration !== void 0 && (obj.maxAgeDuration = message.maxAgeDuration ? duration_1.Duration.toJSON(message.maxAgeDuration) : void 0);
        message.maxBytes !== void 0 && (obj.maxBytes = (message.maxBytes || helpers_1.Long.ZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseEvidenceParams();
        message.maxAgeNumBlocks = object.maxAgeNumBlocks !== void 0 && object.maxAgeNumBlocks !== null ? helpers_1.Long.fromValue(object.maxAgeNumBlocks) : helpers_1.Long.ZERO;
        message.maxAgeDuration = object.maxAgeDuration !== void 0 && object.maxAgeDuration !== null ? duration_1.Duration.fromPartial(object.maxAgeDuration) : void 0;
        message.maxBytes = object.maxBytes !== void 0 && object.maxBytes !== null ? helpers_1.Long.fromValue(object.maxBytes) : helpers_1.Long.ZERO;
        return message;
      }
    };
    function createBaseValidatorParams() {
      return {
        pubKeyTypes: []
      };
    }
    exports.ValidatorParams = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.pubKeyTypes) {
          writer.uint32(10).string(v3);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseValidatorParams();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.pubKeyTypes.push(reader.string());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          pubKeyTypes: Array.isArray(object == null ? void 0 : object.pubKeyTypes) ? object.pubKeyTypes.map((e2) => String(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.pubKeyTypes) {
          obj.pubKeyTypes = message.pubKeyTypes.map((e2) => e2);
        } else {
          obj.pubKeyTypes = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseValidatorParams();
        message.pubKeyTypes = ((_a = object.pubKeyTypes) == null ? void 0 : _a.map((e2) => e2)) || [];
        return message;
      }
    };
    function createBaseVersionParams() {
      return {
        appVersion: helpers_1.Long.UZERO
      };
    }
    exports.VersionParams = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.appVersion.isZero()) {
          writer.uint32(8).uint64(message.appVersion);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseVersionParams();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.appVersion = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          appVersion: (0, helpers_1.isSet)(object.appVersion) ? helpers_1.Long.fromValue(object.appVersion) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.appVersion !== void 0 && (obj.appVersion = (message.appVersion || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseVersionParams();
        message.appVersion = object.appVersion !== void 0 && object.appVersion !== null ? helpers_1.Long.fromValue(object.appVersion) : helpers_1.Long.UZERO;
        return message;
      }
    };
    function createBaseHashedParams() {
      return {
        blockMaxBytes: helpers_1.Long.ZERO,
        blockMaxGas: helpers_1.Long.ZERO
      };
    }
    exports.HashedParams = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.blockMaxBytes.isZero()) {
          writer.uint32(8).int64(message.blockMaxBytes);
        }
        if (!message.blockMaxGas.isZero()) {
          writer.uint32(16).int64(message.blockMaxGas);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseHashedParams();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.blockMaxBytes = reader.int64();
              break;
            case 2:
              message.blockMaxGas = reader.int64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          blockMaxBytes: (0, helpers_1.isSet)(object.blockMaxBytes) ? helpers_1.Long.fromValue(object.blockMaxBytes) : helpers_1.Long.ZERO,
          blockMaxGas: (0, helpers_1.isSet)(object.blockMaxGas) ? helpers_1.Long.fromValue(object.blockMaxGas) : helpers_1.Long.ZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.blockMaxBytes !== void 0 && (obj.blockMaxBytes = (message.blockMaxBytes || helpers_1.Long.ZERO).toString());
        message.blockMaxGas !== void 0 && (obj.blockMaxGas = (message.blockMaxGas || helpers_1.Long.ZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseHashedParams();
        message.blockMaxBytes = object.blockMaxBytes !== void 0 && object.blockMaxBytes !== null ? helpers_1.Long.fromValue(object.blockMaxBytes) : helpers_1.Long.ZERO;
        message.blockMaxGas = object.blockMaxGas !== void 0 && object.blockMaxGas !== null ? helpers_1.Long.fromValue(object.blockMaxGas) : helpers_1.Long.ZERO;
        return message;
      }
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/tendermint/abci/types.js
var require_types3 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/tendermint/abci/types.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Event = exports.LastCommitInfo = exports.BlockParams = exports.ConsensusParams = exports.ResponseApplySnapshotChunk = exports.ResponseLoadSnapshotChunk = exports.ResponseOfferSnapshot = exports.ResponseListSnapshots = exports.ResponseCommit = exports.ResponseEndBlock = exports.ResponseDeliverTx = exports.ResponseCheckTx = exports.ResponseBeginBlock = exports.ResponseQuery = exports.ResponseInitChain = exports.ResponseSetOption = exports.ResponseInfo = exports.ResponseFlush = exports.ResponseEcho = exports.ResponseException = exports.Response = exports.RequestApplySnapshotChunk = exports.RequestLoadSnapshotChunk = exports.RequestOfferSnapshot = exports.RequestListSnapshots = exports.RequestCommit = exports.RequestEndBlock = exports.RequestDeliverTx = exports.RequestCheckTx = exports.RequestBeginBlock = exports.RequestQuery = exports.RequestInitChain = exports.RequestSetOption = exports.RequestInfo = exports.RequestFlush = exports.RequestEcho = exports.Request = exports.evidenceTypeToJSON = exports.evidenceTypeFromJSON = exports.EvidenceType = exports.responseApplySnapshotChunk_ResultToJSON = exports.responseApplySnapshotChunk_ResultFromJSON = exports.ResponseApplySnapshotChunk_Result = exports.responseOfferSnapshot_ResultToJSON = exports.responseOfferSnapshot_ResultFromJSON = exports.ResponseOfferSnapshot_Result = exports.checkTxTypeToJSON = exports.checkTxTypeFromJSON = exports.CheckTxType = exports.protobufPackage = void 0;
    exports.ABCIApplicationClientImpl = exports.Snapshot = exports.Evidence = exports.VoteInfo = exports.ValidatorUpdate = exports.Validator = exports.TxResult = exports.EventAttribute = void 0;
    var timestamp_1 = require_timestamp();
    var types_1 = require_types2();
    var proof_1 = require_proof();
    var params_1 = require_params();
    var keys_1 = require_keys4();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "tendermint.abci";
    var CheckTxType;
    (function(CheckTxType2) {
      CheckTxType2[CheckTxType2["NEW"] = 0] = "NEW";
      CheckTxType2[CheckTxType2["RECHECK"] = 1] = "RECHECK";
      CheckTxType2[CheckTxType2["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
    })(CheckTxType = exports.CheckTxType || (exports.CheckTxType = {}));
    function checkTxTypeFromJSON(object) {
      switch (object) {
        case 0:
        case "NEW":
          return CheckTxType.NEW;
        case 1:
        case "RECHECK":
          return CheckTxType.RECHECK;
        case -1:
        case "UNRECOGNIZED":
        default:
          return CheckTxType.UNRECOGNIZED;
      }
    }
    exports.checkTxTypeFromJSON = checkTxTypeFromJSON;
    function checkTxTypeToJSON(object) {
      switch (object) {
        case CheckTxType.NEW:
          return "NEW";
        case CheckTxType.RECHECK:
          return "RECHECK";
        case CheckTxType.UNRECOGNIZED:
        default:
          return "UNRECOGNIZED";
      }
    }
    exports.checkTxTypeToJSON = checkTxTypeToJSON;
    var ResponseOfferSnapshot_Result;
    (function(ResponseOfferSnapshot_Result2) {
      ResponseOfferSnapshot_Result2[ResponseOfferSnapshot_Result2["UNKNOWN"] = 0] = "UNKNOWN";
      ResponseOfferSnapshot_Result2[ResponseOfferSnapshot_Result2["ACCEPT"] = 1] = "ACCEPT";
      ResponseOfferSnapshot_Result2[ResponseOfferSnapshot_Result2["ABORT"] = 2] = "ABORT";
      ResponseOfferSnapshot_Result2[ResponseOfferSnapshot_Result2["REJECT"] = 3] = "REJECT";
      ResponseOfferSnapshot_Result2[ResponseOfferSnapshot_Result2["REJECT_FORMAT"] = 4] = "REJECT_FORMAT";
      ResponseOfferSnapshot_Result2[ResponseOfferSnapshot_Result2["REJECT_SENDER"] = 5] = "REJECT_SENDER";
      ResponseOfferSnapshot_Result2[ResponseOfferSnapshot_Result2["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
    })(ResponseOfferSnapshot_Result = exports.ResponseOfferSnapshot_Result || (exports.ResponseOfferSnapshot_Result = {}));
    function responseOfferSnapshot_ResultFromJSON(object) {
      switch (object) {
        case 0:
        case "UNKNOWN":
          return ResponseOfferSnapshot_Result.UNKNOWN;
        case 1:
        case "ACCEPT":
          return ResponseOfferSnapshot_Result.ACCEPT;
        case 2:
        case "ABORT":
          return ResponseOfferSnapshot_Result.ABORT;
        case 3:
        case "REJECT":
          return ResponseOfferSnapshot_Result.REJECT;
        case 4:
        case "REJECT_FORMAT":
          return ResponseOfferSnapshot_Result.REJECT_FORMAT;
        case 5:
        case "REJECT_SENDER":
          return ResponseOfferSnapshot_Result.REJECT_SENDER;
        case -1:
        case "UNRECOGNIZED":
        default:
          return ResponseOfferSnapshot_Result.UNRECOGNIZED;
      }
    }
    exports.responseOfferSnapshot_ResultFromJSON = responseOfferSnapshot_ResultFromJSON;
    function responseOfferSnapshot_ResultToJSON(object) {
      switch (object) {
        case ResponseOfferSnapshot_Result.UNKNOWN:
          return "UNKNOWN";
        case ResponseOfferSnapshot_Result.ACCEPT:
          return "ACCEPT";
        case ResponseOfferSnapshot_Result.ABORT:
          return "ABORT";
        case ResponseOfferSnapshot_Result.REJECT:
          return "REJECT";
        case ResponseOfferSnapshot_Result.REJECT_FORMAT:
          return "REJECT_FORMAT";
        case ResponseOfferSnapshot_Result.REJECT_SENDER:
          return "REJECT_SENDER";
        case ResponseOfferSnapshot_Result.UNRECOGNIZED:
        default:
          return "UNRECOGNIZED";
      }
    }
    exports.responseOfferSnapshot_ResultToJSON = responseOfferSnapshot_ResultToJSON;
    var ResponseApplySnapshotChunk_Result;
    (function(ResponseApplySnapshotChunk_Result2) {
      ResponseApplySnapshotChunk_Result2[ResponseApplySnapshotChunk_Result2["UNKNOWN"] = 0] = "UNKNOWN";
      ResponseApplySnapshotChunk_Result2[ResponseApplySnapshotChunk_Result2["ACCEPT"] = 1] = "ACCEPT";
      ResponseApplySnapshotChunk_Result2[ResponseApplySnapshotChunk_Result2["ABORT"] = 2] = "ABORT";
      ResponseApplySnapshotChunk_Result2[ResponseApplySnapshotChunk_Result2["RETRY"] = 3] = "RETRY";
      ResponseApplySnapshotChunk_Result2[ResponseApplySnapshotChunk_Result2["RETRY_SNAPSHOT"] = 4] = "RETRY_SNAPSHOT";
      ResponseApplySnapshotChunk_Result2[ResponseApplySnapshotChunk_Result2["REJECT_SNAPSHOT"] = 5] = "REJECT_SNAPSHOT";
      ResponseApplySnapshotChunk_Result2[ResponseApplySnapshotChunk_Result2["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
    })(ResponseApplySnapshotChunk_Result = exports.ResponseApplySnapshotChunk_Result || (exports.ResponseApplySnapshotChunk_Result = {}));
    function responseApplySnapshotChunk_ResultFromJSON(object) {
      switch (object) {
        case 0:
        case "UNKNOWN":
          return ResponseApplySnapshotChunk_Result.UNKNOWN;
        case 1:
        case "ACCEPT":
          return ResponseApplySnapshotChunk_Result.ACCEPT;
        case 2:
        case "ABORT":
          return ResponseApplySnapshotChunk_Result.ABORT;
        case 3:
        case "RETRY":
          return ResponseApplySnapshotChunk_Result.RETRY;
        case 4:
        case "RETRY_SNAPSHOT":
          return ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT;
        case 5:
        case "REJECT_SNAPSHOT":
          return ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT;
        case -1:
        case "UNRECOGNIZED":
        default:
          return ResponseApplySnapshotChunk_Result.UNRECOGNIZED;
      }
    }
    exports.responseApplySnapshotChunk_ResultFromJSON = responseApplySnapshotChunk_ResultFromJSON;
    function responseApplySnapshotChunk_ResultToJSON(object) {
      switch (object) {
        case ResponseApplySnapshotChunk_Result.UNKNOWN:
          return "UNKNOWN";
        case ResponseApplySnapshotChunk_Result.ACCEPT:
          return "ACCEPT";
        case ResponseApplySnapshotChunk_Result.ABORT:
          return "ABORT";
        case ResponseApplySnapshotChunk_Result.RETRY:
          return "RETRY";
        case ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT:
          return "RETRY_SNAPSHOT";
        case ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT:
          return "REJECT_SNAPSHOT";
        case ResponseApplySnapshotChunk_Result.UNRECOGNIZED:
        default:
          return "UNRECOGNIZED";
      }
    }
    exports.responseApplySnapshotChunk_ResultToJSON = responseApplySnapshotChunk_ResultToJSON;
    var EvidenceType;
    (function(EvidenceType2) {
      EvidenceType2[EvidenceType2["UNKNOWN"] = 0] = "UNKNOWN";
      EvidenceType2[EvidenceType2["DUPLICATE_VOTE"] = 1] = "DUPLICATE_VOTE";
      EvidenceType2[EvidenceType2["LIGHT_CLIENT_ATTACK"] = 2] = "LIGHT_CLIENT_ATTACK";
      EvidenceType2[EvidenceType2["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
    })(EvidenceType = exports.EvidenceType || (exports.EvidenceType = {}));
    function evidenceTypeFromJSON(object) {
      switch (object) {
        case 0:
        case "UNKNOWN":
          return EvidenceType.UNKNOWN;
        case 1:
        case "DUPLICATE_VOTE":
          return EvidenceType.DUPLICATE_VOTE;
        case 2:
        case "LIGHT_CLIENT_ATTACK":
          return EvidenceType.LIGHT_CLIENT_ATTACK;
        case -1:
        case "UNRECOGNIZED":
        default:
          return EvidenceType.UNRECOGNIZED;
      }
    }
    exports.evidenceTypeFromJSON = evidenceTypeFromJSON;
    function evidenceTypeToJSON(object) {
      switch (object) {
        case EvidenceType.UNKNOWN:
          return "UNKNOWN";
        case EvidenceType.DUPLICATE_VOTE:
          return "DUPLICATE_VOTE";
        case EvidenceType.LIGHT_CLIENT_ATTACK:
          return "LIGHT_CLIENT_ATTACK";
        case EvidenceType.UNRECOGNIZED:
        default:
          return "UNRECOGNIZED";
      }
    }
    exports.evidenceTypeToJSON = evidenceTypeToJSON;
    function createBaseRequest() {
      return {
        echo: void 0,
        flush: void 0,
        info: void 0,
        setOption: void 0,
        initChain: void 0,
        query: void 0,
        beginBlock: void 0,
        checkTx: void 0,
        deliverTx: void 0,
        endBlock: void 0,
        commit: void 0,
        listSnapshots: void 0,
        offerSnapshot: void 0,
        loadSnapshotChunk: void 0,
        applySnapshotChunk: void 0
      };
    }
    exports.Request = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.echo !== void 0) {
          exports.RequestEcho.encode(message.echo, writer.uint32(10).fork()).ldelim();
        }
        if (message.flush !== void 0) {
          exports.RequestFlush.encode(message.flush, writer.uint32(18).fork()).ldelim();
        }
        if (message.info !== void 0) {
          exports.RequestInfo.encode(message.info, writer.uint32(26).fork()).ldelim();
        }
        if (message.setOption !== void 0) {
          exports.RequestSetOption.encode(message.setOption, writer.uint32(34).fork()).ldelim();
        }
        if (message.initChain !== void 0) {
          exports.RequestInitChain.encode(message.initChain, writer.uint32(42).fork()).ldelim();
        }
        if (message.query !== void 0) {
          exports.RequestQuery.encode(message.query, writer.uint32(50).fork()).ldelim();
        }
        if (message.beginBlock !== void 0) {
          exports.RequestBeginBlock.encode(message.beginBlock, writer.uint32(58).fork()).ldelim();
        }
        if (message.checkTx !== void 0) {
          exports.RequestCheckTx.encode(message.checkTx, writer.uint32(66).fork()).ldelim();
        }
        if (message.deliverTx !== void 0) {
          exports.RequestDeliverTx.encode(message.deliverTx, writer.uint32(74).fork()).ldelim();
        }
        if (message.endBlock !== void 0) {
          exports.RequestEndBlock.encode(message.endBlock, writer.uint32(82).fork()).ldelim();
        }
        if (message.commit !== void 0) {
          exports.RequestCommit.encode(message.commit, writer.uint32(90).fork()).ldelim();
        }
        if (message.listSnapshots !== void 0) {
          exports.RequestListSnapshots.encode(message.listSnapshots, writer.uint32(98).fork()).ldelim();
        }
        if (message.offerSnapshot !== void 0) {
          exports.RequestOfferSnapshot.encode(message.offerSnapshot, writer.uint32(106).fork()).ldelim();
        }
        if (message.loadSnapshotChunk !== void 0) {
          exports.RequestLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(114).fork()).ldelim();
        }
        if (message.applySnapshotChunk !== void 0) {
          exports.RequestApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(122).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.echo = exports.RequestEcho.decode(reader, reader.uint32());
              break;
            case 2:
              message.flush = exports.RequestFlush.decode(reader, reader.uint32());
              break;
            case 3:
              message.info = exports.RequestInfo.decode(reader, reader.uint32());
              break;
            case 4:
              message.setOption = exports.RequestSetOption.decode(reader, reader.uint32());
              break;
            case 5:
              message.initChain = exports.RequestInitChain.decode(reader, reader.uint32());
              break;
            case 6:
              message.query = exports.RequestQuery.decode(reader, reader.uint32());
              break;
            case 7:
              message.beginBlock = exports.RequestBeginBlock.decode(reader, reader.uint32());
              break;
            case 8:
              message.checkTx = exports.RequestCheckTx.decode(reader, reader.uint32());
              break;
            case 9:
              message.deliverTx = exports.RequestDeliverTx.decode(reader, reader.uint32());
              break;
            case 10:
              message.endBlock = exports.RequestEndBlock.decode(reader, reader.uint32());
              break;
            case 11:
              message.commit = exports.RequestCommit.decode(reader, reader.uint32());
              break;
            case 12:
              message.listSnapshots = exports.RequestListSnapshots.decode(reader, reader.uint32());
              break;
            case 13:
              message.offerSnapshot = exports.RequestOfferSnapshot.decode(reader, reader.uint32());
              break;
            case 14:
              message.loadSnapshotChunk = exports.RequestLoadSnapshotChunk.decode(reader, reader.uint32());
              break;
            case 15:
              message.applySnapshotChunk = exports.RequestApplySnapshotChunk.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          echo: (0, helpers_1.isSet)(object.echo) ? exports.RequestEcho.fromJSON(object.echo) : void 0,
          flush: (0, helpers_1.isSet)(object.flush) ? exports.RequestFlush.fromJSON(object.flush) : void 0,
          info: (0, helpers_1.isSet)(object.info) ? exports.RequestInfo.fromJSON(object.info) : void 0,
          setOption: (0, helpers_1.isSet)(object.setOption) ? exports.RequestSetOption.fromJSON(object.setOption) : void 0,
          initChain: (0, helpers_1.isSet)(object.initChain) ? exports.RequestInitChain.fromJSON(object.initChain) : void 0,
          query: (0, helpers_1.isSet)(object.query) ? exports.RequestQuery.fromJSON(object.query) : void 0,
          beginBlock: (0, helpers_1.isSet)(object.beginBlock) ? exports.RequestBeginBlock.fromJSON(object.beginBlock) : void 0,
          checkTx: (0, helpers_1.isSet)(object.checkTx) ? exports.RequestCheckTx.fromJSON(object.checkTx) : void 0,
          deliverTx: (0, helpers_1.isSet)(object.deliverTx) ? exports.RequestDeliverTx.fromJSON(object.deliverTx) : void 0,
          endBlock: (0, helpers_1.isSet)(object.endBlock) ? exports.RequestEndBlock.fromJSON(object.endBlock) : void 0,
          commit: (0, helpers_1.isSet)(object.commit) ? exports.RequestCommit.fromJSON(object.commit) : void 0,
          listSnapshots: (0, helpers_1.isSet)(object.listSnapshots) ? exports.RequestListSnapshots.fromJSON(object.listSnapshots) : void 0,
          offerSnapshot: (0, helpers_1.isSet)(object.offerSnapshot) ? exports.RequestOfferSnapshot.fromJSON(object.offerSnapshot) : void 0,
          loadSnapshotChunk: (0, helpers_1.isSet)(object.loadSnapshotChunk) ? exports.RequestLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk) : void 0,
          applySnapshotChunk: (0, helpers_1.isSet)(object.applySnapshotChunk) ? exports.RequestApplySnapshotChunk.fromJSON(object.applySnapshotChunk) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.echo !== void 0 && (obj.echo = message.echo ? exports.RequestEcho.toJSON(message.echo) : void 0);
        message.flush !== void 0 && (obj.flush = message.flush ? exports.RequestFlush.toJSON(message.flush) : void 0);
        message.info !== void 0 && (obj.info = message.info ? exports.RequestInfo.toJSON(message.info) : void 0);
        message.setOption !== void 0 && (obj.setOption = message.setOption ? exports.RequestSetOption.toJSON(message.setOption) : void 0);
        message.initChain !== void 0 && (obj.initChain = message.initChain ? exports.RequestInitChain.toJSON(message.initChain) : void 0);
        message.query !== void 0 && (obj.query = message.query ? exports.RequestQuery.toJSON(message.query) : void 0);
        message.beginBlock !== void 0 && (obj.beginBlock = message.beginBlock ? exports.RequestBeginBlock.toJSON(message.beginBlock) : void 0);
        message.checkTx !== void 0 && (obj.checkTx = message.checkTx ? exports.RequestCheckTx.toJSON(message.checkTx) : void 0);
        message.deliverTx !== void 0 && (obj.deliverTx = message.deliverTx ? exports.RequestDeliverTx.toJSON(message.deliverTx) : void 0);
        message.endBlock !== void 0 && (obj.endBlock = message.endBlock ? exports.RequestEndBlock.toJSON(message.endBlock) : void 0);
        message.commit !== void 0 && (obj.commit = message.commit ? exports.RequestCommit.toJSON(message.commit) : void 0);
        message.listSnapshots !== void 0 && (obj.listSnapshots = message.listSnapshots ? exports.RequestListSnapshots.toJSON(message.listSnapshots) : void 0);
        message.offerSnapshot !== void 0 && (obj.offerSnapshot = message.offerSnapshot ? exports.RequestOfferSnapshot.toJSON(message.offerSnapshot) : void 0);
        message.loadSnapshotChunk !== void 0 && (obj.loadSnapshotChunk = message.loadSnapshotChunk ? exports.RequestLoadSnapshotChunk.toJSON(message.loadSnapshotChunk) : void 0);
        message.applySnapshotChunk !== void 0 && (obj.applySnapshotChunk = message.applySnapshotChunk ? exports.RequestApplySnapshotChunk.toJSON(message.applySnapshotChunk) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseRequest();
        message.echo = object.echo !== void 0 && object.echo !== null ? exports.RequestEcho.fromPartial(object.echo) : void 0;
        message.flush = object.flush !== void 0 && object.flush !== null ? exports.RequestFlush.fromPartial(object.flush) : void 0;
        message.info = object.info !== void 0 && object.info !== null ? exports.RequestInfo.fromPartial(object.info) : void 0;
        message.setOption = object.setOption !== void 0 && object.setOption !== null ? exports.RequestSetOption.fromPartial(object.setOption) : void 0;
        message.initChain = object.initChain !== void 0 && object.initChain !== null ? exports.RequestInitChain.fromPartial(object.initChain) : void 0;
        message.query = object.query !== void 0 && object.query !== null ? exports.RequestQuery.fromPartial(object.query) : void 0;
        message.beginBlock = object.beginBlock !== void 0 && object.beginBlock !== null ? exports.RequestBeginBlock.fromPartial(object.beginBlock) : void 0;
        message.checkTx = object.checkTx !== void 0 && object.checkTx !== null ? exports.RequestCheckTx.fromPartial(object.checkTx) : void 0;
        message.deliverTx = object.deliverTx !== void 0 && object.deliverTx !== null ? exports.RequestDeliverTx.fromPartial(object.deliverTx) : void 0;
        message.endBlock = object.endBlock !== void 0 && object.endBlock !== null ? exports.RequestEndBlock.fromPartial(object.endBlock) : void 0;
        message.commit = object.commit !== void 0 && object.commit !== null ? exports.RequestCommit.fromPartial(object.commit) : void 0;
        message.listSnapshots = object.listSnapshots !== void 0 && object.listSnapshots !== null ? exports.RequestListSnapshots.fromPartial(object.listSnapshots) : void 0;
        message.offerSnapshot = object.offerSnapshot !== void 0 && object.offerSnapshot !== null ? exports.RequestOfferSnapshot.fromPartial(object.offerSnapshot) : void 0;
        message.loadSnapshotChunk = object.loadSnapshotChunk !== void 0 && object.loadSnapshotChunk !== null ? exports.RequestLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk) : void 0;
        message.applySnapshotChunk = object.applySnapshotChunk !== void 0 && object.applySnapshotChunk !== null ? exports.RequestApplySnapshotChunk.fromPartial(object.applySnapshotChunk) : void 0;
        return message;
      }
    };
    function createBaseRequestEcho() {
      return {
        message: ""
      };
    }
    exports.RequestEcho = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.message !== "") {
          writer.uint32(10).string(message.message);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseRequestEcho();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.message = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          message: (0, helpers_1.isSet)(object.message) ? String(object.message) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.message !== void 0 && (obj.message = message.message);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseRequestEcho();
        message.message = object.message ?? "";
        return message;
      }
    };
    function createBaseRequestFlush() {
      return {};
    }
    exports.RequestFlush = {
      encode(_3, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseRequestFlush();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_3) {
        return {};
      },
      toJSON(_3) {
        const obj = {};
        return obj;
      },
      fromPartial(_3) {
        const message = createBaseRequestFlush();
        return message;
      }
    };
    function createBaseRequestInfo() {
      return {
        version: "",
        blockVersion: helpers_1.Long.UZERO,
        p2pVersion: helpers_1.Long.UZERO
      };
    }
    exports.RequestInfo = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.version !== "") {
          writer.uint32(10).string(message.version);
        }
        if (!message.blockVersion.isZero()) {
          writer.uint32(16).uint64(message.blockVersion);
        }
        if (!message.p2pVersion.isZero()) {
          writer.uint32(24).uint64(message.p2pVersion);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseRequestInfo();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.version = reader.string();
              break;
            case 2:
              message.blockVersion = reader.uint64();
              break;
            case 3:
              message.p2pVersion = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          version: (0, helpers_1.isSet)(object.version) ? String(object.version) : "",
          blockVersion: (0, helpers_1.isSet)(object.blockVersion) ? helpers_1.Long.fromValue(object.blockVersion) : helpers_1.Long.UZERO,
          p2pVersion: (0, helpers_1.isSet)(object.p2pVersion) ? helpers_1.Long.fromValue(object.p2pVersion) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.version !== void 0 && (obj.version = message.version);
        message.blockVersion !== void 0 && (obj.blockVersion = (message.blockVersion || helpers_1.Long.UZERO).toString());
        message.p2pVersion !== void 0 && (obj.p2pVersion = (message.p2pVersion || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseRequestInfo();
        message.version = object.version ?? "";
        message.blockVersion = object.blockVersion !== void 0 && object.blockVersion !== null ? helpers_1.Long.fromValue(object.blockVersion) : helpers_1.Long.UZERO;
        message.p2pVersion = object.p2pVersion !== void 0 && object.p2pVersion !== null ? helpers_1.Long.fromValue(object.p2pVersion) : helpers_1.Long.UZERO;
        return message;
      }
    };
    function createBaseRequestSetOption() {
      return {
        key: "",
        value: ""
      };
    }
    exports.RequestSetOption = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.key !== "") {
          writer.uint32(10).string(message.key);
        }
        if (message.value !== "") {
          writer.uint32(18).string(message.value);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseRequestSetOption();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.key = reader.string();
              break;
            case 2:
              message.value = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          key: (0, helpers_1.isSet)(object.key) ? String(object.key) : "",
          value: (0, helpers_1.isSet)(object.value) ? String(object.value) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.key !== void 0 && (obj.key = message.key);
        message.value !== void 0 && (obj.value = message.value);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseRequestSetOption();
        message.key = object.key ?? "";
        message.value = object.value ?? "";
        return message;
      }
    };
    function createBaseRequestInitChain() {
      return {
        time: void 0,
        chainId: "",
        consensusParams: void 0,
        validators: [],
        appStateBytes: new Uint8Array(),
        initialHeight: helpers_1.Long.ZERO
      };
    }
    exports.RequestInitChain = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.time !== void 0) {
          timestamp_1.Timestamp.encode(message.time, writer.uint32(10).fork()).ldelim();
        }
        if (message.chainId !== "") {
          writer.uint32(18).string(message.chainId);
        }
        if (message.consensusParams !== void 0) {
          exports.ConsensusParams.encode(message.consensusParams, writer.uint32(26).fork()).ldelim();
        }
        for (const v3 of message.validators) {
          exports.ValidatorUpdate.encode(v3, writer.uint32(34).fork()).ldelim();
        }
        if (message.appStateBytes.length !== 0) {
          writer.uint32(42).bytes(message.appStateBytes);
        }
        if (!message.initialHeight.isZero()) {
          writer.uint32(48).int64(message.initialHeight);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseRequestInitChain();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.time = timestamp_1.Timestamp.decode(reader, reader.uint32());
              break;
            case 2:
              message.chainId = reader.string();
              break;
            case 3:
              message.consensusParams = exports.ConsensusParams.decode(reader, reader.uint32());
              break;
            case 4:
              message.validators.push(exports.ValidatorUpdate.decode(reader, reader.uint32()));
              break;
            case 5:
              message.appStateBytes = reader.bytes();
              break;
            case 6:
              message.initialHeight = reader.int64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          time: (0, helpers_1.isSet)(object.time) ? (0, helpers_1.fromJsonTimestamp)(object.time) : void 0,
          chainId: (0, helpers_1.isSet)(object.chainId) ? String(object.chainId) : "",
          consensusParams: (0, helpers_1.isSet)(object.consensusParams) ? exports.ConsensusParams.fromJSON(object.consensusParams) : void 0,
          validators: Array.isArray(object == null ? void 0 : object.validators) ? object.validators.map((e2) => exports.ValidatorUpdate.fromJSON(e2)) : [],
          appStateBytes: (0, helpers_1.isSet)(object.appStateBytes) ? (0, helpers_1.bytesFromBase64)(object.appStateBytes) : new Uint8Array(),
          initialHeight: (0, helpers_1.isSet)(object.initialHeight) ? helpers_1.Long.fromValue(object.initialHeight) : helpers_1.Long.ZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.time !== void 0 && (obj.time = (0, helpers_1.fromTimestamp)(message.time).toISOString());
        message.chainId !== void 0 && (obj.chainId = message.chainId);
        message.consensusParams !== void 0 && (obj.consensusParams = message.consensusParams ? exports.ConsensusParams.toJSON(message.consensusParams) : void 0);
        if (message.validators) {
          obj.validators = message.validators.map((e2) => e2 ? exports.ValidatorUpdate.toJSON(e2) : void 0);
        } else {
          obj.validators = [];
        }
        message.appStateBytes !== void 0 && (obj.appStateBytes = (0, helpers_1.base64FromBytes)(message.appStateBytes !== void 0 ? message.appStateBytes : new Uint8Array()));
        message.initialHeight !== void 0 && (obj.initialHeight = (message.initialHeight || helpers_1.Long.ZERO).toString());
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseRequestInitChain();
        message.time = object.time !== void 0 && object.time !== null ? timestamp_1.Timestamp.fromPartial(object.time) : void 0;
        message.chainId = object.chainId ?? "";
        message.consensusParams = object.consensusParams !== void 0 && object.consensusParams !== null ? exports.ConsensusParams.fromPartial(object.consensusParams) : void 0;
        message.validators = ((_a = object.validators) == null ? void 0 : _a.map((e2) => exports.ValidatorUpdate.fromPartial(e2))) || [];
        message.appStateBytes = object.appStateBytes ?? new Uint8Array();
        message.initialHeight = object.initialHeight !== void 0 && object.initialHeight !== null ? helpers_1.Long.fromValue(object.initialHeight) : helpers_1.Long.ZERO;
        return message;
      }
    };
    function createBaseRequestQuery() {
      return {
        data: new Uint8Array(),
        path: "",
        height: helpers_1.Long.ZERO,
        prove: false
      };
    }
    exports.RequestQuery = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.data.length !== 0) {
          writer.uint32(10).bytes(message.data);
        }
        if (message.path !== "") {
          writer.uint32(18).string(message.path);
        }
        if (!message.height.isZero()) {
          writer.uint32(24).int64(message.height);
        }
        if (message.prove === true) {
          writer.uint32(32).bool(message.prove);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseRequestQuery();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.data = reader.bytes();
              break;
            case 2:
              message.path = reader.string();
              break;
            case 3:
              message.height = reader.int64();
              break;
            case 4:
              message.prove = reader.bool();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          data: (0, helpers_1.isSet)(object.data) ? (0, helpers_1.bytesFromBase64)(object.data) : new Uint8Array(),
          path: (0, helpers_1.isSet)(object.path) ? String(object.path) : "",
          height: (0, helpers_1.isSet)(object.height) ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.ZERO,
          prove: (0, helpers_1.isSet)(object.prove) ? Boolean(object.prove) : false
        };
      },
      toJSON(message) {
        const obj = {};
        message.data !== void 0 && (obj.data = (0, helpers_1.base64FromBytes)(message.data !== void 0 ? message.data : new Uint8Array()));
        message.path !== void 0 && (obj.path = message.path);
        message.height !== void 0 && (obj.height = (message.height || helpers_1.Long.ZERO).toString());
        message.prove !== void 0 && (obj.prove = message.prove);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseRequestQuery();
        message.data = object.data ?? new Uint8Array();
        message.path = object.path ?? "";
        message.height = object.height !== void 0 && object.height !== null ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.ZERO;
        message.prove = object.prove ?? false;
        return message;
      }
    };
    function createBaseRequestBeginBlock() {
      return {
        hash: new Uint8Array(),
        header: void 0,
        lastCommitInfo: void 0,
        byzantineValidators: []
      };
    }
    exports.RequestBeginBlock = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.hash.length !== 0) {
          writer.uint32(10).bytes(message.hash);
        }
        if (message.header !== void 0) {
          types_1.Header.encode(message.header, writer.uint32(18).fork()).ldelim();
        }
        if (message.lastCommitInfo !== void 0) {
          exports.LastCommitInfo.encode(message.lastCommitInfo, writer.uint32(26).fork()).ldelim();
        }
        for (const v3 of message.byzantineValidators) {
          exports.Evidence.encode(v3, writer.uint32(34).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseRequestBeginBlock();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.hash = reader.bytes();
              break;
            case 2:
              message.header = types_1.Header.decode(reader, reader.uint32());
              break;
            case 3:
              message.lastCommitInfo = exports.LastCommitInfo.decode(reader, reader.uint32());
              break;
            case 4:
              message.byzantineValidators.push(exports.Evidence.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          hash: (0, helpers_1.isSet)(object.hash) ? (0, helpers_1.bytesFromBase64)(object.hash) : new Uint8Array(),
          header: (0, helpers_1.isSet)(object.header) ? types_1.Header.fromJSON(object.header) : void 0,
          lastCommitInfo: (0, helpers_1.isSet)(object.lastCommitInfo) ? exports.LastCommitInfo.fromJSON(object.lastCommitInfo) : void 0,
          byzantineValidators: Array.isArray(object == null ? void 0 : object.byzantineValidators) ? object.byzantineValidators.map((e2) => exports.Evidence.fromJSON(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.hash !== void 0 && (obj.hash = (0, helpers_1.base64FromBytes)(message.hash !== void 0 ? message.hash : new Uint8Array()));
        message.header !== void 0 && (obj.header = message.header ? types_1.Header.toJSON(message.header) : void 0);
        message.lastCommitInfo !== void 0 && (obj.lastCommitInfo = message.lastCommitInfo ? exports.LastCommitInfo.toJSON(message.lastCommitInfo) : void 0);
        if (message.byzantineValidators) {
          obj.byzantineValidators = message.byzantineValidators.map((e2) => e2 ? exports.Evidence.toJSON(e2) : void 0);
        } else {
          obj.byzantineValidators = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseRequestBeginBlock();
        message.hash = object.hash ?? new Uint8Array();
        message.header = object.header !== void 0 && object.header !== null ? types_1.Header.fromPartial(object.header) : void 0;
        message.lastCommitInfo = object.lastCommitInfo !== void 0 && object.lastCommitInfo !== null ? exports.LastCommitInfo.fromPartial(object.lastCommitInfo) : void 0;
        message.byzantineValidators = ((_a = object.byzantineValidators) == null ? void 0 : _a.map((e2) => exports.Evidence.fromPartial(e2))) || [];
        return message;
      }
    };
    function createBaseRequestCheckTx() {
      return {
        tx: new Uint8Array(),
        type: 0
      };
    }
    exports.RequestCheckTx = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.tx.length !== 0) {
          writer.uint32(10).bytes(message.tx);
        }
        if (message.type !== 0) {
          writer.uint32(16).int32(message.type);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseRequestCheckTx();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.tx = reader.bytes();
              break;
            case 2:
              message.type = reader.int32();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          tx: (0, helpers_1.isSet)(object.tx) ? (0, helpers_1.bytesFromBase64)(object.tx) : new Uint8Array(),
          type: (0, helpers_1.isSet)(object.type) ? checkTxTypeFromJSON(object.type) : 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.tx !== void 0 && (obj.tx = (0, helpers_1.base64FromBytes)(message.tx !== void 0 ? message.tx : new Uint8Array()));
        message.type !== void 0 && (obj.type = checkTxTypeToJSON(message.type));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseRequestCheckTx();
        message.tx = object.tx ?? new Uint8Array();
        message.type = object.type ?? 0;
        return message;
      }
    };
    function createBaseRequestDeliverTx() {
      return {
        tx: new Uint8Array()
      };
    }
    exports.RequestDeliverTx = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.tx.length !== 0) {
          writer.uint32(10).bytes(message.tx);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseRequestDeliverTx();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.tx = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          tx: (0, helpers_1.isSet)(object.tx) ? (0, helpers_1.bytesFromBase64)(object.tx) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.tx !== void 0 && (obj.tx = (0, helpers_1.base64FromBytes)(message.tx !== void 0 ? message.tx : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseRequestDeliverTx();
        message.tx = object.tx ?? new Uint8Array();
        return message;
      }
    };
    function createBaseRequestEndBlock() {
      return {
        height: helpers_1.Long.ZERO
      };
    }
    exports.RequestEndBlock = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.height.isZero()) {
          writer.uint32(8).int64(message.height);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseRequestEndBlock();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.height = reader.int64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          height: (0, helpers_1.isSet)(object.height) ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.ZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.height !== void 0 && (obj.height = (message.height || helpers_1.Long.ZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseRequestEndBlock();
        message.height = object.height !== void 0 && object.height !== null ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.ZERO;
        return message;
      }
    };
    function createBaseRequestCommit() {
      return {};
    }
    exports.RequestCommit = {
      encode(_3, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseRequestCommit();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_3) {
        return {};
      },
      toJSON(_3) {
        const obj = {};
        return obj;
      },
      fromPartial(_3) {
        const message = createBaseRequestCommit();
        return message;
      }
    };
    function createBaseRequestListSnapshots() {
      return {};
    }
    exports.RequestListSnapshots = {
      encode(_3, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseRequestListSnapshots();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_3) {
        return {};
      },
      toJSON(_3) {
        const obj = {};
        return obj;
      },
      fromPartial(_3) {
        const message = createBaseRequestListSnapshots();
        return message;
      }
    };
    function createBaseRequestOfferSnapshot() {
      return {
        snapshot: void 0,
        appHash: new Uint8Array()
      };
    }
    exports.RequestOfferSnapshot = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.snapshot !== void 0) {
          exports.Snapshot.encode(message.snapshot, writer.uint32(10).fork()).ldelim();
        }
        if (message.appHash.length !== 0) {
          writer.uint32(18).bytes(message.appHash);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseRequestOfferSnapshot();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.snapshot = exports.Snapshot.decode(reader, reader.uint32());
              break;
            case 2:
              message.appHash = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          snapshot: (0, helpers_1.isSet)(object.snapshot) ? exports.Snapshot.fromJSON(object.snapshot) : void 0,
          appHash: (0, helpers_1.isSet)(object.appHash) ? (0, helpers_1.bytesFromBase64)(object.appHash) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.snapshot !== void 0 && (obj.snapshot = message.snapshot ? exports.Snapshot.toJSON(message.snapshot) : void 0);
        message.appHash !== void 0 && (obj.appHash = (0, helpers_1.base64FromBytes)(message.appHash !== void 0 ? message.appHash : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseRequestOfferSnapshot();
        message.snapshot = object.snapshot !== void 0 && object.snapshot !== null ? exports.Snapshot.fromPartial(object.snapshot) : void 0;
        message.appHash = object.appHash ?? new Uint8Array();
        return message;
      }
    };
    function createBaseRequestLoadSnapshotChunk() {
      return {
        height: helpers_1.Long.UZERO,
        format: 0,
        chunk: 0
      };
    }
    exports.RequestLoadSnapshotChunk = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.height.isZero()) {
          writer.uint32(8).uint64(message.height);
        }
        if (message.format !== 0) {
          writer.uint32(16).uint32(message.format);
        }
        if (message.chunk !== 0) {
          writer.uint32(24).uint32(message.chunk);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseRequestLoadSnapshotChunk();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.height = reader.uint64();
              break;
            case 2:
              message.format = reader.uint32();
              break;
            case 3:
              message.chunk = reader.uint32();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          height: (0, helpers_1.isSet)(object.height) ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.UZERO,
          format: (0, helpers_1.isSet)(object.format) ? Number(object.format) : 0,
          chunk: (0, helpers_1.isSet)(object.chunk) ? Number(object.chunk) : 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.height !== void 0 && (obj.height = (message.height || helpers_1.Long.UZERO).toString());
        message.format !== void 0 && (obj.format = Math.round(message.format));
        message.chunk !== void 0 && (obj.chunk = Math.round(message.chunk));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseRequestLoadSnapshotChunk();
        message.height = object.height !== void 0 && object.height !== null ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.UZERO;
        message.format = object.format ?? 0;
        message.chunk = object.chunk ?? 0;
        return message;
      }
    };
    function createBaseRequestApplySnapshotChunk() {
      return {
        index: 0,
        chunk: new Uint8Array(),
        sender: ""
      };
    }
    exports.RequestApplySnapshotChunk = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.index !== 0) {
          writer.uint32(8).uint32(message.index);
        }
        if (message.chunk.length !== 0) {
          writer.uint32(18).bytes(message.chunk);
        }
        if (message.sender !== "") {
          writer.uint32(26).string(message.sender);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseRequestApplySnapshotChunk();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.index = reader.uint32();
              break;
            case 2:
              message.chunk = reader.bytes();
              break;
            case 3:
              message.sender = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          index: (0, helpers_1.isSet)(object.index) ? Number(object.index) : 0,
          chunk: (0, helpers_1.isSet)(object.chunk) ? (0, helpers_1.bytesFromBase64)(object.chunk) : new Uint8Array(),
          sender: (0, helpers_1.isSet)(object.sender) ? String(object.sender) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.index !== void 0 && (obj.index = Math.round(message.index));
        message.chunk !== void 0 && (obj.chunk = (0, helpers_1.base64FromBytes)(message.chunk !== void 0 ? message.chunk : new Uint8Array()));
        message.sender !== void 0 && (obj.sender = message.sender);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseRequestApplySnapshotChunk();
        message.index = object.index ?? 0;
        message.chunk = object.chunk ?? new Uint8Array();
        message.sender = object.sender ?? "";
        return message;
      }
    };
    function createBaseResponse() {
      return {
        exception: void 0,
        echo: void 0,
        flush: void 0,
        info: void 0,
        setOption: void 0,
        initChain: void 0,
        query: void 0,
        beginBlock: void 0,
        checkTx: void 0,
        deliverTx: void 0,
        endBlock: void 0,
        commit: void 0,
        listSnapshots: void 0,
        offerSnapshot: void 0,
        loadSnapshotChunk: void 0,
        applySnapshotChunk: void 0
      };
    }
    exports.Response = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.exception !== void 0) {
          exports.ResponseException.encode(message.exception, writer.uint32(10).fork()).ldelim();
        }
        if (message.echo !== void 0) {
          exports.ResponseEcho.encode(message.echo, writer.uint32(18).fork()).ldelim();
        }
        if (message.flush !== void 0) {
          exports.ResponseFlush.encode(message.flush, writer.uint32(26).fork()).ldelim();
        }
        if (message.info !== void 0) {
          exports.ResponseInfo.encode(message.info, writer.uint32(34).fork()).ldelim();
        }
        if (message.setOption !== void 0) {
          exports.ResponseSetOption.encode(message.setOption, writer.uint32(42).fork()).ldelim();
        }
        if (message.initChain !== void 0) {
          exports.ResponseInitChain.encode(message.initChain, writer.uint32(50).fork()).ldelim();
        }
        if (message.query !== void 0) {
          exports.ResponseQuery.encode(message.query, writer.uint32(58).fork()).ldelim();
        }
        if (message.beginBlock !== void 0) {
          exports.ResponseBeginBlock.encode(message.beginBlock, writer.uint32(66).fork()).ldelim();
        }
        if (message.checkTx !== void 0) {
          exports.ResponseCheckTx.encode(message.checkTx, writer.uint32(74).fork()).ldelim();
        }
        if (message.deliverTx !== void 0) {
          exports.ResponseDeliverTx.encode(message.deliverTx, writer.uint32(82).fork()).ldelim();
        }
        if (message.endBlock !== void 0) {
          exports.ResponseEndBlock.encode(message.endBlock, writer.uint32(90).fork()).ldelim();
        }
        if (message.commit !== void 0) {
          exports.ResponseCommit.encode(message.commit, writer.uint32(98).fork()).ldelim();
        }
        if (message.listSnapshots !== void 0) {
          exports.ResponseListSnapshots.encode(message.listSnapshots, writer.uint32(106).fork()).ldelim();
        }
        if (message.offerSnapshot !== void 0) {
          exports.ResponseOfferSnapshot.encode(message.offerSnapshot, writer.uint32(114).fork()).ldelim();
        }
        if (message.loadSnapshotChunk !== void 0) {
          exports.ResponseLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(122).fork()).ldelim();
        }
        if (message.applySnapshotChunk !== void 0) {
          exports.ResponseApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(130).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.exception = exports.ResponseException.decode(reader, reader.uint32());
              break;
            case 2:
              message.echo = exports.ResponseEcho.decode(reader, reader.uint32());
              break;
            case 3:
              message.flush = exports.ResponseFlush.decode(reader, reader.uint32());
              break;
            case 4:
              message.info = exports.ResponseInfo.decode(reader, reader.uint32());
              break;
            case 5:
              message.setOption = exports.ResponseSetOption.decode(reader, reader.uint32());
              break;
            case 6:
              message.initChain = exports.ResponseInitChain.decode(reader, reader.uint32());
              break;
            case 7:
              message.query = exports.ResponseQuery.decode(reader, reader.uint32());
              break;
            case 8:
              message.beginBlock = exports.ResponseBeginBlock.decode(reader, reader.uint32());
              break;
            case 9:
              message.checkTx = exports.ResponseCheckTx.decode(reader, reader.uint32());
              break;
            case 10:
              message.deliverTx = exports.ResponseDeliverTx.decode(reader, reader.uint32());
              break;
            case 11:
              message.endBlock = exports.ResponseEndBlock.decode(reader, reader.uint32());
              break;
            case 12:
              message.commit = exports.ResponseCommit.decode(reader, reader.uint32());
              break;
            case 13:
              message.listSnapshots = exports.ResponseListSnapshots.decode(reader, reader.uint32());
              break;
            case 14:
              message.offerSnapshot = exports.ResponseOfferSnapshot.decode(reader, reader.uint32());
              break;
            case 15:
              message.loadSnapshotChunk = exports.ResponseLoadSnapshotChunk.decode(reader, reader.uint32());
              break;
            case 16:
              message.applySnapshotChunk = exports.ResponseApplySnapshotChunk.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          exception: (0, helpers_1.isSet)(object.exception) ? exports.ResponseException.fromJSON(object.exception) : void 0,
          echo: (0, helpers_1.isSet)(object.echo) ? exports.ResponseEcho.fromJSON(object.echo) : void 0,
          flush: (0, helpers_1.isSet)(object.flush) ? exports.ResponseFlush.fromJSON(object.flush) : void 0,
          info: (0, helpers_1.isSet)(object.info) ? exports.ResponseInfo.fromJSON(object.info) : void 0,
          setOption: (0, helpers_1.isSet)(object.setOption) ? exports.ResponseSetOption.fromJSON(object.setOption) : void 0,
          initChain: (0, helpers_1.isSet)(object.initChain) ? exports.ResponseInitChain.fromJSON(object.initChain) : void 0,
          query: (0, helpers_1.isSet)(object.query) ? exports.ResponseQuery.fromJSON(object.query) : void 0,
          beginBlock: (0, helpers_1.isSet)(object.beginBlock) ? exports.ResponseBeginBlock.fromJSON(object.beginBlock) : void 0,
          checkTx: (0, helpers_1.isSet)(object.checkTx) ? exports.ResponseCheckTx.fromJSON(object.checkTx) : void 0,
          deliverTx: (0, helpers_1.isSet)(object.deliverTx) ? exports.ResponseDeliverTx.fromJSON(object.deliverTx) : void 0,
          endBlock: (0, helpers_1.isSet)(object.endBlock) ? exports.ResponseEndBlock.fromJSON(object.endBlock) : void 0,
          commit: (0, helpers_1.isSet)(object.commit) ? exports.ResponseCommit.fromJSON(object.commit) : void 0,
          listSnapshots: (0, helpers_1.isSet)(object.listSnapshots) ? exports.ResponseListSnapshots.fromJSON(object.listSnapshots) : void 0,
          offerSnapshot: (0, helpers_1.isSet)(object.offerSnapshot) ? exports.ResponseOfferSnapshot.fromJSON(object.offerSnapshot) : void 0,
          loadSnapshotChunk: (0, helpers_1.isSet)(object.loadSnapshotChunk) ? exports.ResponseLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk) : void 0,
          applySnapshotChunk: (0, helpers_1.isSet)(object.applySnapshotChunk) ? exports.ResponseApplySnapshotChunk.fromJSON(object.applySnapshotChunk) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.exception !== void 0 && (obj.exception = message.exception ? exports.ResponseException.toJSON(message.exception) : void 0);
        message.echo !== void 0 && (obj.echo = message.echo ? exports.ResponseEcho.toJSON(message.echo) : void 0);
        message.flush !== void 0 && (obj.flush = message.flush ? exports.ResponseFlush.toJSON(message.flush) : void 0);
        message.info !== void 0 && (obj.info = message.info ? exports.ResponseInfo.toJSON(message.info) : void 0);
        message.setOption !== void 0 && (obj.setOption = message.setOption ? exports.ResponseSetOption.toJSON(message.setOption) : void 0);
        message.initChain !== void 0 && (obj.initChain = message.initChain ? exports.ResponseInitChain.toJSON(message.initChain) : void 0);
        message.query !== void 0 && (obj.query = message.query ? exports.ResponseQuery.toJSON(message.query) : void 0);
        message.beginBlock !== void 0 && (obj.beginBlock = message.beginBlock ? exports.ResponseBeginBlock.toJSON(message.beginBlock) : void 0);
        message.checkTx !== void 0 && (obj.checkTx = message.checkTx ? exports.ResponseCheckTx.toJSON(message.checkTx) : void 0);
        message.deliverTx !== void 0 && (obj.deliverTx = message.deliverTx ? exports.ResponseDeliverTx.toJSON(message.deliverTx) : void 0);
        message.endBlock !== void 0 && (obj.endBlock = message.endBlock ? exports.ResponseEndBlock.toJSON(message.endBlock) : void 0);
        message.commit !== void 0 && (obj.commit = message.commit ? exports.ResponseCommit.toJSON(message.commit) : void 0);
        message.listSnapshots !== void 0 && (obj.listSnapshots = message.listSnapshots ? exports.ResponseListSnapshots.toJSON(message.listSnapshots) : void 0);
        message.offerSnapshot !== void 0 && (obj.offerSnapshot = message.offerSnapshot ? exports.ResponseOfferSnapshot.toJSON(message.offerSnapshot) : void 0);
        message.loadSnapshotChunk !== void 0 && (obj.loadSnapshotChunk = message.loadSnapshotChunk ? exports.ResponseLoadSnapshotChunk.toJSON(message.loadSnapshotChunk) : void 0);
        message.applySnapshotChunk !== void 0 && (obj.applySnapshotChunk = message.applySnapshotChunk ? exports.ResponseApplySnapshotChunk.toJSON(message.applySnapshotChunk) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseResponse();
        message.exception = object.exception !== void 0 && object.exception !== null ? exports.ResponseException.fromPartial(object.exception) : void 0;
        message.echo = object.echo !== void 0 && object.echo !== null ? exports.ResponseEcho.fromPartial(object.echo) : void 0;
        message.flush = object.flush !== void 0 && object.flush !== null ? exports.ResponseFlush.fromPartial(object.flush) : void 0;
        message.info = object.info !== void 0 && object.info !== null ? exports.ResponseInfo.fromPartial(object.info) : void 0;
        message.setOption = object.setOption !== void 0 && object.setOption !== null ? exports.ResponseSetOption.fromPartial(object.setOption) : void 0;
        message.initChain = object.initChain !== void 0 && object.initChain !== null ? exports.ResponseInitChain.fromPartial(object.initChain) : void 0;
        message.query = object.query !== void 0 && object.query !== null ? exports.ResponseQuery.fromPartial(object.query) : void 0;
        message.beginBlock = object.beginBlock !== void 0 && object.beginBlock !== null ? exports.ResponseBeginBlock.fromPartial(object.beginBlock) : void 0;
        message.checkTx = object.checkTx !== void 0 && object.checkTx !== null ? exports.ResponseCheckTx.fromPartial(object.checkTx) : void 0;
        message.deliverTx = object.deliverTx !== void 0 && object.deliverTx !== null ? exports.ResponseDeliverTx.fromPartial(object.deliverTx) : void 0;
        message.endBlock = object.endBlock !== void 0 && object.endBlock !== null ? exports.ResponseEndBlock.fromPartial(object.endBlock) : void 0;
        message.commit = object.commit !== void 0 && object.commit !== null ? exports.ResponseCommit.fromPartial(object.commit) : void 0;
        message.listSnapshots = object.listSnapshots !== void 0 && object.listSnapshots !== null ? exports.ResponseListSnapshots.fromPartial(object.listSnapshots) : void 0;
        message.offerSnapshot = object.offerSnapshot !== void 0 && object.offerSnapshot !== null ? exports.ResponseOfferSnapshot.fromPartial(object.offerSnapshot) : void 0;
        message.loadSnapshotChunk = object.loadSnapshotChunk !== void 0 && object.loadSnapshotChunk !== null ? exports.ResponseLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk) : void 0;
        message.applySnapshotChunk = object.applySnapshotChunk !== void 0 && object.applySnapshotChunk !== null ? exports.ResponseApplySnapshotChunk.fromPartial(object.applySnapshotChunk) : void 0;
        return message;
      }
    };
    function createBaseResponseException() {
      return {
        error: ""
      };
    }
    exports.ResponseException = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.error !== "") {
          writer.uint32(10).string(message.error);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseResponseException();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.error = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          error: (0, helpers_1.isSet)(object.error) ? String(object.error) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.error !== void 0 && (obj.error = message.error);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseResponseException();
        message.error = object.error ?? "";
        return message;
      }
    };
    function createBaseResponseEcho() {
      return {
        message: ""
      };
    }
    exports.ResponseEcho = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.message !== "") {
          writer.uint32(10).string(message.message);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseResponseEcho();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.message = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          message: (0, helpers_1.isSet)(object.message) ? String(object.message) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.message !== void 0 && (obj.message = message.message);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseResponseEcho();
        message.message = object.message ?? "";
        return message;
      }
    };
    function createBaseResponseFlush() {
      return {};
    }
    exports.ResponseFlush = {
      encode(_3, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseResponseFlush();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_3) {
        return {};
      },
      toJSON(_3) {
        const obj = {};
        return obj;
      },
      fromPartial(_3) {
        const message = createBaseResponseFlush();
        return message;
      }
    };
    function createBaseResponseInfo() {
      return {
        data: "",
        version: "",
        appVersion: helpers_1.Long.UZERO,
        lastBlockHeight: helpers_1.Long.ZERO,
        lastBlockAppHash: new Uint8Array()
      };
    }
    exports.ResponseInfo = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.data !== "") {
          writer.uint32(10).string(message.data);
        }
        if (message.version !== "") {
          writer.uint32(18).string(message.version);
        }
        if (!message.appVersion.isZero()) {
          writer.uint32(24).uint64(message.appVersion);
        }
        if (!message.lastBlockHeight.isZero()) {
          writer.uint32(32).int64(message.lastBlockHeight);
        }
        if (message.lastBlockAppHash.length !== 0) {
          writer.uint32(42).bytes(message.lastBlockAppHash);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseResponseInfo();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.data = reader.string();
              break;
            case 2:
              message.version = reader.string();
              break;
            case 3:
              message.appVersion = reader.uint64();
              break;
            case 4:
              message.lastBlockHeight = reader.int64();
              break;
            case 5:
              message.lastBlockAppHash = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          data: (0, helpers_1.isSet)(object.data) ? String(object.data) : "",
          version: (0, helpers_1.isSet)(object.version) ? String(object.version) : "",
          appVersion: (0, helpers_1.isSet)(object.appVersion) ? helpers_1.Long.fromValue(object.appVersion) : helpers_1.Long.UZERO,
          lastBlockHeight: (0, helpers_1.isSet)(object.lastBlockHeight) ? helpers_1.Long.fromValue(object.lastBlockHeight) : helpers_1.Long.ZERO,
          lastBlockAppHash: (0, helpers_1.isSet)(object.lastBlockAppHash) ? (0, helpers_1.bytesFromBase64)(object.lastBlockAppHash) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.data !== void 0 && (obj.data = message.data);
        message.version !== void 0 && (obj.version = message.version);
        message.appVersion !== void 0 && (obj.appVersion = (message.appVersion || helpers_1.Long.UZERO).toString());
        message.lastBlockHeight !== void 0 && (obj.lastBlockHeight = (message.lastBlockHeight || helpers_1.Long.ZERO).toString());
        message.lastBlockAppHash !== void 0 && (obj.lastBlockAppHash = (0, helpers_1.base64FromBytes)(message.lastBlockAppHash !== void 0 ? message.lastBlockAppHash : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseResponseInfo();
        message.data = object.data ?? "";
        message.version = object.version ?? "";
        message.appVersion = object.appVersion !== void 0 && object.appVersion !== null ? helpers_1.Long.fromValue(object.appVersion) : helpers_1.Long.UZERO;
        message.lastBlockHeight = object.lastBlockHeight !== void 0 && object.lastBlockHeight !== null ? helpers_1.Long.fromValue(object.lastBlockHeight) : helpers_1.Long.ZERO;
        message.lastBlockAppHash = object.lastBlockAppHash ?? new Uint8Array();
        return message;
      }
    };
    function createBaseResponseSetOption() {
      return {
        code: 0,
        log: "",
        info: ""
      };
    }
    exports.ResponseSetOption = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.code !== 0) {
          writer.uint32(8).uint32(message.code);
        }
        if (message.log !== "") {
          writer.uint32(26).string(message.log);
        }
        if (message.info !== "") {
          writer.uint32(34).string(message.info);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseResponseSetOption();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.code = reader.uint32();
              break;
            case 3:
              message.log = reader.string();
              break;
            case 4:
              message.info = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          code: (0, helpers_1.isSet)(object.code) ? Number(object.code) : 0,
          log: (0, helpers_1.isSet)(object.log) ? String(object.log) : "",
          info: (0, helpers_1.isSet)(object.info) ? String(object.info) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.code !== void 0 && (obj.code = Math.round(message.code));
        message.log !== void 0 && (obj.log = message.log);
        message.info !== void 0 && (obj.info = message.info);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseResponseSetOption();
        message.code = object.code ?? 0;
        message.log = object.log ?? "";
        message.info = object.info ?? "";
        return message;
      }
    };
    function createBaseResponseInitChain() {
      return {
        consensusParams: void 0,
        validators: [],
        appHash: new Uint8Array()
      };
    }
    exports.ResponseInitChain = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.consensusParams !== void 0) {
          exports.ConsensusParams.encode(message.consensusParams, writer.uint32(10).fork()).ldelim();
        }
        for (const v3 of message.validators) {
          exports.ValidatorUpdate.encode(v3, writer.uint32(18).fork()).ldelim();
        }
        if (message.appHash.length !== 0) {
          writer.uint32(26).bytes(message.appHash);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseResponseInitChain();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.consensusParams = exports.ConsensusParams.decode(reader, reader.uint32());
              break;
            case 2:
              message.validators.push(exports.ValidatorUpdate.decode(reader, reader.uint32()));
              break;
            case 3:
              message.appHash = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          consensusParams: (0, helpers_1.isSet)(object.consensusParams) ? exports.ConsensusParams.fromJSON(object.consensusParams) : void 0,
          validators: Array.isArray(object == null ? void 0 : object.validators) ? object.validators.map((e2) => exports.ValidatorUpdate.fromJSON(e2)) : [],
          appHash: (0, helpers_1.isSet)(object.appHash) ? (0, helpers_1.bytesFromBase64)(object.appHash) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.consensusParams !== void 0 && (obj.consensusParams = message.consensusParams ? exports.ConsensusParams.toJSON(message.consensusParams) : void 0);
        if (message.validators) {
          obj.validators = message.validators.map((e2) => e2 ? exports.ValidatorUpdate.toJSON(e2) : void 0);
        } else {
          obj.validators = [];
        }
        message.appHash !== void 0 && (obj.appHash = (0, helpers_1.base64FromBytes)(message.appHash !== void 0 ? message.appHash : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseResponseInitChain();
        message.consensusParams = object.consensusParams !== void 0 && object.consensusParams !== null ? exports.ConsensusParams.fromPartial(object.consensusParams) : void 0;
        message.validators = ((_a = object.validators) == null ? void 0 : _a.map((e2) => exports.ValidatorUpdate.fromPartial(e2))) || [];
        message.appHash = object.appHash ?? new Uint8Array();
        return message;
      }
    };
    function createBaseResponseQuery() {
      return {
        code: 0,
        log: "",
        info: "",
        index: helpers_1.Long.ZERO,
        key: new Uint8Array(),
        value: new Uint8Array(),
        proofOps: void 0,
        height: helpers_1.Long.ZERO,
        codespace: ""
      };
    }
    exports.ResponseQuery = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.code !== 0) {
          writer.uint32(8).uint32(message.code);
        }
        if (message.log !== "") {
          writer.uint32(26).string(message.log);
        }
        if (message.info !== "") {
          writer.uint32(34).string(message.info);
        }
        if (!message.index.isZero()) {
          writer.uint32(40).int64(message.index);
        }
        if (message.key.length !== 0) {
          writer.uint32(50).bytes(message.key);
        }
        if (message.value.length !== 0) {
          writer.uint32(58).bytes(message.value);
        }
        if (message.proofOps !== void 0) {
          proof_1.ProofOps.encode(message.proofOps, writer.uint32(66).fork()).ldelim();
        }
        if (!message.height.isZero()) {
          writer.uint32(72).int64(message.height);
        }
        if (message.codespace !== "") {
          writer.uint32(82).string(message.codespace);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseResponseQuery();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.code = reader.uint32();
              break;
            case 3:
              message.log = reader.string();
              break;
            case 4:
              message.info = reader.string();
              break;
            case 5:
              message.index = reader.int64();
              break;
            case 6:
              message.key = reader.bytes();
              break;
            case 7:
              message.value = reader.bytes();
              break;
            case 8:
              message.proofOps = proof_1.ProofOps.decode(reader, reader.uint32());
              break;
            case 9:
              message.height = reader.int64();
              break;
            case 10:
              message.codespace = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          code: (0, helpers_1.isSet)(object.code) ? Number(object.code) : 0,
          log: (0, helpers_1.isSet)(object.log) ? String(object.log) : "",
          info: (0, helpers_1.isSet)(object.info) ? String(object.info) : "",
          index: (0, helpers_1.isSet)(object.index) ? helpers_1.Long.fromValue(object.index) : helpers_1.Long.ZERO,
          key: (0, helpers_1.isSet)(object.key) ? (0, helpers_1.bytesFromBase64)(object.key) : new Uint8Array(),
          value: (0, helpers_1.isSet)(object.value) ? (0, helpers_1.bytesFromBase64)(object.value) : new Uint8Array(),
          proofOps: (0, helpers_1.isSet)(object.proofOps) ? proof_1.ProofOps.fromJSON(object.proofOps) : void 0,
          height: (0, helpers_1.isSet)(object.height) ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.ZERO,
          codespace: (0, helpers_1.isSet)(object.codespace) ? String(object.codespace) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.code !== void 0 && (obj.code = Math.round(message.code));
        message.log !== void 0 && (obj.log = message.log);
        message.info !== void 0 && (obj.info = message.info);
        message.index !== void 0 && (obj.index = (message.index || helpers_1.Long.ZERO).toString());
        message.key !== void 0 && (obj.key = (0, helpers_1.base64FromBytes)(message.key !== void 0 ? message.key : new Uint8Array()));
        message.value !== void 0 && (obj.value = (0, helpers_1.base64FromBytes)(message.value !== void 0 ? message.value : new Uint8Array()));
        message.proofOps !== void 0 && (obj.proofOps = message.proofOps ? proof_1.ProofOps.toJSON(message.proofOps) : void 0);
        message.height !== void 0 && (obj.height = (message.height || helpers_1.Long.ZERO).toString());
        message.codespace !== void 0 && (obj.codespace = message.codespace);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseResponseQuery();
        message.code = object.code ?? 0;
        message.log = object.log ?? "";
        message.info = object.info ?? "";
        message.index = object.index !== void 0 && object.index !== null ? helpers_1.Long.fromValue(object.index) : helpers_1.Long.ZERO;
        message.key = object.key ?? new Uint8Array();
        message.value = object.value ?? new Uint8Array();
        message.proofOps = object.proofOps !== void 0 && object.proofOps !== null ? proof_1.ProofOps.fromPartial(object.proofOps) : void 0;
        message.height = object.height !== void 0 && object.height !== null ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.ZERO;
        message.codespace = object.codespace ?? "";
        return message;
      }
    };
    function createBaseResponseBeginBlock() {
      return {
        events: []
      };
    }
    exports.ResponseBeginBlock = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.events) {
          exports.Event.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseResponseBeginBlock();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.events.push(exports.Event.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          events: Array.isArray(object == null ? void 0 : object.events) ? object.events.map((e2) => exports.Event.fromJSON(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.events) {
          obj.events = message.events.map((e2) => e2 ? exports.Event.toJSON(e2) : void 0);
        } else {
          obj.events = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseResponseBeginBlock();
        message.events = ((_a = object.events) == null ? void 0 : _a.map((e2) => exports.Event.fromPartial(e2))) || [];
        return message;
      }
    };
    function createBaseResponseCheckTx() {
      return {
        code: 0,
        data: new Uint8Array(),
        log: "",
        info: "",
        gasWanted: helpers_1.Long.ZERO,
        gasUsed: helpers_1.Long.ZERO,
        events: [],
        codespace: "",
        sender: "",
        priority: helpers_1.Long.ZERO,
        mempoolError: ""
      };
    }
    exports.ResponseCheckTx = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.code !== 0) {
          writer.uint32(8).uint32(message.code);
        }
        if (message.data.length !== 0) {
          writer.uint32(18).bytes(message.data);
        }
        if (message.log !== "") {
          writer.uint32(26).string(message.log);
        }
        if (message.info !== "") {
          writer.uint32(34).string(message.info);
        }
        if (!message.gasWanted.isZero()) {
          writer.uint32(40).int64(message.gasWanted);
        }
        if (!message.gasUsed.isZero()) {
          writer.uint32(48).int64(message.gasUsed);
        }
        for (const v3 of message.events) {
          exports.Event.encode(v3, writer.uint32(58).fork()).ldelim();
        }
        if (message.codespace !== "") {
          writer.uint32(66).string(message.codespace);
        }
        if (message.sender !== "") {
          writer.uint32(74).string(message.sender);
        }
        if (!message.priority.isZero()) {
          writer.uint32(80).int64(message.priority);
        }
        if (message.mempoolError !== "") {
          writer.uint32(90).string(message.mempoolError);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseResponseCheckTx();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.code = reader.uint32();
              break;
            case 2:
              message.data = reader.bytes();
              break;
            case 3:
              message.log = reader.string();
              break;
            case 4:
              message.info = reader.string();
              break;
            case 5:
              message.gasWanted = reader.int64();
              break;
            case 6:
              message.gasUsed = reader.int64();
              break;
            case 7:
              message.events.push(exports.Event.decode(reader, reader.uint32()));
              break;
            case 8:
              message.codespace = reader.string();
              break;
            case 9:
              message.sender = reader.string();
              break;
            case 10:
              message.priority = reader.int64();
              break;
            case 11:
              message.mempoolError = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          code: (0, helpers_1.isSet)(object.code) ? Number(object.code) : 0,
          data: (0, helpers_1.isSet)(object.data) ? (0, helpers_1.bytesFromBase64)(object.data) : new Uint8Array(),
          log: (0, helpers_1.isSet)(object.log) ? String(object.log) : "",
          info: (0, helpers_1.isSet)(object.info) ? String(object.info) : "",
          gasWanted: (0, helpers_1.isSet)(object.gas_wanted) ? helpers_1.Long.fromValue(object.gas_wanted) : helpers_1.Long.ZERO,
          gasUsed: (0, helpers_1.isSet)(object.gas_used) ? helpers_1.Long.fromValue(object.gas_used) : helpers_1.Long.ZERO,
          events: Array.isArray(object == null ? void 0 : object.events) ? object.events.map((e2) => exports.Event.fromJSON(e2)) : [],
          codespace: (0, helpers_1.isSet)(object.codespace) ? String(object.codespace) : "",
          sender: (0, helpers_1.isSet)(object.sender) ? String(object.sender) : "",
          priority: (0, helpers_1.isSet)(object.priority) ? helpers_1.Long.fromValue(object.priority) : helpers_1.Long.ZERO,
          mempoolError: (0, helpers_1.isSet)(object.mempoolError) ? String(object.mempoolError) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.code !== void 0 && (obj.code = Math.round(message.code));
        message.data !== void 0 && (obj.data = (0, helpers_1.base64FromBytes)(message.data !== void 0 ? message.data : new Uint8Array()));
        message.log !== void 0 && (obj.log = message.log);
        message.info !== void 0 && (obj.info = message.info);
        message.gasWanted !== void 0 && (obj.gas_wanted = (message.gasWanted || helpers_1.Long.ZERO).toString());
        message.gasUsed !== void 0 && (obj.gas_used = (message.gasUsed || helpers_1.Long.ZERO).toString());
        if (message.events) {
          obj.events = message.events.map((e2) => e2 ? exports.Event.toJSON(e2) : void 0);
        } else {
          obj.events = [];
        }
        message.codespace !== void 0 && (obj.codespace = message.codespace);
        message.sender !== void 0 && (obj.sender = message.sender);
        message.priority !== void 0 && (obj.priority = (message.priority || helpers_1.Long.ZERO).toString());
        message.mempoolError !== void 0 && (obj.mempoolError = message.mempoolError);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseResponseCheckTx();
        message.code = object.code ?? 0;
        message.data = object.data ?? new Uint8Array();
        message.log = object.log ?? "";
        message.info = object.info ?? "";
        message.gasWanted = object.gasWanted !== void 0 && object.gasWanted !== null ? helpers_1.Long.fromValue(object.gasWanted) : helpers_1.Long.ZERO;
        message.gasUsed = object.gasUsed !== void 0 && object.gasUsed !== null ? helpers_1.Long.fromValue(object.gasUsed) : helpers_1.Long.ZERO;
        message.events = ((_a = object.events) == null ? void 0 : _a.map((e2) => exports.Event.fromPartial(e2))) || [];
        message.codespace = object.codespace ?? "";
        message.sender = object.sender ?? "";
        message.priority = object.priority !== void 0 && object.priority !== null ? helpers_1.Long.fromValue(object.priority) : helpers_1.Long.ZERO;
        message.mempoolError = object.mempoolError ?? "";
        return message;
      }
    };
    function createBaseResponseDeliverTx() {
      return {
        code: 0,
        data: new Uint8Array(),
        log: "",
        info: "",
        gasWanted: helpers_1.Long.ZERO,
        gasUsed: helpers_1.Long.ZERO,
        events: [],
        codespace: ""
      };
    }
    exports.ResponseDeliverTx = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.code !== 0) {
          writer.uint32(8).uint32(message.code);
        }
        if (message.data.length !== 0) {
          writer.uint32(18).bytes(message.data);
        }
        if (message.log !== "") {
          writer.uint32(26).string(message.log);
        }
        if (message.info !== "") {
          writer.uint32(34).string(message.info);
        }
        if (!message.gasWanted.isZero()) {
          writer.uint32(40).int64(message.gasWanted);
        }
        if (!message.gasUsed.isZero()) {
          writer.uint32(48).int64(message.gasUsed);
        }
        for (const v3 of message.events) {
          exports.Event.encode(v3, writer.uint32(58).fork()).ldelim();
        }
        if (message.codespace !== "") {
          writer.uint32(66).string(message.codespace);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseResponseDeliverTx();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.code = reader.uint32();
              break;
            case 2:
              message.data = reader.bytes();
              break;
            case 3:
              message.log = reader.string();
              break;
            case 4:
              message.info = reader.string();
              break;
            case 5:
              message.gasWanted = reader.int64();
              break;
            case 6:
              message.gasUsed = reader.int64();
              break;
            case 7:
              message.events.push(exports.Event.decode(reader, reader.uint32()));
              break;
            case 8:
              message.codespace = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          code: (0, helpers_1.isSet)(object.code) ? Number(object.code) : 0,
          data: (0, helpers_1.isSet)(object.data) ? (0, helpers_1.bytesFromBase64)(object.data) : new Uint8Array(),
          log: (0, helpers_1.isSet)(object.log) ? String(object.log) : "",
          info: (0, helpers_1.isSet)(object.info) ? String(object.info) : "",
          gasWanted: (0, helpers_1.isSet)(object.gas_wanted) ? helpers_1.Long.fromValue(object.gas_wanted) : helpers_1.Long.ZERO,
          gasUsed: (0, helpers_1.isSet)(object.gas_used) ? helpers_1.Long.fromValue(object.gas_used) : helpers_1.Long.ZERO,
          events: Array.isArray(object == null ? void 0 : object.events) ? object.events.map((e2) => exports.Event.fromJSON(e2)) : [],
          codespace: (0, helpers_1.isSet)(object.codespace) ? String(object.codespace) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.code !== void 0 && (obj.code = Math.round(message.code));
        message.data !== void 0 && (obj.data = (0, helpers_1.base64FromBytes)(message.data !== void 0 ? message.data : new Uint8Array()));
        message.log !== void 0 && (obj.log = message.log);
        message.info !== void 0 && (obj.info = message.info);
        message.gasWanted !== void 0 && (obj.gas_wanted = (message.gasWanted || helpers_1.Long.ZERO).toString());
        message.gasUsed !== void 0 && (obj.gas_used = (message.gasUsed || helpers_1.Long.ZERO).toString());
        if (message.events) {
          obj.events = message.events.map((e2) => e2 ? exports.Event.toJSON(e2) : void 0);
        } else {
          obj.events = [];
        }
        message.codespace !== void 0 && (obj.codespace = message.codespace);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseResponseDeliverTx();
        message.code = object.code ?? 0;
        message.data = object.data ?? new Uint8Array();
        message.log = object.log ?? "";
        message.info = object.info ?? "";
        message.gasWanted = object.gasWanted !== void 0 && object.gasWanted !== null ? helpers_1.Long.fromValue(object.gasWanted) : helpers_1.Long.ZERO;
        message.gasUsed = object.gasUsed !== void 0 && object.gasUsed !== null ? helpers_1.Long.fromValue(object.gasUsed) : helpers_1.Long.ZERO;
        message.events = ((_a = object.events) == null ? void 0 : _a.map((e2) => exports.Event.fromPartial(e2))) || [];
        message.codespace = object.codespace ?? "";
        return message;
      }
    };
    function createBaseResponseEndBlock() {
      return {
        validatorUpdates: [],
        consensusParamUpdates: void 0,
        events: []
      };
    }
    exports.ResponseEndBlock = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.validatorUpdates) {
          exports.ValidatorUpdate.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        if (message.consensusParamUpdates !== void 0) {
          exports.ConsensusParams.encode(message.consensusParamUpdates, writer.uint32(18).fork()).ldelim();
        }
        for (const v3 of message.events) {
          exports.Event.encode(v3, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseResponseEndBlock();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.validatorUpdates.push(exports.ValidatorUpdate.decode(reader, reader.uint32()));
              break;
            case 2:
              message.consensusParamUpdates = exports.ConsensusParams.decode(reader, reader.uint32());
              break;
            case 3:
              message.events.push(exports.Event.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          validatorUpdates: Array.isArray(object == null ? void 0 : object.validatorUpdates) ? object.validatorUpdates.map((e2) => exports.ValidatorUpdate.fromJSON(e2)) : [],
          consensusParamUpdates: (0, helpers_1.isSet)(object.consensusParamUpdates) ? exports.ConsensusParams.fromJSON(object.consensusParamUpdates) : void 0,
          events: Array.isArray(object == null ? void 0 : object.events) ? object.events.map((e2) => exports.Event.fromJSON(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.validatorUpdates) {
          obj.validatorUpdates = message.validatorUpdates.map((e2) => e2 ? exports.ValidatorUpdate.toJSON(e2) : void 0);
        } else {
          obj.validatorUpdates = [];
        }
        message.consensusParamUpdates !== void 0 && (obj.consensusParamUpdates = message.consensusParamUpdates ? exports.ConsensusParams.toJSON(message.consensusParamUpdates) : void 0);
        if (message.events) {
          obj.events = message.events.map((e2) => e2 ? exports.Event.toJSON(e2) : void 0);
        } else {
          obj.events = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a, _b;
        const message = createBaseResponseEndBlock();
        message.validatorUpdates = ((_a = object.validatorUpdates) == null ? void 0 : _a.map((e2) => exports.ValidatorUpdate.fromPartial(e2))) || [];
        message.consensusParamUpdates = object.consensusParamUpdates !== void 0 && object.consensusParamUpdates !== null ? exports.ConsensusParams.fromPartial(object.consensusParamUpdates) : void 0;
        message.events = ((_b = object.events) == null ? void 0 : _b.map((e2) => exports.Event.fromPartial(e2))) || [];
        return message;
      }
    };
    function createBaseResponseCommit() {
      return {
        data: new Uint8Array(),
        retainHeight: helpers_1.Long.ZERO
      };
    }
    exports.ResponseCommit = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.data.length !== 0) {
          writer.uint32(18).bytes(message.data);
        }
        if (!message.retainHeight.isZero()) {
          writer.uint32(24).int64(message.retainHeight);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseResponseCommit();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 2:
              message.data = reader.bytes();
              break;
            case 3:
              message.retainHeight = reader.int64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          data: (0, helpers_1.isSet)(object.data) ? (0, helpers_1.bytesFromBase64)(object.data) : new Uint8Array(),
          retainHeight: (0, helpers_1.isSet)(object.retainHeight) ? helpers_1.Long.fromValue(object.retainHeight) : helpers_1.Long.ZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.data !== void 0 && (obj.data = (0, helpers_1.base64FromBytes)(message.data !== void 0 ? message.data : new Uint8Array()));
        message.retainHeight !== void 0 && (obj.retainHeight = (message.retainHeight || helpers_1.Long.ZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseResponseCommit();
        message.data = object.data ?? new Uint8Array();
        message.retainHeight = object.retainHeight !== void 0 && object.retainHeight !== null ? helpers_1.Long.fromValue(object.retainHeight) : helpers_1.Long.ZERO;
        return message;
      }
    };
    function createBaseResponseListSnapshots() {
      return {
        snapshots: []
      };
    }
    exports.ResponseListSnapshots = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.snapshots) {
          exports.Snapshot.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseResponseListSnapshots();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.snapshots.push(exports.Snapshot.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          snapshots: Array.isArray(object == null ? void 0 : object.snapshots) ? object.snapshots.map((e2) => exports.Snapshot.fromJSON(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.snapshots) {
          obj.snapshots = message.snapshots.map((e2) => e2 ? exports.Snapshot.toJSON(e2) : void 0);
        } else {
          obj.snapshots = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseResponseListSnapshots();
        message.snapshots = ((_a = object.snapshots) == null ? void 0 : _a.map((e2) => exports.Snapshot.fromPartial(e2))) || [];
        return message;
      }
    };
    function createBaseResponseOfferSnapshot() {
      return {
        result: 0
      };
    }
    exports.ResponseOfferSnapshot = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.result !== 0) {
          writer.uint32(8).int32(message.result);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseResponseOfferSnapshot();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.result = reader.int32();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          result: (0, helpers_1.isSet)(object.result) ? responseOfferSnapshot_ResultFromJSON(object.result) : 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.result !== void 0 && (obj.result = responseOfferSnapshot_ResultToJSON(message.result));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseResponseOfferSnapshot();
        message.result = object.result ?? 0;
        return message;
      }
    };
    function createBaseResponseLoadSnapshotChunk() {
      return {
        chunk: new Uint8Array()
      };
    }
    exports.ResponseLoadSnapshotChunk = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.chunk.length !== 0) {
          writer.uint32(10).bytes(message.chunk);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseResponseLoadSnapshotChunk();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.chunk = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          chunk: (0, helpers_1.isSet)(object.chunk) ? (0, helpers_1.bytesFromBase64)(object.chunk) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.chunk !== void 0 && (obj.chunk = (0, helpers_1.base64FromBytes)(message.chunk !== void 0 ? message.chunk : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseResponseLoadSnapshotChunk();
        message.chunk = object.chunk ?? new Uint8Array();
        return message;
      }
    };
    function createBaseResponseApplySnapshotChunk() {
      return {
        result: 0,
        refetchChunks: [],
        rejectSenders: []
      };
    }
    exports.ResponseApplySnapshotChunk = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.result !== 0) {
          writer.uint32(8).int32(message.result);
        }
        writer.uint32(18).fork();
        for (const v3 of message.refetchChunks) {
          writer.uint32(v3);
        }
        writer.ldelim();
        for (const v3 of message.rejectSenders) {
          writer.uint32(26).string(v3);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseResponseApplySnapshotChunk();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.result = reader.int32();
              break;
            case 2:
              if ((tag & 7) === 2) {
                const end2 = reader.uint32() + reader.pos;
                while (reader.pos < end2) {
                  message.refetchChunks.push(reader.uint32());
                }
              } else {
                message.refetchChunks.push(reader.uint32());
              }
              break;
            case 3:
              message.rejectSenders.push(reader.string());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          result: (0, helpers_1.isSet)(object.result) ? responseApplySnapshotChunk_ResultFromJSON(object.result) : 0,
          refetchChunks: Array.isArray(object == null ? void 0 : object.refetchChunks) ? object.refetchChunks.map((e2) => Number(e2)) : [],
          rejectSenders: Array.isArray(object == null ? void 0 : object.rejectSenders) ? object.rejectSenders.map((e2) => String(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.result !== void 0 && (obj.result = responseApplySnapshotChunk_ResultToJSON(message.result));
        if (message.refetchChunks) {
          obj.refetchChunks = message.refetchChunks.map((e2) => Math.round(e2));
        } else {
          obj.refetchChunks = [];
        }
        if (message.rejectSenders) {
          obj.rejectSenders = message.rejectSenders.map((e2) => e2);
        } else {
          obj.rejectSenders = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a, _b;
        const message = createBaseResponseApplySnapshotChunk();
        message.result = object.result ?? 0;
        message.refetchChunks = ((_a = object.refetchChunks) == null ? void 0 : _a.map((e2) => e2)) || [];
        message.rejectSenders = ((_b = object.rejectSenders) == null ? void 0 : _b.map((e2) => e2)) || [];
        return message;
      }
    };
    function createBaseConsensusParams() {
      return {
        block: void 0,
        evidence: void 0,
        validator: void 0,
        version: void 0
      };
    }
    exports.ConsensusParams = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.block !== void 0) {
          exports.BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();
        }
        if (message.evidence !== void 0) {
          params_1.EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();
        }
        if (message.validator !== void 0) {
          params_1.ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();
        }
        if (message.version !== void 0) {
          params_1.VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseConsensusParams();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.block = exports.BlockParams.decode(reader, reader.uint32());
              break;
            case 2:
              message.evidence = params_1.EvidenceParams.decode(reader, reader.uint32());
              break;
            case 3:
              message.validator = params_1.ValidatorParams.decode(reader, reader.uint32());
              break;
            case 4:
              message.version = params_1.VersionParams.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          block: (0, helpers_1.isSet)(object.block) ? exports.BlockParams.fromJSON(object.block) : void 0,
          evidence: (0, helpers_1.isSet)(object.evidence) ? params_1.EvidenceParams.fromJSON(object.evidence) : void 0,
          validator: (0, helpers_1.isSet)(object.validator) ? params_1.ValidatorParams.fromJSON(object.validator) : void 0,
          version: (0, helpers_1.isSet)(object.version) ? params_1.VersionParams.fromJSON(object.version) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.block !== void 0 && (obj.block = message.block ? exports.BlockParams.toJSON(message.block) : void 0);
        message.evidence !== void 0 && (obj.evidence = message.evidence ? params_1.EvidenceParams.toJSON(message.evidence) : void 0);
        message.validator !== void 0 && (obj.validator = message.validator ? params_1.ValidatorParams.toJSON(message.validator) : void 0);
        message.version !== void 0 && (obj.version = message.version ? params_1.VersionParams.toJSON(message.version) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseConsensusParams();
        message.block = object.block !== void 0 && object.block !== null ? exports.BlockParams.fromPartial(object.block) : void 0;
        message.evidence = object.evidence !== void 0 && object.evidence !== null ? params_1.EvidenceParams.fromPartial(object.evidence) : void 0;
        message.validator = object.validator !== void 0 && object.validator !== null ? params_1.ValidatorParams.fromPartial(object.validator) : void 0;
        message.version = object.version !== void 0 && object.version !== null ? params_1.VersionParams.fromPartial(object.version) : void 0;
        return message;
      }
    };
    function createBaseBlockParams() {
      return {
        maxBytes: helpers_1.Long.ZERO,
        maxGas: helpers_1.Long.ZERO
      };
    }
    exports.BlockParams = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.maxBytes.isZero()) {
          writer.uint32(8).int64(message.maxBytes);
        }
        if (!message.maxGas.isZero()) {
          writer.uint32(16).int64(message.maxGas);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseBlockParams();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.maxBytes = reader.int64();
              break;
            case 2:
              message.maxGas = reader.int64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          maxBytes: (0, helpers_1.isSet)(object.maxBytes) ? helpers_1.Long.fromValue(object.maxBytes) : helpers_1.Long.ZERO,
          maxGas: (0, helpers_1.isSet)(object.maxGas) ? helpers_1.Long.fromValue(object.maxGas) : helpers_1.Long.ZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.maxBytes !== void 0 && (obj.maxBytes = (message.maxBytes || helpers_1.Long.ZERO).toString());
        message.maxGas !== void 0 && (obj.maxGas = (message.maxGas || helpers_1.Long.ZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseBlockParams();
        message.maxBytes = object.maxBytes !== void 0 && object.maxBytes !== null ? helpers_1.Long.fromValue(object.maxBytes) : helpers_1.Long.ZERO;
        message.maxGas = object.maxGas !== void 0 && object.maxGas !== null ? helpers_1.Long.fromValue(object.maxGas) : helpers_1.Long.ZERO;
        return message;
      }
    };
    function createBaseLastCommitInfo() {
      return {
        round: 0,
        votes: []
      };
    }
    exports.LastCommitInfo = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.round !== 0) {
          writer.uint32(8).int32(message.round);
        }
        for (const v3 of message.votes) {
          exports.VoteInfo.encode(v3, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseLastCommitInfo();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.round = reader.int32();
              break;
            case 2:
              message.votes.push(exports.VoteInfo.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          round: (0, helpers_1.isSet)(object.round) ? Number(object.round) : 0,
          votes: Array.isArray(object == null ? void 0 : object.votes) ? object.votes.map((e2) => exports.VoteInfo.fromJSON(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.round !== void 0 && (obj.round = Math.round(message.round));
        if (message.votes) {
          obj.votes = message.votes.map((e2) => e2 ? exports.VoteInfo.toJSON(e2) : void 0);
        } else {
          obj.votes = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseLastCommitInfo();
        message.round = object.round ?? 0;
        message.votes = ((_a = object.votes) == null ? void 0 : _a.map((e2) => exports.VoteInfo.fromPartial(e2))) || [];
        return message;
      }
    };
    function createBaseEvent() {
      return {
        type: "",
        attributes: []
      };
    }
    exports.Event = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.type !== "") {
          writer.uint32(10).string(message.type);
        }
        for (const v3 of message.attributes) {
          exports.EventAttribute.encode(v3, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseEvent();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.type = reader.string();
              break;
            case 2:
              message.attributes.push(exports.EventAttribute.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          type: (0, helpers_1.isSet)(object.type) ? String(object.type) : "",
          attributes: Array.isArray(object == null ? void 0 : object.attributes) ? object.attributes.map((e2) => exports.EventAttribute.fromJSON(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.type !== void 0 && (obj.type = message.type);
        if (message.attributes) {
          obj.attributes = message.attributes.map((e2) => e2 ? exports.EventAttribute.toJSON(e2) : void 0);
        } else {
          obj.attributes = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseEvent();
        message.type = object.type ?? "";
        message.attributes = ((_a = object.attributes) == null ? void 0 : _a.map((e2) => exports.EventAttribute.fromPartial(e2))) || [];
        return message;
      }
    };
    function createBaseEventAttribute() {
      return {
        key: new Uint8Array(),
        value: new Uint8Array(),
        index: false
      };
    }
    exports.EventAttribute = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.key.length !== 0) {
          writer.uint32(10).bytes(message.key);
        }
        if (message.value.length !== 0) {
          writer.uint32(18).bytes(message.value);
        }
        if (message.index === true) {
          writer.uint32(24).bool(message.index);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseEventAttribute();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.key = reader.bytes();
              break;
            case 2:
              message.value = reader.bytes();
              break;
            case 3:
              message.index = reader.bool();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          key: (0, helpers_1.isSet)(object.key) ? (0, helpers_1.bytesFromBase64)(object.key) : new Uint8Array(),
          value: (0, helpers_1.isSet)(object.value) ? (0, helpers_1.bytesFromBase64)(object.value) : new Uint8Array(),
          index: (0, helpers_1.isSet)(object.index) ? Boolean(object.index) : false
        };
      },
      toJSON(message) {
        const obj = {};
        message.key !== void 0 && (obj.key = (0, helpers_1.base64FromBytes)(message.key !== void 0 ? message.key : new Uint8Array()));
        message.value !== void 0 && (obj.value = (0, helpers_1.base64FromBytes)(message.value !== void 0 ? message.value : new Uint8Array()));
        message.index !== void 0 && (obj.index = message.index);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseEventAttribute();
        message.key = object.key ?? new Uint8Array();
        message.value = object.value ?? new Uint8Array();
        message.index = object.index ?? false;
        return message;
      }
    };
    function createBaseTxResult() {
      return {
        height: helpers_1.Long.ZERO,
        index: 0,
        tx: new Uint8Array(),
        result: void 0
      };
    }
    exports.TxResult = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.height.isZero()) {
          writer.uint32(8).int64(message.height);
        }
        if (message.index !== 0) {
          writer.uint32(16).uint32(message.index);
        }
        if (message.tx.length !== 0) {
          writer.uint32(26).bytes(message.tx);
        }
        if (message.result !== void 0) {
          exports.ResponseDeliverTx.encode(message.result, writer.uint32(34).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseTxResult();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.height = reader.int64();
              break;
            case 2:
              message.index = reader.uint32();
              break;
            case 3:
              message.tx = reader.bytes();
              break;
            case 4:
              message.result = exports.ResponseDeliverTx.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          height: (0, helpers_1.isSet)(object.height) ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.ZERO,
          index: (0, helpers_1.isSet)(object.index) ? Number(object.index) : 0,
          tx: (0, helpers_1.isSet)(object.tx) ? (0, helpers_1.bytesFromBase64)(object.tx) : new Uint8Array(),
          result: (0, helpers_1.isSet)(object.result) ? exports.ResponseDeliverTx.fromJSON(object.result) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.height !== void 0 && (obj.height = (message.height || helpers_1.Long.ZERO).toString());
        message.index !== void 0 && (obj.index = Math.round(message.index));
        message.tx !== void 0 && (obj.tx = (0, helpers_1.base64FromBytes)(message.tx !== void 0 ? message.tx : new Uint8Array()));
        message.result !== void 0 && (obj.result = message.result ? exports.ResponseDeliverTx.toJSON(message.result) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseTxResult();
        message.height = object.height !== void 0 && object.height !== null ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.ZERO;
        message.index = object.index ?? 0;
        message.tx = object.tx ?? new Uint8Array();
        message.result = object.result !== void 0 && object.result !== null ? exports.ResponseDeliverTx.fromPartial(object.result) : void 0;
        return message;
      }
    };
    function createBaseValidator() {
      return {
        address: new Uint8Array(),
        power: helpers_1.Long.ZERO
      };
    }
    exports.Validator = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.address.length !== 0) {
          writer.uint32(10).bytes(message.address);
        }
        if (!message.power.isZero()) {
          writer.uint32(24).int64(message.power);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseValidator();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.address = reader.bytes();
              break;
            case 3:
              message.power = reader.int64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          address: (0, helpers_1.isSet)(object.address) ? (0, helpers_1.bytesFromBase64)(object.address) : new Uint8Array(),
          power: (0, helpers_1.isSet)(object.power) ? helpers_1.Long.fromValue(object.power) : helpers_1.Long.ZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.address !== void 0 && (obj.address = (0, helpers_1.base64FromBytes)(message.address !== void 0 ? message.address : new Uint8Array()));
        message.power !== void 0 && (obj.power = (message.power || helpers_1.Long.ZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseValidator();
        message.address = object.address ?? new Uint8Array();
        message.power = object.power !== void 0 && object.power !== null ? helpers_1.Long.fromValue(object.power) : helpers_1.Long.ZERO;
        return message;
      }
    };
    function createBaseValidatorUpdate() {
      return {
        pubKey: void 0,
        power: helpers_1.Long.ZERO
      };
    }
    exports.ValidatorUpdate = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.pubKey !== void 0) {
          keys_1.PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();
        }
        if (!message.power.isZero()) {
          writer.uint32(16).int64(message.power);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseValidatorUpdate();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.pubKey = keys_1.PublicKey.decode(reader, reader.uint32());
              break;
            case 2:
              message.power = reader.int64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          pubKey: (0, helpers_1.isSet)(object.pubKey) ? keys_1.PublicKey.fromJSON(object.pubKey) : void 0,
          power: (0, helpers_1.isSet)(object.power) ? helpers_1.Long.fromValue(object.power) : helpers_1.Long.ZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.pubKey !== void 0 && (obj.pubKey = message.pubKey ? keys_1.PublicKey.toJSON(message.pubKey) : void 0);
        message.power !== void 0 && (obj.power = (message.power || helpers_1.Long.ZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseValidatorUpdate();
        message.pubKey = object.pubKey !== void 0 && object.pubKey !== null ? keys_1.PublicKey.fromPartial(object.pubKey) : void 0;
        message.power = object.power !== void 0 && object.power !== null ? helpers_1.Long.fromValue(object.power) : helpers_1.Long.ZERO;
        return message;
      }
    };
    function createBaseVoteInfo() {
      return {
        validator: void 0,
        signedLastBlock: false
      };
    }
    exports.VoteInfo = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.validator !== void 0) {
          exports.Validator.encode(message.validator, writer.uint32(10).fork()).ldelim();
        }
        if (message.signedLastBlock === true) {
          writer.uint32(16).bool(message.signedLastBlock);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseVoteInfo();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.validator = exports.Validator.decode(reader, reader.uint32());
              break;
            case 2:
              message.signedLastBlock = reader.bool();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          validator: (0, helpers_1.isSet)(object.validator) ? exports.Validator.fromJSON(object.validator) : void 0,
          signedLastBlock: (0, helpers_1.isSet)(object.signedLastBlock) ? Boolean(object.signedLastBlock) : false
        };
      },
      toJSON(message) {
        const obj = {};
        message.validator !== void 0 && (obj.validator = message.validator ? exports.Validator.toJSON(message.validator) : void 0);
        message.signedLastBlock !== void 0 && (obj.signedLastBlock = message.signedLastBlock);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseVoteInfo();
        message.validator = object.validator !== void 0 && object.validator !== null ? exports.Validator.fromPartial(object.validator) : void 0;
        message.signedLastBlock = object.signedLastBlock ?? false;
        return message;
      }
    };
    function createBaseEvidence() {
      return {
        type: 0,
        validator: void 0,
        height: helpers_1.Long.ZERO,
        time: void 0,
        totalVotingPower: helpers_1.Long.ZERO
      };
    }
    exports.Evidence = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.type !== 0) {
          writer.uint32(8).int32(message.type);
        }
        if (message.validator !== void 0) {
          exports.Validator.encode(message.validator, writer.uint32(18).fork()).ldelim();
        }
        if (!message.height.isZero()) {
          writer.uint32(24).int64(message.height);
        }
        if (message.time !== void 0) {
          timestamp_1.Timestamp.encode(message.time, writer.uint32(34).fork()).ldelim();
        }
        if (!message.totalVotingPower.isZero()) {
          writer.uint32(40).int64(message.totalVotingPower);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseEvidence();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.type = reader.int32();
              break;
            case 2:
              message.validator = exports.Validator.decode(reader, reader.uint32());
              break;
            case 3:
              message.height = reader.int64();
              break;
            case 4:
              message.time = timestamp_1.Timestamp.decode(reader, reader.uint32());
              break;
            case 5:
              message.totalVotingPower = reader.int64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          type: (0, helpers_1.isSet)(object.type) ? evidenceTypeFromJSON(object.type) : 0,
          validator: (0, helpers_1.isSet)(object.validator) ? exports.Validator.fromJSON(object.validator) : void 0,
          height: (0, helpers_1.isSet)(object.height) ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.ZERO,
          time: (0, helpers_1.isSet)(object.time) ? (0, helpers_1.fromJsonTimestamp)(object.time) : void 0,
          totalVotingPower: (0, helpers_1.isSet)(object.totalVotingPower) ? helpers_1.Long.fromValue(object.totalVotingPower) : helpers_1.Long.ZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.type !== void 0 && (obj.type = evidenceTypeToJSON(message.type));
        message.validator !== void 0 && (obj.validator = message.validator ? exports.Validator.toJSON(message.validator) : void 0);
        message.height !== void 0 && (obj.height = (message.height || helpers_1.Long.ZERO).toString());
        message.time !== void 0 && (obj.time = (0, helpers_1.fromTimestamp)(message.time).toISOString());
        message.totalVotingPower !== void 0 && (obj.totalVotingPower = (message.totalVotingPower || helpers_1.Long.ZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseEvidence();
        message.type = object.type ?? 0;
        message.validator = object.validator !== void 0 && object.validator !== null ? exports.Validator.fromPartial(object.validator) : void 0;
        message.height = object.height !== void 0 && object.height !== null ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.ZERO;
        message.time = object.time !== void 0 && object.time !== null ? timestamp_1.Timestamp.fromPartial(object.time) : void 0;
        message.totalVotingPower = object.totalVotingPower !== void 0 && object.totalVotingPower !== null ? helpers_1.Long.fromValue(object.totalVotingPower) : helpers_1.Long.ZERO;
        return message;
      }
    };
    function createBaseSnapshot() {
      return {
        height: helpers_1.Long.UZERO,
        format: 0,
        chunks: 0,
        hash: new Uint8Array(),
        metadata: new Uint8Array()
      };
    }
    exports.Snapshot = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.height.isZero()) {
          writer.uint32(8).uint64(message.height);
        }
        if (message.format !== 0) {
          writer.uint32(16).uint32(message.format);
        }
        if (message.chunks !== 0) {
          writer.uint32(24).uint32(message.chunks);
        }
        if (message.hash.length !== 0) {
          writer.uint32(34).bytes(message.hash);
        }
        if (message.metadata.length !== 0) {
          writer.uint32(42).bytes(message.metadata);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseSnapshot();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.height = reader.uint64();
              break;
            case 2:
              message.format = reader.uint32();
              break;
            case 3:
              message.chunks = reader.uint32();
              break;
            case 4:
              message.hash = reader.bytes();
              break;
            case 5:
              message.metadata = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          height: (0, helpers_1.isSet)(object.height) ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.UZERO,
          format: (0, helpers_1.isSet)(object.format) ? Number(object.format) : 0,
          chunks: (0, helpers_1.isSet)(object.chunks) ? Number(object.chunks) : 0,
          hash: (0, helpers_1.isSet)(object.hash) ? (0, helpers_1.bytesFromBase64)(object.hash) : new Uint8Array(),
          metadata: (0, helpers_1.isSet)(object.metadata) ? (0, helpers_1.bytesFromBase64)(object.metadata) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.height !== void 0 && (obj.height = (message.height || helpers_1.Long.UZERO).toString());
        message.format !== void 0 && (obj.format = Math.round(message.format));
        message.chunks !== void 0 && (obj.chunks = Math.round(message.chunks));
        message.hash !== void 0 && (obj.hash = (0, helpers_1.base64FromBytes)(message.hash !== void 0 ? message.hash : new Uint8Array()));
        message.metadata !== void 0 && (obj.metadata = (0, helpers_1.base64FromBytes)(message.metadata !== void 0 ? message.metadata : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseSnapshot();
        message.height = object.height !== void 0 && object.height !== null ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.UZERO;
        message.format = object.format ?? 0;
        message.chunks = object.chunks ?? 0;
        message.hash = object.hash ?? new Uint8Array();
        message.metadata = object.metadata ?? new Uint8Array();
        return message;
      }
    };
    var ABCIApplicationClientImpl = class {
      constructor(rpc) {
        this.rpc = rpc;
        this.Echo = this.Echo.bind(this);
        this.Flush = this.Flush.bind(this);
        this.Info = this.Info.bind(this);
        this.SetOption = this.SetOption.bind(this);
        this.DeliverTx = this.DeliverTx.bind(this);
        this.CheckTx = this.CheckTx.bind(this);
        this.Query = this.Query.bind(this);
        this.Commit = this.Commit.bind(this);
        this.InitChain = this.InitChain.bind(this);
        this.BeginBlock = this.BeginBlock.bind(this);
        this.EndBlock = this.EndBlock.bind(this);
        this.ListSnapshots = this.ListSnapshots.bind(this);
        this.OfferSnapshot = this.OfferSnapshot.bind(this);
        this.LoadSnapshotChunk = this.LoadSnapshotChunk.bind(this);
        this.ApplySnapshotChunk = this.ApplySnapshotChunk.bind(this);
      }
      Echo(request) {
        const data = exports.RequestEcho.encode(request).finish();
        const promise = this.rpc.request("tendermint.abci.ABCIApplication", "Echo", data);
        return promise.then((data2) => exports.ResponseEcho.decode(new _m0.Reader(data2)));
      }
      Flush(request = {}) {
        const data = exports.RequestFlush.encode(request).finish();
        const promise = this.rpc.request("tendermint.abci.ABCIApplication", "Flush", data);
        return promise.then((data2) => exports.ResponseFlush.decode(new _m0.Reader(data2)));
      }
      Info(request) {
        const data = exports.RequestInfo.encode(request).finish();
        const promise = this.rpc.request("tendermint.abci.ABCIApplication", "Info", data);
        return promise.then((data2) => exports.ResponseInfo.decode(new _m0.Reader(data2)));
      }
      SetOption(request) {
        const data = exports.RequestSetOption.encode(request).finish();
        const promise = this.rpc.request("tendermint.abci.ABCIApplication", "SetOption", data);
        return promise.then((data2) => exports.ResponseSetOption.decode(new _m0.Reader(data2)));
      }
      DeliverTx(request) {
        const data = exports.RequestDeliverTx.encode(request).finish();
        const promise = this.rpc.request("tendermint.abci.ABCIApplication", "DeliverTx", data);
        return promise.then((data2) => exports.ResponseDeliverTx.decode(new _m0.Reader(data2)));
      }
      CheckTx(request) {
        const data = exports.RequestCheckTx.encode(request).finish();
        const promise = this.rpc.request("tendermint.abci.ABCIApplication", "CheckTx", data);
        return promise.then((data2) => exports.ResponseCheckTx.decode(new _m0.Reader(data2)));
      }
      Query(request) {
        const data = exports.RequestQuery.encode(request).finish();
        const promise = this.rpc.request("tendermint.abci.ABCIApplication", "Query", data);
        return promise.then((data2) => exports.ResponseQuery.decode(new _m0.Reader(data2)));
      }
      Commit(request = {}) {
        const data = exports.RequestCommit.encode(request).finish();
        const promise = this.rpc.request("tendermint.abci.ABCIApplication", "Commit", data);
        return promise.then((data2) => exports.ResponseCommit.decode(new _m0.Reader(data2)));
      }
      InitChain(request) {
        const data = exports.RequestInitChain.encode(request).finish();
        const promise = this.rpc.request("tendermint.abci.ABCIApplication", "InitChain", data);
        return promise.then((data2) => exports.ResponseInitChain.decode(new _m0.Reader(data2)));
      }
      BeginBlock(request) {
        const data = exports.RequestBeginBlock.encode(request).finish();
        const promise = this.rpc.request("tendermint.abci.ABCIApplication", "BeginBlock", data);
        return promise.then((data2) => exports.ResponseBeginBlock.decode(new _m0.Reader(data2)));
      }
      EndBlock(request) {
        const data = exports.RequestEndBlock.encode(request).finish();
        const promise = this.rpc.request("tendermint.abci.ABCIApplication", "EndBlock", data);
        return promise.then((data2) => exports.ResponseEndBlock.decode(new _m0.Reader(data2)));
      }
      ListSnapshots(request = {}) {
        const data = exports.RequestListSnapshots.encode(request).finish();
        const promise = this.rpc.request("tendermint.abci.ABCIApplication", "ListSnapshots", data);
        return promise.then((data2) => exports.ResponseListSnapshots.decode(new _m0.Reader(data2)));
      }
      OfferSnapshot(request) {
        const data = exports.RequestOfferSnapshot.encode(request).finish();
        const promise = this.rpc.request("tendermint.abci.ABCIApplication", "OfferSnapshot", data);
        return promise.then((data2) => exports.ResponseOfferSnapshot.decode(new _m0.Reader(data2)));
      }
      LoadSnapshotChunk(request) {
        const data = exports.RequestLoadSnapshotChunk.encode(request).finish();
        const promise = this.rpc.request("tendermint.abci.ABCIApplication", "LoadSnapshotChunk", data);
        return promise.then((data2) => exports.ResponseLoadSnapshotChunk.decode(new _m0.Reader(data2)));
      }
      ApplySnapshotChunk(request) {
        const data = exports.RequestApplySnapshotChunk.encode(request).finish();
        const promise = this.rpc.request("tendermint.abci.ABCIApplication", "ApplySnapshotChunk", data);
        return promise.then((data2) => exports.ResponseApplySnapshotChunk.decode(new _m0.Reader(data2)));
      }
    };
    exports.ABCIApplicationClientImpl = ABCIApplicationClientImpl;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/base/abci/v1beta1/abci.js
var require_abci = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/base/abci/v1beta1/abci.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SearchTxsResult = exports.TxMsgData = exports.MsgData = exports.SimulationResponse = exports.Result = exports.GasInfo = exports.Attribute = exports.StringEvent = exports.ABCIMessageLog = exports.TxResponse = exports.protobufPackage = void 0;
    var any_1 = require_any();
    var types_1 = require_types3();
    var helpers_1 = require_helpers();
    var _m0 = __importStar(require_minimal());
    exports.protobufPackage = "cosmos.base.abci.v1beta1";
    function createBaseTxResponse() {
      return {
        height: helpers_1.Long.ZERO,
        txhash: "",
        codespace: "",
        code: 0,
        data: "",
        rawLog: "",
        logs: [],
        info: "",
        gasWanted: helpers_1.Long.ZERO,
        gasUsed: helpers_1.Long.ZERO,
        tx: void 0,
        timestamp: "",
        events: []
      };
    }
    exports.TxResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.height.isZero()) {
          writer.uint32(8).int64(message.height);
        }
        if (message.txhash !== "") {
          writer.uint32(18).string(message.txhash);
        }
        if (message.codespace !== "") {
          writer.uint32(26).string(message.codespace);
        }
        if (message.code !== 0) {
          writer.uint32(32).uint32(message.code);
        }
        if (message.data !== "") {
          writer.uint32(42).string(message.data);
        }
        if (message.rawLog !== "") {
          writer.uint32(50).string(message.rawLog);
        }
        for (const v3 of message.logs) {
          exports.ABCIMessageLog.encode(v3, writer.uint32(58).fork()).ldelim();
        }
        if (message.info !== "") {
          writer.uint32(66).string(message.info);
        }
        if (!message.gasWanted.isZero()) {
          writer.uint32(72).int64(message.gasWanted);
        }
        if (!message.gasUsed.isZero()) {
          writer.uint32(80).int64(message.gasUsed);
        }
        if (message.tx !== void 0) {
          any_1.Any.encode(message.tx, writer.uint32(90).fork()).ldelim();
        }
        if (message.timestamp !== "") {
          writer.uint32(98).string(message.timestamp);
        }
        for (const v3 of message.events) {
          types_1.Event.encode(v3, writer.uint32(106).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseTxResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.height = reader.int64();
              break;
            case 2:
              message.txhash = reader.string();
              break;
            case 3:
              message.codespace = reader.string();
              break;
            case 4:
              message.code = reader.uint32();
              break;
            case 5:
              message.data = reader.string();
              break;
            case 6:
              message.rawLog = reader.string();
              break;
            case 7:
              message.logs.push(exports.ABCIMessageLog.decode(reader, reader.uint32()));
              break;
            case 8:
              message.info = reader.string();
              break;
            case 9:
              message.gasWanted = reader.int64();
              break;
            case 10:
              message.gasUsed = reader.int64();
              break;
            case 11:
              message.tx = any_1.Any.decode(reader, reader.uint32());
              break;
            case 12:
              message.timestamp = reader.string();
              break;
            case 13:
              message.events.push(types_1.Event.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          height: (0, helpers_1.isSet)(object.height) ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.ZERO,
          txhash: (0, helpers_1.isSet)(object.txhash) ? String(object.txhash) : "",
          codespace: (0, helpers_1.isSet)(object.codespace) ? String(object.codespace) : "",
          code: (0, helpers_1.isSet)(object.code) ? Number(object.code) : 0,
          data: (0, helpers_1.isSet)(object.data) ? String(object.data) : "",
          rawLog: (0, helpers_1.isSet)(object.rawLog) ? String(object.rawLog) : "",
          logs: Array.isArray(object == null ? void 0 : object.logs) ? object.logs.map((e2) => exports.ABCIMessageLog.fromJSON(e2)) : [],
          info: (0, helpers_1.isSet)(object.info) ? String(object.info) : "",
          gasWanted: (0, helpers_1.isSet)(object.gasWanted) ? helpers_1.Long.fromValue(object.gasWanted) : helpers_1.Long.ZERO,
          gasUsed: (0, helpers_1.isSet)(object.gasUsed) ? helpers_1.Long.fromValue(object.gasUsed) : helpers_1.Long.ZERO,
          tx: (0, helpers_1.isSet)(object.tx) ? any_1.Any.fromJSON(object.tx) : void 0,
          timestamp: (0, helpers_1.isSet)(object.timestamp) ? String(object.timestamp) : "",
          events: Array.isArray(object == null ? void 0 : object.events) ? object.events.map((e2) => types_1.Event.fromJSON(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.height !== void 0 && (obj.height = (message.height || helpers_1.Long.ZERO).toString());
        message.txhash !== void 0 && (obj.txhash = message.txhash);
        message.codespace !== void 0 && (obj.codespace = message.codespace);
        message.code !== void 0 && (obj.code = Math.round(message.code));
        message.data !== void 0 && (obj.data = message.data);
        message.rawLog !== void 0 && (obj.rawLog = message.rawLog);
        if (message.logs) {
          obj.logs = message.logs.map((e2) => e2 ? exports.ABCIMessageLog.toJSON(e2) : void 0);
        } else {
          obj.logs = [];
        }
        message.info !== void 0 && (obj.info = message.info);
        message.gasWanted !== void 0 && (obj.gasWanted = (message.gasWanted || helpers_1.Long.ZERO).toString());
        message.gasUsed !== void 0 && (obj.gasUsed = (message.gasUsed || helpers_1.Long.ZERO).toString());
        message.tx !== void 0 && (obj.tx = message.tx ? any_1.Any.toJSON(message.tx) : void 0);
        message.timestamp !== void 0 && (obj.timestamp = message.timestamp);
        if (message.events) {
          obj.events = message.events.map((e2) => e2 ? types_1.Event.toJSON(e2) : void 0);
        } else {
          obj.events = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a, _b;
        const message = createBaseTxResponse();
        message.height = object.height !== void 0 && object.height !== null ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.ZERO;
        message.txhash = object.txhash ?? "";
        message.codespace = object.codespace ?? "";
        message.code = object.code ?? 0;
        message.data = object.data ?? "";
        message.rawLog = object.rawLog ?? "";
        message.logs = ((_a = object.logs) == null ? void 0 : _a.map((e2) => exports.ABCIMessageLog.fromPartial(e2))) || [];
        message.info = object.info ?? "";
        message.gasWanted = object.gasWanted !== void 0 && object.gasWanted !== null ? helpers_1.Long.fromValue(object.gasWanted) : helpers_1.Long.ZERO;
        message.gasUsed = object.gasUsed !== void 0 && object.gasUsed !== null ? helpers_1.Long.fromValue(object.gasUsed) : helpers_1.Long.ZERO;
        message.tx = object.tx !== void 0 && object.tx !== null ? any_1.Any.fromPartial(object.tx) : void 0;
        message.timestamp = object.timestamp ?? "";
        message.events = ((_b = object.events) == null ? void 0 : _b.map((e2) => types_1.Event.fromPartial(e2))) || [];
        return message;
      }
    };
    function createBaseABCIMessageLog() {
      return {
        msgIndex: 0,
        log: "",
        events: []
      };
    }
    exports.ABCIMessageLog = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.msgIndex !== 0) {
          writer.uint32(8).uint32(message.msgIndex);
        }
        if (message.log !== "") {
          writer.uint32(18).string(message.log);
        }
        for (const v3 of message.events) {
          exports.StringEvent.encode(v3, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseABCIMessageLog();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.msgIndex = reader.uint32();
              break;
            case 2:
              message.log = reader.string();
              break;
            case 3:
              message.events.push(exports.StringEvent.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          msgIndex: (0, helpers_1.isSet)(object.msgIndex) ? Number(object.msgIndex) : 0,
          log: (0, helpers_1.isSet)(object.log) ? String(object.log) : "",
          events: Array.isArray(object == null ? void 0 : object.events) ? object.events.map((e2) => exports.StringEvent.fromJSON(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.msgIndex !== void 0 && (obj.msgIndex = Math.round(message.msgIndex));
        message.log !== void 0 && (obj.log = message.log);
        if (message.events) {
          obj.events = message.events.map((e2) => e2 ? exports.StringEvent.toJSON(e2) : void 0);
        } else {
          obj.events = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseABCIMessageLog();
        message.msgIndex = object.msgIndex ?? 0;
        message.log = object.log ?? "";
        message.events = ((_a = object.events) == null ? void 0 : _a.map((e2) => exports.StringEvent.fromPartial(e2))) || [];
        return message;
      }
    };
    function createBaseStringEvent() {
      return {
        type: "",
        attributes: []
      };
    }
    exports.StringEvent = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.type !== "") {
          writer.uint32(10).string(message.type);
        }
        for (const v3 of message.attributes) {
          exports.Attribute.encode(v3, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseStringEvent();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.type = reader.string();
              break;
            case 2:
              message.attributes.push(exports.Attribute.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          type: (0, helpers_1.isSet)(object.type) ? String(object.type) : "",
          attributes: Array.isArray(object == null ? void 0 : object.attributes) ? object.attributes.map((e2) => exports.Attribute.fromJSON(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.type !== void 0 && (obj.type = message.type);
        if (message.attributes) {
          obj.attributes = message.attributes.map((e2) => e2 ? exports.Attribute.toJSON(e2) : void 0);
        } else {
          obj.attributes = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseStringEvent();
        message.type = object.type ?? "";
        message.attributes = ((_a = object.attributes) == null ? void 0 : _a.map((e2) => exports.Attribute.fromPartial(e2))) || [];
        return message;
      }
    };
    function createBaseAttribute() {
      return {
        key: "",
        value: ""
      };
    }
    exports.Attribute = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.key !== "") {
          writer.uint32(10).string(message.key);
        }
        if (message.value !== "") {
          writer.uint32(18).string(message.value);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseAttribute();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.key = reader.string();
              break;
            case 2:
              message.value = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          key: (0, helpers_1.isSet)(object.key) ? String(object.key) : "",
          value: (0, helpers_1.isSet)(object.value) ? String(object.value) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.key !== void 0 && (obj.key = message.key);
        message.value !== void 0 && (obj.value = message.value);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseAttribute();
        message.key = object.key ?? "";
        message.value = object.value ?? "";
        return message;
      }
    };
    function createBaseGasInfo() {
      return {
        gasWanted: helpers_1.Long.UZERO,
        gasUsed: helpers_1.Long.UZERO
      };
    }
    exports.GasInfo = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.gasWanted.isZero()) {
          writer.uint32(8).uint64(message.gasWanted);
        }
        if (!message.gasUsed.isZero()) {
          writer.uint32(16).uint64(message.gasUsed);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseGasInfo();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.gasWanted = reader.uint64();
              break;
            case 2:
              message.gasUsed = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          gasWanted: (0, helpers_1.isSet)(object.gasWanted) ? helpers_1.Long.fromValue(object.gasWanted) : helpers_1.Long.UZERO,
          gasUsed: (0, helpers_1.isSet)(object.gasUsed) ? helpers_1.Long.fromValue(object.gasUsed) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.gasWanted !== void 0 && (obj.gasWanted = (message.gasWanted || helpers_1.Long.UZERO).toString());
        message.gasUsed !== void 0 && (obj.gasUsed = (message.gasUsed || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseGasInfo();
        message.gasWanted = object.gasWanted !== void 0 && object.gasWanted !== null ? helpers_1.Long.fromValue(object.gasWanted) : helpers_1.Long.UZERO;
        message.gasUsed = object.gasUsed !== void 0 && object.gasUsed !== null ? helpers_1.Long.fromValue(object.gasUsed) : helpers_1.Long.UZERO;
        return message;
      }
    };
    function createBaseResult() {
      return {
        data: new Uint8Array(),
        log: "",
        events: []
      };
    }
    exports.Result = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.data.length !== 0) {
          writer.uint32(10).bytes(message.data);
        }
        if (message.log !== "") {
          writer.uint32(18).string(message.log);
        }
        for (const v3 of message.events) {
          types_1.Event.encode(v3, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseResult();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.data = reader.bytes();
              break;
            case 2:
              message.log = reader.string();
              break;
            case 3:
              message.events.push(types_1.Event.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          data: (0, helpers_1.isSet)(object.data) ? (0, helpers_1.bytesFromBase64)(object.data) : new Uint8Array(),
          log: (0, helpers_1.isSet)(object.log) ? String(object.log) : "",
          events: Array.isArray(object == null ? void 0 : object.events) ? object.events.map((e2) => types_1.Event.fromJSON(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.data !== void 0 && (obj.data = (0, helpers_1.base64FromBytes)(message.data !== void 0 ? message.data : new Uint8Array()));
        message.log !== void 0 && (obj.log = message.log);
        if (message.events) {
          obj.events = message.events.map((e2) => e2 ? types_1.Event.toJSON(e2) : void 0);
        } else {
          obj.events = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseResult();
        message.data = object.data ?? new Uint8Array();
        message.log = object.log ?? "";
        message.events = ((_a = object.events) == null ? void 0 : _a.map((e2) => types_1.Event.fromPartial(e2))) || [];
        return message;
      }
    };
    function createBaseSimulationResponse() {
      return {
        gasInfo: void 0,
        result: void 0
      };
    }
    exports.SimulationResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.gasInfo !== void 0) {
          exports.GasInfo.encode(message.gasInfo, writer.uint32(10).fork()).ldelim();
        }
        if (message.result !== void 0) {
          exports.Result.encode(message.result, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseSimulationResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.gasInfo = exports.GasInfo.decode(reader, reader.uint32());
              break;
            case 2:
              message.result = exports.Result.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          gasInfo: (0, helpers_1.isSet)(object.gasInfo) ? exports.GasInfo.fromJSON(object.gasInfo) : void 0,
          result: (0, helpers_1.isSet)(object.result) ? exports.Result.fromJSON(object.result) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.gasInfo !== void 0 && (obj.gasInfo = message.gasInfo ? exports.GasInfo.toJSON(message.gasInfo) : void 0);
        message.result !== void 0 && (obj.result = message.result ? exports.Result.toJSON(message.result) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseSimulationResponse();
        message.gasInfo = object.gasInfo !== void 0 && object.gasInfo !== null ? exports.GasInfo.fromPartial(object.gasInfo) : void 0;
        message.result = object.result !== void 0 && object.result !== null ? exports.Result.fromPartial(object.result) : void 0;
        return message;
      }
    };
    function createBaseMsgData() {
      return {
        msgType: "",
        data: new Uint8Array()
      };
    }
    exports.MsgData = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.msgType !== "") {
          writer.uint32(10).string(message.msgType);
        }
        if (message.data.length !== 0) {
          writer.uint32(18).bytes(message.data);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgData();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.msgType = reader.string();
              break;
            case 2:
              message.data = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          msgType: (0, helpers_1.isSet)(object.msgType) ? String(object.msgType) : "",
          data: (0, helpers_1.isSet)(object.data) ? (0, helpers_1.bytesFromBase64)(object.data) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.msgType !== void 0 && (obj.msgType = message.msgType);
        message.data !== void 0 && (obj.data = (0, helpers_1.base64FromBytes)(message.data !== void 0 ? message.data : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgData();
        message.msgType = object.msgType ?? "";
        message.data = object.data ?? new Uint8Array();
        return message;
      }
    };
    function createBaseTxMsgData() {
      return {
        data: []
      };
    }
    exports.TxMsgData = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.data) {
          exports.MsgData.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseTxMsgData();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.data.push(exports.MsgData.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          data: Array.isArray(object == null ? void 0 : object.data) ? object.data.map((e2) => exports.MsgData.fromJSON(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.data) {
          obj.data = message.data.map((e2) => e2 ? exports.MsgData.toJSON(e2) : void 0);
        } else {
          obj.data = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseTxMsgData();
        message.data = ((_a = object.data) == null ? void 0 : _a.map((e2) => exports.MsgData.fromPartial(e2))) || [];
        return message;
      }
    };
    function createBaseSearchTxsResult() {
      return {
        totalCount: helpers_1.Long.UZERO,
        count: helpers_1.Long.UZERO,
        pageNumber: helpers_1.Long.UZERO,
        pageTotal: helpers_1.Long.UZERO,
        limit: helpers_1.Long.UZERO,
        txs: []
      };
    }
    exports.SearchTxsResult = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.totalCount.isZero()) {
          writer.uint32(8).uint64(message.totalCount);
        }
        if (!message.count.isZero()) {
          writer.uint32(16).uint64(message.count);
        }
        if (!message.pageNumber.isZero()) {
          writer.uint32(24).uint64(message.pageNumber);
        }
        if (!message.pageTotal.isZero()) {
          writer.uint32(32).uint64(message.pageTotal);
        }
        if (!message.limit.isZero()) {
          writer.uint32(40).uint64(message.limit);
        }
        for (const v3 of message.txs) {
          exports.TxResponse.encode(v3, writer.uint32(50).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseSearchTxsResult();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.totalCount = reader.uint64();
              break;
            case 2:
              message.count = reader.uint64();
              break;
            case 3:
              message.pageNumber = reader.uint64();
              break;
            case 4:
              message.pageTotal = reader.uint64();
              break;
            case 5:
              message.limit = reader.uint64();
              break;
            case 6:
              message.txs.push(exports.TxResponse.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          totalCount: (0, helpers_1.isSet)(object.totalCount) ? helpers_1.Long.fromValue(object.totalCount) : helpers_1.Long.UZERO,
          count: (0, helpers_1.isSet)(object.count) ? helpers_1.Long.fromValue(object.count) : helpers_1.Long.UZERO,
          pageNumber: (0, helpers_1.isSet)(object.pageNumber) ? helpers_1.Long.fromValue(object.pageNumber) : helpers_1.Long.UZERO,
          pageTotal: (0, helpers_1.isSet)(object.pageTotal) ? helpers_1.Long.fromValue(object.pageTotal) : helpers_1.Long.UZERO,
          limit: (0, helpers_1.isSet)(object.limit) ? helpers_1.Long.fromValue(object.limit) : helpers_1.Long.UZERO,
          txs: Array.isArray(object == null ? void 0 : object.txs) ? object.txs.map((e2) => exports.TxResponse.fromJSON(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.totalCount !== void 0 && (obj.totalCount = (message.totalCount || helpers_1.Long.UZERO).toString());
        message.count !== void 0 && (obj.count = (message.count || helpers_1.Long.UZERO).toString());
        message.pageNumber !== void 0 && (obj.pageNumber = (message.pageNumber || helpers_1.Long.UZERO).toString());
        message.pageTotal !== void 0 && (obj.pageTotal = (message.pageTotal || helpers_1.Long.UZERO).toString());
        message.limit !== void 0 && (obj.limit = (message.limit || helpers_1.Long.UZERO).toString());
        if (message.txs) {
          obj.txs = message.txs.map((e2) => e2 ? exports.TxResponse.toJSON(e2) : void 0);
        } else {
          obj.txs = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseSearchTxsResult();
        message.totalCount = object.totalCount !== void 0 && object.totalCount !== null ? helpers_1.Long.fromValue(object.totalCount) : helpers_1.Long.UZERO;
        message.count = object.count !== void 0 && object.count !== null ? helpers_1.Long.fromValue(object.count) : helpers_1.Long.UZERO;
        message.pageNumber = object.pageNumber !== void 0 && object.pageNumber !== null ? helpers_1.Long.fromValue(object.pageNumber) : helpers_1.Long.UZERO;
        message.pageTotal = object.pageTotal !== void 0 && object.pageTotal !== null ? helpers_1.Long.fromValue(object.pageTotal) : helpers_1.Long.UZERO;
        message.limit = object.limit !== void 0 && object.limit !== null ? helpers_1.Long.fromValue(object.limit) : helpers_1.Long.UZERO;
        message.txs = ((_a = object.txs) == null ? void 0 : _a.map((e2) => exports.TxResponse.fromPartial(e2))) || [];
        return message;
      }
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/tendermint/types/evidence.js
var require_evidence = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/tendermint/types/evidence.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.EvidenceList = exports.LightClientAttackEvidence = exports.DuplicateVoteEvidence = exports.Evidence = exports.protobufPackage = void 0;
    var types_1 = require_types2();
    var timestamp_1 = require_timestamp();
    var validator_1 = require_validator();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "tendermint.types";
    function createBaseEvidence() {
      return {
        duplicateVoteEvidence: void 0,
        lightClientAttackEvidence: void 0
      };
    }
    exports.Evidence = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.duplicateVoteEvidence !== void 0) {
          exports.DuplicateVoteEvidence.encode(message.duplicateVoteEvidence, writer.uint32(10).fork()).ldelim();
        }
        if (message.lightClientAttackEvidence !== void 0) {
          exports.LightClientAttackEvidence.encode(message.lightClientAttackEvidence, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseEvidence();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.duplicateVoteEvidence = exports.DuplicateVoteEvidence.decode(reader, reader.uint32());
              break;
            case 2:
              message.lightClientAttackEvidence = exports.LightClientAttackEvidence.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          duplicateVoteEvidence: (0, helpers_1.isSet)(object.duplicateVoteEvidence) ? exports.DuplicateVoteEvidence.fromJSON(object.duplicateVoteEvidence) : void 0,
          lightClientAttackEvidence: (0, helpers_1.isSet)(object.lightClientAttackEvidence) ? exports.LightClientAttackEvidence.fromJSON(object.lightClientAttackEvidence) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.duplicateVoteEvidence !== void 0 && (obj.duplicateVoteEvidence = message.duplicateVoteEvidence ? exports.DuplicateVoteEvidence.toJSON(message.duplicateVoteEvidence) : void 0);
        message.lightClientAttackEvidence !== void 0 && (obj.lightClientAttackEvidence = message.lightClientAttackEvidence ? exports.LightClientAttackEvidence.toJSON(message.lightClientAttackEvidence) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseEvidence();
        message.duplicateVoteEvidence = object.duplicateVoteEvidence !== void 0 && object.duplicateVoteEvidence !== null ? exports.DuplicateVoteEvidence.fromPartial(object.duplicateVoteEvidence) : void 0;
        message.lightClientAttackEvidence = object.lightClientAttackEvidence !== void 0 && object.lightClientAttackEvidence !== null ? exports.LightClientAttackEvidence.fromPartial(object.lightClientAttackEvidence) : void 0;
        return message;
      }
    };
    function createBaseDuplicateVoteEvidence() {
      return {
        voteA: void 0,
        voteB: void 0,
        totalVotingPower: helpers_1.Long.ZERO,
        validatorPower: helpers_1.Long.ZERO,
        timestamp: void 0
      };
    }
    exports.DuplicateVoteEvidence = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.voteA !== void 0) {
          types_1.Vote.encode(message.voteA, writer.uint32(10).fork()).ldelim();
        }
        if (message.voteB !== void 0) {
          types_1.Vote.encode(message.voteB, writer.uint32(18).fork()).ldelim();
        }
        if (!message.totalVotingPower.isZero()) {
          writer.uint32(24).int64(message.totalVotingPower);
        }
        if (!message.validatorPower.isZero()) {
          writer.uint32(32).int64(message.validatorPower);
        }
        if (message.timestamp !== void 0) {
          timestamp_1.Timestamp.encode(message.timestamp, writer.uint32(42).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseDuplicateVoteEvidence();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.voteA = types_1.Vote.decode(reader, reader.uint32());
              break;
            case 2:
              message.voteB = types_1.Vote.decode(reader, reader.uint32());
              break;
            case 3:
              message.totalVotingPower = reader.int64();
              break;
            case 4:
              message.validatorPower = reader.int64();
              break;
            case 5:
              message.timestamp = timestamp_1.Timestamp.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          voteA: (0, helpers_1.isSet)(object.voteA) ? types_1.Vote.fromJSON(object.voteA) : void 0,
          voteB: (0, helpers_1.isSet)(object.voteB) ? types_1.Vote.fromJSON(object.voteB) : void 0,
          totalVotingPower: (0, helpers_1.isSet)(object.totalVotingPower) ? helpers_1.Long.fromValue(object.totalVotingPower) : helpers_1.Long.ZERO,
          validatorPower: (0, helpers_1.isSet)(object.validatorPower) ? helpers_1.Long.fromValue(object.validatorPower) : helpers_1.Long.ZERO,
          timestamp: (0, helpers_1.isSet)(object.timestamp) ? (0, helpers_1.fromJsonTimestamp)(object.timestamp) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.voteA !== void 0 && (obj.voteA = message.voteA ? types_1.Vote.toJSON(message.voteA) : void 0);
        message.voteB !== void 0 && (obj.voteB = message.voteB ? types_1.Vote.toJSON(message.voteB) : void 0);
        message.totalVotingPower !== void 0 && (obj.totalVotingPower = (message.totalVotingPower || helpers_1.Long.ZERO).toString());
        message.validatorPower !== void 0 && (obj.validatorPower = (message.validatorPower || helpers_1.Long.ZERO).toString());
        message.timestamp !== void 0 && (obj.timestamp = (0, helpers_1.fromTimestamp)(message.timestamp).toISOString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseDuplicateVoteEvidence();
        message.voteA = object.voteA !== void 0 && object.voteA !== null ? types_1.Vote.fromPartial(object.voteA) : void 0;
        message.voteB = object.voteB !== void 0 && object.voteB !== null ? types_1.Vote.fromPartial(object.voteB) : void 0;
        message.totalVotingPower = object.totalVotingPower !== void 0 && object.totalVotingPower !== null ? helpers_1.Long.fromValue(object.totalVotingPower) : helpers_1.Long.ZERO;
        message.validatorPower = object.validatorPower !== void 0 && object.validatorPower !== null ? helpers_1.Long.fromValue(object.validatorPower) : helpers_1.Long.ZERO;
        message.timestamp = object.timestamp !== void 0 && object.timestamp !== null ? timestamp_1.Timestamp.fromPartial(object.timestamp) : void 0;
        return message;
      }
    };
    function createBaseLightClientAttackEvidence() {
      return {
        conflictingBlock: void 0,
        commonHeight: helpers_1.Long.ZERO,
        byzantineValidators: [],
        totalVotingPower: helpers_1.Long.ZERO,
        timestamp: void 0
      };
    }
    exports.LightClientAttackEvidence = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.conflictingBlock !== void 0) {
          types_1.LightBlock.encode(message.conflictingBlock, writer.uint32(10).fork()).ldelim();
        }
        if (!message.commonHeight.isZero()) {
          writer.uint32(16).int64(message.commonHeight);
        }
        for (const v3 of message.byzantineValidators) {
          validator_1.Validator.encode(v3, writer.uint32(26).fork()).ldelim();
        }
        if (!message.totalVotingPower.isZero()) {
          writer.uint32(32).int64(message.totalVotingPower);
        }
        if (message.timestamp !== void 0) {
          timestamp_1.Timestamp.encode(message.timestamp, writer.uint32(42).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseLightClientAttackEvidence();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.conflictingBlock = types_1.LightBlock.decode(reader, reader.uint32());
              break;
            case 2:
              message.commonHeight = reader.int64();
              break;
            case 3:
              message.byzantineValidators.push(validator_1.Validator.decode(reader, reader.uint32()));
              break;
            case 4:
              message.totalVotingPower = reader.int64();
              break;
            case 5:
              message.timestamp = timestamp_1.Timestamp.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          conflictingBlock: (0, helpers_1.isSet)(object.conflictingBlock) ? types_1.LightBlock.fromJSON(object.conflictingBlock) : void 0,
          commonHeight: (0, helpers_1.isSet)(object.commonHeight) ? helpers_1.Long.fromValue(object.commonHeight) : helpers_1.Long.ZERO,
          byzantineValidators: Array.isArray(object == null ? void 0 : object.byzantineValidators) ? object.byzantineValidators.map((e2) => validator_1.Validator.fromJSON(e2)) : [],
          totalVotingPower: (0, helpers_1.isSet)(object.totalVotingPower) ? helpers_1.Long.fromValue(object.totalVotingPower) : helpers_1.Long.ZERO,
          timestamp: (0, helpers_1.isSet)(object.timestamp) ? (0, helpers_1.fromJsonTimestamp)(object.timestamp) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.conflictingBlock !== void 0 && (obj.conflictingBlock = message.conflictingBlock ? types_1.LightBlock.toJSON(message.conflictingBlock) : void 0);
        message.commonHeight !== void 0 && (obj.commonHeight = (message.commonHeight || helpers_1.Long.ZERO).toString());
        if (message.byzantineValidators) {
          obj.byzantineValidators = message.byzantineValidators.map((e2) => e2 ? validator_1.Validator.toJSON(e2) : void 0);
        } else {
          obj.byzantineValidators = [];
        }
        message.totalVotingPower !== void 0 && (obj.totalVotingPower = (message.totalVotingPower || helpers_1.Long.ZERO).toString());
        message.timestamp !== void 0 && (obj.timestamp = (0, helpers_1.fromTimestamp)(message.timestamp).toISOString());
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseLightClientAttackEvidence();
        message.conflictingBlock = object.conflictingBlock !== void 0 && object.conflictingBlock !== null ? types_1.LightBlock.fromPartial(object.conflictingBlock) : void 0;
        message.commonHeight = object.commonHeight !== void 0 && object.commonHeight !== null ? helpers_1.Long.fromValue(object.commonHeight) : helpers_1.Long.ZERO;
        message.byzantineValidators = ((_a = object.byzantineValidators) == null ? void 0 : _a.map((e2) => validator_1.Validator.fromPartial(e2))) || [];
        message.totalVotingPower = object.totalVotingPower !== void 0 && object.totalVotingPower !== null ? helpers_1.Long.fromValue(object.totalVotingPower) : helpers_1.Long.ZERO;
        message.timestamp = object.timestamp !== void 0 && object.timestamp !== null ? timestamp_1.Timestamp.fromPartial(object.timestamp) : void 0;
        return message;
      }
    };
    function createBaseEvidenceList() {
      return {
        evidence: []
      };
    }
    exports.EvidenceList = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.evidence) {
          exports.Evidence.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseEvidenceList();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.evidence.push(exports.Evidence.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          evidence: Array.isArray(object == null ? void 0 : object.evidence) ? object.evidence.map((e2) => exports.Evidence.fromJSON(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.evidence) {
          obj.evidence = message.evidence.map((e2) => e2 ? exports.Evidence.toJSON(e2) : void 0);
        } else {
          obj.evidence = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseEvidenceList();
        message.evidence = ((_a = object.evidence) == null ? void 0 : _a.map((e2) => exports.Evidence.fromPartial(e2))) || [];
        return message;
      }
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/tendermint/types/block.js
var require_block = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/tendermint/types/block.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Block = exports.protobufPackage = void 0;
    var types_1 = require_types2();
    var evidence_1 = require_evidence();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "tendermint.types";
    function createBaseBlock() {
      return {
        header: void 0,
        data: void 0,
        evidence: void 0,
        lastCommit: void 0
      };
    }
    exports.Block = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.header !== void 0) {
          types_1.Header.encode(message.header, writer.uint32(10).fork()).ldelim();
        }
        if (message.data !== void 0) {
          types_1.Data.encode(message.data, writer.uint32(18).fork()).ldelim();
        }
        if (message.evidence !== void 0) {
          evidence_1.EvidenceList.encode(message.evidence, writer.uint32(26).fork()).ldelim();
        }
        if (message.lastCommit !== void 0) {
          types_1.Commit.encode(message.lastCommit, writer.uint32(34).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseBlock();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.header = types_1.Header.decode(reader, reader.uint32());
              break;
            case 2:
              message.data = types_1.Data.decode(reader, reader.uint32());
              break;
            case 3:
              message.evidence = evidence_1.EvidenceList.decode(reader, reader.uint32());
              break;
            case 4:
              message.lastCommit = types_1.Commit.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          header: (0, helpers_1.isSet)(object.header) ? types_1.Header.fromJSON(object.header) : void 0,
          data: (0, helpers_1.isSet)(object.data) ? types_1.Data.fromJSON(object.data) : void 0,
          evidence: (0, helpers_1.isSet)(object.evidence) ? evidence_1.EvidenceList.fromJSON(object.evidence) : void 0,
          lastCommit: (0, helpers_1.isSet)(object.lastCommit) ? types_1.Commit.fromJSON(object.lastCommit) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.header !== void 0 && (obj.header = message.header ? types_1.Header.toJSON(message.header) : void 0);
        message.data !== void 0 && (obj.data = message.data ? types_1.Data.toJSON(message.data) : void 0);
        message.evidence !== void 0 && (obj.evidence = message.evidence ? evidence_1.EvidenceList.toJSON(message.evidence) : void 0);
        message.lastCommit !== void 0 && (obj.lastCommit = message.lastCommit ? types_1.Commit.toJSON(message.lastCommit) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseBlock();
        message.header = object.header !== void 0 && object.header !== null ? types_1.Header.fromPartial(object.header) : void 0;
        message.data = object.data !== void 0 && object.data !== null ? types_1.Data.fromPartial(object.data) : void 0;
        message.evidence = object.evidence !== void 0 && object.evidence !== null ? evidence_1.EvidenceList.fromPartial(object.evidence) : void 0;
        message.lastCommit = object.lastCommit !== void 0 && object.lastCommit !== null ? types_1.Commit.fromPartial(object.lastCommit) : void 0;
        return message;
      }
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/tx/v1beta1/service.js
var require_service = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/tx/v1beta1/service.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ServiceClientImpl = exports.GetBlockWithTxsResponse = exports.GetBlockWithTxsRequest = exports.GetTxResponse = exports.GetTxRequest = exports.SimulateResponse = exports.SimulateRequest = exports.BroadcastTxResponse = exports.BroadcastTxRequest = exports.GetTxsEventResponse = exports.GetTxsEventRequest = exports.broadcastModeToJSON = exports.broadcastModeFromJSON = exports.BroadcastMode = exports.orderByToJSON = exports.orderByFromJSON = exports.OrderBy = exports.protobufPackage = void 0;
    var tx_1 = require_tx();
    var pagination_1 = require_pagination();
    var abci_1 = require_abci();
    var types_1 = require_types2();
    var block_1 = require_block();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmos.tx.v1beta1";
    var OrderBy;
    (function(OrderBy2) {
      OrderBy2[OrderBy2["ORDER_BY_UNSPECIFIED"] = 0] = "ORDER_BY_UNSPECIFIED";
      OrderBy2[OrderBy2["ORDER_BY_ASC"] = 1] = "ORDER_BY_ASC";
      OrderBy2[OrderBy2["ORDER_BY_DESC"] = 2] = "ORDER_BY_DESC";
      OrderBy2[OrderBy2["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
    })(OrderBy = exports.OrderBy || (exports.OrderBy = {}));
    function orderByFromJSON(object) {
      switch (object) {
        case 0:
        case "ORDER_BY_UNSPECIFIED":
          return OrderBy.ORDER_BY_UNSPECIFIED;
        case 1:
        case "ORDER_BY_ASC":
          return OrderBy.ORDER_BY_ASC;
        case 2:
        case "ORDER_BY_DESC":
          return OrderBy.ORDER_BY_DESC;
        case -1:
        case "UNRECOGNIZED":
        default:
          return OrderBy.UNRECOGNIZED;
      }
    }
    exports.orderByFromJSON = orderByFromJSON;
    function orderByToJSON(object) {
      switch (object) {
        case OrderBy.ORDER_BY_UNSPECIFIED:
          return "ORDER_BY_UNSPECIFIED";
        case OrderBy.ORDER_BY_ASC:
          return "ORDER_BY_ASC";
        case OrderBy.ORDER_BY_DESC:
          return "ORDER_BY_DESC";
        case OrderBy.UNRECOGNIZED:
        default:
          return "UNRECOGNIZED";
      }
    }
    exports.orderByToJSON = orderByToJSON;
    var BroadcastMode;
    (function(BroadcastMode2) {
      BroadcastMode2[BroadcastMode2["BROADCAST_MODE_UNSPECIFIED"] = 0] = "BROADCAST_MODE_UNSPECIFIED";
      BroadcastMode2[BroadcastMode2["BROADCAST_MODE_BLOCK"] = 1] = "BROADCAST_MODE_BLOCK";
      BroadcastMode2[BroadcastMode2["BROADCAST_MODE_SYNC"] = 2] = "BROADCAST_MODE_SYNC";
      BroadcastMode2[BroadcastMode2["BROADCAST_MODE_ASYNC"] = 3] = "BROADCAST_MODE_ASYNC";
      BroadcastMode2[BroadcastMode2["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
    })(BroadcastMode = exports.BroadcastMode || (exports.BroadcastMode = {}));
    function broadcastModeFromJSON(object) {
      switch (object) {
        case 0:
        case "BROADCAST_MODE_UNSPECIFIED":
          return BroadcastMode.BROADCAST_MODE_UNSPECIFIED;
        case 1:
        case "BROADCAST_MODE_BLOCK":
          return BroadcastMode.BROADCAST_MODE_BLOCK;
        case 2:
        case "BROADCAST_MODE_SYNC":
          return BroadcastMode.BROADCAST_MODE_SYNC;
        case 3:
        case "BROADCAST_MODE_ASYNC":
          return BroadcastMode.BROADCAST_MODE_ASYNC;
        case -1:
        case "UNRECOGNIZED":
        default:
          return BroadcastMode.UNRECOGNIZED;
      }
    }
    exports.broadcastModeFromJSON = broadcastModeFromJSON;
    function broadcastModeToJSON(object) {
      switch (object) {
        case BroadcastMode.BROADCAST_MODE_UNSPECIFIED:
          return "BROADCAST_MODE_UNSPECIFIED";
        case BroadcastMode.BROADCAST_MODE_BLOCK:
          return "BROADCAST_MODE_BLOCK";
        case BroadcastMode.BROADCAST_MODE_SYNC:
          return "BROADCAST_MODE_SYNC";
        case BroadcastMode.BROADCAST_MODE_ASYNC:
          return "BROADCAST_MODE_ASYNC";
        case BroadcastMode.UNRECOGNIZED:
        default:
          return "UNRECOGNIZED";
      }
    }
    exports.broadcastModeToJSON = broadcastModeToJSON;
    function createBaseGetTxsEventRequest() {
      return {
        events: [],
        pagination: void 0,
        orderBy: 0
      };
    }
    exports.GetTxsEventRequest = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.events) {
          writer.uint32(10).string(v3);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        if (message.orderBy !== 0) {
          writer.uint32(24).int32(message.orderBy);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseGetTxsEventRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.events.push(reader.string());
              break;
            case 2:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            case 3:
              message.orderBy = reader.int32();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          events: Array.isArray(object == null ? void 0 : object.events) ? object.events.map((e2) => String(e2)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0,
          orderBy: (0, helpers_1.isSet)(object.orderBy) ? orderByFromJSON(object.orderBy) : 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.events) {
          obj.events = message.events.map((e2) => e2);
        } else {
          obj.events = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        message.orderBy !== void 0 && (obj.orderBy = orderByToJSON(message.orderBy));
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseGetTxsEventRequest();
        message.events = ((_a = object.events) == null ? void 0 : _a.map((e2) => e2)) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        message.orderBy = object.orderBy ?? 0;
        return message;
      }
    };
    function createBaseGetTxsEventResponse() {
      return {
        txs: [],
        txResponses: [],
        pagination: void 0
      };
    }
    exports.GetTxsEventResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.txs) {
          tx_1.Tx.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        for (const v3 of message.txResponses) {
          abci_1.TxResponse.encode(v3, writer.uint32(18).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseGetTxsEventResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.txs.push(tx_1.Tx.decode(reader, reader.uint32()));
              break;
            case 2:
              message.txResponses.push(abci_1.TxResponse.decode(reader, reader.uint32()));
              break;
            case 3:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          txs: Array.isArray(object == null ? void 0 : object.txs) ? object.txs.map((e2) => tx_1.Tx.fromJSON(e2)) : [],
          txResponses: Array.isArray(object == null ? void 0 : object.txResponses) ? object.txResponses.map((e2) => abci_1.TxResponse.fromJSON(e2)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.txs) {
          obj.txs = message.txs.map((e2) => e2 ? tx_1.Tx.toJSON(e2) : void 0);
        } else {
          obj.txs = [];
        }
        if (message.txResponses) {
          obj.txResponses = message.txResponses.map((e2) => e2 ? abci_1.TxResponse.toJSON(e2) : void 0);
        } else {
          obj.txResponses = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a, _b;
        const message = createBaseGetTxsEventResponse();
        message.txs = ((_a = object.txs) == null ? void 0 : _a.map((e2) => tx_1.Tx.fromPartial(e2))) || [];
        message.txResponses = ((_b = object.txResponses) == null ? void 0 : _b.map((e2) => abci_1.TxResponse.fromPartial(e2))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseBroadcastTxRequest() {
      return {
        txBytes: new Uint8Array(),
        mode: 0
      };
    }
    exports.BroadcastTxRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.txBytes.length !== 0) {
          writer.uint32(10).bytes(message.txBytes);
        }
        if (message.mode !== 0) {
          writer.uint32(16).int32(message.mode);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseBroadcastTxRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.txBytes = reader.bytes();
              break;
            case 2:
              message.mode = reader.int32();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          txBytes: (0, helpers_1.isSet)(object.txBytes) ? (0, helpers_1.bytesFromBase64)(object.txBytes) : new Uint8Array(),
          mode: (0, helpers_1.isSet)(object.mode) ? broadcastModeFromJSON(object.mode) : 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.txBytes !== void 0 && (obj.txBytes = (0, helpers_1.base64FromBytes)(message.txBytes !== void 0 ? message.txBytes : new Uint8Array()));
        message.mode !== void 0 && (obj.mode = broadcastModeToJSON(message.mode));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseBroadcastTxRequest();
        message.txBytes = object.txBytes ?? new Uint8Array();
        message.mode = object.mode ?? 0;
        return message;
      }
    };
    function createBaseBroadcastTxResponse() {
      return {
        txResponse: void 0
      };
    }
    exports.BroadcastTxResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.txResponse !== void 0) {
          abci_1.TxResponse.encode(message.txResponse, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseBroadcastTxResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.txResponse = abci_1.TxResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          txResponse: (0, helpers_1.isSet)(object.txResponse) ? abci_1.TxResponse.fromJSON(object.txResponse) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.txResponse !== void 0 && (obj.txResponse = message.txResponse ? abci_1.TxResponse.toJSON(message.txResponse) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseBroadcastTxResponse();
        message.txResponse = object.txResponse !== void 0 && object.txResponse !== null ? abci_1.TxResponse.fromPartial(object.txResponse) : void 0;
        return message;
      }
    };
    function createBaseSimulateRequest() {
      return {
        tx: void 0,
        txBytes: new Uint8Array()
      };
    }
    exports.SimulateRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.tx !== void 0) {
          tx_1.Tx.encode(message.tx, writer.uint32(10).fork()).ldelim();
        }
        if (message.txBytes.length !== 0) {
          writer.uint32(18).bytes(message.txBytes);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseSimulateRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.tx = tx_1.Tx.decode(reader, reader.uint32());
              break;
            case 2:
              message.txBytes = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          tx: (0, helpers_1.isSet)(object.tx) ? tx_1.Tx.fromJSON(object.tx) : void 0,
          txBytes: (0, helpers_1.isSet)(object.txBytes) ? (0, helpers_1.bytesFromBase64)(object.txBytes) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.tx !== void 0 && (obj.tx = message.tx ? tx_1.Tx.toJSON(message.tx) : void 0);
        message.txBytes !== void 0 && (obj.txBytes = (0, helpers_1.base64FromBytes)(message.txBytes !== void 0 ? message.txBytes : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseSimulateRequest();
        message.tx = object.tx !== void 0 && object.tx !== null ? tx_1.Tx.fromPartial(object.tx) : void 0;
        message.txBytes = object.txBytes ?? new Uint8Array();
        return message;
      }
    };
    function createBaseSimulateResponse() {
      return {
        gasInfo: void 0,
        result: void 0
      };
    }
    exports.SimulateResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.gasInfo !== void 0) {
          abci_1.GasInfo.encode(message.gasInfo, writer.uint32(10).fork()).ldelim();
        }
        if (message.result !== void 0) {
          abci_1.Result.encode(message.result, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseSimulateResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.gasInfo = abci_1.GasInfo.decode(reader, reader.uint32());
              break;
            case 2:
              message.result = abci_1.Result.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          gasInfo: (0, helpers_1.isSet)(object.gasInfo) ? abci_1.GasInfo.fromJSON(object.gasInfo) : void 0,
          result: (0, helpers_1.isSet)(object.result) ? abci_1.Result.fromJSON(object.result) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.gasInfo !== void 0 && (obj.gasInfo = message.gasInfo ? abci_1.GasInfo.toJSON(message.gasInfo) : void 0);
        message.result !== void 0 && (obj.result = message.result ? abci_1.Result.toJSON(message.result) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseSimulateResponse();
        message.gasInfo = object.gasInfo !== void 0 && object.gasInfo !== null ? abci_1.GasInfo.fromPartial(object.gasInfo) : void 0;
        message.result = object.result !== void 0 && object.result !== null ? abci_1.Result.fromPartial(object.result) : void 0;
        return message;
      }
    };
    function createBaseGetTxRequest() {
      return {
        hash: ""
      };
    }
    exports.GetTxRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.hash !== "") {
          writer.uint32(10).string(message.hash);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseGetTxRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.hash = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          hash: (0, helpers_1.isSet)(object.hash) ? String(object.hash) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.hash !== void 0 && (obj.hash = message.hash);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseGetTxRequest();
        message.hash = object.hash ?? "";
        return message;
      }
    };
    function createBaseGetTxResponse() {
      return {
        tx: void 0,
        txResponse: void 0
      };
    }
    exports.GetTxResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.tx !== void 0) {
          tx_1.Tx.encode(message.tx, writer.uint32(10).fork()).ldelim();
        }
        if (message.txResponse !== void 0) {
          abci_1.TxResponse.encode(message.txResponse, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseGetTxResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.tx = tx_1.Tx.decode(reader, reader.uint32());
              break;
            case 2:
              message.txResponse = abci_1.TxResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          tx: (0, helpers_1.isSet)(object.tx) ? tx_1.Tx.fromJSON(object.tx) : void 0,
          txResponse: (0, helpers_1.isSet)(object.txResponse) ? abci_1.TxResponse.fromJSON(object.txResponse) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.tx !== void 0 && (obj.tx = message.tx ? tx_1.Tx.toJSON(message.tx) : void 0);
        message.txResponse !== void 0 && (obj.txResponse = message.txResponse ? abci_1.TxResponse.toJSON(message.txResponse) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseGetTxResponse();
        message.tx = object.tx !== void 0 && object.tx !== null ? tx_1.Tx.fromPartial(object.tx) : void 0;
        message.txResponse = object.txResponse !== void 0 && object.txResponse !== null ? abci_1.TxResponse.fromPartial(object.txResponse) : void 0;
        return message;
      }
    };
    function createBaseGetBlockWithTxsRequest() {
      return {
        height: helpers_1.Long.ZERO,
        pagination: void 0
      };
    }
    exports.GetBlockWithTxsRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.height.isZero()) {
          writer.uint32(8).int64(message.height);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseGetBlockWithTxsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.height = reader.int64();
              break;
            case 2:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          height: (0, helpers_1.isSet)(object.height) ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.ZERO,
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.height !== void 0 && (obj.height = (message.height || helpers_1.Long.ZERO).toString());
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseGetBlockWithTxsRequest();
        message.height = object.height !== void 0 && object.height !== null ? helpers_1.Long.fromValue(object.height) : helpers_1.Long.ZERO;
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseGetBlockWithTxsResponse() {
      return {
        txs: [],
        blockId: void 0,
        block: void 0,
        pagination: void 0
      };
    }
    exports.GetBlockWithTxsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.txs) {
          tx_1.Tx.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        if (message.blockId !== void 0) {
          types_1.BlockID.encode(message.blockId, writer.uint32(18).fork()).ldelim();
        }
        if (message.block !== void 0) {
          block_1.Block.encode(message.block, writer.uint32(26).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(34).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseGetBlockWithTxsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.txs.push(tx_1.Tx.decode(reader, reader.uint32()));
              break;
            case 2:
              message.blockId = types_1.BlockID.decode(reader, reader.uint32());
              break;
            case 3:
              message.block = block_1.Block.decode(reader, reader.uint32());
              break;
            case 4:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          txs: Array.isArray(object == null ? void 0 : object.txs) ? object.txs.map((e2) => tx_1.Tx.fromJSON(e2)) : [],
          blockId: (0, helpers_1.isSet)(object.blockId) ? types_1.BlockID.fromJSON(object.blockId) : void 0,
          block: (0, helpers_1.isSet)(object.block) ? block_1.Block.fromJSON(object.block) : void 0,
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.txs) {
          obj.txs = message.txs.map((e2) => e2 ? tx_1.Tx.toJSON(e2) : void 0);
        } else {
          obj.txs = [];
        }
        message.blockId !== void 0 && (obj.blockId = message.blockId ? types_1.BlockID.toJSON(message.blockId) : void 0);
        message.block !== void 0 && (obj.block = message.block ? block_1.Block.toJSON(message.block) : void 0);
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseGetBlockWithTxsResponse();
        message.txs = ((_a = object.txs) == null ? void 0 : _a.map((e2) => tx_1.Tx.fromPartial(e2))) || [];
        message.blockId = object.blockId !== void 0 && object.blockId !== null ? types_1.BlockID.fromPartial(object.blockId) : void 0;
        message.block = object.block !== void 0 && object.block !== null ? block_1.Block.fromPartial(object.block) : void 0;
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    var ServiceClientImpl = class {
      constructor(rpc) {
        this.rpc = rpc;
        this.Simulate = this.Simulate.bind(this);
        this.GetTx = this.GetTx.bind(this);
        this.BroadcastTx = this.BroadcastTx.bind(this);
        this.GetTxsEvent = this.GetTxsEvent.bind(this);
        this.GetBlockWithTxs = this.GetBlockWithTxs.bind(this);
      }
      Simulate(request) {
        const data = exports.SimulateRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.tx.v1beta1.Service", "Simulate", data);
        return promise.then((data2) => exports.SimulateResponse.decode(new _m0.Reader(data2)));
      }
      GetTx(request) {
        const data = exports.GetTxRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.tx.v1beta1.Service", "GetTx", data);
        return promise.then((data2) => exports.GetTxResponse.decode(new _m0.Reader(data2)));
      }
      BroadcastTx(request) {
        const data = exports.BroadcastTxRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.tx.v1beta1.Service", "BroadcastTx", data);
        return promise.then((data2) => exports.BroadcastTxResponse.decode(new _m0.Reader(data2)));
      }
      GetTxsEvent(request) {
        const data = exports.GetTxsEventRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.tx.v1beta1.Service", "GetTxsEvent", data);
        return promise.then((data2) => exports.GetTxsEventResponse.decode(new _m0.Reader(data2)));
      }
      GetBlockWithTxs(request) {
        const data = exports.GetBlockWithTxsRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.tx.v1beta1.Service", "GetBlockWithTxs", data);
        return promise.then((data2) => exports.GetBlockWithTxsResponse.decode(new _m0.Reader(data2)));
      }
    };
    exports.ServiceClientImpl = ServiceClientImpl;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/tx/queries.js
var require_queries11 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/tx/queries.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.setupTxExtension = void 0;
    var proto_signing_1 = require_build7();
    var signing_1 = require_signing();
    var service_1 = require_service();
    var tx_1 = require_tx();
    var long_1 = __importDefault(require_long());
    var queryclient_1 = require_queryclient2();
    function setupTxExtension(base) {
      const rpc = (0, queryclient_1.createProtobufRpcClient)(base);
      const queryService = new service_1.ServiceClientImpl(rpc);
      return {
        tx: {
          getTx: async (txId) => {
            const request = {
              hash: txId
            };
            const response = await queryService.GetTx(request);
            return response;
          },
          simulate: async (messages, memo, signer, sequence) => {
            const tx = tx_1.Tx.fromPartial({
              authInfo: tx_1.AuthInfo.fromPartial({
                fee: tx_1.Fee.fromPartial({}),
                signerInfos: [
                  {
                    publicKey: (0, proto_signing_1.encodePubkey)(signer),
                    sequence: long_1.default.fromNumber(sequence, true),
                    modeInfo: { single: { mode: signing_1.SignMode.SIGN_MODE_UNSPECIFIED } }
                  }
                ]
              }),
              body: tx_1.TxBody.fromPartial({
                messages: Array.from(messages),
                memo
              }),
              signatures: [new Uint8Array()]
            });
            const request = service_1.SimulateRequest.fromPartial({
              txBytes: tx_1.Tx.encode(tx).finish()
            });
            const response = await queryService.Simulate(request);
            return response;
          }
        }
      };
    }
    exports.setupTxExtension = setupTxExtension;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/vesting/aminomessages.js
var require_aminomessages11 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/vesting/aminomessages.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createVestingAminoConverters = exports.isAminoMsgCreateVestingAccount = void 0;
    var long_1 = __importDefault(require_long());
    function isAminoMsgCreateVestingAccount(msg) {
      return msg.type === "cosmos-sdk/MsgCreateVestingAccount";
    }
    exports.isAminoMsgCreateVestingAccount = isAminoMsgCreateVestingAccount;
    function createVestingAminoConverters() {
      return {
        "/cosmos.vesting.v1beta1.MsgCreateVestingAccount": {
          aminoType: "cosmos-sdk/MsgCreateVestingAccount",
          toAmino: ({ fromAddress, toAddress, amount, endTime, delayed }) => ({
            from_address: fromAddress,
            to_address: toAddress,
            amount: [...amount],
            end_time: endTime.toString(),
            delayed
          }),
          fromAmino: ({ from_address, to_address, amount, end_time, delayed }) => ({
            fromAddress: from_address,
            toAddress: to_address,
            amount: [...amount],
            endTime: long_1.default.fromString(end_time),
            delayed
          })
        }
      };
    }
    exports.createVestingAminoConverters = createVestingAminoConverters;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/vesting/v1beta1/tx.js
var require_tx12 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmos/vesting/v1beta1/tx.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.MsgClientImpl = exports.MsgCreateVestingAccountResponse = exports.MsgCreateVestingAccount = exports.protobufPackage = void 0;
    var coin_1 = require_coin();
    var helpers_1 = require_helpers();
    var _m0 = __importStar(require_minimal());
    exports.protobufPackage = "cosmos.vesting.v1beta1";
    function createBaseMsgCreateVestingAccount() {
      return {
        fromAddress: "",
        toAddress: "",
        amount: [],
        endTime: helpers_1.Long.ZERO,
        delayed: false
      };
    }
    exports.MsgCreateVestingAccount = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.fromAddress !== "") {
          writer.uint32(10).string(message.fromAddress);
        }
        if (message.toAddress !== "") {
          writer.uint32(18).string(message.toAddress);
        }
        for (const v3 of message.amount) {
          coin_1.Coin.encode(v3, writer.uint32(26).fork()).ldelim();
        }
        if (!message.endTime.isZero()) {
          writer.uint32(32).int64(message.endTime);
        }
        if (message.delayed === true) {
          writer.uint32(40).bool(message.delayed);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgCreateVestingAccount();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.fromAddress = reader.string();
              break;
            case 2:
              message.toAddress = reader.string();
              break;
            case 3:
              message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));
              break;
            case 4:
              message.endTime = reader.int64();
              break;
            case 5:
              message.delayed = reader.bool();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          fromAddress: (0, helpers_1.isSet)(object.fromAddress) ? String(object.fromAddress) : "",
          toAddress: (0, helpers_1.isSet)(object.toAddress) ? String(object.toAddress) : "",
          amount: Array.isArray(object == null ? void 0 : object.amount) ? object.amount.map((e2) => coin_1.Coin.fromJSON(e2)) : [],
          endTime: (0, helpers_1.isSet)(object.endTime) ? helpers_1.Long.fromValue(object.endTime) : helpers_1.Long.ZERO,
          delayed: (0, helpers_1.isSet)(object.delayed) ? Boolean(object.delayed) : false
        };
      },
      toJSON(message) {
        const obj = {};
        message.fromAddress !== void 0 && (obj.fromAddress = message.fromAddress);
        message.toAddress !== void 0 && (obj.toAddress = message.toAddress);
        if (message.amount) {
          obj.amount = message.amount.map((e2) => e2 ? coin_1.Coin.toJSON(e2) : void 0);
        } else {
          obj.amount = [];
        }
        message.endTime !== void 0 && (obj.endTime = (message.endTime || helpers_1.Long.ZERO).toString());
        message.delayed !== void 0 && (obj.delayed = message.delayed);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseMsgCreateVestingAccount();
        message.fromAddress = object.fromAddress ?? "";
        message.toAddress = object.toAddress ?? "";
        message.amount = ((_a = object.amount) == null ? void 0 : _a.map((e2) => coin_1.Coin.fromPartial(e2))) || [];
        message.endTime = object.endTime !== void 0 && object.endTime !== null ? helpers_1.Long.fromValue(object.endTime) : helpers_1.Long.ZERO;
        message.delayed = object.delayed ?? false;
        return message;
      }
    };
    function createBaseMsgCreateVestingAccountResponse() {
      return {};
    }
    exports.MsgCreateVestingAccountResponse = {
      encode(_3, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgCreateVestingAccountResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_3) {
        return {};
      },
      toJSON(_3) {
        const obj = {};
        return obj;
      },
      fromPartial(_3) {
        const message = createBaseMsgCreateVestingAccountResponse();
        return message;
      }
    };
    var MsgClientImpl = class {
      constructor(rpc) {
        this.rpc = rpc;
        this.CreateVestingAccount = this.CreateVestingAccount.bind(this);
      }
      CreateVestingAccount(request) {
        const data = exports.MsgCreateVestingAccount.encode(request).finish();
        const promise = this.rpc.request("cosmos.vesting.v1beta1.Msg", "CreateVestingAccount", data);
        return promise.then((data2) => exports.MsgCreateVestingAccountResponse.decode(new _m0.Reader(data2)));
      }
    };
    exports.MsgClientImpl = MsgClientImpl;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/vesting/messages.js
var require_messages8 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/vesting/messages.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.vestingTypes = void 0;
    var tx_1 = require_tx12();
    exports.vestingTypes = [
      ["/cosmos.vesting.v1beta1.MsgCreateVestingAccount", tx_1.MsgCreateVestingAccount]
    ];
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/index.js
var require_modules = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/modules/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isAminoMsgEditValidator = exports.isAminoMsgDelegate = exports.isAminoMsgCreateValidator = exports.isAminoMsgBeginRedelegate = exports.createStakingAminoConverters = exports.setupSlashingExtension = exports.isAminoMsgUnjail = exports.createSlashingAminoConverters = exports.setupMintExtension = exports.setupIbcExtension = exports.isMsgTransferEncodeObject = exports.ibcTypes = exports.isAminoMsgTransfer = exports.createIbcAminoConverters = exports.setupGovExtension = exports.isMsgVoteWeightedEncodeObject = exports.isMsgVoteEncodeObject = exports.isMsgSubmitProposalEncodeObject = exports.isMsgDepositEncodeObject = exports.govTypes = exports.isAminoMsgVoteWeighted = exports.isAminoMsgVote = exports.isAminoMsgSubmitProposal = exports.isAminoMsgDeposit = exports.createGovAminoConverters = exports.setupFeegrantExtension = exports.feegrantTypes = exports.createFeegrantAminoConverters = exports.isAminoMsgSubmitEvidence = exports.createEvidenceAminoConverters = exports.setupDistributionExtension = exports.isMsgWithdrawDelegatorRewardEncodeObject = exports.distributionTypes = exports.isAminoMsgWithdrawValidatorCommission = exports.isAminoMsgWithdrawDelegatorReward = exports.isAminoMsgSetWithdrawAddress = exports.isAminoMsgFundCommunityPool = exports.createDistributionAminoConverters = exports.isAminoMsgVerifyInvariant = exports.createCrysisAminoConverters = exports.setupBankExtension = exports.isMsgSendEncodeObject = exports.bankTypes = exports.isAminoMsgSend = exports.isAminoMsgMultiSend = exports.createBankAminoConverters = exports.setupAuthzExtension = exports.authzTypes = exports.createAuthzAminoConverters = exports.setupAuthExtension = void 0;
    exports.vestingTypes = exports.isAminoMsgCreateVestingAccount = exports.createVestingAminoConverters = exports.setupTxExtension = exports.setupStakingExtension = exports.stakingTypes = exports.isMsgUndelegateEncodeObject = exports.isMsgEditValidatorEncodeObject = exports.isMsgDelegateEncodeObject = exports.isMsgCreateValidatorEncodeObject = exports.isMsgBeginRedelegateEncodeObject = exports.isAminoMsgUndelegate = void 0;
    var queries_1 = require_queries();
    Object.defineProperty(exports, "setupAuthExtension", { enumerable: true, get: function() {
      return queries_1.setupAuthExtension;
    } });
    var aminomessages_1 = require_aminomessages();
    Object.defineProperty(exports, "createAuthzAminoConverters", { enumerable: true, get: function() {
      return aminomessages_1.createAuthzAminoConverters;
    } });
    var messages_1 = require_messages();
    Object.defineProperty(exports, "authzTypes", { enumerable: true, get: function() {
      return messages_1.authzTypes;
    } });
    var queries_2 = require_queries2();
    Object.defineProperty(exports, "setupAuthzExtension", { enumerable: true, get: function() {
      return queries_2.setupAuthzExtension;
    } });
    var aminomessages_2 = require_aminomessages2();
    Object.defineProperty(exports, "createBankAminoConverters", { enumerable: true, get: function() {
      return aminomessages_2.createBankAminoConverters;
    } });
    Object.defineProperty(exports, "isAminoMsgMultiSend", { enumerable: true, get: function() {
      return aminomessages_2.isAminoMsgMultiSend;
    } });
    Object.defineProperty(exports, "isAminoMsgSend", { enumerable: true, get: function() {
      return aminomessages_2.isAminoMsgSend;
    } });
    var messages_2 = require_messages2();
    Object.defineProperty(exports, "bankTypes", { enumerable: true, get: function() {
      return messages_2.bankTypes;
    } });
    Object.defineProperty(exports, "isMsgSendEncodeObject", { enumerable: true, get: function() {
      return messages_2.isMsgSendEncodeObject;
    } });
    var queries_3 = require_queries3();
    Object.defineProperty(exports, "setupBankExtension", { enumerable: true, get: function() {
      return queries_3.setupBankExtension;
    } });
    var aminomessages_3 = require_aminomessages3();
    Object.defineProperty(exports, "createCrysisAminoConverters", { enumerable: true, get: function() {
      return aminomessages_3.createCrysisAminoConverters;
    } });
    Object.defineProperty(exports, "isAminoMsgVerifyInvariant", { enumerable: true, get: function() {
      return aminomessages_3.isAminoMsgVerifyInvariant;
    } });
    var aminomessages_4 = require_aminomessages4();
    Object.defineProperty(exports, "createDistributionAminoConverters", { enumerable: true, get: function() {
      return aminomessages_4.createDistributionAminoConverters;
    } });
    Object.defineProperty(exports, "isAminoMsgFundCommunityPool", { enumerable: true, get: function() {
      return aminomessages_4.isAminoMsgFundCommunityPool;
    } });
    Object.defineProperty(exports, "isAminoMsgSetWithdrawAddress", { enumerable: true, get: function() {
      return aminomessages_4.isAminoMsgSetWithdrawAddress;
    } });
    Object.defineProperty(exports, "isAminoMsgWithdrawDelegatorReward", { enumerable: true, get: function() {
      return aminomessages_4.isAminoMsgWithdrawDelegatorReward;
    } });
    Object.defineProperty(exports, "isAminoMsgWithdrawValidatorCommission", { enumerable: true, get: function() {
      return aminomessages_4.isAminoMsgWithdrawValidatorCommission;
    } });
    var messages_3 = require_messages3();
    Object.defineProperty(exports, "distributionTypes", { enumerable: true, get: function() {
      return messages_3.distributionTypes;
    } });
    Object.defineProperty(exports, "isMsgWithdrawDelegatorRewardEncodeObject", { enumerable: true, get: function() {
      return messages_3.isMsgWithdrawDelegatorRewardEncodeObject;
    } });
    var queries_4 = require_queries4();
    Object.defineProperty(exports, "setupDistributionExtension", { enumerable: true, get: function() {
      return queries_4.setupDistributionExtension;
    } });
    var aminomessages_5 = require_aminomessages5();
    Object.defineProperty(exports, "createEvidenceAminoConverters", { enumerable: true, get: function() {
      return aminomessages_5.createEvidenceAminoConverters;
    } });
    Object.defineProperty(exports, "isAminoMsgSubmitEvidence", { enumerable: true, get: function() {
      return aminomessages_5.isAminoMsgSubmitEvidence;
    } });
    var aminomessages_6 = require_aminomessages6();
    Object.defineProperty(exports, "createFeegrantAminoConverters", { enumerable: true, get: function() {
      return aminomessages_6.createFeegrantAminoConverters;
    } });
    var messages_4 = require_messages4();
    Object.defineProperty(exports, "feegrantTypes", { enumerable: true, get: function() {
      return messages_4.feegrantTypes;
    } });
    var queries_5 = require_queries5();
    Object.defineProperty(exports, "setupFeegrantExtension", { enumerable: true, get: function() {
      return queries_5.setupFeegrantExtension;
    } });
    var aminomessages_7 = require_aminomessages7();
    Object.defineProperty(exports, "createGovAminoConverters", { enumerable: true, get: function() {
      return aminomessages_7.createGovAminoConverters;
    } });
    Object.defineProperty(exports, "isAminoMsgDeposit", { enumerable: true, get: function() {
      return aminomessages_7.isAminoMsgDeposit;
    } });
    Object.defineProperty(exports, "isAminoMsgSubmitProposal", { enumerable: true, get: function() {
      return aminomessages_7.isAminoMsgSubmitProposal;
    } });
    Object.defineProperty(exports, "isAminoMsgVote", { enumerable: true, get: function() {
      return aminomessages_7.isAminoMsgVote;
    } });
    Object.defineProperty(exports, "isAminoMsgVoteWeighted", { enumerable: true, get: function() {
      return aminomessages_7.isAminoMsgVoteWeighted;
    } });
    var messages_5 = require_messages5();
    Object.defineProperty(exports, "govTypes", { enumerable: true, get: function() {
      return messages_5.govTypes;
    } });
    Object.defineProperty(exports, "isMsgDepositEncodeObject", { enumerable: true, get: function() {
      return messages_5.isMsgDepositEncodeObject;
    } });
    Object.defineProperty(exports, "isMsgSubmitProposalEncodeObject", { enumerable: true, get: function() {
      return messages_5.isMsgSubmitProposalEncodeObject;
    } });
    Object.defineProperty(exports, "isMsgVoteEncodeObject", { enumerable: true, get: function() {
      return messages_5.isMsgVoteEncodeObject;
    } });
    Object.defineProperty(exports, "isMsgVoteWeightedEncodeObject", { enumerable: true, get: function() {
      return messages_5.isMsgVoteWeightedEncodeObject;
    } });
    var queries_6 = require_queries6();
    Object.defineProperty(exports, "setupGovExtension", { enumerable: true, get: function() {
      return queries_6.setupGovExtension;
    } });
    var aminomessages_8 = require_aminomessages8();
    Object.defineProperty(exports, "createIbcAminoConverters", { enumerable: true, get: function() {
      return aminomessages_8.createIbcAminoConverters;
    } });
    Object.defineProperty(exports, "isAminoMsgTransfer", { enumerable: true, get: function() {
      return aminomessages_8.isAminoMsgTransfer;
    } });
    var messages_6 = require_messages6();
    Object.defineProperty(exports, "ibcTypes", { enumerable: true, get: function() {
      return messages_6.ibcTypes;
    } });
    Object.defineProperty(exports, "isMsgTransferEncodeObject", { enumerable: true, get: function() {
      return messages_6.isMsgTransferEncodeObject;
    } });
    var queries_7 = require_queries7();
    Object.defineProperty(exports, "setupIbcExtension", { enumerable: true, get: function() {
      return queries_7.setupIbcExtension;
    } });
    var queries_8 = require_queries8();
    Object.defineProperty(exports, "setupMintExtension", { enumerable: true, get: function() {
      return queries_8.setupMintExtension;
    } });
    var aminomessages_9 = require_aminomessages9();
    Object.defineProperty(exports, "createSlashingAminoConverters", { enumerable: true, get: function() {
      return aminomessages_9.createSlashingAminoConverters;
    } });
    Object.defineProperty(exports, "isAminoMsgUnjail", { enumerable: true, get: function() {
      return aminomessages_9.isAminoMsgUnjail;
    } });
    var queries_9 = require_queries9();
    Object.defineProperty(exports, "setupSlashingExtension", { enumerable: true, get: function() {
      return queries_9.setupSlashingExtension;
    } });
    var aminomessages_10 = require_aminomessages10();
    Object.defineProperty(exports, "createStakingAminoConverters", { enumerable: true, get: function() {
      return aminomessages_10.createStakingAminoConverters;
    } });
    Object.defineProperty(exports, "isAminoMsgBeginRedelegate", { enumerable: true, get: function() {
      return aminomessages_10.isAminoMsgBeginRedelegate;
    } });
    Object.defineProperty(exports, "isAminoMsgCreateValidator", { enumerable: true, get: function() {
      return aminomessages_10.isAminoMsgCreateValidator;
    } });
    Object.defineProperty(exports, "isAminoMsgDelegate", { enumerable: true, get: function() {
      return aminomessages_10.isAminoMsgDelegate;
    } });
    Object.defineProperty(exports, "isAminoMsgEditValidator", { enumerable: true, get: function() {
      return aminomessages_10.isAminoMsgEditValidator;
    } });
    Object.defineProperty(exports, "isAminoMsgUndelegate", { enumerable: true, get: function() {
      return aminomessages_10.isAminoMsgUndelegate;
    } });
    var messages_7 = require_messages7();
    Object.defineProperty(exports, "isMsgBeginRedelegateEncodeObject", { enumerable: true, get: function() {
      return messages_7.isMsgBeginRedelegateEncodeObject;
    } });
    Object.defineProperty(exports, "isMsgCreateValidatorEncodeObject", { enumerable: true, get: function() {
      return messages_7.isMsgCreateValidatorEncodeObject;
    } });
    Object.defineProperty(exports, "isMsgDelegateEncodeObject", { enumerable: true, get: function() {
      return messages_7.isMsgDelegateEncodeObject;
    } });
    Object.defineProperty(exports, "isMsgEditValidatorEncodeObject", { enumerable: true, get: function() {
      return messages_7.isMsgEditValidatorEncodeObject;
    } });
    Object.defineProperty(exports, "isMsgUndelegateEncodeObject", { enumerable: true, get: function() {
      return messages_7.isMsgUndelegateEncodeObject;
    } });
    Object.defineProperty(exports, "stakingTypes", { enumerable: true, get: function() {
      return messages_7.stakingTypes;
    } });
    var queries_10 = require_queries10();
    Object.defineProperty(exports, "setupStakingExtension", { enumerable: true, get: function() {
      return queries_10.setupStakingExtension;
    } });
    var queries_11 = require_queries11();
    Object.defineProperty(exports, "setupTxExtension", { enumerable: true, get: function() {
      return queries_11.setupTxExtension;
    } });
    var aminomessages_11 = require_aminomessages11();
    Object.defineProperty(exports, "createVestingAminoConverters", { enumerable: true, get: function() {
      return aminomessages_11.createVestingAminoConverters;
    } });
    Object.defineProperty(exports, "isAminoMsgCreateVestingAccount", { enumerable: true, get: function() {
      return aminomessages_11.isAminoMsgCreateVestingAccount;
    } });
    var messages_8 = require_messages8();
    Object.defineProperty(exports, "vestingTypes", { enumerable: true, get: function() {
      return messages_8.vestingTypes;
    } });
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/multisignature.js
var require_multisignature = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/multisignature.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.makeMultisignedTxBytes = exports.makeMultisignedTx = exports.makeCompactBitArray = void 0;
    var amino_1 = require_build6();
    var encoding_1 = require_build2();
    var proto_signing_1 = require_build7();
    var multisig_1 = require_multisig();
    var signing_1 = require_signing();
    var tx_1 = require_tx();
    var tx_2 = require_tx();
    var long_1 = __importDefault(require_long());
    function makeCompactBitArray(bits) {
      const byteCount = Math.ceil(bits.length / 8);
      const extraBits = bits.length - Math.floor(bits.length / 8) * 8;
      const bytes = new Uint8Array(byteCount);
      bits.forEach((value, index) => {
        const bytePos = Math.floor(index / 8);
        const bitPos = index % 8;
        if (value)
          bytes[bytePos] |= 1 << 8 - 1 - bitPos;
      });
      return multisig_1.CompactBitArray.fromPartial({ elems: bytes, extraBitsStored: extraBits });
    }
    exports.makeCompactBitArray = makeCompactBitArray;
    function makeMultisignedTx(multisigPubkey, sequence, fee, bodyBytes, signatures) {
      const addresses = Array.from(signatures.keys());
      const prefix = (0, encoding_1.fromBech32)(addresses[0]).prefix;
      const signers = Array(multisigPubkey.value.pubkeys.length).fill(false);
      const signaturesList = new Array();
      for (let i3 = 0; i3 < multisigPubkey.value.pubkeys.length; i3++) {
        const signerAddress = (0, amino_1.pubkeyToAddress)(multisigPubkey.value.pubkeys[i3], prefix);
        const signature = signatures.get(signerAddress);
        if (signature) {
          signers[i3] = true;
          signaturesList.push(signature);
        }
      }
      const signerInfo = {
        publicKey: (0, proto_signing_1.encodePubkey)(multisigPubkey),
        modeInfo: {
          multi: {
            bitarray: makeCompactBitArray(signers),
            modeInfos: signaturesList.map((_3) => ({ single: { mode: signing_1.SignMode.SIGN_MODE_LEGACY_AMINO_JSON } }))
          }
        },
        sequence: long_1.default.fromNumber(sequence)
      };
      const authInfo = tx_1.AuthInfo.fromPartial({
        signerInfos: [signerInfo],
        fee: {
          amount: [...fee.amount],
          gasLimit: long_1.default.fromString(fee.gas)
        }
      });
      const authInfoBytes = tx_1.AuthInfo.encode(authInfo).finish();
      const signedTx = tx_2.TxRaw.fromPartial({
        bodyBytes,
        authInfoBytes,
        signatures: [multisig_1.MultiSignature.encode(multisig_1.MultiSignature.fromPartial({ signatures: signaturesList })).finish()]
      });
      return signedTx;
    }
    exports.makeMultisignedTx = makeMultisignedTx;
    function makeMultisignedTxBytes(multisigPubkey, sequence, fee, bodyBytes, signatures) {
      const signedTx = makeMultisignedTx(multisigPubkey, sequence, fee, bodyBytes, signatures);
      return Uint8Array.from(tx_2.TxRaw.encode(signedTx).finish());
    }
    exports.makeMultisignedTxBytes = makeMultisignedTxBytes;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/search.js
var require_search = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/search.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isSearchByTagsQuery = exports.isSearchBySentFromOrToQuery = exports.isSearchByHeightQuery = void 0;
    function isSearchByHeightQuery(query) {
      return query.height !== void 0;
    }
    exports.isSearchByHeightQuery = isSearchByHeightQuery;
    function isSearchBySentFromOrToQuery(query) {
      return query.sentFromOrTo !== void 0;
    }
    exports.isSearchBySentFromOrToQuery = isSearchBySentFromOrToQuery;
    function isSearchByTagsQuery(query) {
      return query.tags !== void 0;
    }
    exports.isSearchByTagsQuery = isSearchByTagsQuery;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/addresses.js
var require_addresses2 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/addresses.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.pubkeyToAddress = exports.pubkeyToRawAddress = exports.rawSecp256k1PubkeyToRawAddress = exports.rawEd25519PubkeyToRawAddress = void 0;
    var crypto_1 = require_build5();
    var encoding_1 = require_build2();
    function rawEd25519PubkeyToRawAddress(pubkeyData) {
      if (pubkeyData.length !== 32) {
        throw new Error(`Invalid Ed25519 pubkey length: ${pubkeyData.length}`);
      }
      return (0, crypto_1.sha256)(pubkeyData).slice(0, 20);
    }
    exports.rawEd25519PubkeyToRawAddress = rawEd25519PubkeyToRawAddress;
    function rawSecp256k1PubkeyToRawAddress(pubkeyData) {
      if (pubkeyData.length !== 33) {
        throw new Error(`Invalid Secp256k1 pubkey length (compressed): ${pubkeyData.length}`);
      }
      return (0, crypto_1.ripemd160)((0, crypto_1.sha256)(pubkeyData));
    }
    exports.rawSecp256k1PubkeyToRawAddress = rawSecp256k1PubkeyToRawAddress;
    function pubkeyToRawAddress(type, data) {
      switch (type) {
        case "ed25519":
          return rawEd25519PubkeyToRawAddress(data);
        case "secp256k1":
          return rawSecp256k1PubkeyToRawAddress(data);
        default:
          throw new Error(`Pubkey type ${type} not supported`);
      }
    }
    exports.pubkeyToRawAddress = pubkeyToRawAddress;
    function pubkeyToAddress(type, data) {
      return (0, encoding_1.toHex)(pubkeyToRawAddress(type, data)).toUpperCase();
    }
    exports.pubkeyToAddress = pubkeyToAddress;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/dates.js
var require_dates = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/dates.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.DateTime = exports.toSeconds = exports.fromSeconds = exports.toRfc3339WithNanoseconds = exports.fromRfc3339WithNanoseconds = void 0;
    var encoding_1 = require_build2();
    var math_1 = require_build3();
    function fromRfc3339WithNanoseconds(dateTimeString) {
      const out = (0, encoding_1.fromRfc3339)(dateTimeString);
      const nanosecondsMatch = dateTimeString.match(/\.(\d+)Z$/);
      const nanoseconds = nanosecondsMatch ? nanosecondsMatch[1].slice(3) : "";
      out.nanoseconds = parseInt(nanoseconds.padEnd(6, "0"), 10);
      return out;
    }
    exports.fromRfc3339WithNanoseconds = fromRfc3339WithNanoseconds;
    function toRfc3339WithNanoseconds(dateTime) {
      var _a;
      const millisecondIso = dateTime.toISOString();
      const nanoseconds = ((_a = dateTime.nanoseconds) == null ? void 0 : _a.toString()) ?? "";
      return `${millisecondIso.slice(0, -1)}${nanoseconds.padStart(6, "0")}Z`;
    }
    exports.toRfc3339WithNanoseconds = toRfc3339WithNanoseconds;
    function fromSeconds(seconds, nanos = 0) {
      const checkedNanos = new math_1.Uint32(nanos).toNumber();
      if (checkedNanos > 999999999) {
        throw new Error("Nano seconds must not exceed 999999999");
      }
      const out = new Date(seconds * 1e3 + Math.floor(checkedNanos / 1e6));
      out.nanoseconds = checkedNanos % 1e6;
      return out;
    }
    exports.fromSeconds = fromSeconds;
    function toSeconds(date) {
      return {
        seconds: Math.floor(date.getTime() / 1e3),
        nanos: date.getTime() % 1e3 * 1e6 + (date.nanoseconds ?? 0)
      };
    }
    exports.toSeconds = toSeconds;
    var DateTime = class {
      /** @deprecated Use fromRfc3339WithNanoseconds instead */
      static decode(dateTimeString) {
        return fromRfc3339WithNanoseconds(dateTimeString);
      }
      /** @deprecated Use toRfc3339WithNanoseconds instead */
      static encode(dateTime) {
        return toRfc3339WithNanoseconds(dateTime);
      }
    };
    exports.DateTime = DateTime;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/json-rpc/build/id.js
var require_id = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/json-rpc/build/id.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.makeJsonRpcId = void 0;
    var counter = 1e4;
    function makeJsonRpcId() {
      return counter += 1;
    }
    exports.makeJsonRpcId = makeJsonRpcId;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/json-rpc/build/types.js
var require_types4 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/json-rpc/build/types.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.jsonRpcCode = exports.isJsonRpcSuccessResponse = exports.isJsonRpcErrorResponse = void 0;
    function isJsonRpcErrorResponse(response) {
      return typeof response.error === "object";
    }
    exports.isJsonRpcErrorResponse = isJsonRpcErrorResponse;
    function isJsonRpcSuccessResponse(response) {
      return !isJsonRpcErrorResponse(response);
    }
    exports.isJsonRpcSuccessResponse = isJsonRpcSuccessResponse;
    exports.jsonRpcCode = {
      parseError: -32700,
      invalidRequest: -32600,
      methodNotFound: -32601,
      invalidParams: -32602,
      internalError: -32603,
      // server error (Reserved for implementation-defined server-errors.):
      // -32000 to -32099
      serverError: {
        default: -32e3
      }
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/json-rpc/build/jsonrpcclient.js
var require_jsonrpcclient = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/json-rpc/build/jsonrpcclient.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.JsonRpcClient = void 0;
    var stream_1 = require_build8();
    var types_1 = require_types4();
    var JsonRpcClient = class {
      constructor(connection) {
        this.connection = connection;
      }
      async run(request) {
        const filteredStream = this.connection.responseStream.filter((r) => r.id === request.id);
        const pendingResponses = (0, stream_1.firstEvent)(filteredStream);
        this.connection.sendRequest(request);
        const response = await pendingResponses;
        if ((0, types_1.isJsonRpcErrorResponse)(response)) {
          const error = response.error;
          throw new Error(`JSON RPC error: code=${error.code}; message='${error.message}'`);
        }
        return response;
      }
    };
    exports.JsonRpcClient = JsonRpcClient;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/json-rpc/build/compatibility.js
var require_compatibility = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/json-rpc/build/compatibility.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isJsonCompatibleDictionary = exports.isJsonCompatibleArray = exports.isJsonCompatibleValue = void 0;
    function isJsonCompatibleValue(value) {
      if (typeof value === "string" || typeof value === "number" || typeof value === "boolean" || value === null || // eslint-disable-next-line @typescript-eslint/no-use-before-define
      isJsonCompatibleArray(value) || // eslint-disable-next-line @typescript-eslint/no-use-before-define
      isJsonCompatibleDictionary(value)) {
        return true;
      } else {
        return false;
      }
    }
    exports.isJsonCompatibleValue = isJsonCompatibleValue;
    function isJsonCompatibleArray(value) {
      if (!Array.isArray(value)) {
        return false;
      }
      for (const item of value) {
        if (!isJsonCompatibleValue(item)) {
          return false;
        }
      }
      return true;
    }
    exports.isJsonCompatibleArray = isJsonCompatibleArray;
    function isJsonCompatibleDictionary(data) {
      if (typeof data !== "object" || data === null) {
        return false;
      }
      if (Object.prototype.toString.call(data) !== "[object Object]") {
        return false;
      }
      return Object.values(data).every(isJsonCompatibleValue);
    }
    exports.isJsonCompatibleDictionary = isJsonCompatibleDictionary;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/json-rpc/build/parse.js
var require_parse = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/json-rpc/build/parse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.parseJsonRpcResponse = exports.parseJsonRpcSuccessResponse = exports.parseJsonRpcErrorResponse = exports.parseJsonRpcRequest = exports.parseJsonRpcId = void 0;
    var compatibility_1 = require_compatibility();
    function parseJsonRpcId(data) {
      if (!(0, compatibility_1.isJsonCompatibleDictionary)(data)) {
        throw new Error("Data must be JSON compatible dictionary");
      }
      const id = data.id;
      if (typeof id !== "number" && typeof id !== "string") {
        return null;
      }
      return id;
    }
    exports.parseJsonRpcId = parseJsonRpcId;
    function parseJsonRpcRequest(data) {
      if (!(0, compatibility_1.isJsonCompatibleDictionary)(data)) {
        throw new Error("Data must be JSON compatible dictionary");
      }
      if (data.jsonrpc !== "2.0") {
        throw new Error(`Got unexpected jsonrpc version: ${data.jsonrpc}`);
      }
      const id = parseJsonRpcId(data);
      if (id === null) {
        throw new Error("Invalid id field");
      }
      const method = data.method;
      if (typeof method !== "string") {
        throw new Error("Invalid method field");
      }
      if (!(0, compatibility_1.isJsonCompatibleArray)(data.params) && !(0, compatibility_1.isJsonCompatibleDictionary)(data.params)) {
        throw new Error("Invalid params field");
      }
      return {
        jsonrpc: "2.0",
        id,
        method,
        params: data.params
      };
    }
    exports.parseJsonRpcRequest = parseJsonRpcRequest;
    function parseError(error) {
      if (typeof error.code !== "number") {
        throw new Error("Error property 'code' is not a number");
      }
      if (typeof error.message !== "string") {
        throw new Error("Error property 'message' is not a string");
      }
      let maybeUndefinedData;
      if (error.data === void 0) {
        maybeUndefinedData = void 0;
      } else if ((0, compatibility_1.isJsonCompatibleValue)(error.data)) {
        maybeUndefinedData = error.data;
      } else {
        throw new Error("Error property 'data' is defined but not a JSON compatible value.");
      }
      return {
        code: error.code,
        message: error.message,
        ...maybeUndefinedData !== void 0 ? { data: maybeUndefinedData } : {}
      };
    }
    function parseJsonRpcErrorResponse(data) {
      if (!(0, compatibility_1.isJsonCompatibleDictionary)(data)) {
        throw new Error("Data must be JSON compatible dictionary");
      }
      if (data.jsonrpc !== "2.0") {
        throw new Error(`Got unexpected jsonrpc version: ${JSON.stringify(data)}`);
      }
      const id = data.id;
      if (typeof id !== "number" && typeof id !== "string" && id !== null) {
        throw new Error("Invalid id field");
      }
      if (typeof data.error === "undefined" || !(0, compatibility_1.isJsonCompatibleDictionary)(data.error)) {
        throw new Error("Invalid error field");
      }
      return {
        jsonrpc: "2.0",
        id,
        error: parseError(data.error)
      };
    }
    exports.parseJsonRpcErrorResponse = parseJsonRpcErrorResponse;
    function parseJsonRpcSuccessResponse(data) {
      if (!(0, compatibility_1.isJsonCompatibleDictionary)(data)) {
        throw new Error("Data must be JSON compatible dictionary");
      }
      if (data.jsonrpc !== "2.0") {
        throw new Error(`Got unexpected jsonrpc version: ${JSON.stringify(data)}`);
      }
      const id = data.id;
      if (typeof id !== "number" && typeof id !== "string") {
        throw new Error("Invalid id field");
      }
      if (typeof data.result === "undefined") {
        throw new Error("Invalid result field");
      }
      const result = data.result;
      return {
        jsonrpc: "2.0",
        id,
        result
      };
    }
    exports.parseJsonRpcSuccessResponse = parseJsonRpcSuccessResponse;
    function parseJsonRpcResponse(data) {
      let response;
      try {
        response = parseJsonRpcErrorResponse(data);
      } catch (_3) {
        response = parseJsonRpcSuccessResponse(data);
      }
      return response;
    }
    exports.parseJsonRpcResponse = parseJsonRpcResponse;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/json-rpc/build/index.js
var require_build9 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/json-rpc/build/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.jsonRpcCode = exports.isJsonRpcSuccessResponse = exports.isJsonRpcErrorResponse = exports.parseJsonRpcSuccessResponse = exports.parseJsonRpcResponse = exports.parseJsonRpcRequest = exports.parseJsonRpcId = exports.parseJsonRpcErrorResponse = exports.JsonRpcClient = exports.makeJsonRpcId = void 0;
    var id_1 = require_id();
    Object.defineProperty(exports, "makeJsonRpcId", { enumerable: true, get: function() {
      return id_1.makeJsonRpcId;
    } });
    var jsonrpcclient_1 = require_jsonrpcclient();
    Object.defineProperty(exports, "JsonRpcClient", { enumerable: true, get: function() {
      return jsonrpcclient_1.JsonRpcClient;
    } });
    var parse_1 = require_parse();
    Object.defineProperty(exports, "parseJsonRpcErrorResponse", { enumerable: true, get: function() {
      return parse_1.parseJsonRpcErrorResponse;
    } });
    Object.defineProperty(exports, "parseJsonRpcId", { enumerable: true, get: function() {
      return parse_1.parseJsonRpcId;
    } });
    Object.defineProperty(exports, "parseJsonRpcRequest", { enumerable: true, get: function() {
      return parse_1.parseJsonRpcRequest;
    } });
    Object.defineProperty(exports, "parseJsonRpcResponse", { enumerable: true, get: function() {
      return parse_1.parseJsonRpcResponse;
    } });
    Object.defineProperty(exports, "parseJsonRpcSuccessResponse", { enumerable: true, get: function() {
      return parse_1.parseJsonRpcSuccessResponse;
    } });
    var types_1 = require_types4();
    Object.defineProperty(exports, "isJsonRpcErrorResponse", { enumerable: true, get: function() {
      return types_1.isJsonRpcErrorResponse;
    } });
    Object.defineProperty(exports, "isJsonRpcSuccessResponse", { enumerable: true, get: function() {
      return types_1.isJsonRpcSuccessResponse;
    } });
    Object.defineProperty(exports, "jsonRpcCode", { enumerable: true, get: function() {
      return types_1.jsonRpcCode;
    } });
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/lib/helpers/bind.js
var require_bind = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/lib/helpers/bind.js"(exports, module) {
    "use strict";
    module.exports = function bind(fn, thisArg) {
      return function wrap() {
        var args = new Array(arguments.length);
        for (var i3 = 0; i3 < args.length; i3++) {
          args[i3] = arguments[i3];
        }
        return fn.apply(thisArg, args);
      };
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/lib/utils.js
var require_utils3 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/lib/utils.js"(exports, module) {
    "use strict";
    var bind = require_bind();
    var toString = Object.prototype.toString;
    function isArray(val) {
      return toString.call(val) === "[object Array]";
    }
    function isUndefined(val) {
      return typeof val === "undefined";
    }
    function isBuffer(val) {
      return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor) && typeof val.constructor.isBuffer === "function" && val.constructor.isBuffer(val);
    }
    function isArrayBuffer(val) {
      return toString.call(val) === "[object ArrayBuffer]";
    }
    function isFormData(val) {
      return typeof FormData !== "undefined" && val instanceof FormData;
    }
    function isArrayBufferView(val) {
      var result;
      if (typeof ArrayBuffer !== "undefined" && ArrayBuffer.isView) {
        result = ArrayBuffer.isView(val);
      } else {
        result = val && val.buffer && val.buffer instanceof ArrayBuffer;
      }
      return result;
    }
    function isString(val) {
      return typeof val === "string";
    }
    function isNumber(val) {
      return typeof val === "number";
    }
    function isObject(val) {
      return val !== null && typeof val === "object";
    }
    function isPlainObject(val) {
      if (toString.call(val) !== "[object Object]") {
        return false;
      }
      var prototype = Object.getPrototypeOf(val);
      return prototype === null || prototype === Object.prototype;
    }
    function isDate(val) {
      return toString.call(val) === "[object Date]";
    }
    function isFile(val) {
      return toString.call(val) === "[object File]";
    }
    function isBlob(val) {
      return toString.call(val) === "[object Blob]";
    }
    function isFunction(val) {
      return toString.call(val) === "[object Function]";
    }
    function isStream(val) {
      return isObject(val) && isFunction(val.pipe);
    }
    function isURLSearchParams(val) {
      return typeof URLSearchParams !== "undefined" && val instanceof URLSearchParams;
    }
    function trim(str) {
      return str.trim ? str.trim() : str.replace(/^\s+|\s+$/g, "");
    }
    function isStandardBrowserEnv() {
      if (typeof navigator !== "undefined" && (navigator.product === "ReactNative" || navigator.product === "NativeScript" || navigator.product === "NS")) {
        return false;
      }
      return typeof window !== "undefined" && typeof document !== "undefined";
    }
    function forEach(obj, fn) {
      if (obj === null || typeof obj === "undefined") {
        return;
      }
      if (typeof obj !== "object") {
        obj = [obj];
      }
      if (isArray(obj)) {
        for (var i3 = 0, l2 = obj.length; i3 < l2; i3++) {
          fn.call(null, obj[i3], i3, obj);
        }
      } else {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) {
            fn.call(null, obj[key], key, obj);
          }
        }
      }
    }
    function merge() {
      var result = {};
      function assignValue(val, key) {
        if (isPlainObject(result[key]) && isPlainObject(val)) {
          result[key] = merge(result[key], val);
        } else if (isPlainObject(val)) {
          result[key] = merge({}, val);
        } else if (isArray(val)) {
          result[key] = val.slice();
        } else {
          result[key] = val;
        }
      }
      for (var i3 = 0, l2 = arguments.length; i3 < l2; i3++) {
        forEach(arguments[i3], assignValue);
      }
      return result;
    }
    function extend(a2, b3, thisArg) {
      forEach(b3, function assignValue(val, key) {
        if (thisArg && typeof val === "function") {
          a2[key] = bind(val, thisArg);
        } else {
          a2[key] = val;
        }
      });
      return a2;
    }
    function stripBOM(content) {
      if (content.charCodeAt(0) === 65279) {
        content = content.slice(1);
      }
      return content;
    }
    module.exports = {
      isArray,
      isArrayBuffer,
      isBuffer,
      isFormData,
      isArrayBufferView,
      isString,
      isNumber,
      isObject,
      isPlainObject,
      isUndefined,
      isDate,
      isFile,
      isBlob,
      isFunction,
      isStream,
      isURLSearchParams,
      isStandardBrowserEnv,
      forEach,
      merge,
      extend,
      trim,
      stripBOM
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/lib/helpers/buildURL.js
var require_buildURL = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/lib/helpers/buildURL.js"(exports, module) {
    "use strict";
    var utils = require_utils3();
    function encode(val) {
      return encodeURIComponent(val).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]");
    }
    module.exports = function buildURL(url, params, paramsSerializer) {
      if (!params) {
        return url;
      }
      var serializedParams;
      if (paramsSerializer) {
        serializedParams = paramsSerializer(params);
      } else if (utils.isURLSearchParams(params)) {
        serializedParams = params.toString();
      } else {
        var parts = [];
        utils.forEach(params, function serialize(val, key) {
          if (val === null || typeof val === "undefined") {
            return;
          }
          if (utils.isArray(val)) {
            key = key + "[]";
          } else {
            val = [val];
          }
          utils.forEach(val, function parseValue(v3) {
            if (utils.isDate(v3)) {
              v3 = v3.toISOString();
            } else if (utils.isObject(v3)) {
              v3 = JSON.stringify(v3);
            }
            parts.push(encode(key) + "=" + encode(v3));
          });
        });
        serializedParams = parts.join("&");
      }
      if (serializedParams) {
        var hashmarkIndex = url.indexOf("#");
        if (hashmarkIndex !== -1) {
          url = url.slice(0, hashmarkIndex);
        }
        url += (url.indexOf("?") === -1 ? "?" : "&") + serializedParams;
      }
      return url;
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/lib/core/InterceptorManager.js
var require_InterceptorManager = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/lib/core/InterceptorManager.js"(exports, module) {
    "use strict";
    var utils = require_utils3();
    function InterceptorManager() {
      this.handlers = [];
    }
    InterceptorManager.prototype.use = function use(fulfilled, rejected, options) {
      this.handlers.push({
        fulfilled,
        rejected,
        synchronous: options ? options.synchronous : false,
        runWhen: options ? options.runWhen : null
      });
      return this.handlers.length - 1;
    };
    InterceptorManager.prototype.eject = function eject(id) {
      if (this.handlers[id]) {
        this.handlers[id] = null;
      }
    };
    InterceptorManager.prototype.forEach = function forEach(fn) {
      utils.forEach(this.handlers, function forEachHandler(h2) {
        if (h2 !== null) {
          fn(h2);
        }
      });
    };
    module.exports = InterceptorManager;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/lib/helpers/normalizeHeaderName.js
var require_normalizeHeaderName = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/lib/helpers/normalizeHeaderName.js"(exports, module) {
    "use strict";
    var utils = require_utils3();
    module.exports = function normalizeHeaderName(headers, normalizedName) {
      utils.forEach(headers, function processHeader(value, name) {
        if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
          headers[normalizedName] = value;
          delete headers[name];
        }
      });
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/lib/core/enhanceError.js
var require_enhanceError = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/lib/core/enhanceError.js"(exports, module) {
    "use strict";
    module.exports = function enhanceError(error, config, code, request, response) {
      error.config = config;
      if (code) {
        error.code = code;
      }
      error.request = request;
      error.response = response;
      error.isAxiosError = true;
      error.toJSON = function toJSON() {
        return {
          // Standard
          message: this.message,
          name: this.name,
          // Microsoft
          description: this.description,
          number: this.number,
          // Mozilla
          fileName: this.fileName,
          lineNumber: this.lineNumber,
          columnNumber: this.columnNumber,
          stack: this.stack,
          // Axios
          config: this.config,
          code: this.code
        };
      };
      return error;
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/lib/core/createError.js
var require_createError = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/lib/core/createError.js"(exports, module) {
    "use strict";
    var enhanceError = require_enhanceError();
    module.exports = function createError(message, config, code, request, response) {
      var error = new Error(message);
      return enhanceError(error, config, code, request, response);
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/lib/core/settle.js
var require_settle = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/lib/core/settle.js"(exports, module) {
    "use strict";
    var createError = require_createError();
    module.exports = function settle(resolve, reject, response) {
      var validateStatus = response.config.validateStatus;
      if (!response.status || !validateStatus || validateStatus(response.status)) {
        resolve(response);
      } else {
        reject(createError(
          "Request failed with status code " + response.status,
          response.config,
          null,
          response.request,
          response
        ));
      }
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/lib/helpers/cookies.js
var require_cookies = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/lib/helpers/cookies.js"(exports, module) {
    "use strict";
    var utils = require_utils3();
    module.exports = utils.isStandardBrowserEnv() ? (
      // Standard browser envs support document.cookie
      function standardBrowserEnv() {
        return {
          write: function write(name, value, expires, path, domain, secure) {
            var cookie = [];
            cookie.push(name + "=" + encodeURIComponent(value));
            if (utils.isNumber(expires)) {
              cookie.push("expires=" + new Date(expires).toGMTString());
            }
            if (utils.isString(path)) {
              cookie.push("path=" + path);
            }
            if (utils.isString(domain)) {
              cookie.push("domain=" + domain);
            }
            if (secure === true) {
              cookie.push("secure");
            }
            document.cookie = cookie.join("; ");
          },
          read: function read(name) {
            var match = document.cookie.match(new RegExp("(^|;\\s*)(" + name + ")=([^;]*)"));
            return match ? decodeURIComponent(match[3]) : null;
          },
          remove: function remove(name) {
            this.write(name, "", Date.now() - 864e5);
          }
        };
      }()
    ) : (
      // Non standard browser env (web workers, react-native) lack needed support.
      function nonStandardBrowserEnv() {
        return {
          write: function write() {
          },
          read: function read() {
            return null;
          },
          remove: function remove() {
          }
        };
      }()
    );
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/lib/helpers/isAbsoluteURL.js
var require_isAbsoluteURL = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/lib/helpers/isAbsoluteURL.js"(exports, module) {
    "use strict";
    module.exports = function isAbsoluteURL(url) {
      return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/lib/helpers/combineURLs.js
var require_combineURLs = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/lib/helpers/combineURLs.js"(exports, module) {
    "use strict";
    module.exports = function combineURLs(baseURL, relativeURL) {
      return relativeURL ? baseURL.replace(/\/+$/, "") + "/" + relativeURL.replace(/^\/+/, "") : baseURL;
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/lib/core/buildFullPath.js
var require_buildFullPath = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/lib/core/buildFullPath.js"(exports, module) {
    "use strict";
    var isAbsoluteURL = require_isAbsoluteURL();
    var combineURLs = require_combineURLs();
    module.exports = function buildFullPath(baseURL, requestedURL) {
      if (baseURL && !isAbsoluteURL(requestedURL)) {
        return combineURLs(baseURL, requestedURL);
      }
      return requestedURL;
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/lib/helpers/parseHeaders.js
var require_parseHeaders = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/lib/helpers/parseHeaders.js"(exports, module) {
    "use strict";
    var utils = require_utils3();
    var ignoreDuplicateOf = [
      "age",
      "authorization",
      "content-length",
      "content-type",
      "etag",
      "expires",
      "from",
      "host",
      "if-modified-since",
      "if-unmodified-since",
      "last-modified",
      "location",
      "max-forwards",
      "proxy-authorization",
      "referer",
      "retry-after",
      "user-agent"
    ];
    module.exports = function parseHeaders(headers) {
      var parsed = {};
      var key;
      var val;
      var i3;
      if (!headers) {
        return parsed;
      }
      utils.forEach(headers.split("\n"), function parser(line) {
        i3 = line.indexOf(":");
        key = utils.trim(line.substr(0, i3)).toLowerCase();
        val = utils.trim(line.substr(i3 + 1));
        if (key) {
          if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
            return;
          }
          if (key === "set-cookie") {
            parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);
          } else {
            parsed[key] = parsed[key] ? parsed[key] + ", " + val : val;
          }
        }
      });
      return parsed;
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/lib/helpers/isURLSameOrigin.js
var require_isURLSameOrigin = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/lib/helpers/isURLSameOrigin.js"(exports, module) {
    "use strict";
    var utils = require_utils3();
    module.exports = utils.isStandardBrowserEnv() ? (
      // Standard browser envs have full support of the APIs needed to test
      // whether the request URL is of the same origin as current location.
      function standardBrowserEnv() {
        var msie = /(msie|trident)/i.test(navigator.userAgent);
        var urlParsingNode = document.createElement("a");
        var originURL;
        function resolveURL(url) {
          var href = url;
          if (msie) {
            urlParsingNode.setAttribute("href", href);
            href = urlParsingNode.href;
          }
          urlParsingNode.setAttribute("href", href);
          return {
            href: urlParsingNode.href,
            protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, "") : "",
            host: urlParsingNode.host,
            search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, "") : "",
            hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, "") : "",
            hostname: urlParsingNode.hostname,
            port: urlParsingNode.port,
            pathname: urlParsingNode.pathname.charAt(0) === "/" ? urlParsingNode.pathname : "/" + urlParsingNode.pathname
          };
        }
        originURL = resolveURL(window.location.href);
        return function isURLSameOrigin(requestURL) {
          var parsed = utils.isString(requestURL) ? resolveURL(requestURL) : requestURL;
          return parsed.protocol === originURL.protocol && parsed.host === originURL.host;
        };
      }()
    ) : (
      // Non standard browser envs (web workers, react-native) lack needed support.
      function nonStandardBrowserEnv() {
        return function isURLSameOrigin() {
          return true;
        };
      }()
    );
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/lib/adapters/xhr.js
var require_xhr = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/lib/adapters/xhr.js"(exports, module) {
    "use strict";
    var utils = require_utils3();
    var settle = require_settle();
    var cookies = require_cookies();
    var buildURL = require_buildURL();
    var buildFullPath = require_buildFullPath();
    var parseHeaders = require_parseHeaders();
    var isURLSameOrigin = require_isURLSameOrigin();
    var createError = require_createError();
    module.exports = function xhrAdapter(config) {
      return new Promise(function dispatchXhrRequest(resolve, reject) {
        var requestData = config.data;
        var requestHeaders = config.headers;
        var responseType = config.responseType;
        if (utils.isFormData(requestData)) {
          delete requestHeaders["Content-Type"];
        }
        var request = new XMLHttpRequest();
        if (config.auth) {
          var username = config.auth.username || "";
          var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : "";
          requestHeaders.Authorization = "Basic " + btoa(username + ":" + password);
        }
        var fullPath = buildFullPath(config.baseURL, config.url);
        request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);
        request.timeout = config.timeout;
        function onloadend() {
          if (!request) {
            return;
          }
          var responseHeaders = "getAllResponseHeaders" in request ? parseHeaders(request.getAllResponseHeaders()) : null;
          var responseData = !responseType || responseType === "text" || responseType === "json" ? request.responseText : request.response;
          var response = {
            data: responseData,
            status: request.status,
            statusText: request.statusText,
            headers: responseHeaders,
            config,
            request
          };
          settle(resolve, reject, response);
          request = null;
        }
        if ("onloadend" in request) {
          request.onloadend = onloadend;
        } else {
          request.onreadystatechange = function handleLoad() {
            if (!request || request.readyState !== 4) {
              return;
            }
            if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf("file:") === 0)) {
              return;
            }
            setTimeout(onloadend);
          };
        }
        request.onabort = function handleAbort() {
          if (!request) {
            return;
          }
          reject(createError("Request aborted", config, "ECONNABORTED", request));
          request = null;
        };
        request.onerror = function handleError() {
          reject(createError("Network Error", config, null, request));
          request = null;
        };
        request.ontimeout = function handleTimeout() {
          var timeoutErrorMessage = "timeout of " + config.timeout + "ms exceeded";
          if (config.timeoutErrorMessage) {
            timeoutErrorMessage = config.timeoutErrorMessage;
          }
          reject(createError(
            timeoutErrorMessage,
            config,
            config.transitional && config.transitional.clarifyTimeoutError ? "ETIMEDOUT" : "ECONNABORTED",
            request
          ));
          request = null;
        };
        if (utils.isStandardBrowserEnv()) {
          var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ? cookies.read(config.xsrfCookieName) : void 0;
          if (xsrfValue) {
            requestHeaders[config.xsrfHeaderName] = xsrfValue;
          }
        }
        if ("setRequestHeader" in request) {
          utils.forEach(requestHeaders, function setRequestHeader(val, key) {
            if (typeof requestData === "undefined" && key.toLowerCase() === "content-type") {
              delete requestHeaders[key];
            } else {
              request.setRequestHeader(key, val);
            }
          });
        }
        if (!utils.isUndefined(config.withCredentials)) {
          request.withCredentials = !!config.withCredentials;
        }
        if (responseType && responseType !== "json") {
          request.responseType = config.responseType;
        }
        if (typeof config.onDownloadProgress === "function") {
          request.addEventListener("progress", config.onDownloadProgress);
        }
        if (typeof config.onUploadProgress === "function" && request.upload) {
          request.upload.addEventListener("progress", config.onUploadProgress);
        }
        if (config.cancelToken) {
          config.cancelToken.promise.then(function onCanceled(cancel) {
            if (!request) {
              return;
            }
            request.abort();
            reject(cancel);
            request = null;
          });
        }
        if (!requestData) {
          requestData = null;
        }
        request.send(requestData);
      });
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/lib/defaults.js
var require_defaults = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/lib/defaults.js"(exports, module) {
    "use strict";
    var utils = require_utils3();
    var normalizeHeaderName = require_normalizeHeaderName();
    var enhanceError = require_enhanceError();
    var DEFAULT_CONTENT_TYPE = {
      "Content-Type": "application/x-www-form-urlencoded"
    };
    function setContentTypeIfUnset(headers, value) {
      if (!utils.isUndefined(headers) && utils.isUndefined(headers["Content-Type"])) {
        headers["Content-Type"] = value;
      }
    }
    function getDefaultAdapter() {
      var adapter;
      if (typeof XMLHttpRequest !== "undefined") {
        adapter = require_xhr();
      } else if (typeof process !== "undefined" && Object.prototype.toString.call(process) === "[object process]") {
        adapter = require_xhr();
      }
      return adapter;
    }
    function stringifySafely(rawValue, parser, encoder) {
      if (utils.isString(rawValue)) {
        try {
          (parser || JSON.parse)(rawValue);
          return utils.trim(rawValue);
        } catch (e2) {
          if (e2.name !== "SyntaxError") {
            throw e2;
          }
        }
      }
      return (encoder || JSON.stringify)(rawValue);
    }
    var defaults = {
      transitional: {
        silentJSONParsing: true,
        forcedJSONParsing: true,
        clarifyTimeoutError: false
      },
      adapter: getDefaultAdapter(),
      transformRequest: [function transformRequest(data, headers) {
        normalizeHeaderName(headers, "Accept");
        normalizeHeaderName(headers, "Content-Type");
        if (utils.isFormData(data) || utils.isArrayBuffer(data) || utils.isBuffer(data) || utils.isStream(data) || utils.isFile(data) || utils.isBlob(data)) {
          return data;
        }
        if (utils.isArrayBufferView(data)) {
          return data.buffer;
        }
        if (utils.isURLSearchParams(data)) {
          setContentTypeIfUnset(headers, "application/x-www-form-urlencoded;charset=utf-8");
          return data.toString();
        }
        if (utils.isObject(data) || headers && headers["Content-Type"] === "application/json") {
          setContentTypeIfUnset(headers, "application/json");
          return stringifySafely(data);
        }
        return data;
      }],
      transformResponse: [function transformResponse(data) {
        var transitional = this.transitional;
        var silentJSONParsing = transitional && transitional.silentJSONParsing;
        var forcedJSONParsing = transitional && transitional.forcedJSONParsing;
        var strictJSONParsing = !silentJSONParsing && this.responseType === "json";
        if (strictJSONParsing || forcedJSONParsing && utils.isString(data) && data.length) {
          try {
            return JSON.parse(data);
          } catch (e2) {
            if (strictJSONParsing) {
              if (e2.name === "SyntaxError") {
                throw enhanceError(e2, this, "E_JSON_PARSE");
              }
              throw e2;
            }
          }
        }
        return data;
      }],
      /**
       * A timeout in milliseconds to abort a request. If set to 0 (default) a
       * timeout is not created.
       */
      timeout: 0,
      xsrfCookieName: "XSRF-TOKEN",
      xsrfHeaderName: "X-XSRF-TOKEN",
      maxContentLength: -1,
      maxBodyLength: -1,
      validateStatus: function validateStatus(status) {
        return status >= 200 && status < 300;
      }
    };
    defaults.headers = {
      common: {
        "Accept": "application/json, text/plain, */*"
      }
    };
    utils.forEach(["delete", "get", "head"], function forEachMethodNoData(method) {
      defaults.headers[method] = {};
    });
    utils.forEach(["post", "put", "patch"], function forEachMethodWithData(method) {
      defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
    });
    module.exports = defaults;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/lib/core/transformData.js
var require_transformData = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/lib/core/transformData.js"(exports, module) {
    "use strict";
    var utils = require_utils3();
    var defaults = require_defaults();
    module.exports = function transformData(data, headers, fns) {
      var context = this || defaults;
      utils.forEach(fns, function transform(fn) {
        data = fn.call(context, data, headers);
      });
      return data;
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/lib/cancel/isCancel.js
var require_isCancel = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/lib/cancel/isCancel.js"(exports, module) {
    "use strict";
    module.exports = function isCancel(value) {
      return !!(value && value.__CANCEL__);
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/lib/core/dispatchRequest.js
var require_dispatchRequest = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/lib/core/dispatchRequest.js"(exports, module) {
    "use strict";
    var utils = require_utils3();
    var transformData = require_transformData();
    var isCancel = require_isCancel();
    var defaults = require_defaults();
    function throwIfCancellationRequested(config) {
      if (config.cancelToken) {
        config.cancelToken.throwIfRequested();
      }
    }
    module.exports = function dispatchRequest(config) {
      throwIfCancellationRequested(config);
      config.headers = config.headers || {};
      config.data = transformData.call(
        config,
        config.data,
        config.headers,
        config.transformRequest
      );
      config.headers = utils.merge(
        config.headers.common || {},
        config.headers[config.method] || {},
        config.headers
      );
      utils.forEach(
        ["delete", "get", "head", "post", "put", "patch", "common"],
        function cleanHeaderConfig(method) {
          delete config.headers[method];
        }
      );
      var adapter = config.adapter || defaults.adapter;
      return adapter(config).then(function onAdapterResolution(response) {
        throwIfCancellationRequested(config);
        response.data = transformData.call(
          config,
          response.data,
          response.headers,
          config.transformResponse
        );
        return response;
      }, function onAdapterRejection(reason) {
        if (!isCancel(reason)) {
          throwIfCancellationRequested(config);
          if (reason && reason.response) {
            reason.response.data = transformData.call(
              config,
              reason.response.data,
              reason.response.headers,
              config.transformResponse
            );
          }
        }
        return Promise.reject(reason);
      });
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/lib/core/mergeConfig.js
var require_mergeConfig = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/lib/core/mergeConfig.js"(exports, module) {
    "use strict";
    var utils = require_utils3();
    module.exports = function mergeConfig(config1, config2) {
      config2 = config2 || {};
      var config = {};
      var valueFromConfig2Keys = ["url", "method", "data"];
      var mergeDeepPropertiesKeys = ["headers", "auth", "proxy", "params"];
      var defaultToConfig2Keys = [
        "baseURL",
        "transformRequest",
        "transformResponse",
        "paramsSerializer",
        "timeout",
        "timeoutMessage",
        "withCredentials",
        "adapter",
        "responseType",
        "xsrfCookieName",
        "xsrfHeaderName",
        "onUploadProgress",
        "onDownloadProgress",
        "decompress",
        "maxContentLength",
        "maxBodyLength",
        "maxRedirects",
        "transport",
        "httpAgent",
        "httpsAgent",
        "cancelToken",
        "socketPath",
        "responseEncoding"
      ];
      var directMergeKeys = ["validateStatus"];
      function getMergedValue(target, source) {
        if (utils.isPlainObject(target) && utils.isPlainObject(source)) {
          return utils.merge(target, source);
        } else if (utils.isPlainObject(source)) {
          return utils.merge({}, source);
        } else if (utils.isArray(source)) {
          return source.slice();
        }
        return source;
      }
      function mergeDeepProperties(prop) {
        if (!utils.isUndefined(config2[prop])) {
          config[prop] = getMergedValue(config1[prop], config2[prop]);
        } else if (!utils.isUndefined(config1[prop])) {
          config[prop] = getMergedValue(void 0, config1[prop]);
        }
      }
      utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {
        if (!utils.isUndefined(config2[prop])) {
          config[prop] = getMergedValue(void 0, config2[prop]);
        }
      });
      utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);
      utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {
        if (!utils.isUndefined(config2[prop])) {
          config[prop] = getMergedValue(void 0, config2[prop]);
        } else if (!utils.isUndefined(config1[prop])) {
          config[prop] = getMergedValue(void 0, config1[prop]);
        }
      });
      utils.forEach(directMergeKeys, function merge(prop) {
        if (prop in config2) {
          config[prop] = getMergedValue(config1[prop], config2[prop]);
        } else if (prop in config1) {
          config[prop] = getMergedValue(void 0, config1[prop]);
        }
      });
      var axiosKeys = valueFromConfig2Keys.concat(mergeDeepPropertiesKeys).concat(defaultToConfig2Keys).concat(directMergeKeys);
      var otherKeys = Object.keys(config1).concat(Object.keys(config2)).filter(function filterAxiosKeys(key) {
        return axiosKeys.indexOf(key) === -1;
      });
      utils.forEach(otherKeys, mergeDeepProperties);
      return config;
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/package.json
var require_package = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/package.json"(exports, module) {
    module.exports = {
      name: "axios",
      version: "0.21.4",
      description: "Promise based HTTP client for the browser and node.js",
      main: "index.js",
      scripts: {
        test: "grunt test",
        start: "node ./sandbox/server.js",
        build: "NODE_ENV=production grunt build",
        preversion: "npm test",
        version: "npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json",
        postversion: "git push && git push --tags",
        examples: "node ./examples/server.js",
        coveralls: "cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js",
        fix: "eslint --fix lib/**/*.js"
      },
      repository: {
        type: "git",
        url: "https://github.com/axios/axios.git"
      },
      keywords: [
        "xhr",
        "http",
        "ajax",
        "promise",
        "node"
      ],
      author: "Matt Zabriskie",
      license: "MIT",
      bugs: {
        url: "https://github.com/axios/axios/issues"
      },
      homepage: "https://axios-http.com",
      devDependencies: {
        coveralls: "^3.0.0",
        "es6-promise": "^4.2.4",
        grunt: "^1.3.0",
        "grunt-banner": "^0.6.0",
        "grunt-cli": "^1.2.0",
        "grunt-contrib-clean": "^1.1.0",
        "grunt-contrib-watch": "^1.0.0",
        "grunt-eslint": "^23.0.0",
        "grunt-karma": "^4.0.0",
        "grunt-mocha-test": "^0.13.3",
        "grunt-ts": "^6.0.0-beta.19",
        "grunt-webpack": "^4.0.2",
        "istanbul-instrumenter-loader": "^1.0.0",
        "jasmine-core": "^2.4.1",
        karma: "^6.3.2",
        "karma-chrome-launcher": "^3.1.0",
        "karma-firefox-launcher": "^2.1.0",
        "karma-jasmine": "^1.1.1",
        "karma-jasmine-ajax": "^0.1.13",
        "karma-safari-launcher": "^1.0.0",
        "karma-sauce-launcher": "^4.3.6",
        "karma-sinon": "^1.0.5",
        "karma-sourcemap-loader": "^0.3.8",
        "karma-webpack": "^4.0.2",
        "load-grunt-tasks": "^3.5.2",
        minimist: "^1.2.0",
        mocha: "^8.2.1",
        sinon: "^4.5.0",
        "terser-webpack-plugin": "^4.2.3",
        typescript: "^4.0.5",
        "url-search-params": "^0.10.0",
        webpack: "^4.44.2",
        "webpack-dev-server": "^3.11.0"
      },
      browser: {
        "./lib/adapters/http.js": "./lib/adapters/xhr.js"
      },
      jsdelivr: "dist/axios.min.js",
      unpkg: "dist/axios.min.js",
      typings: "./index.d.ts",
      dependencies: {
        "follow-redirects": "^1.14.0"
      },
      bundlesize: [
        {
          path: "./dist/axios.min.js",
          threshold: "5kB"
        }
      ]
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/lib/helpers/validator.js
var require_validator2 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/lib/helpers/validator.js"(exports, module) {
    "use strict";
    var pkg = require_package();
    var validators = {};
    ["object", "boolean", "number", "function", "string", "symbol"].forEach(function(type, i3) {
      validators[type] = function validator(thing) {
        return typeof thing === type || "a" + (i3 < 1 ? "n " : " ") + type;
      };
    });
    var deprecatedWarnings = {};
    var currentVerArr = pkg.version.split(".");
    function isOlderVersion(version, thanVersion) {
      var pkgVersionArr = thanVersion ? thanVersion.split(".") : currentVerArr;
      var destVer = version.split(".");
      for (var i3 = 0; i3 < 3; i3++) {
        if (pkgVersionArr[i3] > destVer[i3]) {
          return true;
        } else if (pkgVersionArr[i3] < destVer[i3]) {
          return false;
        }
      }
      return false;
    }
    validators.transitional = function transitional(validator, version, message) {
      var isDeprecated = version && isOlderVersion(version);
      function formatMessage(opt, desc) {
        return "[Axios v" + pkg.version + "] Transitional option '" + opt + "'" + desc + (message ? ". " + message : "");
      }
      return function(value, opt, opts) {
        if (validator === false) {
          throw new Error(formatMessage(opt, " has been removed in " + version));
        }
        if (isDeprecated && !deprecatedWarnings[opt]) {
          deprecatedWarnings[opt] = true;
          console.warn(
            formatMessage(
              opt,
              " has been deprecated since v" + version + " and will be removed in the near future"
            )
          );
        }
        return validator ? validator(value, opt, opts) : true;
      };
    };
    function assertOptions(options, schema, allowUnknown) {
      if (typeof options !== "object") {
        throw new TypeError("options must be an object");
      }
      var keys = Object.keys(options);
      var i3 = keys.length;
      while (i3-- > 0) {
        var opt = keys[i3];
        var validator = schema[opt];
        if (validator) {
          var value = options[opt];
          var result = value === void 0 || validator(value, opt, options);
          if (result !== true) {
            throw new TypeError("option " + opt + " must be " + result);
          }
          continue;
        }
        if (allowUnknown !== true) {
          throw Error("Unknown option " + opt);
        }
      }
    }
    module.exports = {
      isOlderVersion,
      assertOptions,
      validators
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/lib/core/Axios.js
var require_Axios = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/lib/core/Axios.js"(exports, module) {
    "use strict";
    var utils = require_utils3();
    var buildURL = require_buildURL();
    var InterceptorManager = require_InterceptorManager();
    var dispatchRequest = require_dispatchRequest();
    var mergeConfig = require_mergeConfig();
    var validator = require_validator2();
    var validators = validator.validators;
    function Axios(instanceConfig) {
      this.defaults = instanceConfig;
      this.interceptors = {
        request: new InterceptorManager(),
        response: new InterceptorManager()
      };
    }
    Axios.prototype.request = function request(config) {
      if (typeof config === "string") {
        config = arguments[1] || {};
        config.url = arguments[0];
      } else {
        config = config || {};
      }
      config = mergeConfig(this.defaults, config);
      if (config.method) {
        config.method = config.method.toLowerCase();
      } else if (this.defaults.method) {
        config.method = this.defaults.method.toLowerCase();
      } else {
        config.method = "get";
      }
      var transitional = config.transitional;
      if (transitional !== void 0) {
        validator.assertOptions(transitional, {
          silentJSONParsing: validators.transitional(validators.boolean, "1.0.0"),
          forcedJSONParsing: validators.transitional(validators.boolean, "1.0.0"),
          clarifyTimeoutError: validators.transitional(validators.boolean, "1.0.0")
        }, false);
      }
      var requestInterceptorChain = [];
      var synchronousRequestInterceptors = true;
      this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
        if (typeof interceptor.runWhen === "function" && interceptor.runWhen(config) === false) {
          return;
        }
        synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;
        requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);
      });
      var responseInterceptorChain = [];
      this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
        responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);
      });
      var promise;
      if (!synchronousRequestInterceptors) {
        var chain = [dispatchRequest, void 0];
        Array.prototype.unshift.apply(chain, requestInterceptorChain);
        chain = chain.concat(responseInterceptorChain);
        promise = Promise.resolve(config);
        while (chain.length) {
          promise = promise.then(chain.shift(), chain.shift());
        }
        return promise;
      }
      var newConfig = config;
      while (requestInterceptorChain.length) {
        var onFulfilled = requestInterceptorChain.shift();
        var onRejected = requestInterceptorChain.shift();
        try {
          newConfig = onFulfilled(newConfig);
        } catch (error) {
          onRejected(error);
          break;
        }
      }
      try {
        promise = dispatchRequest(newConfig);
      } catch (error) {
        return Promise.reject(error);
      }
      while (responseInterceptorChain.length) {
        promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());
      }
      return promise;
    };
    Axios.prototype.getUri = function getUri(config) {
      config = mergeConfig(this.defaults, config);
      return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\?/, "");
    };
    utils.forEach(["delete", "get", "head", "options"], function forEachMethodNoData(method) {
      Axios.prototype[method] = function(url, config) {
        return this.request(mergeConfig(config || {}, {
          method,
          url,
          data: (config || {}).data
        }));
      };
    });
    utils.forEach(["post", "put", "patch"], function forEachMethodWithData(method) {
      Axios.prototype[method] = function(url, data, config) {
        return this.request(mergeConfig(config || {}, {
          method,
          url,
          data
        }));
      };
    });
    module.exports = Axios;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/lib/cancel/Cancel.js
var require_Cancel = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/lib/cancel/Cancel.js"(exports, module) {
    "use strict";
    function Cancel(message) {
      this.message = message;
    }
    Cancel.prototype.toString = function toString() {
      return "Cancel" + (this.message ? ": " + this.message : "");
    };
    Cancel.prototype.__CANCEL__ = true;
    module.exports = Cancel;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/lib/cancel/CancelToken.js
var require_CancelToken = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/lib/cancel/CancelToken.js"(exports, module) {
    "use strict";
    var Cancel = require_Cancel();
    function CancelToken(executor) {
      if (typeof executor !== "function") {
        throw new TypeError("executor must be a function.");
      }
      var resolvePromise;
      this.promise = new Promise(function promiseExecutor(resolve) {
        resolvePromise = resolve;
      });
      var token = this;
      executor(function cancel(message) {
        if (token.reason) {
          return;
        }
        token.reason = new Cancel(message);
        resolvePromise(token.reason);
      });
    }
    CancelToken.prototype.throwIfRequested = function throwIfRequested() {
      if (this.reason) {
        throw this.reason;
      }
    };
    CancelToken.source = function source() {
      var cancel;
      var token = new CancelToken(function executor(c2) {
        cancel = c2;
      });
      return {
        token,
        cancel
      };
    };
    module.exports = CancelToken;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/lib/helpers/spread.js
var require_spread = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/lib/helpers/spread.js"(exports, module) {
    "use strict";
    module.exports = function spread(callback) {
      return function wrap(arr) {
        return callback.apply(null, arr);
      };
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/lib/helpers/isAxiosError.js
var require_isAxiosError = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/lib/helpers/isAxiosError.js"(exports, module) {
    "use strict";
    module.exports = function isAxiosError(payload) {
      return typeof payload === "object" && payload.isAxiosError === true;
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/lib/axios.js
var require_axios = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/lib/axios.js"(exports, module) {
    "use strict";
    var utils = require_utils3();
    var bind = require_bind();
    var Axios = require_Axios();
    var mergeConfig = require_mergeConfig();
    var defaults = require_defaults();
    function createInstance(defaultConfig) {
      var context = new Axios(defaultConfig);
      var instance = bind(Axios.prototype.request, context);
      utils.extend(instance, Axios.prototype, context);
      utils.extend(instance, context);
      return instance;
    }
    var axios = createInstance(defaults);
    axios.Axios = Axios;
    axios.create = function create(instanceConfig) {
      return createInstance(mergeConfig(axios.defaults, instanceConfig));
    };
    axios.Cancel = require_Cancel();
    axios.CancelToken = require_CancelToken();
    axios.isCancel = require_isCancel();
    axios.all = function all(promises) {
      return Promise.all(promises);
    };
    axios.spread = require_spread();
    axios.isAxiosError = require_isAxiosError();
    module.exports = axios;
    module.exports.default = axios;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/index.js
var require_axios2 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/axios/index.js"(exports, module) {
    module.exports = require_axios();
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/rpcclients/http.js
var require_http = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/rpcclients/http.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.http = void 0;
    var axios_1 = __importDefault(require_axios2());
    function filterBadStatus(res) {
      if (res.status >= 400) {
        throw new Error(`Bad status on response: ${res.status}`);
      }
      return res;
    }
    function isExperimental(nodeJsFunc) {
      return nodeJsFunc.toString().includes("emitExperimentalWarning");
    }
    async function http(method, url, headers, request) {
      if (typeof fetch === "function" && !isExperimental(fetch)) {
        const settings = {
          method,
          body: request ? JSON.stringify(request) : void 0,
          headers: {
            // eslint-disable-next-line @typescript-eslint/naming-convention
            "Content-Type": "application/json",
            ...headers
          }
        };
        return fetch(url, settings).then(filterBadStatus).then((res) => res.json());
      } else {
        return axios_1.default.request({ url, method, data: request, headers }).then((res) => res.data);
      }
    }
    exports.http = http;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/rpcclients/rpcclient.js
var require_rpcclient = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/rpcclients/rpcclient.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.hasProtocol = exports.instanceOfRpcStreamingClient = void 0;
    function instanceOfRpcStreamingClient(client) {
      return typeof client.listen === "function";
    }
    exports.instanceOfRpcStreamingClient = instanceOfRpcStreamingClient;
    function hasProtocol(url) {
      return url.search("://") !== -1;
    }
    exports.hasProtocol = hasProtocol;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/rpcclients/httpbatchclient.js
var require_httpbatchclient = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/rpcclients/httpbatchclient.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.HttpBatchClient = void 0;
    var json_rpc_1 = require_build9();
    var http_1 = require_http();
    var rpcclient_1 = require_rpcclient();
    var defaultHttpBatchClientOptions = {
      dispatchInterval: 20,
      batchSizeLimit: 20
    };
    var HttpBatchClient = class {
      constructor(endpoint, options = {}) {
        this.queue = [];
        this.options = {
          batchSizeLimit: options.batchSizeLimit ?? defaultHttpBatchClientOptions.batchSizeLimit,
          dispatchInterval: options.dispatchInterval ?? defaultHttpBatchClientOptions.dispatchInterval
        };
        if (typeof endpoint === "string") {
          this.url = (0, rpcclient_1.hasProtocol)(endpoint) ? endpoint : "http://" + endpoint;
        } else {
          this.url = endpoint.url;
          this.headers = endpoint.headers;
        }
        this.timer = setInterval(() => this.tick(), options.dispatchInterval);
        this.validate();
      }
      disconnect() {
        this.timer && clearInterval(this.timer);
        this.timer = void 0;
      }
      async execute(request) {
        return new Promise((resolve, reject) => {
          this.queue.push({ request, resolve, reject });
          if (this.queue.length >= this.options.batchSizeLimit) {
            this.tick();
          }
        });
      }
      validate() {
        if (!this.options.batchSizeLimit || !Number.isSafeInteger(this.options.batchSizeLimit) || this.options.batchSizeLimit < 1) {
          throw new Error("batchSizeLimit must be a safe integer >= 1");
        }
      }
      /**
       * This is called in an interval where promise rejections cannot be handled.
       * So this is not async and HTTP errors need to be handled by the queued promises.
       */
      tick() {
        const batch = this.queue.splice(0, this.options.batchSizeLimit);
        if (!batch.length)
          return;
        const requests = batch.map((s2) => s2.request);
        const requestIds = requests.map((request) => request.id);
        (0, http_1.http)("POST", this.url, this.headers, requests).then((raw) => {
          const arr = Array.isArray(raw) ? raw : [raw];
          arr.forEach((el) => {
            const req = batch.find((s2) => s2.request.id === el.id);
            if (!req)
              return;
            const { reject, resolve } = req;
            const response = (0, json_rpc_1.parseJsonRpcResponse)(el);
            if ((0, json_rpc_1.isJsonRpcErrorResponse)(response)) {
              reject(new Error(JSON.stringify(response.error)));
            } else {
              resolve(response);
            }
          });
        }, (error) => {
          for (const requestId of requestIds) {
            const req = batch.find((s2) => s2.request.id === requestId);
            if (!req)
              return;
            req.reject(error);
          }
        });
      }
    };
    exports.HttpBatchClient = HttpBatchClient;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/rpcclients/httpclient.js
var require_httpclient = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/rpcclients/httpclient.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.HttpClient = void 0;
    var json_rpc_1 = require_build9();
    var http_1 = require_http();
    var rpcclient_1 = require_rpcclient();
    var HttpClient = class {
      constructor(endpoint) {
        if (typeof endpoint === "string") {
          this.url = (0, rpcclient_1.hasProtocol)(endpoint) ? endpoint : "http://" + endpoint;
        } else {
          this.url = endpoint.url;
          this.headers = endpoint.headers;
        }
      }
      disconnect() {
      }
      async execute(request) {
        const response = (0, json_rpc_1.parseJsonRpcResponse)(await (0, http_1.http)("POST", this.url, this.headers, request));
        if ((0, json_rpc_1.isJsonRpcErrorResponse)(response)) {
          throw new Error(JSON.stringify(response.error));
        }
        return response;
      }
    };
    exports.HttpClient = HttpClient;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/socket/build/socketwrapper.js
var require_socketwrapper = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/socket/build/socketwrapper.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SocketWrapper = void 0;
    var isomorphic_ws_1 = __importDefault(require_browser());
    function environmentIsNodeJs() {
      return typeof process !== "undefined" && typeof process.versions !== "undefined" && typeof process.versions.node !== "undefined";
    }
    var SocketWrapper = class {
      constructor(url, messageHandler, errorHandler, openHandler, closeHandler, timeout = 1e4) {
        this.closed = false;
        this.connected = new Promise((resolve, reject) => {
          this.connectedResolver = resolve;
          this.connectedRejecter = reject;
        });
        this.url = url;
        this.messageHandler = messageHandler;
        this.errorHandler = errorHandler;
        this.openHandler = openHandler;
        this.closeHandler = closeHandler;
        this.timeout = timeout;
      }
      /**
       * returns a promise that resolves when connection is open
       */
      connect() {
        const socket = new isomorphic_ws_1.default(this.url);
        socket.onerror = (error) => {
          this.clearTimeout();
          if (this.errorHandler) {
            this.errorHandler(error);
          }
        };
        socket.onmessage = (messageEvent) => {
          this.messageHandler({
            type: messageEvent.type,
            data: messageEvent.data
          });
        };
        socket.onopen = (_3) => {
          this.clearTimeout();
          this.connectedResolver();
          if (this.openHandler) {
            this.openHandler();
          }
        };
        socket.onclose = (closeEvent) => {
          this.closed = true;
          if (this.closeHandler) {
            this.closeHandler(closeEvent);
          }
        };
        const started = Date.now();
        this.timeoutId = setTimeout(() => {
          socket.onmessage = () => 0;
          socket.onerror = () => 0;
          socket.onopen = () => 0;
          socket.onclose = () => 0;
          socket.close();
          this.socket = void 0;
          const elapsed = Math.floor(Date.now() - started);
          this.connectedRejecter(`Connection attempt timed out after ${elapsed} ms`);
        }, this.timeout);
        this.socket = socket;
      }
      /**
       * Closes an established connection and aborts other connection states
       */
      disconnect() {
        if (!this.socket) {
          throw new Error("Socket undefined. This must be called after connecting.");
        }
        this.clearTimeout();
        switch (this.socket.readyState) {
          case isomorphic_ws_1.default.OPEN:
            this.socket.close(
              1e3
              /* Normal Closure */
            );
            break;
          case isomorphic_ws_1.default.CLOSED:
            break;
          case isomorphic_ws_1.default.CONNECTING:
            this.socket.onopen = () => 0;
            this.socket.onclose = () => 0;
            this.socket.onerror = () => 0;
            this.socket.onmessage = () => 0;
            this.socket = void 0;
            if (this.closeHandler) {
              this.closeHandler({ wasClean: false, code: 4001 });
            }
            break;
          case isomorphic_ws_1.default.CLOSING:
            break;
          default:
            throw new Error(`Unknown readyState: ${this.socket.readyState}`);
        }
      }
      async send(data) {
        return new Promise((resolve, reject) => {
          if (!this.socket) {
            throw new Error("Socket undefined. This must be called after connecting.");
          }
          if (this.closed) {
            throw new Error("Socket was closed, so no data can be sent anymore.");
          }
          if (this.socket.readyState !== isomorphic_ws_1.default.OPEN) {
            throw new Error("Websocket is not open");
          }
          if (environmentIsNodeJs()) {
            this.socket.send(data, (err) => err ? reject(err) : resolve());
          } else {
            this.socket.send(data);
            resolve();
          }
        });
      }
      /**
       * Clears the timeout function, such that no timeout error will be raised anymore. This should be
       * called when the connection is established, a connection error occurred or the socket is disconnected.
       *
       * This method must not be called before `connect()`.
       * This method is idempotent.
       */
      clearTimeout() {
        if (!this.timeoutId) {
          throw new Error("Timeout ID not set. This should not happen and usually means connect() was not called.");
        }
        clearTimeout(this.timeoutId);
      }
    };
    exports.SocketWrapper = SocketWrapper;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/socket/build/streamingsocket.js
var require_streamingsocket = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/socket/build/streamingsocket.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.StreamingSocket = void 0;
    var xstream_1 = require_xstream();
    var socketwrapper_1 = require_socketwrapper();
    var StreamingSocket = class {
      constructor(url, timeout = 1e4) {
        this.socket = new socketwrapper_1.SocketWrapper(url, (event) => {
          if (this.eventProducerListener) {
            this.eventProducerListener.next(event);
          }
        }, (errorEvent) => {
          if (this.eventProducerListener) {
            this.eventProducerListener.error(errorEvent);
          }
        }, () => {
        }, (closeEvent) => {
          if (this.eventProducerListener) {
            if (closeEvent.wasClean) {
              this.eventProducerListener.complete();
            } else {
              this.eventProducerListener.error("Socket was closed unclean");
            }
          }
        }, timeout);
        this.connected = this.socket.connected;
        const eventProducer = {
          start: (listener) => this.eventProducerListener = listener,
          stop: () => this.eventProducerListener = void 0
        };
        this.events = xstream_1.Stream.create(eventProducer);
      }
      connect() {
        this.socket.connect();
      }
      disconnect() {
        this.socket.disconnect();
      }
      async send(data) {
        return this.socket.send(data);
      }
    };
    exports.StreamingSocket = StreamingSocket;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/socket/build/queueingstreamingsocket.js
var require_queueingstreamingsocket = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/socket/build/queueingstreamingsocket.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.QueueingStreamingSocket = exports.ConnectionStatus = void 0;
    var stream_1 = require_build8();
    var xstream_1 = require_xstream();
    var streamingsocket_1 = require_streamingsocket();
    var ConnectionStatus;
    (function(ConnectionStatus2) {
      ConnectionStatus2[ConnectionStatus2["Unconnected"] = 0] = "Unconnected";
      ConnectionStatus2[ConnectionStatus2["Connecting"] = 1] = "Connecting";
      ConnectionStatus2[ConnectionStatus2["Connected"] = 2] = "Connected";
      ConnectionStatus2[ConnectionStatus2["Disconnected"] = 3] = "Disconnected";
    })(ConnectionStatus = exports.ConnectionStatus || (exports.ConnectionStatus = {}));
    var QueueingStreamingSocket = class {
      constructor(url, timeout = 1e4, reconnectedHandler) {
        this.queue = [];
        this.isProcessingQueue = false;
        this.url = url;
        this.timeout = timeout;
        this.reconnectedHandler = reconnectedHandler;
        const eventProducer = {
          start: (listener) => this.eventProducerListener = listener,
          stop: () => this.eventProducerListener = void 0
        };
        this.events = xstream_1.Stream.create(eventProducer);
        this.connectionStatusProducer = new stream_1.DefaultValueProducer(ConnectionStatus.Unconnected);
        this.connectionStatus = new stream_1.ValueAndUpdates(this.connectionStatusProducer);
        this.socket = new streamingsocket_1.StreamingSocket(this.url, this.timeout);
        this.socket.events.subscribe({
          next: (event) => {
            if (!this.eventProducerListener)
              throw new Error("No event producer listener set");
            this.eventProducerListener.next(event);
          },
          error: () => this.connectionStatusProducer.update(ConnectionStatus.Disconnected)
        });
      }
      connect() {
        this.connectionStatusProducer.update(ConnectionStatus.Connecting);
        this.socket.connected.then(async () => {
          this.connectionStatusProducer.update(ConnectionStatus.Connected);
          return this.processQueue();
        }, () => this.connectionStatusProducer.update(ConnectionStatus.Disconnected));
        this.socket.connect();
      }
      disconnect() {
        this.connectionStatusProducer.update(ConnectionStatus.Disconnected);
        this.socket.disconnect();
      }
      reconnect() {
        this.socket = new streamingsocket_1.StreamingSocket(this.url, this.timeout);
        this.socket.events.subscribe({
          next: (event) => {
            if (!this.eventProducerListener)
              throw new Error("No event producer listener set");
            this.eventProducerListener.next(event);
          },
          error: () => this.connectionStatusProducer.update(ConnectionStatus.Disconnected)
        });
        this.socket.connected.then(() => {
          if (this.reconnectedHandler) {
            this.reconnectedHandler();
          }
        });
        this.connect();
      }
      getQueueLength() {
        return this.queue.length;
      }
      queueRequest(request) {
        this.queue.push(request);
        this.processQueue();
      }
      async processQueue() {
        if (this.isProcessingQueue || this.connectionStatus.value !== ConnectionStatus.Connected) {
          return;
        }
        this.isProcessingQueue = true;
        let request;
        while (request = this.queue.shift()) {
          try {
            await this.socket.send(request);
            this.isProcessingQueue = false;
          } catch (error) {
            this.queue.unshift(request);
            this.isProcessingQueue = false;
            return;
          }
        }
      }
    };
    exports.QueueingStreamingSocket = QueueingStreamingSocket;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/socket/build/reconnectingsocket.js
var require_reconnectingsocket = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/socket/build/reconnectingsocket.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ReconnectingSocket = void 0;
    var xstream_1 = require_xstream();
    var queueingstreamingsocket_1 = require_queueingstreamingsocket();
    var ReconnectingSocket = class _ReconnectingSocket {
      constructor(url, timeout = 1e4, reconnectedHandler) {
        this.unconnected = true;
        this.disconnected = false;
        this.timeoutIndex = 0;
        this.reconnectTimeout = null;
        const eventProducer = {
          start: (listener) => this.eventProducerListener = listener,
          stop: () => this.eventProducerListener = void 0
        };
        this.events = xstream_1.Stream.create(eventProducer);
        this.socket = new queueingstreamingsocket_1.QueueingStreamingSocket(url, timeout, reconnectedHandler);
        this.socket.events.subscribe({
          next: (event) => {
            if (this.eventProducerListener) {
              this.eventProducerListener.next(event);
            }
          },
          error: (error) => {
            if (this.eventProducerListener) {
              this.eventProducerListener.error(error);
            }
          }
        });
        this.connectionStatus = this.socket.connectionStatus;
        this.connectionStatus.updates.subscribe({
          next: (status) => {
            if (status === queueingstreamingsocket_1.ConnectionStatus.Connected) {
              this.timeoutIndex = 0;
            }
            if (status === queueingstreamingsocket_1.ConnectionStatus.Disconnected) {
              if (this.reconnectTimeout) {
                clearTimeout(this.reconnectTimeout);
                this.reconnectTimeout = null;
              }
              this.reconnectTimeout = setTimeout(() => this.socket.reconnect(), _ReconnectingSocket.calculateTimeout(this.timeoutIndex++));
            }
          }
        });
      }
      /** Starts with a 0.1 second timeout, then doubles every attempt with a maximum timeout of 5 seconds. */
      static calculateTimeout(index) {
        return Math.min(2 ** index * 100, 5e3);
      }
      connect() {
        if (!this.unconnected) {
          throw new Error("Cannot connect: socket has already connected");
        }
        this.socket.connect();
        this.unconnected = false;
      }
      disconnect() {
        if (this.unconnected) {
          throw new Error("Cannot disconnect: socket has not yet connected");
        }
        this.socket.disconnect();
        if (this.eventProducerListener) {
          this.eventProducerListener.complete();
        }
        this.disconnected = true;
      }
      queueRequest(request) {
        if (this.disconnected) {
          throw new Error("Cannot queue request: socket has disconnected");
        }
        this.socket.queueRequest(request);
      }
    };
    exports.ReconnectingSocket = ReconnectingSocket;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/socket/build/index.js
var require_build10 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/socket/build/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.StreamingSocket = exports.SocketWrapper = exports.ReconnectingSocket = exports.QueueingStreamingSocket = exports.ConnectionStatus = void 0;
    var queueingstreamingsocket_1 = require_queueingstreamingsocket();
    Object.defineProperty(exports, "ConnectionStatus", { enumerable: true, get: function() {
      return queueingstreamingsocket_1.ConnectionStatus;
    } });
    Object.defineProperty(exports, "QueueingStreamingSocket", { enumerable: true, get: function() {
      return queueingstreamingsocket_1.QueueingStreamingSocket;
    } });
    var reconnectingsocket_1 = require_reconnectingsocket();
    Object.defineProperty(exports, "ReconnectingSocket", { enumerable: true, get: function() {
      return reconnectingsocket_1.ReconnectingSocket;
    } });
    var socketwrapper_1 = require_socketwrapper();
    Object.defineProperty(exports, "SocketWrapper", { enumerable: true, get: function() {
      return socketwrapper_1.SocketWrapper;
    } });
    var streamingsocket_1 = require_streamingsocket();
    Object.defineProperty(exports, "StreamingSocket", { enumerable: true, get: function() {
      return streamingsocket_1.StreamingSocket;
    } });
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/rpcclients/websocketclient.js
var require_websocketclient = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/rpcclients/websocketclient.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.WebsocketClient = void 0;
    var json_rpc_1 = require_build9();
    var socket_1 = require_build10();
    var stream_1 = require_build8();
    var xstream_1 = require_xstream();
    var rpcclient_1 = require_rpcclient();
    function defaultErrorHandler(error) {
      throw error;
    }
    function toJsonRpcResponse(message) {
      if (message.type !== "message") {
        throw new Error(`Unexcepted message type on websocket: ${message.type}`);
      }
      const jsonRpcEvent = (0, json_rpc_1.parseJsonRpcResponse)(JSON.parse(message.data));
      return jsonRpcEvent;
    }
    var RpcEventProducer = class {
      constructor(request, socket) {
        this.running = false;
        this.subscriptions = [];
        this.request = request;
        this.socket = socket;
      }
      /**
       * Implementation of Producer.start
       */
      start(listener) {
        if (this.running) {
          throw Error("Already started. Please stop first before restarting.");
        }
        this.running = true;
        this.connectToClient(listener);
        this.socket.queueRequest(JSON.stringify(this.request));
      }
      /**
       * Implementation of Producer.stop
       *
       * Called by the stream when the stream's last listener stopped listening
       * or when the producer completed.
       */
      stop() {
        this.running = false;
        const endRequest = { ...this.request, method: "unsubscribe" };
        try {
          this.socket.queueRequest(JSON.stringify(endRequest));
        } catch (error) {
          if (error instanceof Error && error.message.match(/socket has disconnected/i)) {
          } else {
            throw error;
          }
        }
      }
      connectToClient(listener) {
        const responseStream = this.socket.events.map(toJsonRpcResponse);
        const idSubscription = responseStream.filter((response) => response.id === this.request.id).subscribe({
          next: (response) => {
            if ((0, json_rpc_1.isJsonRpcErrorResponse)(response)) {
              this.closeSubscriptions();
              listener.error(JSON.stringify(response.error));
            }
            idSubscription.unsubscribe();
          }
        });
        const idEventSubscription = responseStream.filter((response) => response.id === this.request.id).subscribe({
          next: (response) => {
            if ((0, json_rpc_1.isJsonRpcErrorResponse)(response)) {
              this.closeSubscriptions();
              listener.error(JSON.stringify(response.error));
            } else {
              listener.next(response.result);
            }
          }
        });
        const nonResponseSubscription = responseStream.subscribe({
          error: (error) => {
            this.closeSubscriptions();
            listener.error(error);
          },
          complete: () => {
            this.closeSubscriptions();
            listener.complete();
          }
        });
        this.subscriptions.push(idSubscription, idEventSubscription, nonResponseSubscription);
      }
      closeSubscriptions() {
        for (const subscription of this.subscriptions) {
          subscription.unsubscribe();
        }
        this.subscriptions = [];
      }
    };
    var WebsocketClient = class {
      constructor(baseUrl, onError = defaultErrorHandler) {
        this.subscriptionStreams = /* @__PURE__ */ new Map();
        const path = baseUrl.endsWith("/") ? "websocket" : "/websocket";
        const cleanBaseUrl = (0, rpcclient_1.hasProtocol)(baseUrl) ? baseUrl : "ws://" + baseUrl;
        this.url = cleanBaseUrl + path;
        this.socket = new socket_1.ReconnectingSocket(this.url);
        const errorSubscription = this.socket.events.subscribe({
          error: (error) => {
            onError(error);
            errorSubscription.unsubscribe();
          }
        });
        this.jsonRpcResponseStream = this.socket.events.map(toJsonRpcResponse);
        this.socket.connect();
      }
      async execute(request) {
        const pendingResponse = this.responseForRequestId(request.id);
        this.socket.queueRequest(JSON.stringify(request));
        const response = await pendingResponse;
        if ((0, json_rpc_1.isJsonRpcErrorResponse)(response)) {
          throw new Error(JSON.stringify(response.error));
        }
        return response;
      }
      listen(request) {
        if (request.method !== "subscribe") {
          throw new Error(`Request method must be "subscribe" to start event listening`);
        }
        const query = request.params.query;
        if (typeof query !== "string") {
          throw new Error("request.params.query must be a string");
        }
        if (!this.subscriptionStreams.has(query)) {
          const producer = new RpcEventProducer(request, this.socket);
          const stream = xstream_1.Stream.create(producer);
          this.subscriptionStreams.set(query, stream);
        }
        return this.subscriptionStreams.get(query).filter((response) => response.query !== void 0);
      }
      /**
       * Resolves as soon as websocket is connected. execute() queues requests automatically,
       * so this should be required for testing purposes only.
       */
      async connected() {
        await this.socket.connectionStatus.waitFor(socket_1.ConnectionStatus.Connected);
      }
      disconnect() {
        this.socket.disconnect();
      }
      async responseForRequestId(id) {
        return (0, stream_1.firstEvent)(this.jsonRpcResponseStream.filter((r) => r.id === id));
      }
    };
    exports.WebsocketClient = WebsocketClient;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/rpcclients/index.js
var require_rpcclients = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/rpcclients/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.WebsocketClient = exports.instanceOfRpcStreamingClient = exports.HttpClient = exports.HttpBatchClient = void 0;
    var httpbatchclient_1 = require_httpbatchclient();
    Object.defineProperty(exports, "HttpBatchClient", { enumerable: true, get: function() {
      return httpbatchclient_1.HttpBatchClient;
    } });
    var httpclient_1 = require_httpclient();
    Object.defineProperty(exports, "HttpClient", { enumerable: true, get: function() {
      return httpclient_1.HttpClient;
    } });
    var rpcclient_1 = require_rpcclient();
    Object.defineProperty(exports, "instanceOfRpcStreamingClient", { enumerable: true, get: function() {
      return rpcclient_1.instanceOfRpcStreamingClient;
    } });
    var websocketclient_1 = require_websocketclient();
    Object.defineProperty(exports, "WebsocketClient", { enumerable: true, get: function() {
      return websocketclient_1.WebsocketClient;
    } });
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/tendermint34/requests.js
var require_requests = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/tendermint34/requests.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.buildQuery = exports.SubscriptionEventType = exports.Method = void 0;
    var Method;
    (function(Method2) {
      Method2["AbciInfo"] = "abci_info";
      Method2["AbciQuery"] = "abci_query";
      Method2["Block"] = "block";
      Method2["Blockchain"] = "blockchain";
      Method2["BlockResults"] = "block_results";
      Method2["BlockSearch"] = "block_search";
      Method2["BroadcastTxAsync"] = "broadcast_tx_async";
      Method2["BroadcastTxSync"] = "broadcast_tx_sync";
      Method2["BroadcastTxCommit"] = "broadcast_tx_commit";
      Method2["Commit"] = "commit";
      Method2["Genesis"] = "genesis";
      Method2["Health"] = "health";
      Method2["NumUnconfirmedTxs"] = "num_unconfirmed_txs";
      Method2["Status"] = "status";
      Method2["Subscribe"] = "subscribe";
      Method2["Tx"] = "tx";
      Method2["TxSearch"] = "tx_search";
      Method2["Validators"] = "validators";
      Method2["Unsubscribe"] = "unsubscribe";
    })(Method = exports.Method || (exports.Method = {}));
    var SubscriptionEventType;
    (function(SubscriptionEventType2) {
      SubscriptionEventType2["NewBlock"] = "NewBlock";
      SubscriptionEventType2["NewBlockHeader"] = "NewBlockHeader";
      SubscriptionEventType2["Tx"] = "Tx";
    })(SubscriptionEventType = exports.SubscriptionEventType || (exports.SubscriptionEventType = {}));
    function buildQuery(components) {
      const tags = components.tags ? components.tags : [];
      const tagComponents = tags.map((tag) => `${tag.key}='${tag.value}'`);
      const rawComponents = components.raw ? [components.raw] : [];
      return [...tagComponents, ...rawComponents].join(" AND ");
    }
    exports.buildQuery = buildQuery;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/tendermint34/responses.js
var require_responses = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/tendermint34/responses.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.VoteType = exports.broadcastTxCommitSuccess = exports.broadcastTxSyncSuccess = void 0;
    function broadcastTxSyncSuccess(res) {
      return res.code === 0;
    }
    exports.broadcastTxSyncSuccess = broadcastTxSyncSuccess;
    function broadcastTxCommitSuccess(response) {
      return response.checkTx.code === 0 && !!response.deliverTx && response.deliverTx.code === 0;
    }
    exports.broadcastTxCommitSuccess = broadcastTxCommitSuccess;
    var VoteType;
    (function(VoteType2) {
      VoteType2[VoteType2["PreVote"] = 1] = "PreVote";
      VoteType2[VoteType2["PreCommit"] = 2] = "PreCommit";
    })(VoteType = exports.VoteType || (exports.VoteType = {}));
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/jsonrpc.js
var require_jsonrpc = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/jsonrpc.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createJsonRpcRequest = void 0;
    var numbersWithoutZero = "123456789";
    function randomNumericChar() {
      return numbersWithoutZero[Math.floor(Math.random() * numbersWithoutZero.length)];
    }
    function randomId() {
      return parseInt(Array.from({ length: 12 }).map(() => randomNumericChar()).join(""), 10);
    }
    function createJsonRpcRequest(method, params) {
      const paramsCopy = params ? { ...params } : {};
      return {
        jsonrpc: "2.0",
        id: randomId(),
        method,
        params: paramsCopy
      };
    }
    exports.createJsonRpcRequest = createJsonRpcRequest;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/tendermint34/encodings.js
var require_encodings = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/tendermint34/encodings.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.encodeBlockId = exports.encodeVersion = exports.encodeBytes = exports.encodeTime = exports.encodeUvarint = exports.encodeString = exports.dictionaryToStringMap = exports.may = exports.assertNotEmpty = exports.assertObject = exports.assertArray = exports.assertNumber = exports.assertString = exports.assertBoolean = exports.assertSet = void 0;
    var encoding_1 = require_build2();
    function assertSet(value) {
      if (value === void 0) {
        throw new Error("Value must not be undefined");
      }
      if (value === null) {
        throw new Error("Value must not be null");
      }
      return value;
    }
    exports.assertSet = assertSet;
    function assertBoolean(value) {
      assertSet(value);
      if (typeof value !== "boolean") {
        throw new Error("Value must be a boolean");
      }
      return value;
    }
    exports.assertBoolean = assertBoolean;
    function assertString(value) {
      assertSet(value);
      if (typeof value !== "string") {
        throw new Error("Value must be a string");
      }
      return value;
    }
    exports.assertString = assertString;
    function assertNumber(value) {
      assertSet(value);
      if (typeof value !== "number") {
        throw new Error("Value must be a number");
      }
      return value;
    }
    exports.assertNumber = assertNumber;
    function assertArray(value) {
      assertSet(value);
      if (!Array.isArray(value)) {
        throw new Error("Value must be a an array");
      }
      return value;
    }
    exports.assertArray = assertArray;
    function assertObject(value) {
      assertSet(value);
      if (typeof value !== "object") {
        throw new Error("Value must be an object");
      }
      if (Object.prototype.toString.call(value) !== "[object Object]") {
        throw new Error("Value must be a simple object");
      }
      return value;
    }
    exports.assertObject = assertObject;
    function assertNotEmpty(value) {
      assertSet(value);
      if (typeof value === "number" && value === 0) {
        throw new Error("must provide a non-zero value");
      } else if (value.length === 0) {
        throw new Error("must provide a non-empty value");
      }
      return value;
    }
    exports.assertNotEmpty = assertNotEmpty;
    function may(transform, value) {
      return value === void 0 || value === null ? void 0 : transform(value);
    }
    exports.may = may;
    function dictionaryToStringMap(obj) {
      const out = /* @__PURE__ */ new Map();
      for (const key of Object.keys(obj)) {
        const value = obj[key];
        if (typeof value !== "string") {
          throw new Error("Found dictionary value of type other than string");
        }
        out.set(key, value);
      }
      return out;
    }
    exports.dictionaryToStringMap = dictionaryToStringMap;
    function encodeString(s2) {
      const utf8 = (0, encoding_1.toUtf8)(s2);
      return Uint8Array.from([utf8.length, ...utf8]);
    }
    exports.encodeString = encodeString;
    function encodeUvarint(n2) {
      return n2 >= 128 ? (
        // eslint-disable-next-line no-bitwise
        Uint8Array.from([n2 & 255 | 128, ...encodeUvarint(n2 >> 7)])
      ) : (
        // eslint-disable-next-line no-bitwise
        Uint8Array.from([n2 & 255])
      );
    }
    exports.encodeUvarint = encodeUvarint;
    function encodeTime(time) {
      const milliseconds = time.getTime();
      const seconds = Math.floor(milliseconds / 1e3);
      const secondsArray = seconds ? [8, ...encodeUvarint(seconds)] : new Uint8Array();
      const nanoseconds = (time.nanoseconds || 0) + milliseconds % 1e3 * 1e6;
      const nanosecondsArray = nanoseconds ? [16, ...encodeUvarint(nanoseconds)] : new Uint8Array();
      return Uint8Array.from([...secondsArray, ...nanosecondsArray]);
    }
    exports.encodeTime = encodeTime;
    function encodeBytes(bytes) {
      if (bytes.length >= 128)
        throw new Error("Not implemented for byte arrays of length 128 or more");
      return bytes.length ? Uint8Array.from([bytes.length, ...bytes]) : new Uint8Array();
    }
    exports.encodeBytes = encodeBytes;
    function encodeVersion(version) {
      const blockArray = version.block ? Uint8Array.from([8, ...encodeUvarint(version.block)]) : new Uint8Array();
      const appArray = version.app ? Uint8Array.from([16, ...encodeUvarint(version.app)]) : new Uint8Array();
      return Uint8Array.from([...blockArray, ...appArray]);
    }
    exports.encodeVersion = encodeVersion;
    function encodeBlockId(blockId) {
      return Uint8Array.from([
        10,
        blockId.hash.length,
        ...blockId.hash,
        18,
        blockId.parts.hash.length + 4,
        8,
        blockId.parts.total,
        18,
        blockId.parts.hash.length,
        ...blockId.parts.hash
      ]);
    }
    exports.encodeBlockId = encodeBlockId;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/tendermint34/hasher.js
var require_hasher = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/tendermint34/hasher.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.hashBlock = exports.hashTx = void 0;
    var crypto_1 = require_build5();
    var encodings_1 = require_encodings();
    function hashTx(tx) {
      return (0, crypto_1.sha256)(tx);
    }
    exports.hashTx = hashTx;
    function getSplitPoint(n2) {
      if (n2 < 1)
        throw new Error("Cannot split an empty tree");
      const largestPowerOf2 = 2 ** Math.floor(Math.log2(n2));
      return largestPowerOf2 < n2 ? largestPowerOf2 : largestPowerOf2 / 2;
    }
    function hashLeaf(leaf) {
      const hash = new crypto_1.Sha256(Uint8Array.from([0]));
      hash.update(leaf);
      return hash.digest();
    }
    function hashInner(left, right) {
      const hash = new crypto_1.Sha256(Uint8Array.from([1]));
      hash.update(left);
      hash.update(right);
      return hash.digest();
    }
    function hashTree(hashes) {
      switch (hashes.length) {
        case 0:
          throw new Error("Cannot hash empty tree");
        case 1:
          return hashLeaf(hashes[0]);
        default: {
          const slicePoint = getSplitPoint(hashes.length);
          const left = hashTree(hashes.slice(0, slicePoint));
          const right = hashTree(hashes.slice(slicePoint));
          return hashInner(left, right);
        }
      }
    }
    function hashBlock(header) {
      if (!header.lastBlockId) {
        throw new Error("Hashing a block header with no last block ID (i.e. header at height 1) is not supported. If you need this, contributions are welcome. Please add documentation and test vectors for this case.");
      }
      const encodedFields = [
        (0, encodings_1.encodeVersion)(header.version),
        (0, encodings_1.encodeString)(header.chainId),
        (0, encodings_1.encodeUvarint)(header.height),
        (0, encodings_1.encodeTime)(header.time),
        (0, encodings_1.encodeBlockId)(header.lastBlockId),
        (0, encodings_1.encodeBytes)(header.lastCommitHash),
        (0, encodings_1.encodeBytes)(header.dataHash),
        (0, encodings_1.encodeBytes)(header.validatorsHash),
        (0, encodings_1.encodeBytes)(header.nextValidatorsHash),
        (0, encodings_1.encodeBytes)(header.consensusHash),
        (0, encodings_1.encodeBytes)(header.appHash),
        (0, encodings_1.encodeBytes)(header.lastResultsHash),
        (0, encodings_1.encodeBytes)(header.evidenceHash),
        (0, encodings_1.encodeBytes)(header.proposerAddress)
      ];
      return hashTree(encodedFields);
    }
    exports.hashBlock = hashBlock;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/inthelpers.js
var require_inthelpers = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/inthelpers.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.smallIntToApi = exports.apiToBigInt = exports.apiToSmallInt = void 0;
    var math_1 = require_build3();
    var encodings_1 = require_encodings();
    function apiToSmallInt(input) {
      const asInt = typeof input === "number" ? new math_1.Int53(input) : math_1.Int53.fromString(input);
      return asInt.toNumber();
    }
    exports.apiToSmallInt = apiToSmallInt;
    function apiToBigInt(input) {
      (0, encodings_1.assertString)(input);
      if (!input.match(/^-?[0-9]+$/)) {
        throw new Error("Invalid string format");
      }
      return BigInt(input);
    }
    exports.apiToBigInt = apiToBigInt;
    function smallIntToApi(num) {
      return new math_1.Int53(num).toString();
    }
    exports.smallIntToApi = smallIntToApi;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/tendermint34/adaptor/requests.js
var require_requests2 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/tendermint34/adaptor/requests.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Params = void 0;
    var encoding_1 = require_build2();
    var inthelpers_1 = require_inthelpers();
    var jsonrpc_1 = require_jsonrpc();
    var encodings_1 = require_encodings();
    var requests = __importStar(require_requests());
    function encodeHeightParam(param) {
      return {
        height: (0, encodings_1.may)(inthelpers_1.smallIntToApi, param.height)
      };
    }
    function encodeBlockchainRequestParams(param) {
      return {
        minHeight: (0, encodings_1.may)(inthelpers_1.smallIntToApi, param.minHeight),
        maxHeight: (0, encodings_1.may)(inthelpers_1.smallIntToApi, param.maxHeight)
      };
    }
    function encodeBlockSearchParams(params) {
      return {
        query: params.query,
        page: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.page),
        per_page: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.per_page),
        order_by: params.order_by
      };
    }
    function encodeAbciQueryParams(params) {
      return {
        path: (0, encodings_1.assertNotEmpty)(params.path),
        data: (0, encoding_1.toHex)(params.data),
        height: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.height),
        prove: params.prove
      };
    }
    function encodeBroadcastTxParams(params) {
      return {
        tx: (0, encoding_1.toBase64)((0, encodings_1.assertNotEmpty)(params.tx))
      };
    }
    function encodeTxParams(params) {
      return {
        hash: (0, encoding_1.toBase64)((0, encodings_1.assertNotEmpty)(params.hash)),
        prove: params.prove
      };
    }
    function encodeTxSearchParams(params) {
      return {
        query: params.query,
        prove: params.prove,
        page: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.page),
        per_page: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.per_page),
        order_by: params.order_by
      };
    }
    function encodeValidatorsParams(params) {
      return {
        height: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.height),
        page: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.page),
        per_page: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.per_page)
      };
    }
    var Params = class {
      static encodeAbciInfo(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method);
      }
      static encodeAbciQuery(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeAbciQueryParams(req.params));
      }
      static encodeBlock(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeHeightParam(req.params));
      }
      static encodeBlockchain(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeBlockchainRequestParams(req.params));
      }
      static encodeBlockResults(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeHeightParam(req.params));
      }
      static encodeBlockSearch(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeBlockSearchParams(req.params));
      }
      static encodeBroadcastTx(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeBroadcastTxParams(req.params));
      }
      static encodeCommit(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeHeightParam(req.params));
      }
      static encodeGenesis(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method);
      }
      static encodeHealth(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method);
      }
      static encodeNumUnconfirmedTxs(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method);
      }
      static encodeStatus(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method);
      }
      static encodeSubscribe(req) {
        const eventTag = { key: "tm.event", value: req.query.type };
        const query = requests.buildQuery({ tags: [eventTag], raw: req.query.raw });
        return (0, jsonrpc_1.createJsonRpcRequest)("subscribe", { query });
      }
      static encodeTx(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeTxParams(req.params));
      }
      // TODO: encode params for query string???
      static encodeTxSearch(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeTxSearchParams(req.params));
      }
      static encodeValidators(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeValidatorsParams(req.params));
      }
    };
    exports.Params = Params;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/types.js
var require_types5 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/types.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BlockIdFlag = void 0;
    var BlockIdFlag;
    (function(BlockIdFlag2) {
      BlockIdFlag2[BlockIdFlag2["Unknown"] = 0] = "Unknown";
      BlockIdFlag2[BlockIdFlag2["Absent"] = 1] = "Absent";
      BlockIdFlag2[BlockIdFlag2["Commit"] = 2] = "Commit";
      BlockIdFlag2[BlockIdFlag2["Nil"] = 3] = "Nil";
      BlockIdFlag2[BlockIdFlag2["Unrecognized"] = -1] = "Unrecognized";
    })(BlockIdFlag = exports.BlockIdFlag || (exports.BlockIdFlag = {}));
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/tendermint34/adaptor/responses.js
var require_responses2 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/tendermint34/adaptor/responses.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Responses = exports.decodeValidatorInfo = exports.decodeValidatorGenesis = exports.decodeValidatorUpdate = exports.decodeEvent = void 0;
    var encoding_1 = require_build2();
    var utils_1 = require_build4();
    var dates_1 = require_dates();
    var inthelpers_1 = require_inthelpers();
    var types_1 = require_types5();
    var encodings_1 = require_encodings();
    var hasher_1 = require_hasher();
    function decodeAbciInfo(data) {
      return {
        data: data.data,
        lastBlockHeight: (0, encodings_1.may)(inthelpers_1.apiToSmallInt, data.last_block_height),
        lastBlockAppHash: (0, encodings_1.may)(encoding_1.fromBase64, data.last_block_app_hash)
      };
    }
    function decodeQueryProof(data) {
      return {
        ops: data.ops.map((op) => ({
          type: op.type,
          key: (0, encoding_1.fromBase64)(op.key),
          data: (0, encoding_1.fromBase64)(op.data)
        }))
      };
    }
    function decodeAbciQuery(data) {
      return {
        key: (0, encoding_1.fromBase64)((0, encodings_1.assertString)(data.key ?? "")),
        value: (0, encoding_1.fromBase64)((0, encodings_1.assertString)(data.value ?? "")),
        proof: (0, encodings_1.may)(decodeQueryProof, data.proofOps),
        height: (0, encodings_1.may)(inthelpers_1.apiToSmallInt, data.height),
        code: (0, encodings_1.may)(inthelpers_1.apiToSmallInt, data.code),
        codespace: (0, encodings_1.assertString)(data.codespace ?? ""),
        index: (0, encodings_1.may)(inthelpers_1.apiToSmallInt, data.index),
        log: data.log,
        info: (0, encodings_1.assertString)(data.info ?? "")
      };
    }
    function decodeAttribute(attribute) {
      return {
        key: (0, encoding_1.fromBase64)((0, encodings_1.assertNotEmpty)(attribute.key)),
        value: (0, encoding_1.fromBase64)((0, encodings_1.assertString)(attribute.value ?? ""))
      };
    }
    function decodeAttributes(attributes) {
      return (0, encodings_1.assertArray)(attributes).map(decodeAttribute);
    }
    function decodeEvent(event) {
      return {
        type: event.type,
        attributes: event.attributes ? decodeAttributes(event.attributes) : []
      };
    }
    exports.decodeEvent = decodeEvent;
    function decodeEvents(events) {
      return (0, encodings_1.assertArray)(events).map(decodeEvent);
    }
    function decodeTxData(data) {
      return {
        code: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNumber)(data.code ?? 0)),
        codespace: data.codespace,
        log: data.log,
        data: (0, encodings_1.may)(encoding_1.fromBase64, data.data),
        events: data.events ? decodeEvents(data.events) : [],
        gasWanted: (0, inthelpers_1.apiToSmallInt)(data.gas_wanted ?? "0"),
        gasUsed: (0, inthelpers_1.apiToSmallInt)(data.gas_used ?? "0")
      };
    }
    function decodePubkey(data) {
      if ("Sum" in data) {
        const [[algorithm, value]] = Object.entries(data.Sum.value);
        (0, utils_1.assert)(algorithm === "ed25519" || algorithm === "secp256k1", `unknown pubkey type: ${algorithm}`);
        return {
          algorithm,
          data: (0, encoding_1.fromBase64)((0, encodings_1.assertNotEmpty)(value))
        };
      } else {
        switch (data.type) {
          case "tendermint/PubKeyEd25519":
            return {
              algorithm: "ed25519",
              data: (0, encoding_1.fromBase64)((0, encodings_1.assertNotEmpty)(data.value))
            };
          case "tendermint/PubKeySecp256k1":
            return {
              algorithm: "secp256k1",
              data: (0, encoding_1.fromBase64)((0, encodings_1.assertNotEmpty)(data.value))
            };
          default:
            throw new Error(`unknown pubkey type: ${data.type}`);
        }
      }
    }
    function decodeBlockParams(data) {
      return {
        maxBytes: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.max_bytes)),
        maxGas: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.max_gas))
      };
    }
    function decodeEvidenceParams(data) {
      return {
        maxAgeNumBlocks: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.max_age_num_blocks)),
        maxAgeDuration: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.max_age_duration))
      };
    }
    function decodeConsensusParams(data) {
      return {
        block: decodeBlockParams((0, encodings_1.assertObject)(data.block)),
        evidence: decodeEvidenceParams((0, encodings_1.assertObject)(data.evidence))
      };
    }
    function decodeValidatorUpdate(data) {
      return {
        pubkey: decodePubkey((0, encodings_1.assertObject)(data.pub_key)),
        votingPower: (0, inthelpers_1.apiToBigInt)(data.power ?? "0")
      };
    }
    exports.decodeValidatorUpdate = decodeValidatorUpdate;
    function decodeBlockResults(data) {
      return {
        height: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.height)),
        results: (data.txs_results || []).map(decodeTxData),
        validatorUpdates: (data.validator_updates || []).map(decodeValidatorUpdate),
        consensusUpdates: (0, encodings_1.may)(decodeConsensusParams, data.consensus_param_updates),
        beginBlockEvents: decodeEvents(data.begin_block_events || []),
        endBlockEvents: decodeEvents(data.end_block_events || [])
      };
    }
    function decodeBlockId(data) {
      return {
        hash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.hash)),
        parts: {
          total: (0, encodings_1.assertNotEmpty)(data.parts.total),
          hash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.parts.hash))
        }
      };
    }
    function decodeBlockVersion(data) {
      return {
        block: (0, inthelpers_1.apiToSmallInt)(data.block),
        app: (0, inthelpers_1.apiToSmallInt)(data.app ?? 0)
      };
    }
    function decodeHeader(data) {
      return {
        version: decodeBlockVersion(data.version),
        chainId: (0, encodings_1.assertNotEmpty)(data.chain_id),
        height: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.height)),
        time: (0, dates_1.fromRfc3339WithNanoseconds)((0, encodings_1.assertNotEmpty)(data.time)),
        // When there is no last block ID (i.e. this block's height is 1), we get an empty structure like this:
        // { hash: '', parts: { total: 0, hash: '' } }
        lastBlockId: data.last_block_id.hash ? decodeBlockId(data.last_block_id) : null,
        lastCommitHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.last_commit_hash)),
        dataHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.data_hash)),
        validatorsHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.validators_hash)),
        nextValidatorsHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.next_validators_hash)),
        consensusHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.consensus_hash)),
        appHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.app_hash)),
        lastResultsHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.last_results_hash)),
        evidenceHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.evidence_hash)),
        proposerAddress: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.proposer_address))
      };
    }
    function decodeBlockMeta(data) {
      return {
        blockId: decodeBlockId(data.block_id),
        blockSize: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.block_size)),
        header: decodeHeader(data.header),
        numTxs: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.num_txs))
      };
    }
    function decodeBlockchain(data) {
      return {
        lastHeight: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.last_height)),
        blockMetas: (0, encodings_1.assertArray)(data.block_metas).map(decodeBlockMeta)
      };
    }
    function decodeBroadcastTxSync(data) {
      return {
        ...decodeTxData(data),
        hash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.hash))
      };
    }
    function decodeBroadcastTxCommit(data) {
      return {
        height: (0, inthelpers_1.apiToSmallInt)(data.height),
        hash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.hash)),
        checkTx: decodeTxData((0, encodings_1.assertObject)(data.check_tx)),
        deliverTx: (0, encodings_1.may)(decodeTxData, data.deliver_tx)
      };
    }
    function decodeBlockIdFlag(blockIdFlag) {
      (0, utils_1.assert)(blockIdFlag in types_1.BlockIdFlag);
      return blockIdFlag;
    }
    function decodeOptionalTime(timestamp) {
      const nonZeroTime = timestamp && !timestamp.startsWith("0001-01-01");
      return nonZeroTime ? (0, dates_1.fromRfc3339WithNanoseconds)(timestamp) : void 0;
    }
    function decodeCommitSignature(data) {
      return {
        blockIdFlag: decodeBlockIdFlag(data.block_id_flag),
        validatorAddress: data.validator_address ? (0, encoding_1.fromHex)(data.validator_address) : void 0,
        timestamp: decodeOptionalTime(data.timestamp),
        signature: data.signature ? (0, encoding_1.fromBase64)(data.signature) : void 0
      };
    }
    function decodeCommit(data) {
      return {
        blockId: decodeBlockId((0, encodings_1.assertObject)(data.block_id)),
        height: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.height)),
        round: (0, inthelpers_1.apiToSmallInt)(data.round),
        signatures: (0, encodings_1.assertArray)(data.signatures).map(decodeCommitSignature)
      };
    }
    function decodeCommitResponse(data) {
      return {
        canonical: (0, encodings_1.assertBoolean)(data.canonical),
        header: decodeHeader(data.signed_header.header),
        commit: decodeCommit(data.signed_header.commit)
      };
    }
    function decodeValidatorGenesis(data) {
      return {
        address: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.address)),
        pubkey: decodePubkey((0, encodings_1.assertObject)(data.pub_key)),
        votingPower: (0, inthelpers_1.apiToBigInt)((0, encodings_1.assertNotEmpty)(data.power))
      };
    }
    exports.decodeValidatorGenesis = decodeValidatorGenesis;
    function decodeGenesis(data) {
      return {
        genesisTime: (0, dates_1.fromRfc3339WithNanoseconds)((0, encodings_1.assertNotEmpty)(data.genesis_time)),
        chainId: (0, encodings_1.assertNotEmpty)(data.chain_id),
        consensusParams: decodeConsensusParams(data.consensus_params),
        validators: data.validators ? (0, encodings_1.assertArray)(data.validators).map(decodeValidatorGenesis) : [],
        appHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.app_hash)),
        appState: data.app_state
      };
    }
    function decodeValidatorInfo(data) {
      return {
        pubkey: decodePubkey((0, encodings_1.assertObject)(data.pub_key)),
        votingPower: (0, inthelpers_1.apiToBigInt)((0, encodings_1.assertNotEmpty)(data.voting_power)),
        address: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.address)),
        proposerPriority: data.proposer_priority ? (0, inthelpers_1.apiToSmallInt)(data.proposer_priority) : void 0
      };
    }
    exports.decodeValidatorInfo = decodeValidatorInfo;
    function decodeNodeInfo(data) {
      return {
        id: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.id)),
        listenAddr: (0, encodings_1.assertNotEmpty)(data.listen_addr),
        network: (0, encodings_1.assertNotEmpty)(data.network),
        version: (0, encodings_1.assertString)(data.version),
        channels: (0, encodings_1.assertNotEmpty)(data.channels),
        moniker: (0, encodings_1.assertNotEmpty)(data.moniker),
        other: (0, encodings_1.dictionaryToStringMap)(data.other),
        protocolVersion: {
          app: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.protocol_version.app)),
          block: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.protocol_version.block)),
          p2p: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.protocol_version.p2p))
        }
      };
    }
    function decodeSyncInfo(data) {
      return {
        latestBlockHash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.latest_block_hash)),
        latestAppHash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.latest_app_hash)),
        latestBlockTime: (0, dates_1.fromRfc3339WithNanoseconds)((0, encodings_1.assertNotEmpty)(data.latest_block_time)),
        latestBlockHeight: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.latest_block_height)),
        catchingUp: (0, encodings_1.assertBoolean)(data.catching_up)
      };
    }
    function decodeStatus(data) {
      return {
        nodeInfo: decodeNodeInfo(data.node_info),
        syncInfo: decodeSyncInfo(data.sync_info),
        validatorInfo: decodeValidatorInfo(data.validator_info)
      };
    }
    function decodeTxProof(data) {
      return {
        data: (0, encoding_1.fromBase64)((0, encodings_1.assertNotEmpty)(data.data)),
        rootHash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.root_hash)),
        proof: {
          total: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.proof.total)),
          index: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.proof.index)),
          leafHash: (0, encoding_1.fromBase64)((0, encodings_1.assertNotEmpty)(data.proof.leaf_hash)),
          aunts: (0, encodings_1.assertArray)(data.proof.aunts).map(encoding_1.fromBase64)
        }
      };
    }
    function decodeTxResponse(data) {
      return {
        tx: (0, encoding_1.fromBase64)((0, encodings_1.assertNotEmpty)(data.tx)),
        result: decodeTxData((0, encodings_1.assertObject)(data.tx_result)),
        height: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.height)),
        index: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNumber)(data.index)),
        hash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.hash)),
        proof: (0, encodings_1.may)(decodeTxProof, data.proof)
      };
    }
    function decodeTxSearch(data) {
      return {
        totalCount: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.total_count)),
        txs: (0, encodings_1.assertArray)(data.txs).map(decodeTxResponse)
      };
    }
    function decodeTxEvent(data) {
      const tx = (0, encoding_1.fromBase64)((0, encodings_1.assertNotEmpty)(data.tx));
      return {
        tx,
        hash: (0, hasher_1.hashTx)(tx),
        result: decodeTxData(data.result),
        height: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.height))
      };
    }
    function decodeValidators(data) {
      return {
        blockHeight: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.block_height)),
        validators: (0, encodings_1.assertArray)(data.validators).map(decodeValidatorInfo),
        count: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.count)),
        total: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.total))
      };
    }
    function decodeBlock(data) {
      var _a;
      return {
        header: decodeHeader((0, encodings_1.assertObject)(data.header)),
        // For the block at height 1, last commit is not set. This is represented in an empty object like this:
        // { height: '0', round: 0, block_id: { hash: '', parts: [Object] }, signatures: [] }
        lastCommit: data.last_commit.block_id.hash ? decodeCommit((0, encodings_1.assertObject)(data.last_commit)) : null,
        txs: data.data.txs ? (0, encodings_1.assertArray)(data.data.txs).map(encoding_1.fromBase64) : [],
        // Lift up .evidence.evidence to just .evidence
        // See https://github.com/tendermint/tendermint/issues/7697
        evidence: ((_a = data.evidence) == null ? void 0 : _a.evidence) ?? []
      };
    }
    function decodeBlockResponse(data) {
      return {
        blockId: decodeBlockId(data.block_id),
        block: decodeBlock(data.block)
      };
    }
    function decodeBlockSearch(data) {
      return {
        totalCount: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.total_count)),
        blocks: (0, encodings_1.assertArray)(data.blocks).map(decodeBlockResponse)
      };
    }
    function decodeNumUnconfirmedTxs(data) {
      return {
        total: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.total)),
        totalBytes: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.total_bytes))
      };
    }
    var Responses = class _Responses {
      static decodeAbciInfo(response) {
        return decodeAbciInfo((0, encodings_1.assertObject)(response.result.response));
      }
      static decodeAbciQuery(response) {
        return decodeAbciQuery((0, encodings_1.assertObject)(response.result.response));
      }
      static decodeBlock(response) {
        return decodeBlockResponse(response.result);
      }
      static decodeBlockResults(response) {
        return decodeBlockResults(response.result);
      }
      static decodeBlockSearch(response) {
        return decodeBlockSearch(response.result);
      }
      static decodeBlockchain(response) {
        return decodeBlockchain(response.result);
      }
      static decodeBroadcastTxSync(response) {
        return decodeBroadcastTxSync(response.result);
      }
      static decodeBroadcastTxAsync(response) {
        return _Responses.decodeBroadcastTxSync(response);
      }
      static decodeBroadcastTxCommit(response) {
        return decodeBroadcastTxCommit(response.result);
      }
      static decodeCommit(response) {
        return decodeCommitResponse(response.result);
      }
      static decodeGenesis(response) {
        return decodeGenesis((0, encodings_1.assertObject)(response.result.genesis));
      }
      static decodeHealth() {
        return null;
      }
      static decodeNumUnconfirmedTxs(response) {
        return decodeNumUnconfirmedTxs(response.result);
      }
      static decodeStatus(response) {
        return decodeStatus(response.result);
      }
      static decodeNewBlockEvent(event) {
        return decodeBlock(event.data.value.block);
      }
      static decodeNewBlockHeaderEvent(event) {
        return decodeHeader(event.data.value.header);
      }
      static decodeTxEvent(event) {
        return decodeTxEvent(event.data.value.TxResult);
      }
      static decodeTx(response) {
        return decodeTxResponse(response.result);
      }
      static decodeTxSearch(response) {
        return decodeTxSearch(response.result);
      }
      static decodeValidators(response) {
        return decodeValidators(response.result);
      }
    };
    exports.Responses = Responses;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/tendermint34/adaptor/index.js
var require_adaptor = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/tendermint34/adaptor/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.adaptor34 = void 0;
    var hasher_1 = require_hasher();
    var requests_1 = require_requests2();
    var responses_1 = require_responses2();
    exports.adaptor34 = {
      params: requests_1.Params,
      responses: responses_1.Responses,
      hashTx: hasher_1.hashTx,
      hashBlock: hasher_1.hashBlock
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/tendermint34/tendermint34client.js
var require_tendermint34client = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/tendermint34/tendermint34client.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Tendermint34Client = void 0;
    var jsonrpc_1 = require_jsonrpc();
    var rpcclients_1 = require_rpcclients();
    var adaptor_1 = require_adaptor();
    var requests = __importStar(require_requests());
    var Tendermint34Client = class _Tendermint34Client {
      /**
       * Use `Tendermint34Client.connect` or `Tendermint34Client.create` to create an instance.
       */
      constructor(client) {
        this.client = client;
        this.p = adaptor_1.adaptor34.params;
        this.r = adaptor_1.adaptor34.responses;
      }
      /**
       * Creates a new Tendermint client for the given endpoint.
       *
       * Uses HTTP when the URL schema is http or https. Uses WebSockets otherwise.
       */
      static async connect(endpoint) {
        let rpcClient;
        if (typeof endpoint === "object") {
          rpcClient = new rpcclients_1.HttpClient(endpoint);
        } else {
          const useHttp = endpoint.startsWith("http://") || endpoint.startsWith("https://");
          rpcClient = useHttp ? new rpcclients_1.HttpClient(endpoint) : new rpcclients_1.WebsocketClient(endpoint);
        }
        const _version = await this.detectVersion(rpcClient);
        return _Tendermint34Client.create(rpcClient);
      }
      /**
       * Creates a new Tendermint client given an RPC client.
       */
      static async create(rpcClient) {
        return new _Tendermint34Client(rpcClient);
      }
      static async detectVersion(client) {
        const req = (0, jsonrpc_1.createJsonRpcRequest)(requests.Method.Status);
        const response = await client.execute(req);
        const result = response.result;
        if (!result || !result.node_info) {
          throw new Error("Unrecognized format for status response");
        }
        const version = result.node_info.version;
        if (typeof version !== "string") {
          throw new Error("Unrecognized version format: must be string");
        }
        return version;
      }
      disconnect() {
        this.client.disconnect();
      }
      async abciInfo() {
        const query = { method: requests.Method.AbciInfo };
        return this.doCall(query, this.p.encodeAbciInfo, this.r.decodeAbciInfo);
      }
      async abciQuery(params) {
        const query = { params, method: requests.Method.AbciQuery };
        return this.doCall(query, this.p.encodeAbciQuery, this.r.decodeAbciQuery);
      }
      async block(height) {
        const query = { method: requests.Method.Block, params: { height } };
        return this.doCall(query, this.p.encodeBlock, this.r.decodeBlock);
      }
      async blockResults(height) {
        const query = {
          method: requests.Method.BlockResults,
          params: { height }
        };
        return this.doCall(query, this.p.encodeBlockResults, this.r.decodeBlockResults);
      }
      /**
       * Search for events that are in a block.
       *
       * NOTE
       * This method will error on any node that is running a Tendermint version lower than 0.34.9.
       *
       * @see https://docs.tendermint.com/master/rpc/#/Info/block_search
       */
      async blockSearch(params) {
        const query = { params, method: requests.Method.BlockSearch };
        const resp = await this.doCall(query, this.p.encodeBlockSearch, this.r.decodeBlockSearch);
        return {
          ...resp,
          // make sure we sort by height, as tendermint may be sorting by string value of the height
          blocks: [...resp.blocks].sort((a2, b3) => a2.block.header.height - b3.block.header.height)
        };
      }
      // this should paginate through all blockSearch options to ensure it returns all results.
      // starts with page 1 or whatever was provided (eg. to start on page 7)
      //
      // NOTE
      // This method will error on any node that is running a Tendermint version lower than 0.34.9.
      async blockSearchAll(params) {
        let page = params.page || 1;
        const blocks = [];
        let done = false;
        while (!done) {
          const resp = await this.blockSearch({ ...params, page });
          blocks.push(...resp.blocks);
          if (blocks.length < resp.totalCount) {
            page++;
          } else {
            done = true;
          }
        }
        blocks.sort((a2, b3) => a2.block.header.height - b3.block.header.height);
        return {
          totalCount: blocks.length,
          blocks
        };
      }
      /**
       * Queries block headers filtered by minHeight <= height <= maxHeight.
       *
       * @param minHeight The minimum height to be included in the result. Defaults to 0.
       * @param maxHeight The maximum height to be included in the result. Defaults to infinity.
       */
      async blockchain(minHeight, maxHeight) {
        const query = {
          method: requests.Method.Blockchain,
          params: {
            minHeight,
            maxHeight
          }
        };
        return this.doCall(query, this.p.encodeBlockchain, this.r.decodeBlockchain);
      }
      /**
       * Broadcast transaction to mempool and wait for response
       *
       * @see https://docs.tendermint.com/master/rpc/#/Tx/broadcast_tx_sync
       */
      async broadcastTxSync(params) {
        const query = { params, method: requests.Method.BroadcastTxSync };
        return this.doCall(query, this.p.encodeBroadcastTx, this.r.decodeBroadcastTxSync);
      }
      /**
       * Broadcast transaction to mempool and do not wait for result
       *
       * @see https://docs.tendermint.com/master/rpc/#/Tx/broadcast_tx_async
       */
      async broadcastTxAsync(params) {
        const query = { params, method: requests.Method.BroadcastTxAsync };
        return this.doCall(query, this.p.encodeBroadcastTx, this.r.decodeBroadcastTxAsync);
      }
      /**
       * Broadcast transaction to mempool and wait for block
       *
       * @see https://docs.tendermint.com/master/rpc/#/Tx/broadcast_tx_commit
       */
      async broadcastTxCommit(params) {
        const query = { params, method: requests.Method.BroadcastTxCommit };
        return this.doCall(query, this.p.encodeBroadcastTx, this.r.decodeBroadcastTxCommit);
      }
      async commit(height) {
        const query = { method: requests.Method.Commit, params: { height } };
        return this.doCall(query, this.p.encodeCommit, this.r.decodeCommit);
      }
      async genesis() {
        const query = { method: requests.Method.Genesis };
        return this.doCall(query, this.p.encodeGenesis, this.r.decodeGenesis);
      }
      async health() {
        const query = { method: requests.Method.Health };
        return this.doCall(query, this.p.encodeHealth, this.r.decodeHealth);
      }
      async numUnconfirmedTxs() {
        const query = { method: requests.Method.NumUnconfirmedTxs };
        return this.doCall(query, this.p.encodeNumUnconfirmedTxs, this.r.decodeNumUnconfirmedTxs);
      }
      async status() {
        const query = { method: requests.Method.Status };
        return this.doCall(query, this.p.encodeStatus, this.r.decodeStatus);
      }
      subscribeNewBlock() {
        const request = {
          method: requests.Method.Subscribe,
          query: { type: requests.SubscriptionEventType.NewBlock }
        };
        return this.subscribe(request, this.r.decodeNewBlockEvent);
      }
      subscribeNewBlockHeader() {
        const request = {
          method: requests.Method.Subscribe,
          query: { type: requests.SubscriptionEventType.NewBlockHeader }
        };
        return this.subscribe(request, this.r.decodeNewBlockHeaderEvent);
      }
      subscribeTx(query) {
        const request = {
          method: requests.Method.Subscribe,
          query: {
            type: requests.SubscriptionEventType.Tx,
            raw: query
          }
        };
        return this.subscribe(request, this.r.decodeTxEvent);
      }
      /**
       * Get a single transaction by hash
       *
       * @see https://docs.tendermint.com/master/rpc/#/Info/tx
       */
      async tx(params) {
        const query = { params, method: requests.Method.Tx };
        return this.doCall(query, this.p.encodeTx, this.r.decodeTx);
      }
      /**
       * Search for transactions that are in a block
       *
       * @see https://docs.tendermint.com/master/rpc/#/Info/tx_search
       */
      async txSearch(params) {
        const query = { params, method: requests.Method.TxSearch };
        return this.doCall(query, this.p.encodeTxSearch, this.r.decodeTxSearch);
      }
      // this should paginate through all txSearch options to ensure it returns all results.
      // starts with page 1 or whatever was provided (eg. to start on page 7)
      async txSearchAll(params) {
        let page = params.page || 1;
        const txs = [];
        let done = false;
        while (!done) {
          const resp = await this.txSearch({ ...params, page });
          txs.push(...resp.txs);
          if (txs.length < resp.totalCount) {
            page++;
          } else {
            done = true;
          }
        }
        return {
          totalCount: txs.length,
          txs
        };
      }
      async validators(params) {
        const query = {
          method: requests.Method.Validators,
          params
        };
        return this.doCall(query, this.p.encodeValidators, this.r.decodeValidators);
      }
      async validatorsAll(height) {
        const validators = [];
        let page = 1;
        let done = false;
        let blockHeight = height;
        while (!done) {
          const response = await this.validators({
            per_page: 50,
            height: blockHeight,
            page
          });
          validators.push(...response.validators);
          blockHeight = blockHeight || response.blockHeight;
          if (validators.length < response.total) {
            page++;
          } else {
            done = true;
          }
        }
        return {
          // NOTE: Default value is for type safety but this should always be set
          blockHeight: blockHeight ?? 0,
          count: validators.length,
          total: validators.length,
          validators
        };
      }
      // doCall is a helper to handle the encode/call/decode logic
      async doCall(request, encode, decode) {
        const req = encode(request);
        const result = await this.client.execute(req);
        return decode(result);
      }
      subscribe(request, decode) {
        if (!(0, rpcclients_1.instanceOfRpcStreamingClient)(this.client)) {
          throw new Error("This RPC client type cannot subscribe to events");
        }
        const req = this.p.encodeSubscribe(request);
        const eventStream = this.client.listen(req);
        return eventStream.map((event) => {
          return decode(event);
        });
      }
    };
    exports.Tendermint34Client = Tendermint34Client;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/tendermint34/index.js
var require_tendermint34 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/tendermint34/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Tendermint34Client = exports.VoteType = exports.broadcastTxSyncSuccess = exports.broadcastTxCommitSuccess = exports.SubscriptionEventType = exports.Method = void 0;
    var requests_1 = require_requests();
    Object.defineProperty(exports, "Method", { enumerable: true, get: function() {
      return requests_1.Method;
    } });
    Object.defineProperty(exports, "SubscriptionEventType", { enumerable: true, get: function() {
      return requests_1.SubscriptionEventType;
    } });
    var responses_1 = require_responses();
    Object.defineProperty(exports, "broadcastTxCommitSuccess", { enumerable: true, get: function() {
      return responses_1.broadcastTxCommitSuccess;
    } });
    Object.defineProperty(exports, "broadcastTxSyncSuccess", { enumerable: true, get: function() {
      return responses_1.broadcastTxSyncSuccess;
    } });
    Object.defineProperty(exports, "VoteType", { enumerable: true, get: function() {
      return responses_1.VoteType;
    } });
    var tendermint34client_1 = require_tendermint34client();
    Object.defineProperty(exports, "Tendermint34Client", { enumerable: true, get: function() {
      return tendermint34client_1.Tendermint34Client;
    } });
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/tendermint37/requests.js
var require_requests3 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/tendermint37/requests.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.buildQuery = exports.SubscriptionEventType = exports.Method = void 0;
    var Method;
    (function(Method2) {
      Method2["AbciInfo"] = "abci_info";
      Method2["AbciQuery"] = "abci_query";
      Method2["Block"] = "block";
      Method2["Blockchain"] = "blockchain";
      Method2["BlockResults"] = "block_results";
      Method2["BlockSearch"] = "block_search";
      Method2["BroadcastTxAsync"] = "broadcast_tx_async";
      Method2["BroadcastTxSync"] = "broadcast_tx_sync";
      Method2["BroadcastTxCommit"] = "broadcast_tx_commit";
      Method2["Commit"] = "commit";
      Method2["Genesis"] = "genesis";
      Method2["Health"] = "health";
      Method2["NumUnconfirmedTxs"] = "num_unconfirmed_txs";
      Method2["Status"] = "status";
      Method2["Subscribe"] = "subscribe";
      Method2["Tx"] = "tx";
      Method2["TxSearch"] = "tx_search";
      Method2["Validators"] = "validators";
      Method2["Unsubscribe"] = "unsubscribe";
    })(Method = exports.Method || (exports.Method = {}));
    var SubscriptionEventType;
    (function(SubscriptionEventType2) {
      SubscriptionEventType2["NewBlock"] = "NewBlock";
      SubscriptionEventType2["NewBlockHeader"] = "NewBlockHeader";
      SubscriptionEventType2["Tx"] = "Tx";
    })(SubscriptionEventType = exports.SubscriptionEventType || (exports.SubscriptionEventType = {}));
    function buildQuery(components) {
      const tags = components.tags ? components.tags : [];
      const tagComponents = tags.map((tag) => `${tag.key}='${tag.value}'`);
      const rawComponents = components.raw ? [components.raw] : [];
      return [...tagComponents, ...rawComponents].join(" AND ");
    }
    exports.buildQuery = buildQuery;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/tendermint37/responses.js
var require_responses3 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/tendermint37/responses.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.VoteType = exports.broadcastTxCommitSuccess = exports.broadcastTxSyncSuccess = void 0;
    function broadcastTxSyncSuccess(res) {
      return res.code === 0;
    }
    exports.broadcastTxSyncSuccess = broadcastTxSyncSuccess;
    function broadcastTxCommitSuccess(response) {
      return response.checkTx.code === 0 && !!response.deliverTx && response.deliverTx.code === 0;
    }
    exports.broadcastTxCommitSuccess = broadcastTxCommitSuccess;
    var VoteType;
    (function(VoteType2) {
      VoteType2[VoteType2["PreVote"] = 1] = "PreVote";
      VoteType2[VoteType2["PreCommit"] = 2] = "PreCommit";
    })(VoteType = exports.VoteType || (exports.VoteType = {}));
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/tendermint37/encodings.js
var require_encodings2 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/tendermint37/encodings.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.encodeBlockId = exports.encodeVersion = exports.encodeBytes = exports.encodeTime = exports.encodeUvarint = exports.encodeString = exports.dictionaryToStringMap = exports.may = exports.assertNotEmpty = exports.assertObject = exports.assertArray = exports.assertNumber = exports.assertString = exports.assertBoolean = exports.assertSet = void 0;
    var encoding_1 = require_build2();
    function assertSet(value) {
      if (value === void 0) {
        throw new Error("Value must not be undefined");
      }
      if (value === null) {
        throw new Error("Value must not be null");
      }
      return value;
    }
    exports.assertSet = assertSet;
    function assertBoolean(value) {
      assertSet(value);
      if (typeof value !== "boolean") {
        throw new Error("Value must be a boolean");
      }
      return value;
    }
    exports.assertBoolean = assertBoolean;
    function assertString(value) {
      assertSet(value);
      if (typeof value !== "string") {
        throw new Error("Value must be a string");
      }
      return value;
    }
    exports.assertString = assertString;
    function assertNumber(value) {
      assertSet(value);
      if (typeof value !== "number") {
        throw new Error("Value must be a number");
      }
      return value;
    }
    exports.assertNumber = assertNumber;
    function assertArray(value) {
      assertSet(value);
      if (!Array.isArray(value)) {
        throw new Error("Value must be a an array");
      }
      return value;
    }
    exports.assertArray = assertArray;
    function assertObject(value) {
      assertSet(value);
      if (typeof value !== "object") {
        throw new Error("Value must be an object");
      }
      if (Object.prototype.toString.call(value) !== "[object Object]") {
        throw new Error("Value must be a simple object");
      }
      return value;
    }
    exports.assertObject = assertObject;
    function assertNotEmpty(value) {
      assertSet(value);
      if (typeof value === "number" && value === 0) {
        throw new Error("must provide a non-zero value");
      } else if (value.length === 0) {
        throw new Error("must provide a non-empty value");
      }
      return value;
    }
    exports.assertNotEmpty = assertNotEmpty;
    function may(transform, value) {
      return value === void 0 || value === null ? void 0 : transform(value);
    }
    exports.may = may;
    function dictionaryToStringMap(obj) {
      const out = /* @__PURE__ */ new Map();
      for (const key of Object.keys(obj)) {
        const value = obj[key];
        if (typeof value !== "string") {
          throw new Error("Found dictionary value of type other than string");
        }
        out.set(key, value);
      }
      return out;
    }
    exports.dictionaryToStringMap = dictionaryToStringMap;
    function encodeString(s2) {
      const utf8 = (0, encoding_1.toUtf8)(s2);
      return Uint8Array.from([utf8.length, ...utf8]);
    }
    exports.encodeString = encodeString;
    function encodeUvarint(n2) {
      return n2 >= 128 ? (
        // eslint-disable-next-line no-bitwise
        Uint8Array.from([n2 & 255 | 128, ...encodeUvarint(n2 >> 7)])
      ) : (
        // eslint-disable-next-line no-bitwise
        Uint8Array.from([n2 & 255])
      );
    }
    exports.encodeUvarint = encodeUvarint;
    function encodeTime(time) {
      const milliseconds = time.getTime();
      const seconds = Math.floor(milliseconds / 1e3);
      const secondsArray = seconds ? [8, ...encodeUvarint(seconds)] : new Uint8Array();
      const nanoseconds = (time.nanoseconds || 0) + milliseconds % 1e3 * 1e6;
      const nanosecondsArray = nanoseconds ? [16, ...encodeUvarint(nanoseconds)] : new Uint8Array();
      return Uint8Array.from([...secondsArray, ...nanosecondsArray]);
    }
    exports.encodeTime = encodeTime;
    function encodeBytes(bytes) {
      if (bytes.length >= 128)
        throw new Error("Not implemented for byte arrays of length 128 or more");
      return bytes.length ? Uint8Array.from([bytes.length, ...bytes]) : new Uint8Array();
    }
    exports.encodeBytes = encodeBytes;
    function encodeVersion(version) {
      const blockArray = version.block ? Uint8Array.from([8, ...encodeUvarint(version.block)]) : new Uint8Array();
      const appArray = version.app ? Uint8Array.from([16, ...encodeUvarint(version.app)]) : new Uint8Array();
      return Uint8Array.from([...blockArray, ...appArray]);
    }
    exports.encodeVersion = encodeVersion;
    function encodeBlockId(blockId) {
      return Uint8Array.from([
        10,
        blockId.hash.length,
        ...blockId.hash,
        18,
        blockId.parts.hash.length + 4,
        8,
        blockId.parts.total,
        18,
        blockId.parts.hash.length,
        ...blockId.parts.hash
      ]);
    }
    exports.encodeBlockId = encodeBlockId;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/tendermint37/hasher.js
var require_hasher2 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/tendermint37/hasher.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.hashBlock = exports.hashTx = void 0;
    var crypto_1 = require_build5();
    var encodings_1 = require_encodings2();
    function hashTx(tx) {
      return (0, crypto_1.sha256)(tx);
    }
    exports.hashTx = hashTx;
    function getSplitPoint(n2) {
      if (n2 < 1)
        throw new Error("Cannot split an empty tree");
      const largestPowerOf2 = 2 ** Math.floor(Math.log2(n2));
      return largestPowerOf2 < n2 ? largestPowerOf2 : largestPowerOf2 / 2;
    }
    function hashLeaf(leaf) {
      const hash = new crypto_1.Sha256(Uint8Array.from([0]));
      hash.update(leaf);
      return hash.digest();
    }
    function hashInner(left, right) {
      const hash = new crypto_1.Sha256(Uint8Array.from([1]));
      hash.update(left);
      hash.update(right);
      return hash.digest();
    }
    function hashTree(hashes) {
      switch (hashes.length) {
        case 0:
          throw new Error("Cannot hash empty tree");
        case 1:
          return hashLeaf(hashes[0]);
        default: {
          const slicePoint = getSplitPoint(hashes.length);
          const left = hashTree(hashes.slice(0, slicePoint));
          const right = hashTree(hashes.slice(slicePoint));
          return hashInner(left, right);
        }
      }
    }
    function hashBlock(header) {
      if (!header.lastBlockId) {
        throw new Error("Hashing a block header with no last block ID (i.e. header at height 1) is not supported. If you need this, contributions are welcome. Please add documentation and test vectors for this case.");
      }
      const encodedFields = [
        (0, encodings_1.encodeVersion)(header.version),
        (0, encodings_1.encodeString)(header.chainId),
        (0, encodings_1.encodeUvarint)(header.height),
        (0, encodings_1.encodeTime)(header.time),
        (0, encodings_1.encodeBlockId)(header.lastBlockId),
        (0, encodings_1.encodeBytes)(header.lastCommitHash),
        (0, encodings_1.encodeBytes)(header.dataHash),
        (0, encodings_1.encodeBytes)(header.validatorsHash),
        (0, encodings_1.encodeBytes)(header.nextValidatorsHash),
        (0, encodings_1.encodeBytes)(header.consensusHash),
        (0, encodings_1.encodeBytes)(header.appHash),
        (0, encodings_1.encodeBytes)(header.lastResultsHash),
        (0, encodings_1.encodeBytes)(header.evidenceHash),
        (0, encodings_1.encodeBytes)(header.proposerAddress)
      ];
      return hashTree(encodedFields);
    }
    exports.hashBlock = hashBlock;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/tendermint37/adaptor/requests.js
var require_requests4 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/tendermint37/adaptor/requests.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Params = void 0;
    var encoding_1 = require_build2();
    var inthelpers_1 = require_inthelpers();
    var jsonrpc_1 = require_jsonrpc();
    var encodings_1 = require_encodings2();
    var requests = __importStar(require_requests3());
    function encodeHeightParam(param) {
      return {
        height: (0, encodings_1.may)(inthelpers_1.smallIntToApi, param.height)
      };
    }
    function encodeBlockchainRequestParams(param) {
      return {
        minHeight: (0, encodings_1.may)(inthelpers_1.smallIntToApi, param.minHeight),
        maxHeight: (0, encodings_1.may)(inthelpers_1.smallIntToApi, param.maxHeight)
      };
    }
    function encodeBlockSearchParams(params) {
      return {
        query: params.query,
        page: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.page),
        per_page: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.per_page),
        order_by: params.order_by
      };
    }
    function encodeAbciQueryParams(params) {
      return {
        path: (0, encodings_1.assertNotEmpty)(params.path),
        data: (0, encoding_1.toHex)(params.data),
        height: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.height),
        prove: params.prove
      };
    }
    function encodeBroadcastTxParams(params) {
      return {
        tx: (0, encoding_1.toBase64)((0, encodings_1.assertNotEmpty)(params.tx))
      };
    }
    function encodeTxParams(params) {
      return {
        hash: (0, encoding_1.toBase64)((0, encodings_1.assertNotEmpty)(params.hash)),
        prove: params.prove
      };
    }
    function encodeTxSearchParams(params) {
      return {
        query: params.query,
        prove: params.prove,
        page: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.page),
        per_page: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.per_page),
        order_by: params.order_by
      };
    }
    function encodeValidatorsParams(params) {
      return {
        height: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.height),
        page: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.page),
        per_page: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.per_page)
      };
    }
    var Params = class {
      static encodeAbciInfo(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method);
      }
      static encodeAbciQuery(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeAbciQueryParams(req.params));
      }
      static encodeBlock(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeHeightParam(req.params));
      }
      static encodeBlockchain(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeBlockchainRequestParams(req.params));
      }
      static encodeBlockResults(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeHeightParam(req.params));
      }
      static encodeBlockSearch(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeBlockSearchParams(req.params));
      }
      static encodeBroadcastTx(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeBroadcastTxParams(req.params));
      }
      static encodeCommit(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeHeightParam(req.params));
      }
      static encodeGenesis(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method);
      }
      static encodeHealth(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method);
      }
      static encodeNumUnconfirmedTxs(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method);
      }
      static encodeStatus(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method);
      }
      static encodeSubscribe(req) {
        const eventTag = { key: "tm.event", value: req.query.type };
        const query = requests.buildQuery({ tags: [eventTag], raw: req.query.raw });
        return (0, jsonrpc_1.createJsonRpcRequest)("subscribe", { query });
      }
      static encodeTx(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeTxParams(req.params));
      }
      // TODO: encode params for query string???
      static encodeTxSearch(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeTxSearchParams(req.params));
      }
      static encodeValidators(req) {
        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeValidatorsParams(req.params));
      }
    };
    exports.Params = Params;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/tendermint37/adaptor/responses.js
var require_responses4 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/tendermint37/adaptor/responses.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Responses = exports.decodeValidatorInfo = exports.decodeValidatorGenesis = exports.decodeValidatorUpdate = exports.decodeEvent = void 0;
    var encoding_1 = require_build2();
    var utils_1 = require_build4();
    var dates_1 = require_dates();
    var inthelpers_1 = require_inthelpers();
    var types_1 = require_types5();
    var encodings_1 = require_encodings2();
    var hasher_1 = require_hasher2();
    function decodeAbciInfo(data) {
      return {
        data: data.data,
        lastBlockHeight: (0, encodings_1.may)(inthelpers_1.apiToSmallInt, data.last_block_height),
        lastBlockAppHash: (0, encodings_1.may)(encoding_1.fromBase64, data.last_block_app_hash)
      };
    }
    function decodeQueryProof(data) {
      return {
        ops: data.ops.map((op) => ({
          type: op.type,
          key: (0, encoding_1.fromBase64)(op.key),
          data: (0, encoding_1.fromBase64)(op.data)
        }))
      };
    }
    function decodeAbciQuery(data) {
      return {
        key: (0, encoding_1.fromBase64)((0, encodings_1.assertString)(data.key ?? "")),
        value: (0, encoding_1.fromBase64)((0, encodings_1.assertString)(data.value ?? "")),
        proof: (0, encodings_1.may)(decodeQueryProof, data.proofOps),
        height: (0, encodings_1.may)(inthelpers_1.apiToSmallInt, data.height),
        code: (0, encodings_1.may)(inthelpers_1.apiToSmallInt, data.code),
        codespace: (0, encodings_1.assertString)(data.codespace ?? ""),
        index: (0, encodings_1.may)(inthelpers_1.apiToSmallInt, data.index),
        log: data.log,
        info: (0, encodings_1.assertString)(data.info ?? "")
      };
    }
    function decodeEventAttribute(attribute) {
      return {
        key: (0, encodings_1.assertNotEmpty)(attribute.key),
        value: attribute.value ?? ""
      };
    }
    function decodeAttributes(attributes) {
      return (0, encodings_1.assertArray)(attributes).map(decodeEventAttribute);
    }
    function decodeEvent(event) {
      return {
        type: event.type,
        attributes: event.attributes ? decodeAttributes(event.attributes) : []
      };
    }
    exports.decodeEvent = decodeEvent;
    function decodeEvents(events) {
      return (0, encodings_1.assertArray)(events).map(decodeEvent);
    }
    function decodeTxData(data) {
      return {
        code: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNumber)(data.code ?? 0)),
        codespace: data.codespace,
        log: data.log,
        data: (0, encodings_1.may)(encoding_1.fromBase64, data.data),
        events: data.events ? decodeEvents(data.events) : [],
        gasWanted: (0, inthelpers_1.apiToSmallInt)(data.gas_wanted ?? "0"),
        gasUsed: (0, inthelpers_1.apiToSmallInt)(data.gas_used ?? "0")
      };
    }
    function decodePubkey(data) {
      if ("Sum" in data) {
        const [[algorithm, value]] = Object.entries(data.Sum.value);
        (0, utils_1.assert)(algorithm === "ed25519" || algorithm === "secp256k1", `unknown pubkey type: ${algorithm}`);
        return {
          algorithm,
          data: (0, encoding_1.fromBase64)((0, encodings_1.assertNotEmpty)(value))
        };
      } else {
        switch (data.type) {
          case "tendermint/PubKeyEd25519":
            return {
              algorithm: "ed25519",
              data: (0, encoding_1.fromBase64)((0, encodings_1.assertNotEmpty)(data.value))
            };
          case "tendermint/PubKeySecp256k1":
            return {
              algorithm: "secp256k1",
              data: (0, encoding_1.fromBase64)((0, encodings_1.assertNotEmpty)(data.value))
            };
          default:
            throw new Error(`unknown pubkey type: ${data.type}`);
        }
      }
    }
    function decodeBlockParams(data) {
      return {
        maxBytes: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.max_bytes)),
        maxGas: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.max_gas))
      };
    }
    function decodeEvidenceParams(data) {
      return {
        maxAgeNumBlocks: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.max_age_num_blocks)),
        maxAgeDuration: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.max_age_duration))
      };
    }
    function decodeConsensusParams(data) {
      return {
        block: decodeBlockParams((0, encodings_1.assertObject)(data.block)),
        evidence: decodeEvidenceParams((0, encodings_1.assertObject)(data.evidence))
      };
    }
    function decodeValidatorUpdate(data) {
      return {
        pubkey: decodePubkey((0, encodings_1.assertObject)(data.pub_key)),
        votingPower: (0, inthelpers_1.apiToBigInt)(data.power ?? "0")
      };
    }
    exports.decodeValidatorUpdate = decodeValidatorUpdate;
    function decodeBlockResults(data) {
      return {
        height: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.height)),
        results: (data.txs_results || []).map(decodeTxData),
        validatorUpdates: (data.validator_updates || []).map(decodeValidatorUpdate),
        consensusUpdates: (0, encodings_1.may)(decodeConsensusParams, data.consensus_param_updates),
        beginBlockEvents: decodeEvents(data.begin_block_events || []),
        endBlockEvents: decodeEvents(data.end_block_events || [])
      };
    }
    function decodeBlockId(data) {
      return {
        hash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.hash)),
        parts: {
          total: (0, encodings_1.assertNotEmpty)(data.parts.total),
          hash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.parts.hash))
        }
      };
    }
    function decodeBlockVersion(data) {
      return {
        block: (0, inthelpers_1.apiToSmallInt)(data.block),
        app: (0, inthelpers_1.apiToSmallInt)(data.app ?? 0)
      };
    }
    function decodeHeader(data) {
      return {
        version: decodeBlockVersion(data.version),
        chainId: (0, encodings_1.assertNotEmpty)(data.chain_id),
        height: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.height)),
        time: (0, dates_1.fromRfc3339WithNanoseconds)((0, encodings_1.assertNotEmpty)(data.time)),
        // When there is no last block ID (i.e. this block's height is 1), we get an empty structure like this:
        // { hash: '', parts: { total: 0, hash: '' } }
        lastBlockId: data.last_block_id.hash ? decodeBlockId(data.last_block_id) : null,
        lastCommitHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.last_commit_hash)),
        dataHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.data_hash)),
        validatorsHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.validators_hash)),
        nextValidatorsHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.next_validators_hash)),
        consensusHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.consensus_hash)),
        appHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.app_hash)),
        lastResultsHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.last_results_hash)),
        evidenceHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.evidence_hash)),
        proposerAddress: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.proposer_address))
      };
    }
    function decodeBlockMeta(data) {
      return {
        blockId: decodeBlockId(data.block_id),
        blockSize: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.block_size)),
        header: decodeHeader(data.header),
        numTxs: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.num_txs))
      };
    }
    function decodeBlockchain(data) {
      return {
        lastHeight: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.last_height)),
        blockMetas: (0, encodings_1.assertArray)(data.block_metas).map(decodeBlockMeta)
      };
    }
    function decodeBroadcastTxSync(data) {
      return {
        ...decodeTxData(data),
        hash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.hash))
      };
    }
    function decodeBroadcastTxCommit(data) {
      return {
        height: (0, inthelpers_1.apiToSmallInt)(data.height),
        hash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.hash)),
        checkTx: decodeTxData((0, encodings_1.assertObject)(data.check_tx)),
        deliverTx: (0, encodings_1.may)(decodeTxData, data.deliver_tx)
      };
    }
    function decodeBlockIdFlag(blockIdFlag) {
      (0, utils_1.assert)(blockIdFlag in types_1.BlockIdFlag);
      return blockIdFlag;
    }
    function decodeOptionalTime(timestamp) {
      const nonZeroTime = timestamp && !timestamp.startsWith("0001-01-01");
      return nonZeroTime ? (0, dates_1.fromRfc3339WithNanoseconds)(timestamp) : void 0;
    }
    function decodeCommitSignature(data) {
      return {
        blockIdFlag: decodeBlockIdFlag(data.block_id_flag),
        validatorAddress: data.validator_address ? (0, encoding_1.fromHex)(data.validator_address) : void 0,
        timestamp: decodeOptionalTime(data.timestamp),
        signature: data.signature ? (0, encoding_1.fromBase64)(data.signature) : void 0
      };
    }
    function decodeCommit(data) {
      return {
        blockId: decodeBlockId((0, encodings_1.assertObject)(data.block_id)),
        height: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.height)),
        round: (0, inthelpers_1.apiToSmallInt)(data.round),
        signatures: (0, encodings_1.assertArray)(data.signatures).map(decodeCommitSignature)
      };
    }
    function decodeCommitResponse(data) {
      return {
        canonical: (0, encodings_1.assertBoolean)(data.canonical),
        header: decodeHeader(data.signed_header.header),
        commit: decodeCommit(data.signed_header.commit)
      };
    }
    function decodeValidatorGenesis(data) {
      return {
        address: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.address)),
        pubkey: decodePubkey((0, encodings_1.assertObject)(data.pub_key)),
        votingPower: (0, inthelpers_1.apiToBigInt)((0, encodings_1.assertNotEmpty)(data.power))
      };
    }
    exports.decodeValidatorGenesis = decodeValidatorGenesis;
    function decodeGenesis(data) {
      return {
        genesisTime: (0, dates_1.fromRfc3339WithNanoseconds)((0, encodings_1.assertNotEmpty)(data.genesis_time)),
        chainId: (0, encodings_1.assertNotEmpty)(data.chain_id),
        consensusParams: decodeConsensusParams(data.consensus_params),
        validators: data.validators ? (0, encodings_1.assertArray)(data.validators).map(decodeValidatorGenesis) : [],
        appHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.app_hash)),
        appState: data.app_state
      };
    }
    function decodeValidatorInfo(data) {
      return {
        pubkey: decodePubkey((0, encodings_1.assertObject)(data.pub_key)),
        votingPower: (0, inthelpers_1.apiToBigInt)((0, encodings_1.assertNotEmpty)(data.voting_power)),
        address: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.address)),
        proposerPriority: data.proposer_priority ? (0, inthelpers_1.apiToSmallInt)(data.proposer_priority) : void 0
      };
    }
    exports.decodeValidatorInfo = decodeValidatorInfo;
    function decodeNodeInfo(data) {
      return {
        id: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.id)),
        listenAddr: (0, encodings_1.assertNotEmpty)(data.listen_addr),
        network: (0, encodings_1.assertNotEmpty)(data.network),
        version: (0, encodings_1.assertString)(data.version),
        channels: (0, encodings_1.assertNotEmpty)(data.channels),
        moniker: (0, encodings_1.assertNotEmpty)(data.moniker),
        other: (0, encodings_1.dictionaryToStringMap)(data.other),
        protocolVersion: {
          app: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.protocol_version.app)),
          block: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.protocol_version.block)),
          p2p: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.protocol_version.p2p))
        }
      };
    }
    function decodeSyncInfo(data) {
      return {
        latestBlockHash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.latest_block_hash)),
        latestAppHash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.latest_app_hash)),
        latestBlockTime: (0, dates_1.fromRfc3339WithNanoseconds)((0, encodings_1.assertNotEmpty)(data.latest_block_time)),
        latestBlockHeight: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.latest_block_height)),
        catchingUp: (0, encodings_1.assertBoolean)(data.catching_up)
      };
    }
    function decodeStatus(data) {
      return {
        nodeInfo: decodeNodeInfo(data.node_info),
        syncInfo: decodeSyncInfo(data.sync_info),
        validatorInfo: decodeValidatorInfo(data.validator_info)
      };
    }
    function decodeTxProof(data) {
      return {
        data: (0, encoding_1.fromBase64)((0, encodings_1.assertNotEmpty)(data.data)),
        rootHash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.root_hash)),
        proof: {
          total: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.proof.total)),
          index: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.proof.index)),
          leafHash: (0, encoding_1.fromBase64)((0, encodings_1.assertNotEmpty)(data.proof.leaf_hash)),
          aunts: (0, encodings_1.assertArray)(data.proof.aunts).map(encoding_1.fromBase64)
        }
      };
    }
    function decodeTxResponse(data) {
      return {
        tx: (0, encoding_1.fromBase64)((0, encodings_1.assertNotEmpty)(data.tx)),
        result: decodeTxData((0, encodings_1.assertObject)(data.tx_result)),
        height: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.height)),
        index: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNumber)(data.index)),
        hash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.hash)),
        proof: (0, encodings_1.may)(decodeTxProof, data.proof)
      };
    }
    function decodeTxSearch(data) {
      return {
        totalCount: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.total_count)),
        txs: (0, encodings_1.assertArray)(data.txs).map(decodeTxResponse)
      };
    }
    function decodeTxEvent(data) {
      const tx = (0, encoding_1.fromBase64)((0, encodings_1.assertNotEmpty)(data.tx));
      return {
        tx,
        hash: (0, hasher_1.hashTx)(tx),
        result: decodeTxData(data.result),
        height: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.height))
      };
    }
    function decodeValidators(data) {
      return {
        blockHeight: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.block_height)),
        validators: (0, encodings_1.assertArray)(data.validators).map(decodeValidatorInfo),
        count: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.count)),
        total: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.total))
      };
    }
    function decodeBlock(data) {
      var _a;
      return {
        header: decodeHeader((0, encodings_1.assertObject)(data.header)),
        // For the block at height 1, last commit is not set. This is represented in an empty object like this:
        // { height: '0', round: 0, block_id: { hash: '', parts: [Object] }, signatures: [] }
        lastCommit: data.last_commit.block_id.hash ? decodeCommit((0, encodings_1.assertObject)(data.last_commit)) : null,
        txs: data.data.txs ? (0, encodings_1.assertArray)(data.data.txs).map(encoding_1.fromBase64) : [],
        // Lift up .evidence.evidence to just .evidence
        // See https://github.com/tendermint/tendermint/issues/7697
        evidence: ((_a = data.evidence) == null ? void 0 : _a.evidence) ?? []
      };
    }
    function decodeBlockResponse(data) {
      return {
        blockId: decodeBlockId(data.block_id),
        block: decodeBlock(data.block)
      };
    }
    function decodeBlockSearch(data) {
      return {
        totalCount: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.total_count)),
        blocks: (0, encodings_1.assertArray)(data.blocks).map(decodeBlockResponse)
      };
    }
    function decodeNumUnconfirmedTxs(data) {
      return {
        total: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.total)),
        totalBytes: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.total_bytes))
      };
    }
    var Responses = class _Responses {
      static decodeAbciInfo(response) {
        return decodeAbciInfo((0, encodings_1.assertObject)(response.result.response));
      }
      static decodeAbciQuery(response) {
        return decodeAbciQuery((0, encodings_1.assertObject)(response.result.response));
      }
      static decodeBlock(response) {
        return decodeBlockResponse(response.result);
      }
      static decodeBlockResults(response) {
        return decodeBlockResults(response.result);
      }
      static decodeBlockSearch(response) {
        return decodeBlockSearch(response.result);
      }
      static decodeBlockchain(response) {
        return decodeBlockchain(response.result);
      }
      static decodeBroadcastTxSync(response) {
        return decodeBroadcastTxSync(response.result);
      }
      static decodeBroadcastTxAsync(response) {
        return _Responses.decodeBroadcastTxSync(response);
      }
      static decodeBroadcastTxCommit(response) {
        return decodeBroadcastTxCommit(response.result);
      }
      static decodeCommit(response) {
        return decodeCommitResponse(response.result);
      }
      static decodeGenesis(response) {
        return decodeGenesis((0, encodings_1.assertObject)(response.result.genesis));
      }
      static decodeHealth() {
        return null;
      }
      static decodeNumUnconfirmedTxs(response) {
        return decodeNumUnconfirmedTxs(response.result);
      }
      static decodeStatus(response) {
        return decodeStatus(response.result);
      }
      static decodeNewBlockEvent(event) {
        return decodeBlock(event.data.value.block);
      }
      static decodeNewBlockHeaderEvent(event) {
        return decodeHeader(event.data.value.header);
      }
      static decodeTxEvent(event) {
        return decodeTxEvent(event.data.value.TxResult);
      }
      static decodeTx(response) {
        return decodeTxResponse(response.result);
      }
      static decodeTxSearch(response) {
        return decodeTxSearch(response.result);
      }
      static decodeValidators(response) {
        return decodeValidators(response.result);
      }
    };
    exports.Responses = Responses;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/tendermint37/adaptor/index.js
var require_adaptor2 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/tendermint37/adaptor/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.adaptor37 = void 0;
    var hasher_1 = require_hasher2();
    var requests_1 = require_requests4();
    var responses_1 = require_responses4();
    exports.adaptor37 = {
      params: requests_1.Params,
      responses: responses_1.Responses,
      hashTx: hasher_1.hashTx,
      hashBlock: hasher_1.hashBlock
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/tendermint37/tendermint37client.js
var require_tendermint37client = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/tendermint37/tendermint37client.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Tendermint37Client = void 0;
    var jsonrpc_1 = require_jsonrpc();
    var rpcclients_1 = require_rpcclients();
    var adaptor_1 = require_adaptor2();
    var requests = __importStar(require_requests3());
    var Tendermint37Client = class _Tendermint37Client {
      /**
       * Use `Tendermint37Client.connect` or `Tendermint37Client.create` to create an instance.
       */
      constructor(client) {
        this.client = client;
        this.p = adaptor_1.adaptor37.params;
        this.r = adaptor_1.adaptor37.responses;
      }
      /**
       * Creates a new Tendermint client for the given endpoint.
       *
       * Uses HTTP when the URL schema is http or https. Uses WebSockets otherwise.
       */
      static async connect(endpoint) {
        let rpcClient;
        if (typeof endpoint === "object") {
          rpcClient = new rpcclients_1.HttpClient(endpoint);
        } else {
          const useHttp = endpoint.startsWith("http://") || endpoint.startsWith("https://");
          rpcClient = useHttp ? new rpcclients_1.HttpClient(endpoint) : new rpcclients_1.WebsocketClient(endpoint);
        }
        const _version = await this.detectVersion(rpcClient);
        return _Tendermint37Client.create(rpcClient);
      }
      /**
       * Creates a new Tendermint client given an RPC client.
       */
      static async create(rpcClient) {
        return new _Tendermint37Client(rpcClient);
      }
      static async detectVersion(client) {
        const req = (0, jsonrpc_1.createJsonRpcRequest)(requests.Method.Status);
        const response = await client.execute(req);
        const result = response.result;
        if (!result || !result.node_info) {
          throw new Error("Unrecognized format for status response");
        }
        const version = result.node_info.version;
        if (typeof version !== "string") {
          throw new Error("Unrecognized version format: must be string");
        }
        return version;
      }
      disconnect() {
        this.client.disconnect();
      }
      async abciInfo() {
        const query = { method: requests.Method.AbciInfo };
        return this.doCall(query, this.p.encodeAbciInfo, this.r.decodeAbciInfo);
      }
      async abciQuery(params) {
        const query = { params, method: requests.Method.AbciQuery };
        return this.doCall(query, this.p.encodeAbciQuery, this.r.decodeAbciQuery);
      }
      async block(height) {
        const query = { method: requests.Method.Block, params: { height } };
        return this.doCall(query, this.p.encodeBlock, this.r.decodeBlock);
      }
      async blockResults(height) {
        const query = {
          method: requests.Method.BlockResults,
          params: { height }
        };
        return this.doCall(query, this.p.encodeBlockResults, this.r.decodeBlockResults);
      }
      /**
       * Search for events that are in a block.
       *
       * NOTE
       * This method will error on any node that is running a Tendermint version lower than 0.34.9.
       *
       * @see https://docs.tendermint.com/master/rpc/#/Info/block_search
       */
      async blockSearch(params) {
        const query = { params, method: requests.Method.BlockSearch };
        const resp = await this.doCall(query, this.p.encodeBlockSearch, this.r.decodeBlockSearch);
        return {
          ...resp,
          // make sure we sort by height, as tendermint may be sorting by string value of the height
          blocks: [...resp.blocks].sort((a2, b3) => a2.block.header.height - b3.block.header.height)
        };
      }
      // this should paginate through all blockSearch options to ensure it returns all results.
      // starts with page 1 or whatever was provided (eg. to start on page 7)
      //
      // NOTE
      // This method will error on any node that is running a Tendermint version lower than 0.34.9.
      async blockSearchAll(params) {
        let page = params.page || 1;
        const blocks = [];
        let done = false;
        while (!done) {
          const resp = await this.blockSearch({ ...params, page });
          blocks.push(...resp.blocks);
          if (blocks.length < resp.totalCount) {
            page++;
          } else {
            done = true;
          }
        }
        blocks.sort((a2, b3) => a2.block.header.height - b3.block.header.height);
        return {
          totalCount: blocks.length,
          blocks
        };
      }
      /**
       * Queries block headers filtered by minHeight <= height <= maxHeight.
       *
       * @param minHeight The minimum height to be included in the result. Defaults to 0.
       * @param maxHeight The maximum height to be included in the result. Defaults to infinity.
       */
      async blockchain(minHeight, maxHeight) {
        const query = {
          method: requests.Method.Blockchain,
          params: {
            minHeight,
            maxHeight
          }
        };
        return this.doCall(query, this.p.encodeBlockchain, this.r.decodeBlockchain);
      }
      /**
       * Broadcast transaction to mempool and wait for response
       *
       * @see https://docs.tendermint.com/master/rpc/#/Tx/broadcast_tx_sync
       */
      async broadcastTxSync(params) {
        const query = { params, method: requests.Method.BroadcastTxSync };
        return this.doCall(query, this.p.encodeBroadcastTx, this.r.decodeBroadcastTxSync);
      }
      /**
       * Broadcast transaction to mempool and do not wait for result
       *
       * @see https://docs.tendermint.com/master/rpc/#/Tx/broadcast_tx_async
       */
      async broadcastTxAsync(params) {
        const query = { params, method: requests.Method.BroadcastTxAsync };
        return this.doCall(query, this.p.encodeBroadcastTx, this.r.decodeBroadcastTxAsync);
      }
      /**
       * Broadcast transaction to mempool and wait for block
       *
       * @see https://docs.tendermint.com/master/rpc/#/Tx/broadcast_tx_commit
       */
      async broadcastTxCommit(params) {
        const query = { params, method: requests.Method.BroadcastTxCommit };
        return this.doCall(query, this.p.encodeBroadcastTx, this.r.decodeBroadcastTxCommit);
      }
      async commit(height) {
        const query = { method: requests.Method.Commit, params: { height } };
        return this.doCall(query, this.p.encodeCommit, this.r.decodeCommit);
      }
      async genesis() {
        const query = { method: requests.Method.Genesis };
        return this.doCall(query, this.p.encodeGenesis, this.r.decodeGenesis);
      }
      async health() {
        const query = { method: requests.Method.Health };
        return this.doCall(query, this.p.encodeHealth, this.r.decodeHealth);
      }
      async numUnconfirmedTxs() {
        const query = { method: requests.Method.NumUnconfirmedTxs };
        return this.doCall(query, this.p.encodeNumUnconfirmedTxs, this.r.decodeNumUnconfirmedTxs);
      }
      async status() {
        const query = { method: requests.Method.Status };
        return this.doCall(query, this.p.encodeStatus, this.r.decodeStatus);
      }
      subscribeNewBlock() {
        const request = {
          method: requests.Method.Subscribe,
          query: { type: requests.SubscriptionEventType.NewBlock }
        };
        return this.subscribe(request, this.r.decodeNewBlockEvent);
      }
      subscribeNewBlockHeader() {
        const request = {
          method: requests.Method.Subscribe,
          query: { type: requests.SubscriptionEventType.NewBlockHeader }
        };
        return this.subscribe(request, this.r.decodeNewBlockHeaderEvent);
      }
      subscribeTx(query) {
        const request = {
          method: requests.Method.Subscribe,
          query: {
            type: requests.SubscriptionEventType.Tx,
            raw: query
          }
        };
        return this.subscribe(request, this.r.decodeTxEvent);
      }
      /**
       * Get a single transaction by hash
       *
       * @see https://docs.tendermint.com/master/rpc/#/Info/tx
       */
      async tx(params) {
        const query = { params, method: requests.Method.Tx };
        return this.doCall(query, this.p.encodeTx, this.r.decodeTx);
      }
      /**
       * Search for transactions that are in a block
       *
       * @see https://docs.tendermint.com/master/rpc/#/Info/tx_search
       */
      async txSearch(params) {
        const query = { params, method: requests.Method.TxSearch };
        return this.doCall(query, this.p.encodeTxSearch, this.r.decodeTxSearch);
      }
      // this should paginate through all txSearch options to ensure it returns all results.
      // starts with page 1 or whatever was provided (eg. to start on page 7)
      async txSearchAll(params) {
        let page = params.page || 1;
        const txs = [];
        let done = false;
        while (!done) {
          const resp = await this.txSearch({ ...params, page });
          txs.push(...resp.txs);
          if (txs.length < resp.totalCount) {
            page++;
          } else {
            done = true;
          }
        }
        return {
          totalCount: txs.length,
          txs
        };
      }
      async validators(params) {
        const query = {
          method: requests.Method.Validators,
          params
        };
        return this.doCall(query, this.p.encodeValidators, this.r.decodeValidators);
      }
      async validatorsAll(height) {
        const validators = [];
        let page = 1;
        let done = false;
        let blockHeight = height;
        while (!done) {
          const response = await this.validators({
            per_page: 50,
            height: blockHeight,
            page
          });
          validators.push(...response.validators);
          blockHeight = blockHeight || response.blockHeight;
          if (validators.length < response.total) {
            page++;
          } else {
            done = true;
          }
        }
        return {
          // NOTE: Default value is for type safety but this should always be set
          blockHeight: blockHeight ?? 0,
          count: validators.length,
          total: validators.length,
          validators
        };
      }
      // doCall is a helper to handle the encode/call/decode logic
      async doCall(request, encode, decode) {
        const req = encode(request);
        const result = await this.client.execute(req);
        return decode(result);
      }
      subscribe(request, decode) {
        if (!(0, rpcclients_1.instanceOfRpcStreamingClient)(this.client)) {
          throw new Error("This RPC client type cannot subscribe to events");
        }
        const req = this.p.encodeSubscribe(request);
        const eventStream = this.client.listen(req);
        return eventStream.map((event) => {
          return decode(event);
        });
      }
    };
    exports.Tendermint37Client = Tendermint37Client;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/tendermint37/index.js
var require_tendermint37 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/tendermint37/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Tendermint37Client = exports.VoteType = exports.broadcastTxSyncSuccess = exports.broadcastTxCommitSuccess = exports.SubscriptionEventType = exports.Method = void 0;
    var requests_1 = require_requests3();
    Object.defineProperty(exports, "Method", { enumerable: true, get: function() {
      return requests_1.Method;
    } });
    Object.defineProperty(exports, "SubscriptionEventType", { enumerable: true, get: function() {
      return requests_1.SubscriptionEventType;
    } });
    var responses_1 = require_responses3();
    Object.defineProperty(exports, "broadcastTxCommitSuccess", { enumerable: true, get: function() {
      return responses_1.broadcastTxCommitSuccess;
    } });
    Object.defineProperty(exports, "broadcastTxSyncSuccess", { enumerable: true, get: function() {
      return responses_1.broadcastTxSyncSuccess;
    } });
    Object.defineProperty(exports, "VoteType", { enumerable: true, get: function() {
      return responses_1.VoteType;
    } });
    var tendermint37client_1 = require_tendermint37client();
    Object.defineProperty(exports, "Tendermint37Client", { enumerable: true, get: function() {
      return tendermint37client_1.Tendermint37Client;
    } });
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/tendermintclient.js
var require_tendermintclient = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/tendermintclient.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isTendermint37Client = exports.isTendermint34Client = void 0;
    var tendermint34_1 = require_tendermint34();
    var tendermint37_1 = require_tendermint37();
    function isTendermint34Client(client) {
      return client instanceof tendermint34_1.Tendermint34Client;
    }
    exports.isTendermint34Client = isTendermint34Client;
    function isTendermint37Client(client) {
      return client instanceof tendermint37_1.Tendermint37Client;
    }
    exports.isTendermint37Client = isTendermint37Client;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/index.js
var require_build11 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/tendermint-rpc/build/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BlockIdFlag = exports.isTendermint37Client = exports.isTendermint34Client = exports.Tendermint37Client = exports.tendermint37 = exports.Tendermint34Client = exports.tendermint34 = exports.VoteType = exports.SubscriptionEventType = exports.Method = exports.broadcastTxSyncSuccess = exports.broadcastTxCommitSuccess = exports.WebsocketClient = exports.HttpClient = exports.HttpBatchClient = exports.toSeconds = exports.toRfc3339WithNanoseconds = exports.fromSeconds = exports.fromRfc3339WithNanoseconds = exports.DateTime = exports.rawSecp256k1PubkeyToRawAddress = exports.rawEd25519PubkeyToRawAddress = exports.pubkeyToRawAddress = exports.pubkeyToAddress = void 0;
    var addresses_1 = require_addresses2();
    Object.defineProperty(exports, "pubkeyToAddress", { enumerable: true, get: function() {
      return addresses_1.pubkeyToAddress;
    } });
    Object.defineProperty(exports, "pubkeyToRawAddress", { enumerable: true, get: function() {
      return addresses_1.pubkeyToRawAddress;
    } });
    Object.defineProperty(exports, "rawEd25519PubkeyToRawAddress", { enumerable: true, get: function() {
      return addresses_1.rawEd25519PubkeyToRawAddress;
    } });
    Object.defineProperty(exports, "rawSecp256k1PubkeyToRawAddress", { enumerable: true, get: function() {
      return addresses_1.rawSecp256k1PubkeyToRawAddress;
    } });
    var dates_1 = require_dates();
    Object.defineProperty(exports, "DateTime", { enumerable: true, get: function() {
      return dates_1.DateTime;
    } });
    Object.defineProperty(exports, "fromRfc3339WithNanoseconds", { enumerable: true, get: function() {
      return dates_1.fromRfc3339WithNanoseconds;
    } });
    Object.defineProperty(exports, "fromSeconds", { enumerable: true, get: function() {
      return dates_1.fromSeconds;
    } });
    Object.defineProperty(exports, "toRfc3339WithNanoseconds", { enumerable: true, get: function() {
      return dates_1.toRfc3339WithNanoseconds;
    } });
    Object.defineProperty(exports, "toSeconds", { enumerable: true, get: function() {
      return dates_1.toSeconds;
    } });
    var rpcclients_1 = require_rpcclients();
    Object.defineProperty(exports, "HttpBatchClient", { enumerable: true, get: function() {
      return rpcclients_1.HttpBatchClient;
    } });
    Object.defineProperty(exports, "HttpClient", { enumerable: true, get: function() {
      return rpcclients_1.HttpClient;
    } });
    Object.defineProperty(exports, "WebsocketClient", { enumerable: true, get: function() {
      return rpcclients_1.WebsocketClient;
    } });
    var tendermint34_1 = require_tendermint34();
    Object.defineProperty(exports, "broadcastTxCommitSuccess", { enumerable: true, get: function() {
      return tendermint34_1.broadcastTxCommitSuccess;
    } });
    Object.defineProperty(exports, "broadcastTxSyncSuccess", { enumerable: true, get: function() {
      return tendermint34_1.broadcastTxSyncSuccess;
    } });
    Object.defineProperty(exports, "Method", { enumerable: true, get: function() {
      return tendermint34_1.Method;
    } });
    Object.defineProperty(exports, "SubscriptionEventType", { enumerable: true, get: function() {
      return tendermint34_1.SubscriptionEventType;
    } });
    Object.defineProperty(exports, "VoteType", { enumerable: true, get: function() {
      return tendermint34_1.VoteType;
    } });
    exports.tendermint34 = __importStar(require_tendermint34());
    var tendermint34_2 = require_tendermint34();
    Object.defineProperty(exports, "Tendermint34Client", { enumerable: true, get: function() {
      return tendermint34_2.Tendermint34Client;
    } });
    exports.tendermint37 = __importStar(require_tendermint37());
    var tendermint37_1 = require_tendermint37();
    Object.defineProperty(exports, "Tendermint37Client", { enumerable: true, get: function() {
      return tendermint37_1.Tendermint37Client;
    } });
    var tendermintclient_1 = require_tendermintclient();
    Object.defineProperty(exports, "isTendermint34Client", { enumerable: true, get: function() {
      return tendermintclient_1.isTendermint34Client;
    } });
    Object.defineProperty(exports, "isTendermint37Client", { enumerable: true, get: function() {
      return tendermintclient_1.isTendermint37Client;
    } });
    var types_1 = require_types5();
    Object.defineProperty(exports, "BlockIdFlag", { enumerable: true, get: function() {
      return types_1.BlockIdFlag;
    } });
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/stargateclient.js
var require_stargateclient = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/stargateclient.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.StargateClient = exports.BroadcastTxError = exports.assertIsDeliverTxFailure = exports.assertIsDeliverTxSuccess = exports.isDeliverTxSuccess = exports.isDeliverTxFailure = exports.TimeoutError = void 0;
    var amino_1 = require_build6();
    var encoding_1 = require_build2();
    var math_1 = require_build3();
    var tendermint_rpc_1 = require_build11();
    var utils_1 = require_build4();
    var accounts_1 = require_accounts();
    var events_1 = require_events();
    var modules_1 = require_modules();
    var queryclient_1 = require_queryclient2();
    var search_1 = require_search();
    var TimeoutError = class extends Error {
      constructor(message, txId) {
        super(message);
        this.txId = txId;
      }
    };
    exports.TimeoutError = TimeoutError;
    function isDeliverTxFailure(result) {
      return !!result.code;
    }
    exports.isDeliverTxFailure = isDeliverTxFailure;
    function isDeliverTxSuccess(result) {
      return !isDeliverTxFailure(result);
    }
    exports.isDeliverTxSuccess = isDeliverTxSuccess;
    function assertIsDeliverTxSuccess(result) {
      if (isDeliverTxFailure(result)) {
        throw new Error(`Error when broadcasting tx ${result.transactionHash} at height ${result.height}. Code: ${result.code}; Raw log: ${result.rawLog}`);
      }
    }
    exports.assertIsDeliverTxSuccess = assertIsDeliverTxSuccess;
    function assertIsDeliverTxFailure(result) {
      if (isDeliverTxSuccess(result)) {
        throw new Error(`Transaction ${result.transactionHash} did not fail at height ${result.height}. Code: ${result.code}; Raw log: ${result.rawLog}`);
      }
    }
    exports.assertIsDeliverTxFailure = assertIsDeliverTxFailure;
    var BroadcastTxError = class extends Error {
      constructor(code, codespace, log) {
        super(`Broadcasting transaction failed with code ${code} (codespace: ${codespace}). Log: ${log}`);
        this.code = code;
        this.codespace = codespace;
        this.log = log;
      }
    };
    exports.BroadcastTxError = BroadcastTxError;
    var StargateClient = class _StargateClient {
      constructor(tmClient, options) {
        if (tmClient) {
          this.tmClient = tmClient;
          this.queryClient = queryclient_1.QueryClient.withExtensions(tmClient, modules_1.setupAuthExtension, modules_1.setupBankExtension, modules_1.setupStakingExtension, modules_1.setupTxExtension);
        }
        const { accountParser = accounts_1.accountFromAny } = options;
        this.accountParser = accountParser;
      }
      /**
       * Creates an instance by connecting to the given Tendermint RPC endpoint.
       *
       * For now this uses the Tendermint 0.34 client. If you need Tendermint 0.37
       * support, see `create`.
       */
      static async connect(endpoint, options = {}) {
        const tmClient = await tendermint_rpc_1.Tendermint34Client.connect(endpoint);
        return _StargateClient.create(tmClient, options);
      }
      /**
       * Creates an instance from a manually created Tendermint client.
       * Use this to use `Tendermint37Client` instead of `Tendermint34Client`.
       */
      static async create(tmClient, options = {}) {
        return new _StargateClient(tmClient, options);
      }
      getTmClient() {
        return this.tmClient;
      }
      forceGetTmClient() {
        if (!this.tmClient) {
          throw new Error("Tendermint client not available. You cannot use online functionality in offline mode.");
        }
        return this.tmClient;
      }
      getQueryClient() {
        return this.queryClient;
      }
      forceGetQueryClient() {
        if (!this.queryClient) {
          throw new Error("Query client not available. You cannot use online functionality in offline mode.");
        }
        return this.queryClient;
      }
      async getChainId() {
        if (!this.chainId) {
          const response = await this.forceGetTmClient().status();
          const chainId = response.nodeInfo.network;
          if (!chainId)
            throw new Error("Chain ID must not be empty");
          this.chainId = chainId;
        }
        return this.chainId;
      }
      async getHeight() {
        const status = await this.forceGetTmClient().status();
        return status.syncInfo.latestBlockHeight;
      }
      async getAccount(searchAddress) {
        try {
          const account = await this.forceGetQueryClient().auth.account(searchAddress);
          return account ? this.accountParser(account) : null;
        } catch (error) {
          if (/rpc error: code = NotFound/i.test(error.toString())) {
            return null;
          }
          throw error;
        }
      }
      async getSequence(address) {
        const account = await this.getAccount(address);
        if (!account) {
          throw new Error(`Account '${address}' does not exist on chain. Send some tokens there before trying to query sequence.`);
        }
        return {
          accountNumber: account.accountNumber,
          sequence: account.sequence
        };
      }
      async getBlock(height) {
        const response = await this.forceGetTmClient().block(height);
        return {
          id: (0, encoding_1.toHex)(response.blockId.hash).toUpperCase(),
          header: {
            version: {
              block: new math_1.Uint53(response.block.header.version.block).toString(),
              app: new math_1.Uint53(response.block.header.version.app).toString()
            },
            height: response.block.header.height,
            chainId: response.block.header.chainId,
            time: (0, tendermint_rpc_1.toRfc3339WithNanoseconds)(response.block.header.time)
          },
          txs: response.block.txs
        };
      }
      async getBalance(address, searchDenom) {
        return this.forceGetQueryClient().bank.balance(address, searchDenom);
      }
      /**
       * Queries all balances for all denoms that belong to this address.
       *
       * Uses the grpc queries (which iterates over the store internally), and we cannot get
       * proofs from such a method.
       */
      async getAllBalances(address) {
        return this.forceGetQueryClient().bank.allBalances(address);
      }
      async getBalanceStaked(address) {
        const allDelegations = [];
        let startAtKey = void 0;
        do {
          const { delegationResponses, pagination } = await this.forceGetQueryClient().staking.delegatorDelegations(address, startAtKey);
          const loadedDelegations = delegationResponses || [];
          allDelegations.push(...loadedDelegations);
          startAtKey = pagination == null ? void 0 : pagination.nextKey;
        } while (startAtKey !== void 0 && startAtKey.length !== 0);
        const sumValues = allDelegations.reduce((previousValue, currentValue) => {
          (0, utils_1.assert)(currentValue.balance);
          return previousValue !== null ? (0, amino_1.addCoins)(previousValue, currentValue.balance) : currentValue.balance;
        }, null);
        return sumValues;
      }
      async getDelegation(delegatorAddress, validatorAddress) {
        var _a;
        let delegatedAmount;
        try {
          delegatedAmount = (_a = (await this.forceGetQueryClient().staking.delegation(delegatorAddress, validatorAddress)).delegationResponse) == null ? void 0 : _a.balance;
        } catch (e2) {
          if (e2.toString().includes("key not found")) {
          } else {
            throw e2;
          }
        }
        return delegatedAmount || null;
      }
      async getTx(id) {
        const results = await this.txsQuery(`tx.hash='${id}'`);
        return results[0] ?? null;
      }
      async searchTx(query, filter = {}) {
        const minHeight = filter.minHeight || 0;
        const maxHeight = filter.maxHeight || Number.MAX_SAFE_INTEGER;
        if (maxHeight < minHeight)
          return [];
        function withFilters(originalQuery) {
          return `${originalQuery} AND tx.height>=${minHeight} AND tx.height<=${maxHeight}`;
        }
        let txs;
        if ((0, search_1.isSearchByHeightQuery)(query)) {
          txs = query.height >= minHeight && query.height <= maxHeight ? await this.txsQuery(`tx.height=${query.height}`) : [];
        } else if ((0, search_1.isSearchBySentFromOrToQuery)(query)) {
          const sentQuery = withFilters(`message.module='bank' AND transfer.sender='${query.sentFromOrTo}'`);
          const receivedQuery = withFilters(`message.module='bank' AND transfer.recipient='${query.sentFromOrTo}'`);
          const [sent, received] = await Promise.all([sentQuery, receivedQuery].map((rawQuery) => this.txsQuery(rawQuery)));
          const sentHashes = sent.map((t2) => t2.hash);
          txs = [...sent, ...received.filter((t2) => !sentHashes.includes(t2.hash))];
        } else if ((0, search_1.isSearchByTagsQuery)(query)) {
          const rawQuery = withFilters(query.tags.map((t2) => `${t2.key}='${t2.value}'`).join(" AND "));
          txs = await this.txsQuery(rawQuery);
        } else {
          throw new Error("Unknown query type");
        }
        const filtered = txs.filter((tx) => tx.height >= minHeight && tx.height <= maxHeight);
        return filtered;
      }
      disconnect() {
        if (this.tmClient)
          this.tmClient.disconnect();
      }
      /**
       * Broadcasts a signed transaction to the network and monitors its inclusion in a block.
       *
       * If broadcasting is rejected by the node for some reason (e.g. because of a CheckTx failure),
       * an error is thrown.
       *
       * If the transaction is not included in a block before the provided timeout, this errors with a `TimeoutError`.
       *
       * If the transaction is included in a block, a `DeliverTxResponse` is returned. The caller then
       * usually needs to check for execution success or failure.
       */
      async broadcastTx(tx, timeoutMs = 6e4, pollIntervalMs = 3e3) {
        let timedOut = false;
        const txPollTimeout = setTimeout(() => {
          timedOut = true;
        }, timeoutMs);
        const pollForTx = async (txId) => {
          if (timedOut) {
            throw new TimeoutError(`Transaction with ID ${txId} was submitted but was not yet found on the chain. You might want to check later. There was a wait of ${timeoutMs / 1e3} seconds.`, txId);
          }
          await (0, utils_1.sleep)(pollIntervalMs);
          const result = await this.getTx(txId);
          return result ? {
            code: result.code,
            height: result.height,
            txIndex: result.txIndex,
            events: result.events,
            rawLog: result.rawLog,
            transactionHash: txId,
            gasUsed: result.gasUsed,
            gasWanted: result.gasWanted
          } : pollForTx(txId);
        };
        const broadcasted = await this.forceGetTmClient().broadcastTxSync({ tx });
        if (broadcasted.code) {
          return Promise.reject(new BroadcastTxError(broadcasted.code, broadcasted.codespace ?? "", broadcasted.log));
        }
        const transactionId = (0, encoding_1.toHex)(broadcasted.hash).toUpperCase();
        return new Promise((resolve, reject) => pollForTx(transactionId).then((value) => {
          clearTimeout(txPollTimeout);
          resolve(value);
        }, (error) => {
          clearTimeout(txPollTimeout);
          reject(error);
        }));
      }
      async txsQuery(query) {
        const results = await this.forceGetTmClient().txSearchAll({ query });
        return results.txs.map((tx) => {
          return {
            height: tx.height,
            txIndex: tx.index,
            hash: (0, encoding_1.toHex)(tx.hash).toUpperCase(),
            code: tx.result.code,
            events: tx.result.events.map(events_1.fromTendermintEvent),
            rawLog: tx.result.log || "",
            tx: tx.tx,
            gasUsed: tx.result.gasUsed,
            gasWanted: tx.result.gasWanted
          };
        });
      }
    };
    exports.StargateClient = StargateClient;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/signingstargateclient.js
var require_signingstargateclient = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/signingstargateclient.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SigningStargateClient = exports.createDefaultAminoConverters = exports.defaultRegistryTypes = void 0;
    var amino_1 = require_build6();
    var encoding_1 = require_build2();
    var math_1 = require_build3();
    var proto_signing_1 = require_build7();
    var tendermint_rpc_1 = require_build11();
    var utils_1 = require_build4();
    var coin_1 = require_coin();
    var tx_1 = require_tx4();
    var tx_2 = require_tx11();
    var signing_1 = require_signing();
    var tx_3 = require_tx();
    var tx_4 = require_tx7();
    var long_1 = __importDefault(require_long());
    var aminotypes_1 = require_aminotypes();
    var fee_1 = require_fee();
    var modules_1 = require_modules();
    var modules_2 = require_modules();
    var stargateclient_1 = require_stargateclient();
    exports.defaultRegistryTypes = [
      ["/cosmos.base.v1beta1.Coin", coin_1.Coin],
      ...modules_1.authzTypes,
      ...modules_1.bankTypes,
      ...modules_1.distributionTypes,
      ...modules_1.feegrantTypes,
      ...modules_1.govTypes,
      ...modules_1.stakingTypes,
      ...modules_1.ibcTypes,
      ...modules_1.vestingTypes
    ];
    function createDefaultAminoConverters() {
      return {
        ...(0, modules_2.createAuthzAminoConverters)(),
        ...(0, modules_2.createBankAminoConverters)(),
        ...(0, modules_2.createDistributionAminoConverters)(),
        ...(0, modules_2.createGovAminoConverters)(),
        ...(0, modules_2.createStakingAminoConverters)(),
        ...(0, modules_2.createIbcAminoConverters)(),
        ...(0, modules_2.createFeegrantAminoConverters)(),
        ...(0, modules_2.createVestingAminoConverters)()
      };
    }
    exports.createDefaultAminoConverters = createDefaultAminoConverters;
    var SigningStargateClient = class _SigningStargateClient extends stargateclient_1.StargateClient {
      constructor(tmClient, signer, options) {
        super(tmClient, options);
        const { registry = new proto_signing_1.Registry(exports.defaultRegistryTypes), aminoTypes = new aminotypes_1.AminoTypes(createDefaultAminoConverters()) } = options;
        this.registry = registry;
        this.aminoTypes = aminoTypes;
        this.signer = signer;
        this.broadcastTimeoutMs = options.broadcastTimeoutMs;
        this.broadcastPollIntervalMs = options.broadcastPollIntervalMs;
        this.gasPrice = options.gasPrice;
      }
      /**
       * Creates an instance by connecting to the given Tendermint RPC endpoint.
       *
       * For now this uses the Tendermint 0.34 client. If you need Tendermint 0.37
       * support, see `createWithSigner`.
       */
      static async connectWithSigner(endpoint, signer, options = {}) {
        const tmClient = await tendermint_rpc_1.Tendermint34Client.connect(endpoint);
        return _SigningStargateClient.createWithSigner(tmClient, signer, options);
      }
      /**
       * Creates an instance from a manually created Tendermint client.
       * Use this to use `Tendermint37Client` instead of `Tendermint34Client`.
       */
      static async createWithSigner(tmClient, signer, options = {}) {
        return new _SigningStargateClient(tmClient, signer, options);
      }
      /**
       * Creates a client in offline mode.
       *
       * This should only be used in niche cases where you know exactly what you're doing,
       * e.g. when building an offline signing application.
       *
       * When you try to use online functionality with such a signer, an
       * exception will be raised.
       */
      static async offline(signer, options = {}) {
        return new _SigningStargateClient(void 0, signer, options);
      }
      async simulate(signerAddress, messages, memo) {
        const anyMsgs = messages.map((m2) => this.registry.encodeAsAny(m2));
        const accountFromSigner = (await this.signer.getAccounts()).find((account) => account.address === signerAddress);
        if (!accountFromSigner) {
          throw new Error("Failed to retrieve account from signer");
        }
        const pubkey = (0, amino_1.encodeSecp256k1Pubkey)(accountFromSigner.pubkey);
        const { sequence } = await this.getSequence(signerAddress);
        const { gasInfo } = await this.forceGetQueryClient().tx.simulate(anyMsgs, memo, pubkey, sequence);
        (0, utils_1.assertDefined)(gasInfo);
        return math_1.Uint53.fromString(gasInfo.gasUsed.toString()).toNumber();
      }
      async sendTokens(senderAddress, recipientAddress, amount, fee, memo = "") {
        const sendMsg = {
          typeUrl: "/cosmos.bank.v1beta1.MsgSend",
          value: {
            fromAddress: senderAddress,
            toAddress: recipientAddress,
            amount: [...amount]
          }
        };
        return this.signAndBroadcast(senderAddress, [sendMsg], fee, memo);
      }
      async delegateTokens(delegatorAddress, validatorAddress, amount, fee, memo = "") {
        const delegateMsg = {
          typeUrl: "/cosmos.staking.v1beta1.MsgDelegate",
          value: tx_2.MsgDelegate.fromPartial({
            delegatorAddress,
            validatorAddress,
            amount
          })
        };
        return this.signAndBroadcast(delegatorAddress, [delegateMsg], fee, memo);
      }
      async undelegateTokens(delegatorAddress, validatorAddress, amount, fee, memo = "") {
        const undelegateMsg = {
          typeUrl: "/cosmos.staking.v1beta1.MsgUndelegate",
          value: tx_2.MsgUndelegate.fromPartial({
            delegatorAddress,
            validatorAddress,
            amount
          })
        };
        return this.signAndBroadcast(delegatorAddress, [undelegateMsg], fee, memo);
      }
      async withdrawRewards(delegatorAddress, validatorAddress, fee, memo = "") {
        const withdrawMsg = {
          typeUrl: "/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward",
          value: tx_1.MsgWithdrawDelegatorReward.fromPartial({
            delegatorAddress,
            validatorAddress
          })
        };
        return this.signAndBroadcast(delegatorAddress, [withdrawMsg], fee, memo);
      }
      async sendIbcTokens(senderAddress, recipientAddress, transferAmount, sourcePort, sourceChannel, timeoutHeight, timeoutTimestamp, fee, memo = "") {
        const timeoutTimestampNanoseconds = timeoutTimestamp ? long_1.default.fromNumber(timeoutTimestamp).multiply(1e9) : void 0;
        const transferMsg = {
          typeUrl: "/ibc.applications.transfer.v1.MsgTransfer",
          value: tx_4.MsgTransfer.fromPartial({
            sourcePort,
            sourceChannel,
            sender: senderAddress,
            receiver: recipientAddress,
            token: transferAmount,
            timeoutHeight,
            timeoutTimestamp: timeoutTimestampNanoseconds
          })
        };
        return this.signAndBroadcast(senderAddress, [transferMsg], fee, memo);
      }
      async signAndBroadcast(signerAddress, messages, fee, memo = "") {
        let usedFee;
        if (fee == "auto" || typeof fee === "number") {
          (0, utils_1.assertDefined)(this.gasPrice, "Gas price must be set in the client options when auto gas is used.");
          const gasEstimation = await this.simulate(signerAddress, messages, memo);
          const multiplier = typeof fee === "number" ? fee : 1.3;
          usedFee = (0, fee_1.calculateFee)(Math.round(gasEstimation * multiplier), this.gasPrice);
        } else {
          usedFee = fee;
        }
        const txRaw = await this.sign(signerAddress, messages, usedFee, memo);
        const txBytes = tx_3.TxRaw.encode(txRaw).finish();
        return this.broadcastTx(txBytes, this.broadcastTimeoutMs, this.broadcastPollIntervalMs);
      }
      /**
       * Gets account number and sequence from the API, creates a sign doc,
       * creates a single signature and assembles the signed transaction.
       *
       * The sign mode (SIGN_MODE_DIRECT or SIGN_MODE_LEGACY_AMINO_JSON) is determined by this client's signer.
       *
       * You can pass signer data (account number, sequence and chain ID) explicitly instead of querying them
       * from the chain. This is needed when signing for a multisig account, but it also allows for offline signing
       * (See the SigningStargateClient.offline constructor).
       */
      async sign(signerAddress, messages, fee, memo, explicitSignerData) {
        let signerData;
        if (explicitSignerData) {
          signerData = explicitSignerData;
        } else {
          const { accountNumber, sequence } = await this.getSequence(signerAddress);
          const chainId = await this.getChainId();
          signerData = {
            accountNumber,
            sequence,
            chainId
          };
        }
        return (0, proto_signing_1.isOfflineDirectSigner)(this.signer) ? this.signDirect(signerAddress, messages, fee, memo, signerData) : this.signAmino(signerAddress, messages, fee, memo, signerData);
      }
      async signAmino(signerAddress, messages, fee, memo, { accountNumber, sequence, chainId }) {
        (0, utils_1.assert)(!(0, proto_signing_1.isOfflineDirectSigner)(this.signer));
        const accountFromSigner = (await this.signer.getAccounts()).find((account) => account.address === signerAddress);
        if (!accountFromSigner) {
          throw new Error("Failed to retrieve account from signer");
        }
        const pubkey = (0, proto_signing_1.encodePubkey)((0, amino_1.encodeSecp256k1Pubkey)(accountFromSigner.pubkey));
        const signMode = signing_1.SignMode.SIGN_MODE_LEGACY_AMINO_JSON;
        const msgs = messages.map((msg) => this.aminoTypes.toAmino(msg));
        const signDoc = (0, amino_1.makeSignDoc)(msgs, fee, chainId, memo, accountNumber, sequence);
        const { signature, signed } = await this.signer.signAmino(signerAddress, signDoc);
        const signedTxBody = {
          messages: signed.msgs.map((msg) => this.aminoTypes.fromAmino(msg)),
          memo: signed.memo
        };
        const signedTxBodyEncodeObject = {
          typeUrl: "/cosmos.tx.v1beta1.TxBody",
          value: signedTxBody
        };
        const signedTxBodyBytes = this.registry.encode(signedTxBodyEncodeObject);
        const signedGasLimit = math_1.Int53.fromString(signed.fee.gas).toNumber();
        const signedSequence = math_1.Int53.fromString(signed.sequence).toNumber();
        const signedAuthInfoBytes = (0, proto_signing_1.makeAuthInfoBytes)([{ pubkey, sequence: signedSequence }], signed.fee.amount, signedGasLimit, signed.fee.granter, signed.fee.payer, signMode);
        return tx_3.TxRaw.fromPartial({
          bodyBytes: signedTxBodyBytes,
          authInfoBytes: signedAuthInfoBytes,
          signatures: [(0, encoding_1.fromBase64)(signature.signature)]
        });
      }
      async signDirect(signerAddress, messages, fee, memo, { accountNumber, sequence, chainId }) {
        (0, utils_1.assert)((0, proto_signing_1.isOfflineDirectSigner)(this.signer));
        const accountFromSigner = (await this.signer.getAccounts()).find((account) => account.address === signerAddress);
        if (!accountFromSigner) {
          throw new Error("Failed to retrieve account from signer");
        }
        const pubkey = (0, proto_signing_1.encodePubkey)((0, amino_1.encodeSecp256k1Pubkey)(accountFromSigner.pubkey));
        const txBodyEncodeObject = {
          typeUrl: "/cosmos.tx.v1beta1.TxBody",
          value: {
            messages,
            memo
          }
        };
        const txBodyBytes = this.registry.encode(txBodyEncodeObject);
        const gasLimit = math_1.Int53.fromString(fee.gas).toNumber();
        const authInfoBytes = (0, proto_signing_1.makeAuthInfoBytes)([{ pubkey, sequence }], fee.amount, gasLimit, fee.granter, fee.payer);
        const signDoc = (0, proto_signing_1.makeSignDoc)(txBodyBytes, authInfoBytes, chainId, accountNumber);
        const { signature, signed } = await this.signer.signDirect(signerAddress, signDoc);
        return tx_3.TxRaw.fromPartial({
          bodyBytes: signed.bodyBytes,
          authInfoBytes: signed.authInfoBytes,
          signatures: [(0, encoding_1.fromBase64)(signature.signature)]
        });
      }
    };
    exports.SigningStargateClient = SigningStargateClient;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/index.js
var require_build12 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/@cosmjs/stargate/build/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.setupAuthExtension = exports.isMsgWithdrawDelegatorRewardEncodeObject = exports.isMsgVoteWeightedEncodeObject = exports.isMsgVoteEncodeObject = exports.isMsgUndelegateEncodeObject = exports.isMsgTransferEncodeObject = exports.isMsgSubmitProposalEncodeObject = exports.isMsgSendEncodeObject = exports.isMsgEditValidatorEncodeObject = exports.isMsgDepositEncodeObject = exports.isMsgDelegateEncodeObject = exports.isMsgCreateValidatorEncodeObject = exports.isMsgBeginRedelegateEncodeObject = exports.isAminoMsgWithdrawValidatorCommission = exports.isAminoMsgWithdrawDelegatorReward = exports.isAminoMsgVoteWeighted = exports.isAminoMsgVote = exports.isAminoMsgVerifyInvariant = exports.isAminoMsgUnjail = exports.isAminoMsgUndelegate = exports.isAminoMsgTransfer = exports.isAminoMsgSubmitProposal = exports.isAminoMsgSubmitEvidence = exports.isAminoMsgSetWithdrawAddress = exports.isAminoMsgSend = exports.isAminoMsgMultiSend = exports.isAminoMsgFundCommunityPool = exports.isAminoMsgEditValidator = exports.isAminoMsgDeposit = exports.isAminoMsgDelegate = exports.isAminoMsgCreateVestingAccount = exports.isAminoMsgCreateValidator = exports.isAminoMsgBeginRedelegate = exports.createVestingAminoConverters = exports.createStakingAminoConverters = exports.createSlashingAminoConverters = exports.createIbcAminoConverters = exports.createGovAminoConverters = exports.createFeegrantAminoConverters = exports.createEvidenceAminoConverters = exports.createDistributionAminoConverters = exports.createCrysisAminoConverters = exports.createBankAminoConverters = exports.createAuthzAminoConverters = exports.logs = exports.GasPrice = exports.calculateFee = exports.fromTendermintEvent = exports.AminoTypes = exports.accountFromAny = void 0;
    exports.parseCoins = exports.makeCosmoshubPath = exports.coins = exports.coin = exports.TimeoutError = exports.StargateClient = exports.isDeliverTxSuccess = exports.isDeliverTxFailure = exports.BroadcastTxError = exports.assertIsDeliverTxSuccess = exports.assertIsDeliverTxFailure = exports.SigningStargateClient = exports.defaultRegistryTypes = exports.createDefaultAminoConverters = exports.isSearchByTagsQuery = exports.isSearchBySentFromOrToQuery = exports.isSearchByHeightQuery = exports.QueryClient = exports.decodeCosmosSdkDecFromProto = exports.createProtobufRpcClient = exports.createPagination = exports.makeMultisignedTxBytes = exports.makeMultisignedTx = exports.setupTxExtension = exports.setupStakingExtension = exports.setupSlashingExtension = exports.setupMintExtension = exports.setupIbcExtension = exports.setupGovExtension = exports.setupFeegrantExtension = exports.setupDistributionExtension = exports.setupBankExtension = exports.setupAuthzExtension = void 0;
    var accounts_1 = require_accounts();
    Object.defineProperty(exports, "accountFromAny", { enumerable: true, get: function() {
      return accounts_1.accountFromAny;
    } });
    var aminotypes_1 = require_aminotypes();
    Object.defineProperty(exports, "AminoTypes", { enumerable: true, get: function() {
      return aminotypes_1.AminoTypes;
    } });
    var events_1 = require_events();
    Object.defineProperty(exports, "fromTendermintEvent", { enumerable: true, get: function() {
      return events_1.fromTendermintEvent;
    } });
    var fee_1 = require_fee();
    Object.defineProperty(exports, "calculateFee", { enumerable: true, get: function() {
      return fee_1.calculateFee;
    } });
    Object.defineProperty(exports, "GasPrice", { enumerable: true, get: function() {
      return fee_1.GasPrice;
    } });
    exports.logs = __importStar(require_logs());
    var modules_1 = require_modules();
    Object.defineProperty(exports, "createAuthzAminoConverters", { enumerable: true, get: function() {
      return modules_1.createAuthzAminoConverters;
    } });
    Object.defineProperty(exports, "createBankAminoConverters", { enumerable: true, get: function() {
      return modules_1.createBankAminoConverters;
    } });
    Object.defineProperty(exports, "createCrysisAminoConverters", { enumerable: true, get: function() {
      return modules_1.createCrysisAminoConverters;
    } });
    Object.defineProperty(exports, "createDistributionAminoConverters", { enumerable: true, get: function() {
      return modules_1.createDistributionAminoConverters;
    } });
    Object.defineProperty(exports, "createEvidenceAminoConverters", { enumerable: true, get: function() {
      return modules_1.createEvidenceAminoConverters;
    } });
    Object.defineProperty(exports, "createFeegrantAminoConverters", { enumerable: true, get: function() {
      return modules_1.createFeegrantAminoConverters;
    } });
    Object.defineProperty(exports, "createGovAminoConverters", { enumerable: true, get: function() {
      return modules_1.createGovAminoConverters;
    } });
    Object.defineProperty(exports, "createIbcAminoConverters", { enumerable: true, get: function() {
      return modules_1.createIbcAminoConverters;
    } });
    Object.defineProperty(exports, "createSlashingAminoConverters", { enumerable: true, get: function() {
      return modules_1.createSlashingAminoConverters;
    } });
    Object.defineProperty(exports, "createStakingAminoConverters", { enumerable: true, get: function() {
      return modules_1.createStakingAminoConverters;
    } });
    Object.defineProperty(exports, "createVestingAminoConverters", { enumerable: true, get: function() {
      return modules_1.createVestingAminoConverters;
    } });
    Object.defineProperty(exports, "isAminoMsgBeginRedelegate", { enumerable: true, get: function() {
      return modules_1.isAminoMsgBeginRedelegate;
    } });
    Object.defineProperty(exports, "isAminoMsgCreateValidator", { enumerable: true, get: function() {
      return modules_1.isAminoMsgCreateValidator;
    } });
    Object.defineProperty(exports, "isAminoMsgCreateVestingAccount", { enumerable: true, get: function() {
      return modules_1.isAminoMsgCreateVestingAccount;
    } });
    Object.defineProperty(exports, "isAminoMsgDelegate", { enumerable: true, get: function() {
      return modules_1.isAminoMsgDelegate;
    } });
    Object.defineProperty(exports, "isAminoMsgDeposit", { enumerable: true, get: function() {
      return modules_1.isAminoMsgDeposit;
    } });
    Object.defineProperty(exports, "isAminoMsgEditValidator", { enumerable: true, get: function() {
      return modules_1.isAminoMsgEditValidator;
    } });
    Object.defineProperty(exports, "isAminoMsgFundCommunityPool", { enumerable: true, get: function() {
      return modules_1.isAminoMsgFundCommunityPool;
    } });
    Object.defineProperty(exports, "isAminoMsgMultiSend", { enumerable: true, get: function() {
      return modules_1.isAminoMsgMultiSend;
    } });
    Object.defineProperty(exports, "isAminoMsgSend", { enumerable: true, get: function() {
      return modules_1.isAminoMsgSend;
    } });
    Object.defineProperty(exports, "isAminoMsgSetWithdrawAddress", { enumerable: true, get: function() {
      return modules_1.isAminoMsgSetWithdrawAddress;
    } });
    Object.defineProperty(exports, "isAminoMsgSubmitEvidence", { enumerable: true, get: function() {
      return modules_1.isAminoMsgSubmitEvidence;
    } });
    Object.defineProperty(exports, "isAminoMsgSubmitProposal", { enumerable: true, get: function() {
      return modules_1.isAminoMsgSubmitProposal;
    } });
    Object.defineProperty(exports, "isAminoMsgTransfer", { enumerable: true, get: function() {
      return modules_1.isAminoMsgTransfer;
    } });
    Object.defineProperty(exports, "isAminoMsgUndelegate", { enumerable: true, get: function() {
      return modules_1.isAminoMsgUndelegate;
    } });
    Object.defineProperty(exports, "isAminoMsgUnjail", { enumerable: true, get: function() {
      return modules_1.isAminoMsgUnjail;
    } });
    Object.defineProperty(exports, "isAminoMsgVerifyInvariant", { enumerable: true, get: function() {
      return modules_1.isAminoMsgVerifyInvariant;
    } });
    Object.defineProperty(exports, "isAminoMsgVote", { enumerable: true, get: function() {
      return modules_1.isAminoMsgVote;
    } });
    Object.defineProperty(exports, "isAminoMsgVoteWeighted", { enumerable: true, get: function() {
      return modules_1.isAminoMsgVoteWeighted;
    } });
    Object.defineProperty(exports, "isAminoMsgWithdrawDelegatorReward", { enumerable: true, get: function() {
      return modules_1.isAminoMsgWithdrawDelegatorReward;
    } });
    Object.defineProperty(exports, "isAminoMsgWithdrawValidatorCommission", { enumerable: true, get: function() {
      return modules_1.isAminoMsgWithdrawValidatorCommission;
    } });
    Object.defineProperty(exports, "isMsgBeginRedelegateEncodeObject", { enumerable: true, get: function() {
      return modules_1.isMsgBeginRedelegateEncodeObject;
    } });
    Object.defineProperty(exports, "isMsgCreateValidatorEncodeObject", { enumerable: true, get: function() {
      return modules_1.isMsgCreateValidatorEncodeObject;
    } });
    Object.defineProperty(exports, "isMsgDelegateEncodeObject", { enumerable: true, get: function() {
      return modules_1.isMsgDelegateEncodeObject;
    } });
    Object.defineProperty(exports, "isMsgDepositEncodeObject", { enumerable: true, get: function() {
      return modules_1.isMsgDepositEncodeObject;
    } });
    Object.defineProperty(exports, "isMsgEditValidatorEncodeObject", { enumerable: true, get: function() {
      return modules_1.isMsgEditValidatorEncodeObject;
    } });
    Object.defineProperty(exports, "isMsgSendEncodeObject", { enumerable: true, get: function() {
      return modules_1.isMsgSendEncodeObject;
    } });
    Object.defineProperty(exports, "isMsgSubmitProposalEncodeObject", { enumerable: true, get: function() {
      return modules_1.isMsgSubmitProposalEncodeObject;
    } });
    Object.defineProperty(exports, "isMsgTransferEncodeObject", { enumerable: true, get: function() {
      return modules_1.isMsgTransferEncodeObject;
    } });
    Object.defineProperty(exports, "isMsgUndelegateEncodeObject", { enumerable: true, get: function() {
      return modules_1.isMsgUndelegateEncodeObject;
    } });
    Object.defineProperty(exports, "isMsgVoteEncodeObject", { enumerable: true, get: function() {
      return modules_1.isMsgVoteEncodeObject;
    } });
    Object.defineProperty(exports, "isMsgVoteWeightedEncodeObject", { enumerable: true, get: function() {
      return modules_1.isMsgVoteWeightedEncodeObject;
    } });
    Object.defineProperty(exports, "isMsgWithdrawDelegatorRewardEncodeObject", { enumerable: true, get: function() {
      return modules_1.isMsgWithdrawDelegatorRewardEncodeObject;
    } });
    Object.defineProperty(exports, "setupAuthExtension", { enumerable: true, get: function() {
      return modules_1.setupAuthExtension;
    } });
    Object.defineProperty(exports, "setupAuthzExtension", { enumerable: true, get: function() {
      return modules_1.setupAuthzExtension;
    } });
    Object.defineProperty(exports, "setupBankExtension", { enumerable: true, get: function() {
      return modules_1.setupBankExtension;
    } });
    Object.defineProperty(exports, "setupDistributionExtension", { enumerable: true, get: function() {
      return modules_1.setupDistributionExtension;
    } });
    Object.defineProperty(exports, "setupFeegrantExtension", { enumerable: true, get: function() {
      return modules_1.setupFeegrantExtension;
    } });
    Object.defineProperty(exports, "setupGovExtension", { enumerable: true, get: function() {
      return modules_1.setupGovExtension;
    } });
    Object.defineProperty(exports, "setupIbcExtension", { enumerable: true, get: function() {
      return modules_1.setupIbcExtension;
    } });
    Object.defineProperty(exports, "setupMintExtension", { enumerable: true, get: function() {
      return modules_1.setupMintExtension;
    } });
    Object.defineProperty(exports, "setupSlashingExtension", { enumerable: true, get: function() {
      return modules_1.setupSlashingExtension;
    } });
    Object.defineProperty(exports, "setupStakingExtension", { enumerable: true, get: function() {
      return modules_1.setupStakingExtension;
    } });
    Object.defineProperty(exports, "setupTxExtension", { enumerable: true, get: function() {
      return modules_1.setupTxExtension;
    } });
    var multisignature_1 = require_multisignature();
    Object.defineProperty(exports, "makeMultisignedTx", { enumerable: true, get: function() {
      return multisignature_1.makeMultisignedTx;
    } });
    Object.defineProperty(exports, "makeMultisignedTxBytes", { enumerable: true, get: function() {
      return multisignature_1.makeMultisignedTxBytes;
    } });
    var queryclient_1 = require_queryclient2();
    Object.defineProperty(exports, "createPagination", { enumerable: true, get: function() {
      return queryclient_1.createPagination;
    } });
    Object.defineProperty(exports, "createProtobufRpcClient", { enumerable: true, get: function() {
      return queryclient_1.createProtobufRpcClient;
    } });
    Object.defineProperty(exports, "decodeCosmosSdkDecFromProto", { enumerable: true, get: function() {
      return queryclient_1.decodeCosmosSdkDecFromProto;
    } });
    Object.defineProperty(exports, "QueryClient", { enumerable: true, get: function() {
      return queryclient_1.QueryClient;
    } });
    var search_1 = require_search();
    Object.defineProperty(exports, "isSearchByHeightQuery", { enumerable: true, get: function() {
      return search_1.isSearchByHeightQuery;
    } });
    Object.defineProperty(exports, "isSearchBySentFromOrToQuery", { enumerable: true, get: function() {
      return search_1.isSearchBySentFromOrToQuery;
    } });
    Object.defineProperty(exports, "isSearchByTagsQuery", { enumerable: true, get: function() {
      return search_1.isSearchByTagsQuery;
    } });
    var signingstargateclient_1 = require_signingstargateclient();
    Object.defineProperty(exports, "createDefaultAminoConverters", { enumerable: true, get: function() {
      return signingstargateclient_1.createDefaultAminoConverters;
    } });
    Object.defineProperty(exports, "defaultRegistryTypes", { enumerable: true, get: function() {
      return signingstargateclient_1.defaultRegistryTypes;
    } });
    Object.defineProperty(exports, "SigningStargateClient", { enumerable: true, get: function() {
      return signingstargateclient_1.SigningStargateClient;
    } });
    var stargateclient_1 = require_stargateclient();
    Object.defineProperty(exports, "assertIsDeliverTxFailure", { enumerable: true, get: function() {
      return stargateclient_1.assertIsDeliverTxFailure;
    } });
    Object.defineProperty(exports, "assertIsDeliverTxSuccess", { enumerable: true, get: function() {
      return stargateclient_1.assertIsDeliverTxSuccess;
    } });
    Object.defineProperty(exports, "BroadcastTxError", { enumerable: true, get: function() {
      return stargateclient_1.BroadcastTxError;
    } });
    Object.defineProperty(exports, "isDeliverTxFailure", { enumerable: true, get: function() {
      return stargateclient_1.isDeliverTxFailure;
    } });
    Object.defineProperty(exports, "isDeliverTxSuccess", { enumerable: true, get: function() {
      return stargateclient_1.isDeliverTxSuccess;
    } });
    Object.defineProperty(exports, "StargateClient", { enumerable: true, get: function() {
      return stargateclient_1.StargateClient;
    } });
    Object.defineProperty(exports, "TimeoutError", { enumerable: true, get: function() {
      return stargateclient_1.TimeoutError;
    } });
    var proto_signing_1 = require_build7();
    Object.defineProperty(exports, "coin", { enumerable: true, get: function() {
      return proto_signing_1.coin;
    } });
    Object.defineProperty(exports, "coins", { enumerable: true, get: function() {
      return proto_signing_1.coins;
    } });
    Object.defineProperty(exports, "makeCosmoshubPath", { enumerable: true, get: function() {
      return proto_signing_1.makeCosmoshubPath;
    } });
    Object.defineProperty(exports, "parseCoins", { enumerable: true, get: function() {
      return proto_signing_1.parseCoins;
    } });
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmwasm/wasm/v1/types.js
var require_types6 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmwasm/wasm/v1/types.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Model = exports.AbsoluteTxPosition = exports.ContractCodeHistoryEntry = exports.ContractInfo = exports.CodeInfo = exports.Params = exports.AccessConfig = exports.AccessTypeParam = exports.contractCodeHistoryOperationTypeToJSON = exports.contractCodeHistoryOperationTypeFromJSON = exports.ContractCodeHistoryOperationType = exports.accessTypeToJSON = exports.accessTypeFromJSON = exports.AccessType = exports.protobufPackage = void 0;
    var any_1 = require_any();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmwasm.wasm.v1";
    var AccessType;
    (function(AccessType2) {
      AccessType2[AccessType2["ACCESS_TYPE_UNSPECIFIED"] = 0] = "ACCESS_TYPE_UNSPECIFIED";
      AccessType2[AccessType2["ACCESS_TYPE_NOBODY"] = 1] = "ACCESS_TYPE_NOBODY";
      AccessType2[AccessType2["ACCESS_TYPE_ONLY_ADDRESS"] = 2] = "ACCESS_TYPE_ONLY_ADDRESS";
      AccessType2[AccessType2["ACCESS_TYPE_EVERYBODY"] = 3] = "ACCESS_TYPE_EVERYBODY";
      AccessType2[AccessType2["ACCESS_TYPE_ANY_OF_ADDRESSES"] = 4] = "ACCESS_TYPE_ANY_OF_ADDRESSES";
      AccessType2[AccessType2["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
    })(AccessType = exports.AccessType || (exports.AccessType = {}));
    function accessTypeFromJSON(object) {
      switch (object) {
        case 0:
        case "ACCESS_TYPE_UNSPECIFIED":
          return AccessType.ACCESS_TYPE_UNSPECIFIED;
        case 1:
        case "ACCESS_TYPE_NOBODY":
          return AccessType.ACCESS_TYPE_NOBODY;
        case 2:
        case "ACCESS_TYPE_ONLY_ADDRESS":
          return AccessType.ACCESS_TYPE_ONLY_ADDRESS;
        case 3:
        case "ACCESS_TYPE_EVERYBODY":
          return AccessType.ACCESS_TYPE_EVERYBODY;
        case 4:
        case "ACCESS_TYPE_ANY_OF_ADDRESSES":
          return AccessType.ACCESS_TYPE_ANY_OF_ADDRESSES;
        case -1:
        case "UNRECOGNIZED":
        default:
          return AccessType.UNRECOGNIZED;
      }
    }
    exports.accessTypeFromJSON = accessTypeFromJSON;
    function accessTypeToJSON(object) {
      switch (object) {
        case AccessType.ACCESS_TYPE_UNSPECIFIED:
          return "ACCESS_TYPE_UNSPECIFIED";
        case AccessType.ACCESS_TYPE_NOBODY:
          return "ACCESS_TYPE_NOBODY";
        case AccessType.ACCESS_TYPE_ONLY_ADDRESS:
          return "ACCESS_TYPE_ONLY_ADDRESS";
        case AccessType.ACCESS_TYPE_EVERYBODY:
          return "ACCESS_TYPE_EVERYBODY";
        case AccessType.ACCESS_TYPE_ANY_OF_ADDRESSES:
          return "ACCESS_TYPE_ANY_OF_ADDRESSES";
        case AccessType.UNRECOGNIZED:
        default:
          return "UNRECOGNIZED";
      }
    }
    exports.accessTypeToJSON = accessTypeToJSON;
    var ContractCodeHistoryOperationType;
    (function(ContractCodeHistoryOperationType2) {
      ContractCodeHistoryOperationType2[ContractCodeHistoryOperationType2["CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED"] = 0] = "CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED";
      ContractCodeHistoryOperationType2[ContractCodeHistoryOperationType2["CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT"] = 1] = "CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT";
      ContractCodeHistoryOperationType2[ContractCodeHistoryOperationType2["CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE"] = 2] = "CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE";
      ContractCodeHistoryOperationType2[ContractCodeHistoryOperationType2["CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS"] = 3] = "CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS";
      ContractCodeHistoryOperationType2[ContractCodeHistoryOperationType2["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
    })(ContractCodeHistoryOperationType = exports.ContractCodeHistoryOperationType || (exports.ContractCodeHistoryOperationType = {}));
    function contractCodeHistoryOperationTypeFromJSON(object) {
      switch (object) {
        case 0:
        case "CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED":
          return ContractCodeHistoryOperationType.CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED;
        case 1:
        case "CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT":
          return ContractCodeHistoryOperationType.CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT;
        case 2:
        case "CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE":
          return ContractCodeHistoryOperationType.CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE;
        case 3:
        case "CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS":
          return ContractCodeHistoryOperationType.CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS;
        case -1:
        case "UNRECOGNIZED":
        default:
          return ContractCodeHistoryOperationType.UNRECOGNIZED;
      }
    }
    exports.contractCodeHistoryOperationTypeFromJSON = contractCodeHistoryOperationTypeFromJSON;
    function contractCodeHistoryOperationTypeToJSON(object) {
      switch (object) {
        case ContractCodeHistoryOperationType.CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED:
          return "CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED";
        case ContractCodeHistoryOperationType.CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT:
          return "CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT";
        case ContractCodeHistoryOperationType.CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE:
          return "CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE";
        case ContractCodeHistoryOperationType.CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS:
          return "CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS";
        case ContractCodeHistoryOperationType.UNRECOGNIZED:
        default:
          return "UNRECOGNIZED";
      }
    }
    exports.contractCodeHistoryOperationTypeToJSON = contractCodeHistoryOperationTypeToJSON;
    function createBaseAccessTypeParam() {
      return {
        value: 0
      };
    }
    exports.AccessTypeParam = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.value !== 0) {
          writer.uint32(8).int32(message.value);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseAccessTypeParam();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.value = reader.int32();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          value: (0, helpers_1.isSet)(object.value) ? accessTypeFromJSON(object.value) : 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.value !== void 0 && (obj.value = accessTypeToJSON(message.value));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseAccessTypeParam();
        message.value = object.value ?? 0;
        return message;
      }
    };
    function createBaseAccessConfig() {
      return {
        permission: 0,
        address: "",
        addresses: []
      };
    }
    exports.AccessConfig = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.permission !== 0) {
          writer.uint32(8).int32(message.permission);
        }
        if (message.address !== "") {
          writer.uint32(18).string(message.address);
        }
        for (const v3 of message.addresses) {
          writer.uint32(26).string(v3);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseAccessConfig();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.permission = reader.int32();
              break;
            case 2:
              message.address = reader.string();
              break;
            case 3:
              message.addresses.push(reader.string());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          permission: (0, helpers_1.isSet)(object.permission) ? accessTypeFromJSON(object.permission) : 0,
          address: (0, helpers_1.isSet)(object.address) ? String(object.address) : "",
          addresses: Array.isArray(object == null ? void 0 : object.addresses) ? object.addresses.map((e2) => String(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.permission !== void 0 && (obj.permission = accessTypeToJSON(message.permission));
        message.address !== void 0 && (obj.address = message.address);
        if (message.addresses) {
          obj.addresses = message.addresses.map((e2) => e2);
        } else {
          obj.addresses = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseAccessConfig();
        message.permission = object.permission ?? 0;
        message.address = object.address ?? "";
        message.addresses = ((_a = object.addresses) == null ? void 0 : _a.map((e2) => e2)) || [];
        return message;
      }
    };
    function createBaseParams() {
      return {
        codeUploadAccess: void 0,
        instantiateDefaultPermission: 0
      };
    }
    exports.Params = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.codeUploadAccess !== void 0) {
          exports.AccessConfig.encode(message.codeUploadAccess, writer.uint32(10).fork()).ldelim();
        }
        if (message.instantiateDefaultPermission !== 0) {
          writer.uint32(16).int32(message.instantiateDefaultPermission);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseParams();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.codeUploadAccess = exports.AccessConfig.decode(reader, reader.uint32());
              break;
            case 2:
              message.instantiateDefaultPermission = reader.int32();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          codeUploadAccess: (0, helpers_1.isSet)(object.codeUploadAccess) ? exports.AccessConfig.fromJSON(object.codeUploadAccess) : void 0,
          instantiateDefaultPermission: (0, helpers_1.isSet)(object.instantiateDefaultPermission) ? accessTypeFromJSON(object.instantiateDefaultPermission) : 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.codeUploadAccess !== void 0 && (obj.codeUploadAccess = message.codeUploadAccess ? exports.AccessConfig.toJSON(message.codeUploadAccess) : void 0);
        message.instantiateDefaultPermission !== void 0 && (obj.instantiateDefaultPermission = accessTypeToJSON(message.instantiateDefaultPermission));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseParams();
        message.codeUploadAccess = object.codeUploadAccess !== void 0 && object.codeUploadAccess !== null ? exports.AccessConfig.fromPartial(object.codeUploadAccess) : void 0;
        message.instantiateDefaultPermission = object.instantiateDefaultPermission ?? 0;
        return message;
      }
    };
    function createBaseCodeInfo() {
      return {
        codeHash: new Uint8Array(),
        creator: "",
        instantiateConfig: void 0
      };
    }
    exports.CodeInfo = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.codeHash.length !== 0) {
          writer.uint32(10).bytes(message.codeHash);
        }
        if (message.creator !== "") {
          writer.uint32(18).string(message.creator);
        }
        if (message.instantiateConfig !== void 0) {
          exports.AccessConfig.encode(message.instantiateConfig, writer.uint32(42).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseCodeInfo();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.codeHash = reader.bytes();
              break;
            case 2:
              message.creator = reader.string();
              break;
            case 5:
              message.instantiateConfig = exports.AccessConfig.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          codeHash: (0, helpers_1.isSet)(object.codeHash) ? (0, helpers_1.bytesFromBase64)(object.codeHash) : new Uint8Array(),
          creator: (0, helpers_1.isSet)(object.creator) ? String(object.creator) : "",
          instantiateConfig: (0, helpers_1.isSet)(object.instantiateConfig) ? exports.AccessConfig.fromJSON(object.instantiateConfig) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.codeHash !== void 0 && (obj.codeHash = (0, helpers_1.base64FromBytes)(message.codeHash !== void 0 ? message.codeHash : new Uint8Array()));
        message.creator !== void 0 && (obj.creator = message.creator);
        message.instantiateConfig !== void 0 && (obj.instantiateConfig = message.instantiateConfig ? exports.AccessConfig.toJSON(message.instantiateConfig) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseCodeInfo();
        message.codeHash = object.codeHash ?? new Uint8Array();
        message.creator = object.creator ?? "";
        message.instantiateConfig = object.instantiateConfig !== void 0 && object.instantiateConfig !== null ? exports.AccessConfig.fromPartial(object.instantiateConfig) : void 0;
        return message;
      }
    };
    function createBaseContractInfo() {
      return {
        codeId: helpers_1.Long.UZERO,
        creator: "",
        admin: "",
        label: "",
        created: void 0,
        ibcPortId: "",
        extension: void 0
      };
    }
    exports.ContractInfo = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.codeId.isZero()) {
          writer.uint32(8).uint64(message.codeId);
        }
        if (message.creator !== "") {
          writer.uint32(18).string(message.creator);
        }
        if (message.admin !== "") {
          writer.uint32(26).string(message.admin);
        }
        if (message.label !== "") {
          writer.uint32(34).string(message.label);
        }
        if (message.created !== void 0) {
          exports.AbsoluteTxPosition.encode(message.created, writer.uint32(42).fork()).ldelim();
        }
        if (message.ibcPortId !== "") {
          writer.uint32(50).string(message.ibcPortId);
        }
        if (message.extension !== void 0) {
          any_1.Any.encode(message.extension, writer.uint32(58).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseContractInfo();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.codeId = reader.uint64();
              break;
            case 2:
              message.creator = reader.string();
              break;
            case 3:
              message.admin = reader.string();
              break;
            case 4:
              message.label = reader.string();
              break;
            case 5:
              message.created = exports.AbsoluteTxPosition.decode(reader, reader.uint32());
              break;
            case 6:
              message.ibcPortId = reader.string();
              break;
            case 7:
              message.extension = any_1.Any.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          codeId: (0, helpers_1.isSet)(object.codeId) ? helpers_1.Long.fromValue(object.codeId) : helpers_1.Long.UZERO,
          creator: (0, helpers_1.isSet)(object.creator) ? String(object.creator) : "",
          admin: (0, helpers_1.isSet)(object.admin) ? String(object.admin) : "",
          label: (0, helpers_1.isSet)(object.label) ? String(object.label) : "",
          created: (0, helpers_1.isSet)(object.created) ? exports.AbsoluteTxPosition.fromJSON(object.created) : void 0,
          ibcPortId: (0, helpers_1.isSet)(object.ibcPortId) ? String(object.ibcPortId) : "",
          extension: (0, helpers_1.isSet)(object.extension) ? any_1.Any.fromJSON(object.extension) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.codeId !== void 0 && (obj.codeId = (message.codeId || helpers_1.Long.UZERO).toString());
        message.creator !== void 0 && (obj.creator = message.creator);
        message.admin !== void 0 && (obj.admin = message.admin);
        message.label !== void 0 && (obj.label = message.label);
        message.created !== void 0 && (obj.created = message.created ? exports.AbsoluteTxPosition.toJSON(message.created) : void 0);
        message.ibcPortId !== void 0 && (obj.ibcPortId = message.ibcPortId);
        message.extension !== void 0 && (obj.extension = message.extension ? any_1.Any.toJSON(message.extension) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseContractInfo();
        message.codeId = object.codeId !== void 0 && object.codeId !== null ? helpers_1.Long.fromValue(object.codeId) : helpers_1.Long.UZERO;
        message.creator = object.creator ?? "";
        message.admin = object.admin ?? "";
        message.label = object.label ?? "";
        message.created = object.created !== void 0 && object.created !== null ? exports.AbsoluteTxPosition.fromPartial(object.created) : void 0;
        message.ibcPortId = object.ibcPortId ?? "";
        message.extension = object.extension !== void 0 && object.extension !== null ? any_1.Any.fromPartial(object.extension) : void 0;
        return message;
      }
    };
    function createBaseContractCodeHistoryEntry() {
      return {
        operation: 0,
        codeId: helpers_1.Long.UZERO,
        updated: void 0,
        msg: new Uint8Array()
      };
    }
    exports.ContractCodeHistoryEntry = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.operation !== 0) {
          writer.uint32(8).int32(message.operation);
        }
        if (!message.codeId.isZero()) {
          writer.uint32(16).uint64(message.codeId);
        }
        if (message.updated !== void 0) {
          exports.AbsoluteTxPosition.encode(message.updated, writer.uint32(26).fork()).ldelim();
        }
        if (message.msg.length !== 0) {
          writer.uint32(34).bytes(message.msg);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseContractCodeHistoryEntry();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.operation = reader.int32();
              break;
            case 2:
              message.codeId = reader.uint64();
              break;
            case 3:
              message.updated = exports.AbsoluteTxPosition.decode(reader, reader.uint32());
              break;
            case 4:
              message.msg = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          operation: (0, helpers_1.isSet)(object.operation) ? contractCodeHistoryOperationTypeFromJSON(object.operation) : 0,
          codeId: (0, helpers_1.isSet)(object.codeId) ? helpers_1.Long.fromValue(object.codeId) : helpers_1.Long.UZERO,
          updated: (0, helpers_1.isSet)(object.updated) ? exports.AbsoluteTxPosition.fromJSON(object.updated) : void 0,
          msg: (0, helpers_1.isSet)(object.msg) ? (0, helpers_1.bytesFromBase64)(object.msg) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.operation !== void 0 && (obj.operation = contractCodeHistoryOperationTypeToJSON(message.operation));
        message.codeId !== void 0 && (obj.codeId = (message.codeId || helpers_1.Long.UZERO).toString());
        message.updated !== void 0 && (obj.updated = message.updated ? exports.AbsoluteTxPosition.toJSON(message.updated) : void 0);
        message.msg !== void 0 && (obj.msg = (0, helpers_1.base64FromBytes)(message.msg !== void 0 ? message.msg : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseContractCodeHistoryEntry();
        message.operation = object.operation ?? 0;
        message.codeId = object.codeId !== void 0 && object.codeId !== null ? helpers_1.Long.fromValue(object.codeId) : helpers_1.Long.UZERO;
        message.updated = object.updated !== void 0 && object.updated !== null ? exports.AbsoluteTxPosition.fromPartial(object.updated) : void 0;
        message.msg = object.msg ?? new Uint8Array();
        return message;
      }
    };
    function createBaseAbsoluteTxPosition() {
      return {
        blockHeight: helpers_1.Long.UZERO,
        txIndex: helpers_1.Long.UZERO
      };
    }
    exports.AbsoluteTxPosition = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.blockHeight.isZero()) {
          writer.uint32(8).uint64(message.blockHeight);
        }
        if (!message.txIndex.isZero()) {
          writer.uint32(16).uint64(message.txIndex);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseAbsoluteTxPosition();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.blockHeight = reader.uint64();
              break;
            case 2:
              message.txIndex = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          blockHeight: (0, helpers_1.isSet)(object.blockHeight) ? helpers_1.Long.fromValue(object.blockHeight) : helpers_1.Long.UZERO,
          txIndex: (0, helpers_1.isSet)(object.txIndex) ? helpers_1.Long.fromValue(object.txIndex) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.blockHeight !== void 0 && (obj.blockHeight = (message.blockHeight || helpers_1.Long.UZERO).toString());
        message.txIndex !== void 0 && (obj.txIndex = (message.txIndex || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseAbsoluteTxPosition();
        message.blockHeight = object.blockHeight !== void 0 && object.blockHeight !== null ? helpers_1.Long.fromValue(object.blockHeight) : helpers_1.Long.UZERO;
        message.txIndex = object.txIndex !== void 0 && object.txIndex !== null ? helpers_1.Long.fromValue(object.txIndex) : helpers_1.Long.UZERO;
        return message;
      }
    };
    function createBaseModel() {
      return {
        key: new Uint8Array(),
        value: new Uint8Array()
      };
    }
    exports.Model = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.key.length !== 0) {
          writer.uint32(10).bytes(message.key);
        }
        if (message.value.length !== 0) {
          writer.uint32(18).bytes(message.value);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseModel();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.key = reader.bytes();
              break;
            case 2:
              message.value = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          key: (0, helpers_1.isSet)(object.key) ? (0, helpers_1.bytesFromBase64)(object.key) : new Uint8Array(),
          value: (0, helpers_1.isSet)(object.value) ? (0, helpers_1.bytesFromBase64)(object.value) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.key !== void 0 && (obj.key = (0, helpers_1.base64FromBytes)(message.key !== void 0 ? message.key : new Uint8Array()));
        message.value !== void 0 && (obj.value = (0, helpers_1.base64FromBytes)(message.value !== void 0 ? message.value : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseModel();
        message.key = object.key ?? new Uint8Array();
        message.value = object.value ?? new Uint8Array();
        return message;
      }
    };
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/build/modules/wasm/aminomessages.js
var require_aminomessages12 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/build/modules/wasm/aminomessages.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createWasmAminoConverters = void 0;
    var encoding_1 = require_build2();
    var long_1 = __importDefault(require_long());
    function createWasmAminoConverters() {
      return {
        "/cosmwasm.wasm.v1.MsgStoreCode": {
          aminoType: "wasm/MsgStoreCode",
          toAmino: ({ sender, wasmByteCode }) => ({
            sender,
            wasm_byte_code: (0, encoding_1.toBase64)(wasmByteCode)
          }),
          fromAmino: ({ sender, wasm_byte_code }) => ({
            sender,
            wasmByteCode: (0, encoding_1.fromBase64)(wasm_byte_code),
            instantiatePermission: void 0
          })
        },
        "/cosmwasm.wasm.v1.MsgInstantiateContract": {
          aminoType: "wasm/MsgInstantiateContract",
          toAmino: ({ sender, codeId, label, msg, funds, admin }) => ({
            sender,
            code_id: codeId.toString(),
            label,
            msg: JSON.parse((0, encoding_1.fromUtf8)(msg)),
            funds,
            admin: admin || void 0
          }),
          fromAmino: ({ sender, code_id, label, msg, funds, admin }) => ({
            sender,
            codeId: long_1.default.fromString(code_id),
            label,
            msg: (0, encoding_1.toUtf8)(JSON.stringify(msg)),
            funds: [...funds],
            admin: admin ?? ""
          })
        },
        "/cosmwasm.wasm.v1.MsgUpdateAdmin": {
          aminoType: "wasm/MsgUpdateAdmin",
          toAmino: ({ sender, newAdmin, contract }) => ({
            sender,
            new_admin: newAdmin,
            contract
          }),
          fromAmino: ({ sender, new_admin, contract }) => ({
            sender,
            newAdmin: new_admin,
            contract
          })
        },
        "/cosmwasm.wasm.v1.MsgClearAdmin": {
          aminoType: "wasm/MsgClearAdmin",
          toAmino: ({ sender, contract }) => ({
            sender,
            contract
          }),
          fromAmino: ({ sender, contract }) => ({
            sender,
            contract
          })
        },
        "/cosmwasm.wasm.v1.MsgExecuteContract": {
          aminoType: "wasm/MsgExecuteContract",
          toAmino: ({ sender, contract, msg, funds }) => ({
            sender,
            contract,
            msg: JSON.parse((0, encoding_1.fromUtf8)(msg)),
            funds
          }),
          fromAmino: ({ sender, contract, msg, funds }) => ({
            sender,
            contract,
            msg: (0, encoding_1.toUtf8)(JSON.stringify(msg)),
            funds: [...funds]
          })
        },
        "/cosmwasm.wasm.v1.MsgMigrateContract": {
          aminoType: "wasm/MsgMigrateContract",
          toAmino: ({ sender, contract, codeId, msg }) => ({
            sender,
            contract,
            code_id: codeId.toString(),
            msg: JSON.parse((0, encoding_1.fromUtf8)(msg))
          }),
          fromAmino: ({ sender, contract, code_id, msg }) => ({
            sender,
            contract,
            codeId: long_1.default.fromString(code_id),
            msg: (0, encoding_1.toUtf8)(JSON.stringify(msg))
          })
        }
      };
    }
    exports.createWasmAminoConverters = createWasmAminoConverters;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmwasm/wasm/v1/tx.js
var require_tx13 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmwasm/wasm/v1/tx.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.MsgClientImpl = exports.MsgUpdateInstantiateConfigResponse = exports.MsgUpdateInstantiateConfig = exports.MsgClearAdminResponse = exports.MsgClearAdmin = exports.MsgUpdateAdminResponse = exports.MsgUpdateAdmin = exports.MsgMigrateContractResponse = exports.MsgMigrateContract = exports.MsgExecuteContractResponse = exports.MsgExecuteContract = exports.MsgInstantiateContract2Response = exports.MsgInstantiateContractResponse = exports.MsgInstantiateContract2 = exports.MsgInstantiateContract = exports.MsgStoreCodeResponse = exports.MsgStoreCode = exports.protobufPackage = void 0;
    var types_1 = require_types6();
    var coin_1 = require_coin();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmwasm.wasm.v1";
    function createBaseMsgStoreCode() {
      return {
        sender: "",
        wasmByteCode: new Uint8Array(),
        instantiatePermission: void 0
      };
    }
    exports.MsgStoreCode = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.sender !== "") {
          writer.uint32(10).string(message.sender);
        }
        if (message.wasmByteCode.length !== 0) {
          writer.uint32(18).bytes(message.wasmByteCode);
        }
        if (message.instantiatePermission !== void 0) {
          types_1.AccessConfig.encode(message.instantiatePermission, writer.uint32(42).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgStoreCode();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.sender = reader.string();
              break;
            case 2:
              message.wasmByteCode = reader.bytes();
              break;
            case 5:
              message.instantiatePermission = types_1.AccessConfig.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          sender: (0, helpers_1.isSet)(object.sender) ? String(object.sender) : "",
          wasmByteCode: (0, helpers_1.isSet)(object.wasmByteCode) ? (0, helpers_1.bytesFromBase64)(object.wasmByteCode) : new Uint8Array(),
          instantiatePermission: (0, helpers_1.isSet)(object.instantiatePermission) ? types_1.AccessConfig.fromJSON(object.instantiatePermission) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.sender !== void 0 && (obj.sender = message.sender);
        message.wasmByteCode !== void 0 && (obj.wasmByteCode = (0, helpers_1.base64FromBytes)(message.wasmByteCode !== void 0 ? message.wasmByteCode : new Uint8Array()));
        message.instantiatePermission !== void 0 && (obj.instantiatePermission = message.instantiatePermission ? types_1.AccessConfig.toJSON(message.instantiatePermission) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgStoreCode();
        message.sender = object.sender ?? "";
        message.wasmByteCode = object.wasmByteCode ?? new Uint8Array();
        message.instantiatePermission = object.instantiatePermission !== void 0 && object.instantiatePermission !== null ? types_1.AccessConfig.fromPartial(object.instantiatePermission) : void 0;
        return message;
      }
    };
    function createBaseMsgStoreCodeResponse() {
      return {
        codeId: helpers_1.Long.UZERO,
        checksum: new Uint8Array()
      };
    }
    exports.MsgStoreCodeResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.codeId.isZero()) {
          writer.uint32(8).uint64(message.codeId);
        }
        if (message.checksum.length !== 0) {
          writer.uint32(18).bytes(message.checksum);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgStoreCodeResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.codeId = reader.uint64();
              break;
            case 2:
              message.checksum = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          codeId: (0, helpers_1.isSet)(object.codeId) ? helpers_1.Long.fromValue(object.codeId) : helpers_1.Long.UZERO,
          checksum: (0, helpers_1.isSet)(object.checksum) ? (0, helpers_1.bytesFromBase64)(object.checksum) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.codeId !== void 0 && (obj.codeId = (message.codeId || helpers_1.Long.UZERO).toString());
        message.checksum !== void 0 && (obj.checksum = (0, helpers_1.base64FromBytes)(message.checksum !== void 0 ? message.checksum : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgStoreCodeResponse();
        message.codeId = object.codeId !== void 0 && object.codeId !== null ? helpers_1.Long.fromValue(object.codeId) : helpers_1.Long.UZERO;
        message.checksum = object.checksum ?? new Uint8Array();
        return message;
      }
    };
    function createBaseMsgInstantiateContract() {
      return {
        sender: "",
        admin: "",
        codeId: helpers_1.Long.UZERO,
        label: "",
        msg: new Uint8Array(),
        funds: []
      };
    }
    exports.MsgInstantiateContract = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.sender !== "") {
          writer.uint32(10).string(message.sender);
        }
        if (message.admin !== "") {
          writer.uint32(18).string(message.admin);
        }
        if (!message.codeId.isZero()) {
          writer.uint32(24).uint64(message.codeId);
        }
        if (message.label !== "") {
          writer.uint32(34).string(message.label);
        }
        if (message.msg.length !== 0) {
          writer.uint32(42).bytes(message.msg);
        }
        for (const v3 of message.funds) {
          coin_1.Coin.encode(v3, writer.uint32(50).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgInstantiateContract();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.sender = reader.string();
              break;
            case 2:
              message.admin = reader.string();
              break;
            case 3:
              message.codeId = reader.uint64();
              break;
            case 4:
              message.label = reader.string();
              break;
            case 5:
              message.msg = reader.bytes();
              break;
            case 6:
              message.funds.push(coin_1.Coin.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          sender: (0, helpers_1.isSet)(object.sender) ? String(object.sender) : "",
          admin: (0, helpers_1.isSet)(object.admin) ? String(object.admin) : "",
          codeId: (0, helpers_1.isSet)(object.codeId) ? helpers_1.Long.fromValue(object.codeId) : helpers_1.Long.UZERO,
          label: (0, helpers_1.isSet)(object.label) ? String(object.label) : "",
          msg: (0, helpers_1.isSet)(object.msg) ? (0, helpers_1.bytesFromBase64)(object.msg) : new Uint8Array(),
          funds: Array.isArray(object == null ? void 0 : object.funds) ? object.funds.map((e2) => coin_1.Coin.fromJSON(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.sender !== void 0 && (obj.sender = message.sender);
        message.admin !== void 0 && (obj.admin = message.admin);
        message.codeId !== void 0 && (obj.codeId = (message.codeId || helpers_1.Long.UZERO).toString());
        message.label !== void 0 && (obj.label = message.label);
        message.msg !== void 0 && (obj.msg = (0, helpers_1.base64FromBytes)(message.msg !== void 0 ? message.msg : new Uint8Array()));
        if (message.funds) {
          obj.funds = message.funds.map((e2) => e2 ? coin_1.Coin.toJSON(e2) : void 0);
        } else {
          obj.funds = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseMsgInstantiateContract();
        message.sender = object.sender ?? "";
        message.admin = object.admin ?? "";
        message.codeId = object.codeId !== void 0 && object.codeId !== null ? helpers_1.Long.fromValue(object.codeId) : helpers_1.Long.UZERO;
        message.label = object.label ?? "";
        message.msg = object.msg ?? new Uint8Array();
        message.funds = ((_a = object.funds) == null ? void 0 : _a.map((e2) => coin_1.Coin.fromPartial(e2))) || [];
        return message;
      }
    };
    function createBaseMsgInstantiateContract2() {
      return {
        sender: "",
        admin: "",
        codeId: helpers_1.Long.UZERO,
        label: "",
        msg: new Uint8Array(),
        funds: [],
        salt: new Uint8Array(),
        fixMsg: false
      };
    }
    exports.MsgInstantiateContract2 = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.sender !== "") {
          writer.uint32(10).string(message.sender);
        }
        if (message.admin !== "") {
          writer.uint32(18).string(message.admin);
        }
        if (!message.codeId.isZero()) {
          writer.uint32(24).uint64(message.codeId);
        }
        if (message.label !== "") {
          writer.uint32(34).string(message.label);
        }
        if (message.msg.length !== 0) {
          writer.uint32(42).bytes(message.msg);
        }
        for (const v3 of message.funds) {
          coin_1.Coin.encode(v3, writer.uint32(50).fork()).ldelim();
        }
        if (message.salt.length !== 0) {
          writer.uint32(58).bytes(message.salt);
        }
        if (message.fixMsg === true) {
          writer.uint32(64).bool(message.fixMsg);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgInstantiateContract2();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.sender = reader.string();
              break;
            case 2:
              message.admin = reader.string();
              break;
            case 3:
              message.codeId = reader.uint64();
              break;
            case 4:
              message.label = reader.string();
              break;
            case 5:
              message.msg = reader.bytes();
              break;
            case 6:
              message.funds.push(coin_1.Coin.decode(reader, reader.uint32()));
              break;
            case 7:
              message.salt = reader.bytes();
              break;
            case 8:
              message.fixMsg = reader.bool();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          sender: (0, helpers_1.isSet)(object.sender) ? String(object.sender) : "",
          admin: (0, helpers_1.isSet)(object.admin) ? String(object.admin) : "",
          codeId: (0, helpers_1.isSet)(object.codeId) ? helpers_1.Long.fromValue(object.codeId) : helpers_1.Long.UZERO,
          label: (0, helpers_1.isSet)(object.label) ? String(object.label) : "",
          msg: (0, helpers_1.isSet)(object.msg) ? (0, helpers_1.bytesFromBase64)(object.msg) : new Uint8Array(),
          funds: Array.isArray(object == null ? void 0 : object.funds) ? object.funds.map((e2) => coin_1.Coin.fromJSON(e2)) : [],
          salt: (0, helpers_1.isSet)(object.salt) ? (0, helpers_1.bytesFromBase64)(object.salt) : new Uint8Array(),
          fixMsg: (0, helpers_1.isSet)(object.fixMsg) ? Boolean(object.fixMsg) : false
        };
      },
      toJSON(message) {
        const obj = {};
        message.sender !== void 0 && (obj.sender = message.sender);
        message.admin !== void 0 && (obj.admin = message.admin);
        message.codeId !== void 0 && (obj.codeId = (message.codeId || helpers_1.Long.UZERO).toString());
        message.label !== void 0 && (obj.label = message.label);
        message.msg !== void 0 && (obj.msg = (0, helpers_1.base64FromBytes)(message.msg !== void 0 ? message.msg : new Uint8Array()));
        if (message.funds) {
          obj.funds = message.funds.map((e2) => e2 ? coin_1.Coin.toJSON(e2) : void 0);
        } else {
          obj.funds = [];
        }
        message.salt !== void 0 && (obj.salt = (0, helpers_1.base64FromBytes)(message.salt !== void 0 ? message.salt : new Uint8Array()));
        message.fixMsg !== void 0 && (obj.fixMsg = message.fixMsg);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseMsgInstantiateContract2();
        message.sender = object.sender ?? "";
        message.admin = object.admin ?? "";
        message.codeId = object.codeId !== void 0 && object.codeId !== null ? helpers_1.Long.fromValue(object.codeId) : helpers_1.Long.UZERO;
        message.label = object.label ?? "";
        message.msg = object.msg ?? new Uint8Array();
        message.funds = ((_a = object.funds) == null ? void 0 : _a.map((e2) => coin_1.Coin.fromPartial(e2))) || [];
        message.salt = object.salt ?? new Uint8Array();
        message.fixMsg = object.fixMsg ?? false;
        return message;
      }
    };
    function createBaseMsgInstantiateContractResponse() {
      return {
        address: "",
        data: new Uint8Array()
      };
    }
    exports.MsgInstantiateContractResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.address !== "") {
          writer.uint32(10).string(message.address);
        }
        if (message.data.length !== 0) {
          writer.uint32(18).bytes(message.data);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgInstantiateContractResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.address = reader.string();
              break;
            case 2:
              message.data = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          address: (0, helpers_1.isSet)(object.address) ? String(object.address) : "",
          data: (0, helpers_1.isSet)(object.data) ? (0, helpers_1.bytesFromBase64)(object.data) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.address !== void 0 && (obj.address = message.address);
        message.data !== void 0 && (obj.data = (0, helpers_1.base64FromBytes)(message.data !== void 0 ? message.data : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgInstantiateContractResponse();
        message.address = object.address ?? "";
        message.data = object.data ?? new Uint8Array();
        return message;
      }
    };
    function createBaseMsgInstantiateContract2Response() {
      return {
        address: "",
        data: new Uint8Array()
      };
    }
    exports.MsgInstantiateContract2Response = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.address !== "") {
          writer.uint32(10).string(message.address);
        }
        if (message.data.length !== 0) {
          writer.uint32(18).bytes(message.data);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgInstantiateContract2Response();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.address = reader.string();
              break;
            case 2:
              message.data = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          address: (0, helpers_1.isSet)(object.address) ? String(object.address) : "",
          data: (0, helpers_1.isSet)(object.data) ? (0, helpers_1.bytesFromBase64)(object.data) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.address !== void 0 && (obj.address = message.address);
        message.data !== void 0 && (obj.data = (0, helpers_1.base64FromBytes)(message.data !== void 0 ? message.data : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgInstantiateContract2Response();
        message.address = object.address ?? "";
        message.data = object.data ?? new Uint8Array();
        return message;
      }
    };
    function createBaseMsgExecuteContract() {
      return {
        sender: "",
        contract: "",
        msg: new Uint8Array(),
        funds: []
      };
    }
    exports.MsgExecuteContract = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.sender !== "") {
          writer.uint32(10).string(message.sender);
        }
        if (message.contract !== "") {
          writer.uint32(18).string(message.contract);
        }
        if (message.msg.length !== 0) {
          writer.uint32(26).bytes(message.msg);
        }
        for (const v3 of message.funds) {
          coin_1.Coin.encode(v3, writer.uint32(42).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgExecuteContract();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.sender = reader.string();
              break;
            case 2:
              message.contract = reader.string();
              break;
            case 3:
              message.msg = reader.bytes();
              break;
            case 5:
              message.funds.push(coin_1.Coin.decode(reader, reader.uint32()));
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          sender: (0, helpers_1.isSet)(object.sender) ? String(object.sender) : "",
          contract: (0, helpers_1.isSet)(object.contract) ? String(object.contract) : "",
          msg: (0, helpers_1.isSet)(object.msg) ? (0, helpers_1.bytesFromBase64)(object.msg) : new Uint8Array(),
          funds: Array.isArray(object == null ? void 0 : object.funds) ? object.funds.map((e2) => coin_1.Coin.fromJSON(e2)) : []
        };
      },
      toJSON(message) {
        const obj = {};
        message.sender !== void 0 && (obj.sender = message.sender);
        message.contract !== void 0 && (obj.contract = message.contract);
        message.msg !== void 0 && (obj.msg = (0, helpers_1.base64FromBytes)(message.msg !== void 0 ? message.msg : new Uint8Array()));
        if (message.funds) {
          obj.funds = message.funds.map((e2) => e2 ? coin_1.Coin.toJSON(e2) : void 0);
        } else {
          obj.funds = [];
        }
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseMsgExecuteContract();
        message.sender = object.sender ?? "";
        message.contract = object.contract ?? "";
        message.msg = object.msg ?? new Uint8Array();
        message.funds = ((_a = object.funds) == null ? void 0 : _a.map((e2) => coin_1.Coin.fromPartial(e2))) || [];
        return message;
      }
    };
    function createBaseMsgExecuteContractResponse() {
      return {
        data: new Uint8Array()
      };
    }
    exports.MsgExecuteContractResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.data.length !== 0) {
          writer.uint32(10).bytes(message.data);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgExecuteContractResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.data = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          data: (0, helpers_1.isSet)(object.data) ? (0, helpers_1.bytesFromBase64)(object.data) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.data !== void 0 && (obj.data = (0, helpers_1.base64FromBytes)(message.data !== void 0 ? message.data : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgExecuteContractResponse();
        message.data = object.data ?? new Uint8Array();
        return message;
      }
    };
    function createBaseMsgMigrateContract() {
      return {
        sender: "",
        contract: "",
        codeId: helpers_1.Long.UZERO,
        msg: new Uint8Array()
      };
    }
    exports.MsgMigrateContract = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.sender !== "") {
          writer.uint32(10).string(message.sender);
        }
        if (message.contract !== "") {
          writer.uint32(18).string(message.contract);
        }
        if (!message.codeId.isZero()) {
          writer.uint32(24).uint64(message.codeId);
        }
        if (message.msg.length !== 0) {
          writer.uint32(34).bytes(message.msg);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgMigrateContract();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.sender = reader.string();
              break;
            case 2:
              message.contract = reader.string();
              break;
            case 3:
              message.codeId = reader.uint64();
              break;
            case 4:
              message.msg = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          sender: (0, helpers_1.isSet)(object.sender) ? String(object.sender) : "",
          contract: (0, helpers_1.isSet)(object.contract) ? String(object.contract) : "",
          codeId: (0, helpers_1.isSet)(object.codeId) ? helpers_1.Long.fromValue(object.codeId) : helpers_1.Long.UZERO,
          msg: (0, helpers_1.isSet)(object.msg) ? (0, helpers_1.bytesFromBase64)(object.msg) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.sender !== void 0 && (obj.sender = message.sender);
        message.contract !== void 0 && (obj.contract = message.contract);
        message.codeId !== void 0 && (obj.codeId = (message.codeId || helpers_1.Long.UZERO).toString());
        message.msg !== void 0 && (obj.msg = (0, helpers_1.base64FromBytes)(message.msg !== void 0 ? message.msg : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgMigrateContract();
        message.sender = object.sender ?? "";
        message.contract = object.contract ?? "";
        message.codeId = object.codeId !== void 0 && object.codeId !== null ? helpers_1.Long.fromValue(object.codeId) : helpers_1.Long.UZERO;
        message.msg = object.msg ?? new Uint8Array();
        return message;
      }
    };
    function createBaseMsgMigrateContractResponse() {
      return {
        data: new Uint8Array()
      };
    }
    exports.MsgMigrateContractResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.data.length !== 0) {
          writer.uint32(10).bytes(message.data);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgMigrateContractResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.data = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          data: (0, helpers_1.isSet)(object.data) ? (0, helpers_1.bytesFromBase64)(object.data) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.data !== void 0 && (obj.data = (0, helpers_1.base64FromBytes)(message.data !== void 0 ? message.data : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgMigrateContractResponse();
        message.data = object.data ?? new Uint8Array();
        return message;
      }
    };
    function createBaseMsgUpdateAdmin() {
      return {
        sender: "",
        newAdmin: "",
        contract: ""
      };
    }
    exports.MsgUpdateAdmin = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.sender !== "") {
          writer.uint32(10).string(message.sender);
        }
        if (message.newAdmin !== "") {
          writer.uint32(18).string(message.newAdmin);
        }
        if (message.contract !== "") {
          writer.uint32(26).string(message.contract);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgUpdateAdmin();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.sender = reader.string();
              break;
            case 2:
              message.newAdmin = reader.string();
              break;
            case 3:
              message.contract = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          sender: (0, helpers_1.isSet)(object.sender) ? String(object.sender) : "",
          newAdmin: (0, helpers_1.isSet)(object.newAdmin) ? String(object.newAdmin) : "",
          contract: (0, helpers_1.isSet)(object.contract) ? String(object.contract) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.sender !== void 0 && (obj.sender = message.sender);
        message.newAdmin !== void 0 && (obj.newAdmin = message.newAdmin);
        message.contract !== void 0 && (obj.contract = message.contract);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgUpdateAdmin();
        message.sender = object.sender ?? "";
        message.newAdmin = object.newAdmin ?? "";
        message.contract = object.contract ?? "";
        return message;
      }
    };
    function createBaseMsgUpdateAdminResponse() {
      return {};
    }
    exports.MsgUpdateAdminResponse = {
      encode(_3, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgUpdateAdminResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_3) {
        return {};
      },
      toJSON(_3) {
        const obj = {};
        return obj;
      },
      fromPartial(_3) {
        const message = createBaseMsgUpdateAdminResponse();
        return message;
      }
    };
    function createBaseMsgClearAdmin() {
      return {
        sender: "",
        contract: ""
      };
    }
    exports.MsgClearAdmin = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.sender !== "") {
          writer.uint32(10).string(message.sender);
        }
        if (message.contract !== "") {
          writer.uint32(26).string(message.contract);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgClearAdmin();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.sender = reader.string();
              break;
            case 3:
              message.contract = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          sender: (0, helpers_1.isSet)(object.sender) ? String(object.sender) : "",
          contract: (0, helpers_1.isSet)(object.contract) ? String(object.contract) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.sender !== void 0 && (obj.sender = message.sender);
        message.contract !== void 0 && (obj.contract = message.contract);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgClearAdmin();
        message.sender = object.sender ?? "";
        message.contract = object.contract ?? "";
        return message;
      }
    };
    function createBaseMsgClearAdminResponse() {
      return {};
    }
    exports.MsgClearAdminResponse = {
      encode(_3, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgClearAdminResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_3) {
        return {};
      },
      toJSON(_3) {
        const obj = {};
        return obj;
      },
      fromPartial(_3) {
        const message = createBaseMsgClearAdminResponse();
        return message;
      }
    };
    function createBaseMsgUpdateInstantiateConfig() {
      return {
        sender: "",
        codeId: helpers_1.Long.UZERO,
        newInstantiatePermission: void 0
      };
    }
    exports.MsgUpdateInstantiateConfig = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.sender !== "") {
          writer.uint32(10).string(message.sender);
        }
        if (!message.codeId.isZero()) {
          writer.uint32(16).uint64(message.codeId);
        }
        if (message.newInstantiatePermission !== void 0) {
          types_1.AccessConfig.encode(message.newInstantiatePermission, writer.uint32(26).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgUpdateInstantiateConfig();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.sender = reader.string();
              break;
            case 2:
              message.codeId = reader.uint64();
              break;
            case 3:
              message.newInstantiatePermission = types_1.AccessConfig.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          sender: (0, helpers_1.isSet)(object.sender) ? String(object.sender) : "",
          codeId: (0, helpers_1.isSet)(object.codeId) ? helpers_1.Long.fromValue(object.codeId) : helpers_1.Long.UZERO,
          newInstantiatePermission: (0, helpers_1.isSet)(object.newInstantiatePermission) ? types_1.AccessConfig.fromJSON(object.newInstantiatePermission) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.sender !== void 0 && (obj.sender = message.sender);
        message.codeId !== void 0 && (obj.codeId = (message.codeId || helpers_1.Long.UZERO).toString());
        message.newInstantiatePermission !== void 0 && (obj.newInstantiatePermission = message.newInstantiatePermission ? types_1.AccessConfig.toJSON(message.newInstantiatePermission) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseMsgUpdateInstantiateConfig();
        message.sender = object.sender ?? "";
        message.codeId = object.codeId !== void 0 && object.codeId !== null ? helpers_1.Long.fromValue(object.codeId) : helpers_1.Long.UZERO;
        message.newInstantiatePermission = object.newInstantiatePermission !== void 0 && object.newInstantiatePermission !== null ? types_1.AccessConfig.fromPartial(object.newInstantiatePermission) : void 0;
        return message;
      }
    };
    function createBaseMsgUpdateInstantiateConfigResponse() {
      return {};
    }
    exports.MsgUpdateInstantiateConfigResponse = {
      encode(_3, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseMsgUpdateInstantiateConfigResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_3) {
        return {};
      },
      toJSON(_3) {
        const obj = {};
        return obj;
      },
      fromPartial(_3) {
        const message = createBaseMsgUpdateInstantiateConfigResponse();
        return message;
      }
    };
    var MsgClientImpl = class {
      constructor(rpc) {
        this.rpc = rpc;
        this.StoreCode = this.StoreCode.bind(this);
        this.InstantiateContract = this.InstantiateContract.bind(this);
        this.InstantiateContract2 = this.InstantiateContract2.bind(this);
        this.ExecuteContract = this.ExecuteContract.bind(this);
        this.MigrateContract = this.MigrateContract.bind(this);
        this.UpdateAdmin = this.UpdateAdmin.bind(this);
        this.ClearAdmin = this.ClearAdmin.bind(this);
        this.UpdateInstantiateConfig = this.UpdateInstantiateConfig.bind(this);
      }
      StoreCode(request) {
        const data = exports.MsgStoreCode.encode(request).finish();
        const promise = this.rpc.request("cosmwasm.wasm.v1.Msg", "StoreCode", data);
        return promise.then((data2) => exports.MsgStoreCodeResponse.decode(new _m0.Reader(data2)));
      }
      InstantiateContract(request) {
        const data = exports.MsgInstantiateContract.encode(request).finish();
        const promise = this.rpc.request("cosmwasm.wasm.v1.Msg", "InstantiateContract", data);
        return promise.then((data2) => exports.MsgInstantiateContractResponse.decode(new _m0.Reader(data2)));
      }
      InstantiateContract2(request) {
        const data = exports.MsgInstantiateContract2.encode(request).finish();
        const promise = this.rpc.request("cosmwasm.wasm.v1.Msg", "InstantiateContract2", data);
        return promise.then((data2) => exports.MsgInstantiateContract2Response.decode(new _m0.Reader(data2)));
      }
      ExecuteContract(request) {
        const data = exports.MsgExecuteContract.encode(request).finish();
        const promise = this.rpc.request("cosmwasm.wasm.v1.Msg", "ExecuteContract", data);
        return promise.then((data2) => exports.MsgExecuteContractResponse.decode(new _m0.Reader(data2)));
      }
      MigrateContract(request) {
        const data = exports.MsgMigrateContract.encode(request).finish();
        const promise = this.rpc.request("cosmwasm.wasm.v1.Msg", "MigrateContract", data);
        return promise.then((data2) => exports.MsgMigrateContractResponse.decode(new _m0.Reader(data2)));
      }
      UpdateAdmin(request) {
        const data = exports.MsgUpdateAdmin.encode(request).finish();
        const promise = this.rpc.request("cosmwasm.wasm.v1.Msg", "UpdateAdmin", data);
        return promise.then((data2) => exports.MsgUpdateAdminResponse.decode(new _m0.Reader(data2)));
      }
      ClearAdmin(request) {
        const data = exports.MsgClearAdmin.encode(request).finish();
        const promise = this.rpc.request("cosmwasm.wasm.v1.Msg", "ClearAdmin", data);
        return promise.then((data2) => exports.MsgClearAdminResponse.decode(new _m0.Reader(data2)));
      }
      UpdateInstantiateConfig(request) {
        const data = exports.MsgUpdateInstantiateConfig.encode(request).finish();
        const promise = this.rpc.request("cosmwasm.wasm.v1.Msg", "UpdateInstantiateConfig", data);
        return promise.then((data2) => exports.MsgUpdateInstantiateConfigResponse.decode(new _m0.Reader(data2)));
      }
    };
    exports.MsgClientImpl = MsgClientImpl;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/build/modules/wasm/messages.js
var require_messages9 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/build/modules/wasm/messages.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isMsgExecuteEncodeObject = exports.isMsgMigrateEncodeObject = exports.isMsgClearAdminEncodeObject = exports.isMsgUpdateAdminEncodeObject = exports.isMsgInstantiateContractEncodeObject = exports.isMsgStoreCodeEncodeObject = exports.wasmTypes = void 0;
    var tx_1 = require_tx13();
    exports.wasmTypes = [
      ["/cosmwasm.wasm.v1.MsgClearAdmin", tx_1.MsgClearAdmin],
      ["/cosmwasm.wasm.v1.MsgExecuteContract", tx_1.MsgExecuteContract],
      ["/cosmwasm.wasm.v1.MsgMigrateContract", tx_1.MsgMigrateContract],
      ["/cosmwasm.wasm.v1.MsgStoreCode", tx_1.MsgStoreCode],
      ["/cosmwasm.wasm.v1.MsgInstantiateContract", tx_1.MsgInstantiateContract],
      ["/cosmwasm.wasm.v1.MsgUpdateAdmin", tx_1.MsgUpdateAdmin]
    ];
    function isMsgStoreCodeEncodeObject(object) {
      return object.typeUrl === "/cosmwasm.wasm.v1.MsgStoreCode";
    }
    exports.isMsgStoreCodeEncodeObject = isMsgStoreCodeEncodeObject;
    function isMsgInstantiateContractEncodeObject(object) {
      return object.typeUrl === "/cosmwasm.wasm.v1.MsgInstantiateContract";
    }
    exports.isMsgInstantiateContractEncodeObject = isMsgInstantiateContractEncodeObject;
    function isMsgUpdateAdminEncodeObject(object) {
      return object.typeUrl === "/cosmwasm.wasm.v1.MsgUpdateAdmin";
    }
    exports.isMsgUpdateAdminEncodeObject = isMsgUpdateAdminEncodeObject;
    function isMsgClearAdminEncodeObject(object) {
      return object.typeUrl === "/cosmwasm.wasm.v1.MsgClearAdmin";
    }
    exports.isMsgClearAdminEncodeObject = isMsgClearAdminEncodeObject;
    function isMsgMigrateEncodeObject(object) {
      return object.typeUrl === "/cosmwasm.wasm.v1.MsgMigrateContract";
    }
    exports.isMsgMigrateEncodeObject = isMsgMigrateEncodeObject;
    function isMsgExecuteEncodeObject(object) {
      return object.typeUrl === "/cosmwasm.wasm.v1.MsgExecuteContract";
    }
    exports.isMsgExecuteEncodeObject = isMsgExecuteEncodeObject;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmwasm/wasm/v1/query.js
var require_query14 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/node_modules/cosmjs-types/cosmwasm/wasm/v1/query.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      var desc = Object.getOwnPropertyDescriptor(m2, k3);
      if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m2[k3];
        } };
      }
      Object.defineProperty(o2, k22, desc);
    } : function(o2, m2, k3, k22) {
      if (k22 === void 0)
        k22 = k3;
      o2[k22] = m2[k3];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o2, v3) {
      Object.defineProperty(o2, "default", { enumerable: true, value: v3 });
    } : function(o2, v3) {
      o2["default"] = v3;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k3 in mod)
          if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3))
            __createBinding(result, mod, k3);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.QueryClientImpl = exports.QueryContractsByCreatorResponse = exports.QueryContractsByCreatorRequest = exports.QueryParamsResponse = exports.QueryParamsRequest = exports.QueryPinnedCodesResponse = exports.QueryPinnedCodesRequest = exports.QueryCodesResponse = exports.QueryCodesRequest = exports.QueryCodeResponse = exports.CodeInfoResponse = exports.QueryCodeRequest = exports.QuerySmartContractStateResponse = exports.QuerySmartContractStateRequest = exports.QueryRawContractStateResponse = exports.QueryRawContractStateRequest = exports.QueryAllContractStateResponse = exports.QueryAllContractStateRequest = exports.QueryContractsByCodeResponse = exports.QueryContractsByCodeRequest = exports.QueryContractHistoryResponse = exports.QueryContractHistoryRequest = exports.QueryContractInfoResponse = exports.QueryContractInfoRequest = exports.protobufPackage = void 0;
    var pagination_1 = require_pagination();
    var types_1 = require_types6();
    var _m0 = __importStar(require_minimal());
    var helpers_1 = require_helpers();
    exports.protobufPackage = "cosmwasm.wasm.v1";
    function createBaseQueryContractInfoRequest() {
      return {
        address: ""
      };
    }
    exports.QueryContractInfoRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.address !== "") {
          writer.uint32(10).string(message.address);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryContractInfoRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.address = reader.string();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          address: (0, helpers_1.isSet)(object.address) ? String(object.address) : ""
        };
      },
      toJSON(message) {
        const obj = {};
        message.address !== void 0 && (obj.address = message.address);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryContractInfoRequest();
        message.address = object.address ?? "";
        return message;
      }
    };
    function createBaseQueryContractInfoResponse() {
      return {
        address: "",
        contractInfo: void 0
      };
    }
    exports.QueryContractInfoResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.address !== "") {
          writer.uint32(10).string(message.address);
        }
        if (message.contractInfo !== void 0) {
          types_1.ContractInfo.encode(message.contractInfo, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryContractInfoResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.address = reader.string();
              break;
            case 2:
              message.contractInfo = types_1.ContractInfo.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          address: (0, helpers_1.isSet)(object.address) ? String(object.address) : "",
          contractInfo: (0, helpers_1.isSet)(object.contractInfo) ? types_1.ContractInfo.fromJSON(object.contractInfo) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.address !== void 0 && (obj.address = message.address);
        message.contractInfo !== void 0 && (obj.contractInfo = message.contractInfo ? types_1.ContractInfo.toJSON(message.contractInfo) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryContractInfoResponse();
        message.address = object.address ?? "";
        message.contractInfo = object.contractInfo !== void 0 && object.contractInfo !== null ? types_1.ContractInfo.fromPartial(object.contractInfo) : void 0;
        return message;
      }
    };
    function createBaseQueryContractHistoryRequest() {
      return {
        address: "",
        pagination: void 0
      };
    }
    exports.QueryContractHistoryRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.address !== "") {
          writer.uint32(10).string(message.address);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryContractHistoryRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.address = reader.string();
              break;
            case 2:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          address: (0, helpers_1.isSet)(object.address) ? String(object.address) : "",
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.address !== void 0 && (obj.address = message.address);
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryContractHistoryRequest();
        message.address = object.address ?? "";
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryContractHistoryResponse() {
      return {
        entries: [],
        pagination: void 0
      };
    }
    exports.QueryContractHistoryResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.entries) {
          types_1.ContractCodeHistoryEntry.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryContractHistoryResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.entries.push(types_1.ContractCodeHistoryEntry.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          entries: Array.isArray(object == null ? void 0 : object.entries) ? object.entries.map((e2) => types_1.ContractCodeHistoryEntry.fromJSON(e2)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.entries) {
          obj.entries = message.entries.map((e2) => e2 ? types_1.ContractCodeHistoryEntry.toJSON(e2) : void 0);
        } else {
          obj.entries = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryContractHistoryResponse();
        message.entries = ((_a = object.entries) == null ? void 0 : _a.map((e2) => types_1.ContractCodeHistoryEntry.fromPartial(e2))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryContractsByCodeRequest() {
      return {
        codeId: helpers_1.Long.UZERO,
        pagination: void 0
      };
    }
    exports.QueryContractsByCodeRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.codeId.isZero()) {
          writer.uint32(8).uint64(message.codeId);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryContractsByCodeRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.codeId = reader.uint64();
              break;
            case 2:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          codeId: (0, helpers_1.isSet)(object.codeId) ? helpers_1.Long.fromValue(object.codeId) : helpers_1.Long.UZERO,
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.codeId !== void 0 && (obj.codeId = (message.codeId || helpers_1.Long.UZERO).toString());
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryContractsByCodeRequest();
        message.codeId = object.codeId !== void 0 && object.codeId !== null ? helpers_1.Long.fromValue(object.codeId) : helpers_1.Long.UZERO;
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryContractsByCodeResponse() {
      return {
        contracts: [],
        pagination: void 0
      };
    }
    exports.QueryContractsByCodeResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.contracts) {
          writer.uint32(10).string(v3);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryContractsByCodeResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.contracts.push(reader.string());
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          contracts: Array.isArray(object == null ? void 0 : object.contracts) ? object.contracts.map((e2) => String(e2)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.contracts) {
          obj.contracts = message.contracts.map((e2) => e2);
        } else {
          obj.contracts = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryContractsByCodeResponse();
        message.contracts = ((_a = object.contracts) == null ? void 0 : _a.map((e2) => e2)) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryAllContractStateRequest() {
      return {
        address: "",
        pagination: void 0
      };
    }
    exports.QueryAllContractStateRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.address !== "") {
          writer.uint32(10).string(message.address);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryAllContractStateRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.address = reader.string();
              break;
            case 2:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          address: (0, helpers_1.isSet)(object.address) ? String(object.address) : "",
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.address !== void 0 && (obj.address = message.address);
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryAllContractStateRequest();
        message.address = object.address ?? "";
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryAllContractStateResponse() {
      return {
        models: [],
        pagination: void 0
      };
    }
    exports.QueryAllContractStateResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.models) {
          types_1.Model.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryAllContractStateResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.models.push(types_1.Model.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          models: Array.isArray(object == null ? void 0 : object.models) ? object.models.map((e2) => types_1.Model.fromJSON(e2)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.models) {
          obj.models = message.models.map((e2) => e2 ? types_1.Model.toJSON(e2) : void 0);
        } else {
          obj.models = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryAllContractStateResponse();
        message.models = ((_a = object.models) == null ? void 0 : _a.map((e2) => types_1.Model.fromPartial(e2))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryRawContractStateRequest() {
      return {
        address: "",
        queryData: new Uint8Array()
      };
    }
    exports.QueryRawContractStateRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.address !== "") {
          writer.uint32(10).string(message.address);
        }
        if (message.queryData.length !== 0) {
          writer.uint32(18).bytes(message.queryData);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryRawContractStateRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.address = reader.string();
              break;
            case 2:
              message.queryData = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          address: (0, helpers_1.isSet)(object.address) ? String(object.address) : "",
          queryData: (0, helpers_1.isSet)(object.queryData) ? (0, helpers_1.bytesFromBase64)(object.queryData) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.address !== void 0 && (obj.address = message.address);
        message.queryData !== void 0 && (obj.queryData = (0, helpers_1.base64FromBytes)(message.queryData !== void 0 ? message.queryData : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryRawContractStateRequest();
        message.address = object.address ?? "";
        message.queryData = object.queryData ?? new Uint8Array();
        return message;
      }
    };
    function createBaseQueryRawContractStateResponse() {
      return {
        data: new Uint8Array()
      };
    }
    exports.QueryRawContractStateResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.data.length !== 0) {
          writer.uint32(10).bytes(message.data);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryRawContractStateResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.data = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          data: (0, helpers_1.isSet)(object.data) ? (0, helpers_1.bytesFromBase64)(object.data) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.data !== void 0 && (obj.data = (0, helpers_1.base64FromBytes)(message.data !== void 0 ? message.data : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryRawContractStateResponse();
        message.data = object.data ?? new Uint8Array();
        return message;
      }
    };
    function createBaseQuerySmartContractStateRequest() {
      return {
        address: "",
        queryData: new Uint8Array()
      };
    }
    exports.QuerySmartContractStateRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.address !== "") {
          writer.uint32(10).string(message.address);
        }
        if (message.queryData.length !== 0) {
          writer.uint32(18).bytes(message.queryData);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQuerySmartContractStateRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.address = reader.string();
              break;
            case 2:
              message.queryData = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          address: (0, helpers_1.isSet)(object.address) ? String(object.address) : "",
          queryData: (0, helpers_1.isSet)(object.queryData) ? (0, helpers_1.bytesFromBase64)(object.queryData) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.address !== void 0 && (obj.address = message.address);
        message.queryData !== void 0 && (obj.queryData = (0, helpers_1.base64FromBytes)(message.queryData !== void 0 ? message.queryData : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQuerySmartContractStateRequest();
        message.address = object.address ?? "";
        message.queryData = object.queryData ?? new Uint8Array();
        return message;
      }
    };
    function createBaseQuerySmartContractStateResponse() {
      return {
        data: new Uint8Array()
      };
    }
    exports.QuerySmartContractStateResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.data.length !== 0) {
          writer.uint32(10).bytes(message.data);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQuerySmartContractStateResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.data = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          data: (0, helpers_1.isSet)(object.data) ? (0, helpers_1.bytesFromBase64)(object.data) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.data !== void 0 && (obj.data = (0, helpers_1.base64FromBytes)(message.data !== void 0 ? message.data : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQuerySmartContractStateResponse();
        message.data = object.data ?? new Uint8Array();
        return message;
      }
    };
    function createBaseQueryCodeRequest() {
      return {
        codeId: helpers_1.Long.UZERO
      };
    }
    exports.QueryCodeRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.codeId.isZero()) {
          writer.uint32(8).uint64(message.codeId);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryCodeRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.codeId = reader.uint64();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          codeId: (0, helpers_1.isSet)(object.codeId) ? helpers_1.Long.fromValue(object.codeId) : helpers_1.Long.UZERO
        };
      },
      toJSON(message) {
        const obj = {};
        message.codeId !== void 0 && (obj.codeId = (message.codeId || helpers_1.Long.UZERO).toString());
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryCodeRequest();
        message.codeId = object.codeId !== void 0 && object.codeId !== null ? helpers_1.Long.fromValue(object.codeId) : helpers_1.Long.UZERO;
        return message;
      }
    };
    function createBaseCodeInfoResponse() {
      return {
        codeId: helpers_1.Long.UZERO,
        creator: "",
        dataHash: new Uint8Array(),
        instantiatePermission: void 0
      };
    }
    exports.CodeInfoResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (!message.codeId.isZero()) {
          writer.uint32(8).uint64(message.codeId);
        }
        if (message.creator !== "") {
          writer.uint32(18).string(message.creator);
        }
        if (message.dataHash.length !== 0) {
          writer.uint32(26).bytes(message.dataHash);
        }
        if (message.instantiatePermission !== void 0) {
          types_1.AccessConfig.encode(message.instantiatePermission, writer.uint32(50).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseCodeInfoResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.codeId = reader.uint64();
              break;
            case 2:
              message.creator = reader.string();
              break;
            case 3:
              message.dataHash = reader.bytes();
              break;
            case 6:
              message.instantiatePermission = types_1.AccessConfig.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          codeId: (0, helpers_1.isSet)(object.codeId) ? helpers_1.Long.fromValue(object.codeId) : helpers_1.Long.UZERO,
          creator: (0, helpers_1.isSet)(object.creator) ? String(object.creator) : "",
          dataHash: (0, helpers_1.isSet)(object.dataHash) ? (0, helpers_1.bytesFromBase64)(object.dataHash) : new Uint8Array(),
          instantiatePermission: (0, helpers_1.isSet)(object.instantiatePermission) ? types_1.AccessConfig.fromJSON(object.instantiatePermission) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.codeId !== void 0 && (obj.codeId = (message.codeId || helpers_1.Long.UZERO).toString());
        message.creator !== void 0 && (obj.creator = message.creator);
        message.dataHash !== void 0 && (obj.dataHash = (0, helpers_1.base64FromBytes)(message.dataHash !== void 0 ? message.dataHash : new Uint8Array()));
        message.instantiatePermission !== void 0 && (obj.instantiatePermission = message.instantiatePermission ? types_1.AccessConfig.toJSON(message.instantiatePermission) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseCodeInfoResponse();
        message.codeId = object.codeId !== void 0 && object.codeId !== null ? helpers_1.Long.fromValue(object.codeId) : helpers_1.Long.UZERO;
        message.creator = object.creator ?? "";
        message.dataHash = object.dataHash ?? new Uint8Array();
        message.instantiatePermission = object.instantiatePermission !== void 0 && object.instantiatePermission !== null ? types_1.AccessConfig.fromPartial(object.instantiatePermission) : void 0;
        return message;
      }
    };
    function createBaseQueryCodeResponse() {
      return {
        codeInfo: void 0,
        data: new Uint8Array()
      };
    }
    exports.QueryCodeResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.codeInfo !== void 0) {
          exports.CodeInfoResponse.encode(message.codeInfo, writer.uint32(10).fork()).ldelim();
        }
        if (message.data.length !== 0) {
          writer.uint32(18).bytes(message.data);
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryCodeResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.codeInfo = exports.CodeInfoResponse.decode(reader, reader.uint32());
              break;
            case 2:
              message.data = reader.bytes();
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          codeInfo: (0, helpers_1.isSet)(object.codeInfo) ? exports.CodeInfoResponse.fromJSON(object.codeInfo) : void 0,
          data: (0, helpers_1.isSet)(object.data) ? (0, helpers_1.bytesFromBase64)(object.data) : new Uint8Array()
        };
      },
      toJSON(message) {
        const obj = {};
        message.codeInfo !== void 0 && (obj.codeInfo = message.codeInfo ? exports.CodeInfoResponse.toJSON(message.codeInfo) : void 0);
        message.data !== void 0 && (obj.data = (0, helpers_1.base64FromBytes)(message.data !== void 0 ? message.data : new Uint8Array()));
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryCodeResponse();
        message.codeInfo = object.codeInfo !== void 0 && object.codeInfo !== null ? exports.CodeInfoResponse.fromPartial(object.codeInfo) : void 0;
        message.data = object.data ?? new Uint8Array();
        return message;
      }
    };
    function createBaseQueryCodesRequest() {
      return {
        pagination: void 0
      };
    }
    exports.QueryCodesRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryCodesRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryCodesRequest();
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryCodesResponse() {
      return {
        codeInfos: [],
        pagination: void 0
      };
    }
    exports.QueryCodesResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.codeInfos) {
          exports.CodeInfoResponse.encode(v3, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryCodesResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.codeInfos.push(exports.CodeInfoResponse.decode(reader, reader.uint32()));
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          codeInfos: Array.isArray(object == null ? void 0 : object.codeInfos) ? object.codeInfos.map((e2) => exports.CodeInfoResponse.fromJSON(e2)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.codeInfos) {
          obj.codeInfos = message.codeInfos.map((e2) => e2 ? exports.CodeInfoResponse.toJSON(e2) : void 0);
        } else {
          obj.codeInfos = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryCodesResponse();
        message.codeInfos = ((_a = object.codeInfos) == null ? void 0 : _a.map((e2) => exports.CodeInfoResponse.fromPartial(e2))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryPinnedCodesRequest() {
      return {
        pagination: void 0
      };
    }
    exports.QueryPinnedCodesRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryPinnedCodesRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 2:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryPinnedCodesRequest();
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryPinnedCodesResponse() {
      return {
        codeIds: [],
        pagination: void 0
      };
    }
    exports.QueryPinnedCodesResponse = {
      encode(message, writer = _m0.Writer.create()) {
        writer.uint32(10).fork();
        for (const v3 of message.codeIds) {
          writer.uint64(v3);
        }
        writer.ldelim();
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryPinnedCodesResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              if ((tag & 7) === 2) {
                const end2 = reader.uint32() + reader.pos;
                while (reader.pos < end2) {
                  message.codeIds.push(reader.uint64());
                }
              } else {
                message.codeIds.push(reader.uint64());
              }
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          codeIds: Array.isArray(object == null ? void 0 : object.codeIds) ? object.codeIds.map((e2) => helpers_1.Long.fromValue(e2)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.codeIds) {
          obj.codeIds = message.codeIds.map((e2) => (e2 || helpers_1.Long.UZERO).toString());
        } else {
          obj.codeIds = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryPinnedCodesResponse();
        message.codeIds = ((_a = object.codeIds) == null ? void 0 : _a.map((e2) => helpers_1.Long.fromValue(e2))) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryParamsRequest() {
      return {};
    }
    exports.QueryParamsRequest = {
      encode(_3, writer = _m0.Writer.create()) {
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryParamsRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(_3) {
        return {};
      },
      toJSON(_3) {
        const obj = {};
        return obj;
      },
      fromPartial(_3) {
        const message = createBaseQueryParamsRequest();
        return message;
      }
    };
    function createBaseQueryParamsResponse() {
      return {
        params: void 0
      };
    }
    exports.QueryParamsResponse = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.params !== void 0) {
          types_1.Params.encode(message.params, writer.uint32(10).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryParamsResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.params = types_1.Params.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          params: (0, helpers_1.isSet)(object.params) ? types_1.Params.fromJSON(object.params) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.params !== void 0 && (obj.params = message.params ? types_1.Params.toJSON(message.params) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryParamsResponse();
        message.params = object.params !== void 0 && object.params !== null ? types_1.Params.fromPartial(object.params) : void 0;
        return message;
      }
    };
    function createBaseQueryContractsByCreatorRequest() {
      return {
        creatorAddress: "",
        pagination: void 0
      };
    }
    exports.QueryContractsByCreatorRequest = {
      encode(message, writer = _m0.Writer.create()) {
        if (message.creatorAddress !== "") {
          writer.uint32(10).string(message.creatorAddress);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryContractsByCreatorRequest();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.creatorAddress = reader.string();
              break;
            case 2:
              message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          creatorAddress: (0, helpers_1.isSet)(object.creatorAddress) ? String(object.creatorAddress) : "",
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        message.creatorAddress !== void 0 && (obj.creatorAddress = message.creatorAddress);
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        const message = createBaseQueryContractsByCreatorRequest();
        message.creatorAddress = object.creatorAddress ?? "";
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    function createBaseQueryContractsByCreatorResponse() {
      return {
        contractAddresses: [],
        pagination: void 0
      };
    }
    exports.QueryContractsByCreatorResponse = {
      encode(message, writer = _m0.Writer.create()) {
        for (const v3 of message.contractAddresses) {
          writer.uint32(10).string(v3);
        }
        if (message.pagination !== void 0) {
          pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
      },
      decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === void 0 ? reader.len : reader.pos + length;
        const message = createBaseQueryContractsByCreatorResponse();
        while (reader.pos < end) {
          const tag = reader.uint32();
          switch (tag >>> 3) {
            case 1:
              message.contractAddresses.push(reader.string());
              break;
            case 2:
              message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag & 7);
              break;
          }
        }
        return message;
      },
      fromJSON(object) {
        return {
          contractAddresses: Array.isArray(object == null ? void 0 : object.contractAddresses) ? object.contractAddresses.map((e2) => String(e2)) : [],
          pagination: (0, helpers_1.isSet)(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : void 0
        };
      },
      toJSON(message) {
        const obj = {};
        if (message.contractAddresses) {
          obj.contractAddresses = message.contractAddresses.map((e2) => e2);
        } else {
          obj.contractAddresses = [];
        }
        message.pagination !== void 0 && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : void 0);
        return obj;
      },
      fromPartial(object) {
        var _a;
        const message = createBaseQueryContractsByCreatorResponse();
        message.contractAddresses = ((_a = object.contractAddresses) == null ? void 0 : _a.map((e2) => e2)) || [];
        message.pagination = object.pagination !== void 0 && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : void 0;
        return message;
      }
    };
    var QueryClientImpl = class {
      constructor(rpc) {
        this.rpc = rpc;
        this.ContractInfo = this.ContractInfo.bind(this);
        this.ContractHistory = this.ContractHistory.bind(this);
        this.ContractsByCode = this.ContractsByCode.bind(this);
        this.AllContractState = this.AllContractState.bind(this);
        this.RawContractState = this.RawContractState.bind(this);
        this.SmartContractState = this.SmartContractState.bind(this);
        this.Code = this.Code.bind(this);
        this.Codes = this.Codes.bind(this);
        this.PinnedCodes = this.PinnedCodes.bind(this);
        this.Params = this.Params.bind(this);
        this.ContractsByCreator = this.ContractsByCreator.bind(this);
      }
      ContractInfo(request) {
        const data = exports.QueryContractInfoRequest.encode(request).finish();
        const promise = this.rpc.request("cosmwasm.wasm.v1.Query", "ContractInfo", data);
        return promise.then((data2) => exports.QueryContractInfoResponse.decode(new _m0.Reader(data2)));
      }
      ContractHistory(request) {
        const data = exports.QueryContractHistoryRequest.encode(request).finish();
        const promise = this.rpc.request("cosmwasm.wasm.v1.Query", "ContractHistory", data);
        return promise.then((data2) => exports.QueryContractHistoryResponse.decode(new _m0.Reader(data2)));
      }
      ContractsByCode(request) {
        const data = exports.QueryContractsByCodeRequest.encode(request).finish();
        const promise = this.rpc.request("cosmwasm.wasm.v1.Query", "ContractsByCode", data);
        return promise.then((data2) => exports.QueryContractsByCodeResponse.decode(new _m0.Reader(data2)));
      }
      AllContractState(request) {
        const data = exports.QueryAllContractStateRequest.encode(request).finish();
        const promise = this.rpc.request("cosmwasm.wasm.v1.Query", "AllContractState", data);
        return promise.then((data2) => exports.QueryAllContractStateResponse.decode(new _m0.Reader(data2)));
      }
      RawContractState(request) {
        const data = exports.QueryRawContractStateRequest.encode(request).finish();
        const promise = this.rpc.request("cosmwasm.wasm.v1.Query", "RawContractState", data);
        return promise.then((data2) => exports.QueryRawContractStateResponse.decode(new _m0.Reader(data2)));
      }
      SmartContractState(request) {
        const data = exports.QuerySmartContractStateRequest.encode(request).finish();
        const promise = this.rpc.request("cosmwasm.wasm.v1.Query", "SmartContractState", data);
        return promise.then((data2) => exports.QuerySmartContractStateResponse.decode(new _m0.Reader(data2)));
      }
      Code(request) {
        const data = exports.QueryCodeRequest.encode(request).finish();
        const promise = this.rpc.request("cosmwasm.wasm.v1.Query", "Code", data);
        return promise.then((data2) => exports.QueryCodeResponse.decode(new _m0.Reader(data2)));
      }
      Codes(request = {
        pagination: void 0
      }) {
        const data = exports.QueryCodesRequest.encode(request).finish();
        const promise = this.rpc.request("cosmwasm.wasm.v1.Query", "Codes", data);
        return promise.then((data2) => exports.QueryCodesResponse.decode(new _m0.Reader(data2)));
      }
      PinnedCodes(request = {
        pagination: void 0
      }) {
        const data = exports.QueryPinnedCodesRequest.encode(request).finish();
        const promise = this.rpc.request("cosmwasm.wasm.v1.Query", "PinnedCodes", data);
        return promise.then((data2) => exports.QueryPinnedCodesResponse.decode(new _m0.Reader(data2)));
      }
      Params(request = {}) {
        const data = exports.QueryParamsRequest.encode(request).finish();
        const promise = this.rpc.request("cosmwasm.wasm.v1.Query", "Params", data);
        return promise.then((data2) => exports.QueryParamsResponse.decode(new _m0.Reader(data2)));
      }
      ContractsByCreator(request) {
        const data = exports.QueryContractsByCreatorRequest.encode(request).finish();
        const promise = this.rpc.request("cosmwasm.wasm.v1.Query", "ContractsByCreator", data);
        return promise.then((data2) => exports.QueryContractsByCreatorResponse.decode(new _m0.Reader(data2)));
      }
    };
    exports.QueryClientImpl = QueryClientImpl;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/build/modules/wasm/queries.js
var require_queries12 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/build/modules/wasm/queries.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.setupWasmExtension = void 0;
    var encoding_1 = require_build2();
    var stargate_1 = require_build12();
    var query_1 = require_query14();
    var long_1 = __importDefault(require_long());
    function setupWasmExtension(base) {
      const rpc = (0, stargate_1.createProtobufRpcClient)(base);
      const queryService = new query_1.QueryClientImpl(rpc);
      return {
        wasm: {
          listCodeInfo: async (paginationKey) => {
            const request = {
              pagination: (0, stargate_1.createPagination)(paginationKey)
            };
            return queryService.Codes(request);
          },
          getCode: async (id) => {
            const request = { codeId: long_1.default.fromNumber(id) };
            return queryService.Code(request);
          },
          listContractsByCodeId: async (id, paginationKey) => {
            const request = {
              codeId: long_1.default.fromNumber(id),
              pagination: (0, stargate_1.createPagination)(paginationKey)
            };
            return queryService.ContractsByCode(request);
          },
          getContractInfo: async (address) => {
            const request = { address };
            return queryService.ContractInfo(request);
          },
          getContractCodeHistory: async (address, paginationKey) => {
            const request = {
              address,
              pagination: (0, stargate_1.createPagination)(paginationKey)
            };
            return queryService.ContractHistory(request);
          },
          getAllContractState: async (address, paginationKey) => {
            const request = {
              address,
              pagination: (0, stargate_1.createPagination)(paginationKey)
            };
            return queryService.AllContractState(request);
          },
          queryContractRaw: async (address, key) => {
            const request = { address, queryData: key };
            return queryService.RawContractState(request);
          },
          queryContractSmart: async (address, query) => {
            const request = { address, queryData: (0, encoding_1.toUtf8)(JSON.stringify(query)) };
            const { data } = await queryService.SmartContractState(request);
            let responseText;
            try {
              responseText = (0, encoding_1.fromUtf8)(data);
            } catch (error) {
              throw new Error(`Could not UTF-8 decode smart query response from contract: ${error}`);
            }
            try {
              return JSON.parse(responseText);
            } catch (error) {
              throw new Error(`Could not JSON parse smart query response from contract: ${error}`);
            }
          }
        }
      };
    }
    exports.setupWasmExtension = setupWasmExtension;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/build/modules/index.js
var require_modules2 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/build/modules/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.setupWasmExtension = exports.wasmTypes = exports.isMsgUpdateAdminEncodeObject = exports.isMsgStoreCodeEncodeObject = exports.isMsgMigrateEncodeObject = exports.isMsgInstantiateContractEncodeObject = exports.isMsgExecuteEncodeObject = exports.isMsgClearAdminEncodeObject = exports.createWasmAminoConverters = void 0;
    var aminomessages_1 = require_aminomessages12();
    Object.defineProperty(exports, "createWasmAminoConverters", { enumerable: true, get: function() {
      return aminomessages_1.createWasmAminoConverters;
    } });
    var messages_1 = require_messages9();
    Object.defineProperty(exports, "isMsgClearAdminEncodeObject", { enumerable: true, get: function() {
      return messages_1.isMsgClearAdminEncodeObject;
    } });
    Object.defineProperty(exports, "isMsgExecuteEncodeObject", { enumerable: true, get: function() {
      return messages_1.isMsgExecuteEncodeObject;
    } });
    Object.defineProperty(exports, "isMsgInstantiateContractEncodeObject", { enumerable: true, get: function() {
      return messages_1.isMsgInstantiateContractEncodeObject;
    } });
    Object.defineProperty(exports, "isMsgMigrateEncodeObject", { enumerable: true, get: function() {
      return messages_1.isMsgMigrateEncodeObject;
    } });
    Object.defineProperty(exports, "isMsgStoreCodeEncodeObject", { enumerable: true, get: function() {
      return messages_1.isMsgStoreCodeEncodeObject;
    } });
    Object.defineProperty(exports, "isMsgUpdateAdminEncodeObject", { enumerable: true, get: function() {
      return messages_1.isMsgUpdateAdminEncodeObject;
    } });
    Object.defineProperty(exports, "wasmTypes", { enumerable: true, get: function() {
      return messages_1.wasmTypes;
    } });
    var queries_1 = require_queries12();
    Object.defineProperty(exports, "setupWasmExtension", { enumerable: true, get: function() {
      return queries_1.setupWasmExtension;
    } });
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/build/cosmwasmclient.js
var require_cosmwasmclient = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/build/cosmwasmclient.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.CosmWasmClient = void 0;
    var encoding_1 = require_build2();
    var math_1 = require_build3();
    var stargate_1 = require_build12();
    var tendermint_rpc_1 = require_build11();
    var utils_1 = require_build4();
    var types_1 = require_types6();
    var modules_1 = require_modules2();
    var CosmWasmClient = class _CosmWasmClient {
      constructor(tmClient) {
        this.codesCache = /* @__PURE__ */ new Map();
        if (tmClient) {
          this.tmClient = tmClient;
          this.queryClient = stargate_1.QueryClient.withExtensions(tmClient, stargate_1.setupAuthExtension, stargate_1.setupBankExtension, modules_1.setupWasmExtension, stargate_1.setupTxExtension);
        }
      }
      /**
       * Creates an instance by connecting to the given Tendermint RPC endpoint.
       *
       * For now this uses the Tendermint 0.34 client. If you need Tendermint 0.37
       * support, see `create`.
       */
      static async connect(endpoint) {
        const tmClient = await tendermint_rpc_1.Tendermint34Client.connect(endpoint);
        return _CosmWasmClient.create(tmClient);
      }
      /**
       * Creates an instance from a manually created Tendermint client.
       * Use this to use `Tendermint37Client` instead of `Tendermint34Client`.
       */
      static async create(tmClient) {
        return new _CosmWasmClient(tmClient);
      }
      getTmClient() {
        return this.tmClient;
      }
      forceGetTmClient() {
        if (!this.tmClient) {
          throw new Error("Tendermint client not available. You cannot use online functionality in offline mode.");
        }
        return this.tmClient;
      }
      getQueryClient() {
        return this.queryClient;
      }
      forceGetQueryClient() {
        if (!this.queryClient) {
          throw new Error("Query client not available. You cannot use online functionality in offline mode.");
        }
        return this.queryClient;
      }
      async getChainId() {
        if (!this.chainId) {
          const response = await this.forceGetTmClient().status();
          const chainId = response.nodeInfo.network;
          if (!chainId)
            throw new Error("Chain ID must not be empty");
          this.chainId = chainId;
        }
        return this.chainId;
      }
      async getHeight() {
        const status = await this.forceGetTmClient().status();
        return status.syncInfo.latestBlockHeight;
      }
      async getAccount(searchAddress) {
        try {
          const account = await this.forceGetQueryClient().auth.account(searchAddress);
          return account ? (0, stargate_1.accountFromAny)(account) : null;
        } catch (error) {
          if (/rpc error: code = NotFound/i.test(error.toString())) {
            return null;
          }
          throw error;
        }
      }
      async getSequence(address) {
        const account = await this.getAccount(address);
        if (!account) {
          throw new Error(`Account '${address}' does not exist on chain. Send some tokens there before trying to query sequence.`);
        }
        return {
          accountNumber: account.accountNumber,
          sequence: account.sequence
        };
      }
      async getBlock(height) {
        const response = await this.forceGetTmClient().block(height);
        return {
          id: (0, encoding_1.toHex)(response.blockId.hash).toUpperCase(),
          header: {
            version: {
              block: new math_1.Uint53(response.block.header.version.block).toString(),
              app: new math_1.Uint53(response.block.header.version.app).toString()
            },
            height: response.block.header.height,
            chainId: response.block.header.chainId,
            time: (0, tendermint_rpc_1.toRfc3339WithNanoseconds)(response.block.header.time)
          },
          txs: response.block.txs
        };
      }
      async getBalance(address, searchDenom) {
        return this.forceGetQueryClient().bank.balance(address, searchDenom);
      }
      async getTx(id) {
        const results = await this.txsQuery(`tx.hash='${id}'`);
        return results[0] ?? null;
      }
      async searchTx(query, filter = {}) {
        const minHeight = filter.minHeight || 0;
        const maxHeight = filter.maxHeight || Number.MAX_SAFE_INTEGER;
        if (maxHeight < minHeight)
          return [];
        function withFilters(originalQuery) {
          return `${originalQuery} AND tx.height>=${minHeight} AND tx.height<=${maxHeight}`;
        }
        let txs;
        if ((0, stargate_1.isSearchByHeightQuery)(query)) {
          txs = query.height >= minHeight && query.height <= maxHeight ? await this.txsQuery(`tx.height=${query.height}`) : [];
        } else if ((0, stargate_1.isSearchBySentFromOrToQuery)(query)) {
          const sentQuery = withFilters(`message.module='bank' AND transfer.sender='${query.sentFromOrTo}'`);
          const receivedQuery = withFilters(`message.module='bank' AND transfer.recipient='${query.sentFromOrTo}'`);
          const [sent, received] = await Promise.all([sentQuery, receivedQuery].map((rawQuery) => this.txsQuery(rawQuery)));
          const sentHashes = sent.map((t2) => t2.hash);
          txs = [...sent, ...received.filter((t2) => !sentHashes.includes(t2.hash))];
        } else if ((0, stargate_1.isSearchByTagsQuery)(query)) {
          const rawQuery = withFilters(query.tags.map((t2) => `${t2.key}='${t2.value}'`).join(" AND "));
          txs = await this.txsQuery(rawQuery);
        } else {
          throw new Error("Unknown query type");
        }
        const filtered = txs.filter((tx) => tx.height >= minHeight && tx.height <= maxHeight);
        return filtered;
      }
      disconnect() {
        if (this.tmClient)
          this.tmClient.disconnect();
      }
      /**
       * Broadcasts a signed transaction to the network and monitors its inclusion in a block.
       *
       * If broadcasting is rejected by the node for some reason (e.g. because of a CheckTx failure),
       * an error is thrown.
       *
       * If the transaction is not included in a block before the provided timeout, this errors with a `TimeoutError`.
       *
       * If the transaction is included in a block, a `DeliverTxResponse` is returned. The caller then
       * usually needs to check for execution success or failure.
       */
      // NOTE: This method is tested against slow chains and timeouts in the @cosmjs/stargate package.
      // Make sure it is kept in sync!
      async broadcastTx(tx, timeoutMs = 6e4, pollIntervalMs = 3e3) {
        let timedOut = false;
        const txPollTimeout = setTimeout(() => {
          timedOut = true;
        }, timeoutMs);
        const pollForTx = async (txId) => {
          if (timedOut) {
            throw new stargate_1.TimeoutError(`Transaction with ID ${txId} was submitted but was not yet found on the chain. You might want to check later. There was a wait of ${timeoutMs / 1e3} seconds.`, txId);
          }
          await (0, utils_1.sleep)(pollIntervalMs);
          const result = await this.getTx(txId);
          return result ? {
            code: result.code,
            height: result.height,
            txIndex: result.txIndex,
            rawLog: result.rawLog,
            transactionHash: txId,
            events: result.events,
            gasUsed: result.gasUsed,
            gasWanted: result.gasWanted
          } : pollForTx(txId);
        };
        const broadcasted = await this.forceGetTmClient().broadcastTxSync({ tx });
        if (broadcasted.code) {
          return Promise.reject(new stargate_1.BroadcastTxError(broadcasted.code, broadcasted.codespace ?? "", broadcasted.log));
        }
        const transactionId = (0, encoding_1.toHex)(broadcasted.hash).toUpperCase();
        return new Promise((resolve, reject) => pollForTx(transactionId).then((value) => {
          clearTimeout(txPollTimeout);
          resolve(value);
        }, (error) => {
          clearTimeout(txPollTimeout);
          reject(error);
        }));
      }
      /**
       * getCodes() returns all codes and is just looping through all pagination pages.
       *
       * This is potentially inefficient and advanced apps should consider creating
       * their own query client to handle pagination together with the app's screens.
       */
      async getCodes() {
        const allCodes = [];
        let startAtKey = void 0;
        do {
          const { codeInfos, pagination } = await this.forceGetQueryClient().wasm.listCodeInfo(startAtKey);
          const loadedCodes = codeInfos || [];
          allCodes.push(...loadedCodes);
          startAtKey = pagination == null ? void 0 : pagination.nextKey;
        } while ((startAtKey == null ? void 0 : startAtKey.length) !== 0);
        return allCodes.map((entry) => {
          (0, utils_1.assert)(entry.creator && entry.codeId && entry.dataHash, "entry incomplete");
          return {
            id: entry.codeId.toNumber(),
            creator: entry.creator,
            checksum: (0, encoding_1.toHex)(entry.dataHash)
          };
        });
      }
      async getCodeDetails(codeId) {
        const cached = this.codesCache.get(codeId);
        if (cached)
          return cached;
        const { codeInfo, data } = await this.forceGetQueryClient().wasm.getCode(codeId);
        (0, utils_1.assert)(codeInfo && codeInfo.codeId && codeInfo.creator && codeInfo.dataHash && data, "codeInfo missing or incomplete");
        const codeDetails = {
          id: codeInfo.codeId.toNumber(),
          creator: codeInfo.creator,
          checksum: (0, encoding_1.toHex)(codeInfo.dataHash),
          data
        };
        this.codesCache.set(codeId, codeDetails);
        return codeDetails;
      }
      /**
       * getContracts() returns all contract instances for one code and is just looping through all pagination pages.
       *
       * This is potentially inefficient and advanced apps should consider creating
       * their own query client to handle pagination together with the app's screens.
       */
      async getContracts(codeId) {
        const allContracts = [];
        let startAtKey = void 0;
        do {
          const { contracts, pagination } = await this.forceGetQueryClient().wasm.listContractsByCodeId(codeId, startAtKey);
          const loadedContracts = contracts || [];
          allContracts.push(...loadedContracts);
          startAtKey = pagination == null ? void 0 : pagination.nextKey;
        } while ((startAtKey == null ? void 0 : startAtKey.length) !== 0 && startAtKey !== void 0);
        return allContracts;
      }
      /**
       * Throws an error if no contract was found at the address
       */
      async getContract(address) {
        const { address: retrievedAddress, contractInfo } = await this.forceGetQueryClient().wasm.getContractInfo(address);
        if (!contractInfo)
          throw new Error(`No contract found at address "${address}"`);
        (0, utils_1.assert)(retrievedAddress, "address missing");
        (0, utils_1.assert)(contractInfo.codeId && contractInfo.creator && contractInfo.label, "contractInfo incomplete");
        return {
          address: retrievedAddress,
          codeId: contractInfo.codeId.toNumber(),
          creator: contractInfo.creator,
          admin: contractInfo.admin || void 0,
          label: contractInfo.label,
          ibcPortId: contractInfo.ibcPortId || void 0
        };
      }
      /**
       * Throws an error if no contract was found at the address
       */
      async getContractCodeHistory(address) {
        const result = await this.forceGetQueryClient().wasm.getContractCodeHistory(address);
        if (!result)
          throw new Error(`No contract history found for address "${address}"`);
        const operations = {
          [types_1.ContractCodeHistoryOperationType.CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT]: "Init",
          [types_1.ContractCodeHistoryOperationType.CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS]: "Genesis",
          [types_1.ContractCodeHistoryOperationType.CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE]: "Migrate"
        };
        return (result.entries || []).map((entry) => {
          (0, utils_1.assert)(entry.operation && entry.codeId && entry.msg);
          return {
            operation: operations[entry.operation],
            codeId: entry.codeId.toNumber(),
            msg: JSON.parse((0, encoding_1.fromUtf8)(entry.msg))
          };
        });
      }
      /**
       * Returns the data at the key if present (raw contract dependent storage data)
       * or null if no data at this key.
       *
       * Promise is rejected when contract does not exist.
       */
      async queryContractRaw(address, key) {
        await this.getContract(address);
        const { data } = await this.forceGetQueryClient().wasm.queryContractRaw(address, key);
        return data ?? null;
      }
      /**
       * Makes a smart query on the contract, returns the parsed JSON document.
       *
       * Promise is rejected when contract does not exist.
       * Promise is rejected for invalid query format.
       * Promise is rejected for invalid response format.
       */
      async queryContractSmart(address, queryMsg) {
        try {
          return await this.forceGetQueryClient().wasm.queryContractSmart(address, queryMsg);
        } catch (error) {
          if (error instanceof Error) {
            if (error.message.startsWith("not found: contract")) {
              throw new Error(`No contract found at address "${address}"`);
            } else {
              throw error;
            }
          } else {
            throw error;
          }
        }
      }
      async txsQuery(query) {
        const results = await this.forceGetTmClient().txSearchAll({ query });
        return results.txs.map((tx) => {
          return {
            height: tx.height,
            txIndex: tx.index,
            hash: (0, encoding_1.toHex)(tx.hash).toUpperCase(),
            code: tx.result.code,
            events: tx.result.events.map(stargate_1.fromTendermintEvent),
            rawLog: tx.result.log || "",
            tx: tx.tx,
            gasUsed: tx.result.gasUsed,
            gasWanted: tx.result.gasWanted
          };
        });
      }
    };
    exports.CosmWasmClient = CosmWasmClient;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/build/encoding.js
var require_encoding2 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/build/encoding.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.fromBinary = exports.toBinary = void 0;
    var encoding_1 = require_build2();
    function toBinary(obj) {
      return (0, encoding_1.toBase64)((0, encoding_1.toUtf8)(JSON.stringify(obj)));
    }
    exports.toBinary = toBinary;
    function fromBinary(base64) {
      return JSON.parse((0, encoding_1.fromUtf8)((0, encoding_1.fromBase64)(base64)));
    }
    exports.fromBinary = fromBinary;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/build/instantiate2.js
var require_instantiate2 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/build/instantiate2.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.instantiate2Address = exports._instantiate2AddressIntermediate = void 0;
    var crypto_1 = require_build5();
    var encoding_1 = require_build2();
    var math_1 = require_build3();
    var utils_1 = require_build4();
    function hash(type, key) {
      return new crypto_1.Sha256((0, crypto_1.sha256)((0, encoding_1.toAscii)(type))).update(key).digest();
    }
    function toUint64(int) {
      return math_1.Uint64.fromNumber(int).toBytesBigEndian();
    }
    function _instantiate2AddressIntermediate(checksum, creator, salt, msg, prefix) {
      (0, utils_1.assert)(checksum.length === 32);
      const creatorData = (0, encoding_1.fromBech32)(creator).data;
      const msgData = typeof msg === "string" ? (0, encoding_1.toUtf8)(msg) : new Uint8Array();
      if (salt.length < 1 || salt.length > 64)
        throw new Error("Salt must be between 1 and 64 bytes");
      const key = new Uint8Array([
        ...(0, encoding_1.toAscii)("wasm"),
        0,
        ...toUint64(checksum.length),
        ...checksum,
        ...toUint64(creatorData.length),
        ...creatorData,
        ...toUint64(salt.length),
        ...salt,
        ...toUint64(msgData.length),
        ...msgData
      ]);
      const addressData = hash("module", key);
      const address = (0, encoding_1.toBech32)(prefix, addressData);
      return { key, addressData, address };
    }
    exports._instantiate2AddressIntermediate = _instantiate2AddressIntermediate;
    function instantiate2Address(checksum, creator, salt, prefix) {
      return _instantiate2AddressIntermediate(checksum, creator, salt, null, prefix).address;
    }
    exports.instantiate2Address = instantiate2Address;
  }
});

// node_modules/pako/lib/zlib/trees.js
var require_trees = __commonJS({
  "node_modules/pako/lib/zlib/trees.js"(exports, module) {
    "use strict";
    var Z_FIXED = 4;
    var Z_BINARY = 0;
    var Z_TEXT = 1;
    var Z_UNKNOWN = 2;
    function zero(buf) {
      let len = buf.length;
      while (--len >= 0) {
        buf[len] = 0;
      }
    }
    var STORED_BLOCK = 0;
    var STATIC_TREES = 1;
    var DYN_TREES = 2;
    var MIN_MATCH = 3;
    var MAX_MATCH = 258;
    var LENGTH_CODES = 29;
    var LITERALS = 256;
    var L_CODES = LITERALS + 1 + LENGTH_CODES;
    var D_CODES = 30;
    var BL_CODES = 19;
    var HEAP_SIZE = 2 * L_CODES + 1;
    var MAX_BITS = 15;
    var Buf_size = 16;
    var MAX_BL_BITS = 7;
    var END_BLOCK = 256;
    var REP_3_6 = 16;
    var REPZ_3_10 = 17;
    var REPZ_11_138 = 18;
    var extra_lbits = (
      /* extra bits for each length code */
      new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0])
    );
    var extra_dbits = (
      /* extra bits for each distance code */
      new Uint8Array([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13])
    );
    var extra_blbits = (
      /* extra bits for each bit length code */
      new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7])
    );
    var bl_order = new Uint8Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);
    var DIST_CODE_LEN = 512;
    var static_ltree = new Array((L_CODES + 2) * 2);
    zero(static_ltree);
    var static_dtree = new Array(D_CODES * 2);
    zero(static_dtree);
    var _dist_code = new Array(DIST_CODE_LEN);
    zero(_dist_code);
    var _length_code = new Array(MAX_MATCH - MIN_MATCH + 1);
    zero(_length_code);
    var base_length = new Array(LENGTH_CODES);
    zero(base_length);
    var base_dist = new Array(D_CODES);
    zero(base_dist);
    function StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {
      this.static_tree = static_tree;
      this.extra_bits = extra_bits;
      this.extra_base = extra_base;
      this.elems = elems;
      this.max_length = max_length;
      this.has_stree = static_tree && static_tree.length;
    }
    var static_l_desc;
    var static_d_desc;
    var static_bl_desc;
    function TreeDesc(dyn_tree, stat_desc) {
      this.dyn_tree = dyn_tree;
      this.max_code = 0;
      this.stat_desc = stat_desc;
    }
    var d_code = (dist) => {
      return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];
    };
    var put_short = (s2, w2) => {
      s2.pending_buf[s2.pending++] = w2 & 255;
      s2.pending_buf[s2.pending++] = w2 >>> 8 & 255;
    };
    var send_bits = (s2, value, length) => {
      if (s2.bi_valid > Buf_size - length) {
        s2.bi_buf |= value << s2.bi_valid & 65535;
        put_short(s2, s2.bi_buf);
        s2.bi_buf = value >> Buf_size - s2.bi_valid;
        s2.bi_valid += length - Buf_size;
      } else {
        s2.bi_buf |= value << s2.bi_valid & 65535;
        s2.bi_valid += length;
      }
    };
    var send_code = (s2, c2, tree) => {
      send_bits(
        s2,
        tree[c2 * 2],
        tree[c2 * 2 + 1]
        /*.Len*/
      );
    };
    var bi_reverse = (code, len) => {
      let res = 0;
      do {
        res |= code & 1;
        code >>>= 1;
        res <<= 1;
      } while (--len > 0);
      return res >>> 1;
    };
    var bi_flush = (s2) => {
      if (s2.bi_valid === 16) {
        put_short(s2, s2.bi_buf);
        s2.bi_buf = 0;
        s2.bi_valid = 0;
      } else if (s2.bi_valid >= 8) {
        s2.pending_buf[s2.pending++] = s2.bi_buf & 255;
        s2.bi_buf >>= 8;
        s2.bi_valid -= 8;
      }
    };
    var gen_bitlen = (s2, desc) => {
      const tree = desc.dyn_tree;
      const max_code = desc.max_code;
      const stree = desc.stat_desc.static_tree;
      const has_stree = desc.stat_desc.has_stree;
      const extra = desc.stat_desc.extra_bits;
      const base = desc.stat_desc.extra_base;
      const max_length = desc.stat_desc.max_length;
      let h2;
      let n2, m2;
      let bits;
      let xbits;
      let f;
      let overflow = 0;
      for (bits = 0; bits <= MAX_BITS; bits++) {
        s2.bl_count[bits] = 0;
      }
      tree[s2.heap[s2.heap_max] * 2 + 1] = 0;
      for (h2 = s2.heap_max + 1; h2 < HEAP_SIZE; h2++) {
        n2 = s2.heap[h2];
        bits = tree[tree[n2 * 2 + 1] * 2 + 1] + 1;
        if (bits > max_length) {
          bits = max_length;
          overflow++;
        }
        tree[n2 * 2 + 1] = bits;
        if (n2 > max_code) {
          continue;
        }
        s2.bl_count[bits]++;
        xbits = 0;
        if (n2 >= base) {
          xbits = extra[n2 - base];
        }
        f = tree[n2 * 2];
        s2.opt_len += f * (bits + xbits);
        if (has_stree) {
          s2.static_len += f * (stree[n2 * 2 + 1] + xbits);
        }
      }
      if (overflow === 0) {
        return;
      }
      do {
        bits = max_length - 1;
        while (s2.bl_count[bits] === 0) {
          bits--;
        }
        s2.bl_count[bits]--;
        s2.bl_count[bits + 1] += 2;
        s2.bl_count[max_length]--;
        overflow -= 2;
      } while (overflow > 0);
      for (bits = max_length; bits !== 0; bits--) {
        n2 = s2.bl_count[bits];
        while (n2 !== 0) {
          m2 = s2.heap[--h2];
          if (m2 > max_code) {
            continue;
          }
          if (tree[m2 * 2 + 1] !== bits) {
            s2.opt_len += (bits - tree[m2 * 2 + 1]) * tree[m2 * 2];
            tree[m2 * 2 + 1] = bits;
          }
          n2--;
        }
      }
    };
    var gen_codes = (tree, max_code, bl_count) => {
      const next_code = new Array(MAX_BITS + 1);
      let code = 0;
      let bits;
      let n2;
      for (bits = 1; bits <= MAX_BITS; bits++) {
        code = code + bl_count[bits - 1] << 1;
        next_code[bits] = code;
      }
      for (n2 = 0; n2 <= max_code; n2++) {
        let len = tree[n2 * 2 + 1];
        if (len === 0) {
          continue;
        }
        tree[n2 * 2] = bi_reverse(next_code[len]++, len);
      }
    };
    var tr_static_init = () => {
      let n2;
      let bits;
      let length;
      let code;
      let dist;
      const bl_count = new Array(MAX_BITS + 1);
      length = 0;
      for (code = 0; code < LENGTH_CODES - 1; code++) {
        base_length[code] = length;
        for (n2 = 0; n2 < 1 << extra_lbits[code]; n2++) {
          _length_code[length++] = code;
        }
      }
      _length_code[length - 1] = code;
      dist = 0;
      for (code = 0; code < 16; code++) {
        base_dist[code] = dist;
        for (n2 = 0; n2 < 1 << extra_dbits[code]; n2++) {
          _dist_code[dist++] = code;
        }
      }
      dist >>= 7;
      for (; code < D_CODES; code++) {
        base_dist[code] = dist << 7;
        for (n2 = 0; n2 < 1 << extra_dbits[code] - 7; n2++) {
          _dist_code[256 + dist++] = code;
        }
      }
      for (bits = 0; bits <= MAX_BITS; bits++) {
        bl_count[bits] = 0;
      }
      n2 = 0;
      while (n2 <= 143) {
        static_ltree[n2 * 2 + 1] = 8;
        n2++;
        bl_count[8]++;
      }
      while (n2 <= 255) {
        static_ltree[n2 * 2 + 1] = 9;
        n2++;
        bl_count[9]++;
      }
      while (n2 <= 279) {
        static_ltree[n2 * 2 + 1] = 7;
        n2++;
        bl_count[7]++;
      }
      while (n2 <= 287) {
        static_ltree[n2 * 2 + 1] = 8;
        n2++;
        bl_count[8]++;
      }
      gen_codes(static_ltree, L_CODES + 1, bl_count);
      for (n2 = 0; n2 < D_CODES; n2++) {
        static_dtree[n2 * 2 + 1] = 5;
        static_dtree[n2 * 2] = bi_reverse(n2, 5);
      }
      static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);
      static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0, D_CODES, MAX_BITS);
      static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0, BL_CODES, MAX_BL_BITS);
    };
    var init_block = (s2) => {
      let n2;
      for (n2 = 0; n2 < L_CODES; n2++) {
        s2.dyn_ltree[n2 * 2] = 0;
      }
      for (n2 = 0; n2 < D_CODES; n2++) {
        s2.dyn_dtree[n2 * 2] = 0;
      }
      for (n2 = 0; n2 < BL_CODES; n2++) {
        s2.bl_tree[n2 * 2] = 0;
      }
      s2.dyn_ltree[END_BLOCK * 2] = 1;
      s2.opt_len = s2.static_len = 0;
      s2.sym_next = s2.matches = 0;
    };
    var bi_windup = (s2) => {
      if (s2.bi_valid > 8) {
        put_short(s2, s2.bi_buf);
      } else if (s2.bi_valid > 0) {
        s2.pending_buf[s2.pending++] = s2.bi_buf;
      }
      s2.bi_buf = 0;
      s2.bi_valid = 0;
    };
    var smaller = (tree, n2, m2, depth) => {
      const _n2 = n2 * 2;
      const _m2 = m2 * 2;
      return tree[_n2] < tree[_m2] || tree[_n2] === tree[_m2] && depth[n2] <= depth[m2];
    };
    var pqdownheap = (s2, tree, k3) => {
      const v3 = s2.heap[k3];
      let j2 = k3 << 1;
      while (j2 <= s2.heap_len) {
        if (j2 < s2.heap_len && smaller(tree, s2.heap[j2 + 1], s2.heap[j2], s2.depth)) {
          j2++;
        }
        if (smaller(tree, v3, s2.heap[j2], s2.depth)) {
          break;
        }
        s2.heap[k3] = s2.heap[j2];
        k3 = j2;
        j2 <<= 1;
      }
      s2.heap[k3] = v3;
    };
    var compress_block = (s2, ltree, dtree) => {
      let dist;
      let lc;
      let sx = 0;
      let code;
      let extra;
      if (s2.sym_next !== 0) {
        do {
          dist = s2.pending_buf[s2.sym_buf + sx++] & 255;
          dist += (s2.pending_buf[s2.sym_buf + sx++] & 255) << 8;
          lc = s2.pending_buf[s2.sym_buf + sx++];
          if (dist === 0) {
            send_code(s2, lc, ltree);
          } else {
            code = _length_code[lc];
            send_code(s2, code + LITERALS + 1, ltree);
            extra = extra_lbits[code];
            if (extra !== 0) {
              lc -= base_length[code];
              send_bits(s2, lc, extra);
            }
            dist--;
            code = d_code(dist);
            send_code(s2, code, dtree);
            extra = extra_dbits[code];
            if (extra !== 0) {
              dist -= base_dist[code];
              send_bits(s2, dist, extra);
            }
          }
        } while (sx < s2.sym_next);
      }
      send_code(s2, END_BLOCK, ltree);
    };
    var build_tree = (s2, desc) => {
      const tree = desc.dyn_tree;
      const stree = desc.stat_desc.static_tree;
      const has_stree = desc.stat_desc.has_stree;
      const elems = desc.stat_desc.elems;
      let n2, m2;
      let max_code = -1;
      let node;
      s2.heap_len = 0;
      s2.heap_max = HEAP_SIZE;
      for (n2 = 0; n2 < elems; n2++) {
        if (tree[n2 * 2] !== 0) {
          s2.heap[++s2.heap_len] = max_code = n2;
          s2.depth[n2] = 0;
        } else {
          tree[n2 * 2 + 1] = 0;
        }
      }
      while (s2.heap_len < 2) {
        node = s2.heap[++s2.heap_len] = max_code < 2 ? ++max_code : 0;
        tree[node * 2] = 1;
        s2.depth[node] = 0;
        s2.opt_len--;
        if (has_stree) {
          s2.static_len -= stree[node * 2 + 1];
        }
      }
      desc.max_code = max_code;
      for (n2 = s2.heap_len >> 1; n2 >= 1; n2--) {
        pqdownheap(s2, tree, n2);
      }
      node = elems;
      do {
        n2 = s2.heap[
          1
          /*SMALLEST*/
        ];
        s2.heap[
          1
          /*SMALLEST*/
        ] = s2.heap[s2.heap_len--];
        pqdownheap(
          s2,
          tree,
          1
          /*SMALLEST*/
        );
        m2 = s2.heap[
          1
          /*SMALLEST*/
        ];
        s2.heap[--s2.heap_max] = n2;
        s2.heap[--s2.heap_max] = m2;
        tree[node * 2] = tree[n2 * 2] + tree[m2 * 2];
        s2.depth[node] = (s2.depth[n2] >= s2.depth[m2] ? s2.depth[n2] : s2.depth[m2]) + 1;
        tree[n2 * 2 + 1] = tree[m2 * 2 + 1] = node;
        s2.heap[
          1
          /*SMALLEST*/
        ] = node++;
        pqdownheap(
          s2,
          tree,
          1
          /*SMALLEST*/
        );
      } while (s2.heap_len >= 2);
      s2.heap[--s2.heap_max] = s2.heap[
        1
        /*SMALLEST*/
      ];
      gen_bitlen(s2, desc);
      gen_codes(tree, max_code, s2.bl_count);
    };
    var scan_tree = (s2, tree, max_code) => {
      let n2;
      let prevlen = -1;
      let curlen;
      let nextlen = tree[0 * 2 + 1];
      let count = 0;
      let max_count = 7;
      let min_count = 4;
      if (nextlen === 0) {
        max_count = 138;
        min_count = 3;
      }
      tree[(max_code + 1) * 2 + 1] = 65535;
      for (n2 = 0; n2 <= max_code; n2++) {
        curlen = nextlen;
        nextlen = tree[(n2 + 1) * 2 + 1];
        if (++count < max_count && curlen === nextlen) {
          continue;
        } else if (count < min_count) {
          s2.bl_tree[curlen * 2] += count;
        } else if (curlen !== 0) {
          if (curlen !== prevlen) {
            s2.bl_tree[curlen * 2]++;
          }
          s2.bl_tree[REP_3_6 * 2]++;
        } else if (count <= 10) {
          s2.bl_tree[REPZ_3_10 * 2]++;
        } else {
          s2.bl_tree[REPZ_11_138 * 2]++;
        }
        count = 0;
        prevlen = curlen;
        if (nextlen === 0) {
          max_count = 138;
          min_count = 3;
        } else if (curlen === nextlen) {
          max_count = 6;
          min_count = 3;
        } else {
          max_count = 7;
          min_count = 4;
        }
      }
    };
    var send_tree = (s2, tree, max_code) => {
      let n2;
      let prevlen = -1;
      let curlen;
      let nextlen = tree[0 * 2 + 1];
      let count = 0;
      let max_count = 7;
      let min_count = 4;
      if (nextlen === 0) {
        max_count = 138;
        min_count = 3;
      }
      for (n2 = 0; n2 <= max_code; n2++) {
        curlen = nextlen;
        nextlen = tree[(n2 + 1) * 2 + 1];
        if (++count < max_count && curlen === nextlen) {
          continue;
        } else if (count < min_count) {
          do {
            send_code(s2, curlen, s2.bl_tree);
          } while (--count !== 0);
        } else if (curlen !== 0) {
          if (curlen !== prevlen) {
            send_code(s2, curlen, s2.bl_tree);
            count--;
          }
          send_code(s2, REP_3_6, s2.bl_tree);
          send_bits(s2, count - 3, 2);
        } else if (count <= 10) {
          send_code(s2, REPZ_3_10, s2.bl_tree);
          send_bits(s2, count - 3, 3);
        } else {
          send_code(s2, REPZ_11_138, s2.bl_tree);
          send_bits(s2, count - 11, 7);
        }
        count = 0;
        prevlen = curlen;
        if (nextlen === 0) {
          max_count = 138;
          min_count = 3;
        } else if (curlen === nextlen) {
          max_count = 6;
          min_count = 3;
        } else {
          max_count = 7;
          min_count = 4;
        }
      }
    };
    var build_bl_tree = (s2) => {
      let max_blindex;
      scan_tree(s2, s2.dyn_ltree, s2.l_desc.max_code);
      scan_tree(s2, s2.dyn_dtree, s2.d_desc.max_code);
      build_tree(s2, s2.bl_desc);
      for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {
        if (s2.bl_tree[bl_order[max_blindex] * 2 + 1] !== 0) {
          break;
        }
      }
      s2.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;
      return max_blindex;
    };
    var send_all_trees = (s2, lcodes, dcodes, blcodes) => {
      let rank;
      send_bits(s2, lcodes - 257, 5);
      send_bits(s2, dcodes - 1, 5);
      send_bits(s2, blcodes - 4, 4);
      for (rank = 0; rank < blcodes; rank++) {
        send_bits(s2, s2.bl_tree[bl_order[rank] * 2 + 1], 3);
      }
      send_tree(s2, s2.dyn_ltree, lcodes - 1);
      send_tree(s2, s2.dyn_dtree, dcodes - 1);
    };
    var detect_data_type = (s2) => {
      let block_mask = 4093624447;
      let n2;
      for (n2 = 0; n2 <= 31; n2++, block_mask >>>= 1) {
        if (block_mask & 1 && s2.dyn_ltree[n2 * 2] !== 0) {
          return Z_BINARY;
        }
      }
      if (s2.dyn_ltree[9 * 2] !== 0 || s2.dyn_ltree[10 * 2] !== 0 || s2.dyn_ltree[13 * 2] !== 0) {
        return Z_TEXT;
      }
      for (n2 = 32; n2 < LITERALS; n2++) {
        if (s2.dyn_ltree[n2 * 2] !== 0) {
          return Z_TEXT;
        }
      }
      return Z_BINARY;
    };
    var static_init_done = false;
    var _tr_init = (s2) => {
      if (!static_init_done) {
        tr_static_init();
        static_init_done = true;
      }
      s2.l_desc = new TreeDesc(s2.dyn_ltree, static_l_desc);
      s2.d_desc = new TreeDesc(s2.dyn_dtree, static_d_desc);
      s2.bl_desc = new TreeDesc(s2.bl_tree, static_bl_desc);
      s2.bi_buf = 0;
      s2.bi_valid = 0;
      init_block(s2);
    };
    var _tr_stored_block = (s2, buf, stored_len, last) => {
      send_bits(s2, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);
      bi_windup(s2);
      put_short(s2, stored_len);
      put_short(s2, ~stored_len);
      if (stored_len) {
        s2.pending_buf.set(s2.window.subarray(buf, buf + stored_len), s2.pending);
      }
      s2.pending += stored_len;
    };
    var _tr_align = (s2) => {
      send_bits(s2, STATIC_TREES << 1, 3);
      send_code(s2, END_BLOCK, static_ltree);
      bi_flush(s2);
    };
    var _tr_flush_block = (s2, buf, stored_len, last) => {
      let opt_lenb, static_lenb;
      let max_blindex = 0;
      if (s2.level > 0) {
        if (s2.strm.data_type === Z_UNKNOWN) {
          s2.strm.data_type = detect_data_type(s2);
        }
        build_tree(s2, s2.l_desc);
        build_tree(s2, s2.d_desc);
        max_blindex = build_bl_tree(s2);
        opt_lenb = s2.opt_len + 3 + 7 >>> 3;
        static_lenb = s2.static_len + 3 + 7 >>> 3;
        if (static_lenb <= opt_lenb) {
          opt_lenb = static_lenb;
        }
      } else {
        opt_lenb = static_lenb = stored_len + 5;
      }
      if (stored_len + 4 <= opt_lenb && buf !== -1) {
        _tr_stored_block(s2, buf, stored_len, last);
      } else if (s2.strategy === Z_FIXED || static_lenb === opt_lenb) {
        send_bits(s2, (STATIC_TREES << 1) + (last ? 1 : 0), 3);
        compress_block(s2, static_ltree, static_dtree);
      } else {
        send_bits(s2, (DYN_TREES << 1) + (last ? 1 : 0), 3);
        send_all_trees(s2, s2.l_desc.max_code + 1, s2.d_desc.max_code + 1, max_blindex + 1);
        compress_block(s2, s2.dyn_ltree, s2.dyn_dtree);
      }
      init_block(s2);
      if (last) {
        bi_windup(s2);
      }
    };
    var _tr_tally = (s2, dist, lc) => {
      s2.pending_buf[s2.sym_buf + s2.sym_next++] = dist;
      s2.pending_buf[s2.sym_buf + s2.sym_next++] = dist >> 8;
      s2.pending_buf[s2.sym_buf + s2.sym_next++] = lc;
      if (dist === 0) {
        s2.dyn_ltree[lc * 2]++;
      } else {
        s2.matches++;
        dist--;
        s2.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2]++;
        s2.dyn_dtree[d_code(dist) * 2]++;
      }
      return s2.sym_next === s2.sym_end;
    };
    module.exports._tr_init = _tr_init;
    module.exports._tr_stored_block = _tr_stored_block;
    module.exports._tr_flush_block = _tr_flush_block;
    module.exports._tr_tally = _tr_tally;
    module.exports._tr_align = _tr_align;
  }
});

// node_modules/pako/lib/zlib/adler32.js
var require_adler32 = __commonJS({
  "node_modules/pako/lib/zlib/adler32.js"(exports, module) {
    "use strict";
    var adler32 = (adler, buf, len, pos) => {
      let s1 = adler & 65535 | 0, s2 = adler >>> 16 & 65535 | 0, n2 = 0;
      while (len !== 0) {
        n2 = len > 2e3 ? 2e3 : len;
        len -= n2;
        do {
          s1 = s1 + buf[pos++] | 0;
          s2 = s2 + s1 | 0;
        } while (--n2);
        s1 %= 65521;
        s2 %= 65521;
      }
      return s1 | s2 << 16 | 0;
    };
    module.exports = adler32;
  }
});

// node_modules/pako/lib/zlib/crc32.js
var require_crc32 = __commonJS({
  "node_modules/pako/lib/zlib/crc32.js"(exports, module) {
    "use strict";
    var makeTable = () => {
      let c2, table = [];
      for (var n2 = 0; n2 < 256; n2++) {
        c2 = n2;
        for (var k3 = 0; k3 < 8; k3++) {
          c2 = c2 & 1 ? 3988292384 ^ c2 >>> 1 : c2 >>> 1;
        }
        table[n2] = c2;
      }
      return table;
    };
    var crcTable = new Uint32Array(makeTable());
    var crc32 = (crc, buf, len, pos) => {
      const t2 = crcTable;
      const end = pos + len;
      crc ^= -1;
      for (let i3 = pos; i3 < end; i3++) {
        crc = crc >>> 8 ^ t2[(crc ^ buf[i3]) & 255];
      }
      return crc ^ -1;
    };
    module.exports = crc32;
  }
});

// node_modules/pako/lib/zlib/messages.js
var require_messages10 = __commonJS({
  "node_modules/pako/lib/zlib/messages.js"(exports, module) {
    "use strict";
    module.exports = {
      2: "need dictionary",
      /* Z_NEED_DICT       2  */
      1: "stream end",
      /* Z_STREAM_END      1  */
      0: "",
      /* Z_OK              0  */
      "-1": "file error",
      /* Z_ERRNO         (-1) */
      "-2": "stream error",
      /* Z_STREAM_ERROR  (-2) */
      "-3": "data error",
      /* Z_DATA_ERROR    (-3) */
      "-4": "insufficient memory",
      /* Z_MEM_ERROR     (-4) */
      "-5": "buffer error",
      /* Z_BUF_ERROR     (-5) */
      "-6": "incompatible version"
      /* Z_VERSION_ERROR (-6) */
    };
  }
});

// node_modules/pako/lib/zlib/constants.js
var require_constants = __commonJS({
  "node_modules/pako/lib/zlib/constants.js"(exports, module) {
    "use strict";
    module.exports = {
      /* Allowed flush values; see deflate() and inflate() below for details */
      Z_NO_FLUSH: 0,
      Z_PARTIAL_FLUSH: 1,
      Z_SYNC_FLUSH: 2,
      Z_FULL_FLUSH: 3,
      Z_FINISH: 4,
      Z_BLOCK: 5,
      Z_TREES: 6,
      /* Return codes for the compression/decompression functions. Negative values
      * are errors, positive values are used for special but normal events.
      */
      Z_OK: 0,
      Z_STREAM_END: 1,
      Z_NEED_DICT: 2,
      Z_ERRNO: -1,
      Z_STREAM_ERROR: -2,
      Z_DATA_ERROR: -3,
      Z_MEM_ERROR: -4,
      Z_BUF_ERROR: -5,
      //Z_VERSION_ERROR: -6,
      /* compression levels */
      Z_NO_COMPRESSION: 0,
      Z_BEST_SPEED: 1,
      Z_BEST_COMPRESSION: 9,
      Z_DEFAULT_COMPRESSION: -1,
      Z_FILTERED: 1,
      Z_HUFFMAN_ONLY: 2,
      Z_RLE: 3,
      Z_FIXED: 4,
      Z_DEFAULT_STRATEGY: 0,
      /* Possible values of the data_type field (though see inflate()) */
      Z_BINARY: 0,
      Z_TEXT: 1,
      //Z_ASCII:                1, // = Z_TEXT (deprecated)
      Z_UNKNOWN: 2,
      /* The deflate compression method */
      Z_DEFLATED: 8
      //Z_NULL:                 null // Use -1 or null inline, depending on var type
    };
  }
});

// node_modules/pako/lib/zlib/deflate.js
var require_deflate = __commonJS({
  "node_modules/pako/lib/zlib/deflate.js"(exports, module) {
    "use strict";
    var { _tr_init, _tr_stored_block, _tr_flush_block, _tr_tally, _tr_align } = require_trees();
    var adler32 = require_adler32();
    var crc32 = require_crc32();
    var msg = require_messages10();
    var {
      Z_NO_FLUSH,
      Z_PARTIAL_FLUSH,
      Z_FULL_FLUSH,
      Z_FINISH,
      Z_BLOCK,
      Z_OK,
      Z_STREAM_END,
      Z_STREAM_ERROR,
      Z_DATA_ERROR,
      Z_BUF_ERROR,
      Z_DEFAULT_COMPRESSION,
      Z_FILTERED,
      Z_HUFFMAN_ONLY,
      Z_RLE,
      Z_FIXED,
      Z_DEFAULT_STRATEGY,
      Z_UNKNOWN,
      Z_DEFLATED
    } = require_constants();
    var MAX_MEM_LEVEL = 9;
    var MAX_WBITS = 15;
    var DEF_MEM_LEVEL = 8;
    var LENGTH_CODES = 29;
    var LITERALS = 256;
    var L_CODES = LITERALS + 1 + LENGTH_CODES;
    var D_CODES = 30;
    var BL_CODES = 19;
    var HEAP_SIZE = 2 * L_CODES + 1;
    var MAX_BITS = 15;
    var MIN_MATCH = 3;
    var MAX_MATCH = 258;
    var MIN_LOOKAHEAD = MAX_MATCH + MIN_MATCH + 1;
    var PRESET_DICT = 32;
    var INIT_STATE = 42;
    var GZIP_STATE = 57;
    var EXTRA_STATE = 69;
    var NAME_STATE = 73;
    var COMMENT_STATE = 91;
    var HCRC_STATE = 103;
    var BUSY_STATE = 113;
    var FINISH_STATE = 666;
    var BS_NEED_MORE = 1;
    var BS_BLOCK_DONE = 2;
    var BS_FINISH_STARTED = 3;
    var BS_FINISH_DONE = 4;
    var OS_CODE = 3;
    var err = (strm, errorCode) => {
      strm.msg = msg[errorCode];
      return errorCode;
    };
    var rank = (f) => {
      return f * 2 - (f > 4 ? 9 : 0);
    };
    var zero = (buf) => {
      let len = buf.length;
      while (--len >= 0) {
        buf[len] = 0;
      }
    };
    var slide_hash = (s2) => {
      let n2, m2;
      let p3;
      let wsize = s2.w_size;
      n2 = s2.hash_size;
      p3 = n2;
      do {
        m2 = s2.head[--p3];
        s2.head[p3] = m2 >= wsize ? m2 - wsize : 0;
      } while (--n2);
      n2 = wsize;
      p3 = n2;
      do {
        m2 = s2.prev[--p3];
        s2.prev[p3] = m2 >= wsize ? m2 - wsize : 0;
      } while (--n2);
    };
    var HASH_ZLIB = (s2, prev, data) => (prev << s2.hash_shift ^ data) & s2.hash_mask;
    var HASH = HASH_ZLIB;
    var flush_pending = (strm) => {
      const s2 = strm.state;
      let len = s2.pending;
      if (len > strm.avail_out) {
        len = strm.avail_out;
      }
      if (len === 0) {
        return;
      }
      strm.output.set(s2.pending_buf.subarray(s2.pending_out, s2.pending_out + len), strm.next_out);
      strm.next_out += len;
      s2.pending_out += len;
      strm.total_out += len;
      strm.avail_out -= len;
      s2.pending -= len;
      if (s2.pending === 0) {
        s2.pending_out = 0;
      }
    };
    var flush_block_only = (s2, last) => {
      _tr_flush_block(s2, s2.block_start >= 0 ? s2.block_start : -1, s2.strstart - s2.block_start, last);
      s2.block_start = s2.strstart;
      flush_pending(s2.strm);
    };
    var put_byte = (s2, b3) => {
      s2.pending_buf[s2.pending++] = b3;
    };
    var putShortMSB = (s2, b3) => {
      s2.pending_buf[s2.pending++] = b3 >>> 8 & 255;
      s2.pending_buf[s2.pending++] = b3 & 255;
    };
    var read_buf = (strm, buf, start, size) => {
      let len = strm.avail_in;
      if (len > size) {
        len = size;
      }
      if (len === 0) {
        return 0;
      }
      strm.avail_in -= len;
      buf.set(strm.input.subarray(strm.next_in, strm.next_in + len), start);
      if (strm.state.wrap === 1) {
        strm.adler = adler32(strm.adler, buf, len, start);
      } else if (strm.state.wrap === 2) {
        strm.adler = crc32(strm.adler, buf, len, start);
      }
      strm.next_in += len;
      strm.total_in += len;
      return len;
    };
    var longest_match = (s2, cur_match) => {
      let chain_length = s2.max_chain_length;
      let scan = s2.strstart;
      let match;
      let len;
      let best_len = s2.prev_length;
      let nice_match = s2.nice_match;
      const limit = s2.strstart > s2.w_size - MIN_LOOKAHEAD ? s2.strstart - (s2.w_size - MIN_LOOKAHEAD) : 0;
      const _win = s2.window;
      const wmask = s2.w_mask;
      const prev = s2.prev;
      const strend = s2.strstart + MAX_MATCH;
      let scan_end1 = _win[scan + best_len - 1];
      let scan_end = _win[scan + best_len];
      if (s2.prev_length >= s2.good_match) {
        chain_length >>= 2;
      }
      if (nice_match > s2.lookahead) {
        nice_match = s2.lookahead;
      }
      do {
        match = cur_match;
        if (_win[match + best_len] !== scan_end || _win[match + best_len - 1] !== scan_end1 || _win[match] !== _win[scan] || _win[++match] !== _win[scan + 1]) {
          continue;
        }
        scan += 2;
        match++;
        do {
        } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] && _win[++scan] === _win[++match] && _win[++scan] === _win[++match] && _win[++scan] === _win[++match] && _win[++scan] === _win[++match] && _win[++scan] === _win[++match] && _win[++scan] === _win[++match] && scan < strend);
        len = MAX_MATCH - (strend - scan);
        scan = strend - MAX_MATCH;
        if (len > best_len) {
          s2.match_start = cur_match;
          best_len = len;
          if (len >= nice_match) {
            break;
          }
          scan_end1 = _win[scan + best_len - 1];
          scan_end = _win[scan + best_len];
        }
      } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);
      if (best_len <= s2.lookahead) {
        return best_len;
      }
      return s2.lookahead;
    };
    var fill_window = (s2) => {
      const _w_size = s2.w_size;
      let n2, more, str;
      do {
        more = s2.window_size - s2.lookahead - s2.strstart;
        if (s2.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {
          s2.window.set(s2.window.subarray(_w_size, _w_size + _w_size - more), 0);
          s2.match_start -= _w_size;
          s2.strstart -= _w_size;
          s2.block_start -= _w_size;
          if (s2.insert > s2.strstart) {
            s2.insert = s2.strstart;
          }
          slide_hash(s2);
          more += _w_size;
        }
        if (s2.strm.avail_in === 0) {
          break;
        }
        n2 = read_buf(s2.strm, s2.window, s2.strstart + s2.lookahead, more);
        s2.lookahead += n2;
        if (s2.lookahead + s2.insert >= MIN_MATCH) {
          str = s2.strstart - s2.insert;
          s2.ins_h = s2.window[str];
          s2.ins_h = HASH(s2, s2.ins_h, s2.window[str + 1]);
          while (s2.insert) {
            s2.ins_h = HASH(s2, s2.ins_h, s2.window[str + MIN_MATCH - 1]);
            s2.prev[str & s2.w_mask] = s2.head[s2.ins_h];
            s2.head[s2.ins_h] = str;
            str++;
            s2.insert--;
            if (s2.lookahead + s2.insert < MIN_MATCH) {
              break;
            }
          }
        }
      } while (s2.lookahead < MIN_LOOKAHEAD && s2.strm.avail_in !== 0);
    };
    var deflate_stored = (s2, flush) => {
      let min_block = s2.pending_buf_size - 5 > s2.w_size ? s2.w_size : s2.pending_buf_size - 5;
      let len, left, have, last = 0;
      let used = s2.strm.avail_in;
      do {
        len = 65535;
        have = s2.bi_valid + 42 >> 3;
        if (s2.strm.avail_out < have) {
          break;
        }
        have = s2.strm.avail_out - have;
        left = s2.strstart - s2.block_start;
        if (len > left + s2.strm.avail_in) {
          len = left + s2.strm.avail_in;
        }
        if (len > have) {
          len = have;
        }
        if (len < min_block && (len === 0 && flush !== Z_FINISH || flush === Z_NO_FLUSH || len !== left + s2.strm.avail_in)) {
          break;
        }
        last = flush === Z_FINISH && len === left + s2.strm.avail_in ? 1 : 0;
        _tr_stored_block(s2, 0, 0, last);
        s2.pending_buf[s2.pending - 4] = len;
        s2.pending_buf[s2.pending - 3] = len >> 8;
        s2.pending_buf[s2.pending - 2] = ~len;
        s2.pending_buf[s2.pending - 1] = ~len >> 8;
        flush_pending(s2.strm);
        if (left) {
          if (left > len) {
            left = len;
          }
          s2.strm.output.set(s2.window.subarray(s2.block_start, s2.block_start + left), s2.strm.next_out);
          s2.strm.next_out += left;
          s2.strm.avail_out -= left;
          s2.strm.total_out += left;
          s2.block_start += left;
          len -= left;
        }
        if (len) {
          read_buf(s2.strm, s2.strm.output, s2.strm.next_out, len);
          s2.strm.next_out += len;
          s2.strm.avail_out -= len;
          s2.strm.total_out += len;
        }
      } while (last === 0);
      used -= s2.strm.avail_in;
      if (used) {
        if (used >= s2.w_size) {
          s2.matches = 2;
          s2.window.set(s2.strm.input.subarray(s2.strm.next_in - s2.w_size, s2.strm.next_in), 0);
          s2.strstart = s2.w_size;
          s2.insert = s2.strstart;
        } else {
          if (s2.window_size - s2.strstart <= used) {
            s2.strstart -= s2.w_size;
            s2.window.set(s2.window.subarray(s2.w_size, s2.w_size + s2.strstart), 0);
            if (s2.matches < 2) {
              s2.matches++;
            }
            if (s2.insert > s2.strstart) {
              s2.insert = s2.strstart;
            }
          }
          s2.window.set(s2.strm.input.subarray(s2.strm.next_in - used, s2.strm.next_in), s2.strstart);
          s2.strstart += used;
          s2.insert += used > s2.w_size - s2.insert ? s2.w_size - s2.insert : used;
        }
        s2.block_start = s2.strstart;
      }
      if (s2.high_water < s2.strstart) {
        s2.high_water = s2.strstart;
      }
      if (last) {
        return BS_FINISH_DONE;
      }
      if (flush !== Z_NO_FLUSH && flush !== Z_FINISH && s2.strm.avail_in === 0 && s2.strstart === s2.block_start) {
        return BS_BLOCK_DONE;
      }
      have = s2.window_size - s2.strstart;
      if (s2.strm.avail_in > have && s2.block_start >= s2.w_size) {
        s2.block_start -= s2.w_size;
        s2.strstart -= s2.w_size;
        s2.window.set(s2.window.subarray(s2.w_size, s2.w_size + s2.strstart), 0);
        if (s2.matches < 2) {
          s2.matches++;
        }
        have += s2.w_size;
        if (s2.insert > s2.strstart) {
          s2.insert = s2.strstart;
        }
      }
      if (have > s2.strm.avail_in) {
        have = s2.strm.avail_in;
      }
      if (have) {
        read_buf(s2.strm, s2.window, s2.strstart, have);
        s2.strstart += have;
        s2.insert += have > s2.w_size - s2.insert ? s2.w_size - s2.insert : have;
      }
      if (s2.high_water < s2.strstart) {
        s2.high_water = s2.strstart;
      }
      have = s2.bi_valid + 42 >> 3;
      have = s2.pending_buf_size - have > 65535 ? 65535 : s2.pending_buf_size - have;
      min_block = have > s2.w_size ? s2.w_size : have;
      left = s2.strstart - s2.block_start;
      if (left >= min_block || (left || flush === Z_FINISH) && flush !== Z_NO_FLUSH && s2.strm.avail_in === 0 && left <= have) {
        len = left > have ? have : left;
        last = flush === Z_FINISH && s2.strm.avail_in === 0 && len === left ? 1 : 0;
        _tr_stored_block(s2, s2.block_start, len, last);
        s2.block_start += len;
        flush_pending(s2.strm);
      }
      return last ? BS_FINISH_STARTED : BS_NEED_MORE;
    };
    var deflate_fast = (s2, flush) => {
      let hash_head;
      let bflush;
      for (; ; ) {
        if (s2.lookahead < MIN_LOOKAHEAD) {
          fill_window(s2);
          if (s2.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {
            return BS_NEED_MORE;
          }
          if (s2.lookahead === 0) {
            break;
          }
        }
        hash_head = 0;
        if (s2.lookahead >= MIN_MATCH) {
          s2.ins_h = HASH(s2, s2.ins_h, s2.window[s2.strstart + MIN_MATCH - 1]);
          hash_head = s2.prev[s2.strstart & s2.w_mask] = s2.head[s2.ins_h];
          s2.head[s2.ins_h] = s2.strstart;
        }
        if (hash_head !== 0 && s2.strstart - hash_head <= s2.w_size - MIN_LOOKAHEAD) {
          s2.match_length = longest_match(s2, hash_head);
        }
        if (s2.match_length >= MIN_MATCH) {
          bflush = _tr_tally(s2, s2.strstart - s2.match_start, s2.match_length - MIN_MATCH);
          s2.lookahead -= s2.match_length;
          if (s2.match_length <= s2.max_lazy_match && s2.lookahead >= MIN_MATCH) {
            s2.match_length--;
            do {
              s2.strstart++;
              s2.ins_h = HASH(s2, s2.ins_h, s2.window[s2.strstart + MIN_MATCH - 1]);
              hash_head = s2.prev[s2.strstart & s2.w_mask] = s2.head[s2.ins_h];
              s2.head[s2.ins_h] = s2.strstart;
            } while (--s2.match_length !== 0);
            s2.strstart++;
          } else {
            s2.strstart += s2.match_length;
            s2.match_length = 0;
            s2.ins_h = s2.window[s2.strstart];
            s2.ins_h = HASH(s2, s2.ins_h, s2.window[s2.strstart + 1]);
          }
        } else {
          bflush = _tr_tally(s2, 0, s2.window[s2.strstart]);
          s2.lookahead--;
          s2.strstart++;
        }
        if (bflush) {
          flush_block_only(s2, false);
          if (s2.strm.avail_out === 0) {
            return BS_NEED_MORE;
          }
        }
      }
      s2.insert = s2.strstart < MIN_MATCH - 1 ? s2.strstart : MIN_MATCH - 1;
      if (flush === Z_FINISH) {
        flush_block_only(s2, true);
        if (s2.strm.avail_out === 0) {
          return BS_FINISH_STARTED;
        }
        return BS_FINISH_DONE;
      }
      if (s2.sym_next) {
        flush_block_only(s2, false);
        if (s2.strm.avail_out === 0) {
          return BS_NEED_MORE;
        }
      }
      return BS_BLOCK_DONE;
    };
    var deflate_slow = (s2, flush) => {
      let hash_head;
      let bflush;
      let max_insert;
      for (; ; ) {
        if (s2.lookahead < MIN_LOOKAHEAD) {
          fill_window(s2);
          if (s2.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {
            return BS_NEED_MORE;
          }
          if (s2.lookahead === 0) {
            break;
          }
        }
        hash_head = 0;
        if (s2.lookahead >= MIN_MATCH) {
          s2.ins_h = HASH(s2, s2.ins_h, s2.window[s2.strstart + MIN_MATCH - 1]);
          hash_head = s2.prev[s2.strstart & s2.w_mask] = s2.head[s2.ins_h];
          s2.head[s2.ins_h] = s2.strstart;
        }
        s2.prev_length = s2.match_length;
        s2.prev_match = s2.match_start;
        s2.match_length = MIN_MATCH - 1;
        if (hash_head !== 0 && s2.prev_length < s2.max_lazy_match && s2.strstart - hash_head <= s2.w_size - MIN_LOOKAHEAD) {
          s2.match_length = longest_match(s2, hash_head);
          if (s2.match_length <= 5 && (s2.strategy === Z_FILTERED || s2.match_length === MIN_MATCH && s2.strstart - s2.match_start > 4096)) {
            s2.match_length = MIN_MATCH - 1;
          }
        }
        if (s2.prev_length >= MIN_MATCH && s2.match_length <= s2.prev_length) {
          max_insert = s2.strstart + s2.lookahead - MIN_MATCH;
          bflush = _tr_tally(s2, s2.strstart - 1 - s2.prev_match, s2.prev_length - MIN_MATCH);
          s2.lookahead -= s2.prev_length - 1;
          s2.prev_length -= 2;
          do {
            if (++s2.strstart <= max_insert) {
              s2.ins_h = HASH(s2, s2.ins_h, s2.window[s2.strstart + MIN_MATCH - 1]);
              hash_head = s2.prev[s2.strstart & s2.w_mask] = s2.head[s2.ins_h];
              s2.head[s2.ins_h] = s2.strstart;
            }
          } while (--s2.prev_length !== 0);
          s2.match_available = 0;
          s2.match_length = MIN_MATCH - 1;
          s2.strstart++;
          if (bflush) {
            flush_block_only(s2, false);
            if (s2.strm.avail_out === 0) {
              return BS_NEED_MORE;
            }
          }
        } else if (s2.match_available) {
          bflush = _tr_tally(s2, 0, s2.window[s2.strstart - 1]);
          if (bflush) {
            flush_block_only(s2, false);
          }
          s2.strstart++;
          s2.lookahead--;
          if (s2.strm.avail_out === 0) {
            return BS_NEED_MORE;
          }
        } else {
          s2.match_available = 1;
          s2.strstart++;
          s2.lookahead--;
        }
      }
      if (s2.match_available) {
        bflush = _tr_tally(s2, 0, s2.window[s2.strstart - 1]);
        s2.match_available = 0;
      }
      s2.insert = s2.strstart < MIN_MATCH - 1 ? s2.strstart : MIN_MATCH - 1;
      if (flush === Z_FINISH) {
        flush_block_only(s2, true);
        if (s2.strm.avail_out === 0) {
          return BS_FINISH_STARTED;
        }
        return BS_FINISH_DONE;
      }
      if (s2.sym_next) {
        flush_block_only(s2, false);
        if (s2.strm.avail_out === 0) {
          return BS_NEED_MORE;
        }
      }
      return BS_BLOCK_DONE;
    };
    var deflate_rle = (s2, flush) => {
      let bflush;
      let prev;
      let scan, strend;
      const _win = s2.window;
      for (; ; ) {
        if (s2.lookahead <= MAX_MATCH) {
          fill_window(s2);
          if (s2.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {
            return BS_NEED_MORE;
          }
          if (s2.lookahead === 0) {
            break;
          }
        }
        s2.match_length = 0;
        if (s2.lookahead >= MIN_MATCH && s2.strstart > 0) {
          scan = s2.strstart - 1;
          prev = _win[scan];
          if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {
            strend = s2.strstart + MAX_MATCH;
            do {
            } while (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan] && scan < strend);
            s2.match_length = MAX_MATCH - (strend - scan);
            if (s2.match_length > s2.lookahead) {
              s2.match_length = s2.lookahead;
            }
          }
        }
        if (s2.match_length >= MIN_MATCH) {
          bflush = _tr_tally(s2, 1, s2.match_length - MIN_MATCH);
          s2.lookahead -= s2.match_length;
          s2.strstart += s2.match_length;
          s2.match_length = 0;
        } else {
          bflush = _tr_tally(s2, 0, s2.window[s2.strstart]);
          s2.lookahead--;
          s2.strstart++;
        }
        if (bflush) {
          flush_block_only(s2, false);
          if (s2.strm.avail_out === 0) {
            return BS_NEED_MORE;
          }
        }
      }
      s2.insert = 0;
      if (flush === Z_FINISH) {
        flush_block_only(s2, true);
        if (s2.strm.avail_out === 0) {
          return BS_FINISH_STARTED;
        }
        return BS_FINISH_DONE;
      }
      if (s2.sym_next) {
        flush_block_only(s2, false);
        if (s2.strm.avail_out === 0) {
          return BS_NEED_MORE;
        }
      }
      return BS_BLOCK_DONE;
    };
    var deflate_huff = (s2, flush) => {
      let bflush;
      for (; ; ) {
        if (s2.lookahead === 0) {
          fill_window(s2);
          if (s2.lookahead === 0) {
            if (flush === Z_NO_FLUSH) {
              return BS_NEED_MORE;
            }
            break;
          }
        }
        s2.match_length = 0;
        bflush = _tr_tally(s2, 0, s2.window[s2.strstart]);
        s2.lookahead--;
        s2.strstart++;
        if (bflush) {
          flush_block_only(s2, false);
          if (s2.strm.avail_out === 0) {
            return BS_NEED_MORE;
          }
        }
      }
      s2.insert = 0;
      if (flush === Z_FINISH) {
        flush_block_only(s2, true);
        if (s2.strm.avail_out === 0) {
          return BS_FINISH_STARTED;
        }
        return BS_FINISH_DONE;
      }
      if (s2.sym_next) {
        flush_block_only(s2, false);
        if (s2.strm.avail_out === 0) {
          return BS_NEED_MORE;
        }
      }
      return BS_BLOCK_DONE;
    };
    function Config(good_length, max_lazy, nice_length, max_chain, func) {
      this.good_length = good_length;
      this.max_lazy = max_lazy;
      this.nice_length = nice_length;
      this.max_chain = max_chain;
      this.func = func;
    }
    var configuration_table = [
      /*      good lazy nice chain */
      new Config(0, 0, 0, 0, deflate_stored),
      /* 0 store only */
      new Config(4, 4, 8, 4, deflate_fast),
      /* 1 max speed, no lazy matches */
      new Config(4, 5, 16, 8, deflate_fast),
      /* 2 */
      new Config(4, 6, 32, 32, deflate_fast),
      /* 3 */
      new Config(4, 4, 16, 16, deflate_slow),
      /* 4 lazy matches */
      new Config(8, 16, 32, 32, deflate_slow),
      /* 5 */
      new Config(8, 16, 128, 128, deflate_slow),
      /* 6 */
      new Config(8, 32, 128, 256, deflate_slow),
      /* 7 */
      new Config(32, 128, 258, 1024, deflate_slow),
      /* 8 */
      new Config(32, 258, 258, 4096, deflate_slow)
      /* 9 max compression */
    ];
    var lm_init = (s2) => {
      s2.window_size = 2 * s2.w_size;
      zero(s2.head);
      s2.max_lazy_match = configuration_table[s2.level].max_lazy;
      s2.good_match = configuration_table[s2.level].good_length;
      s2.nice_match = configuration_table[s2.level].nice_length;
      s2.max_chain_length = configuration_table[s2.level].max_chain;
      s2.strstart = 0;
      s2.block_start = 0;
      s2.lookahead = 0;
      s2.insert = 0;
      s2.match_length = s2.prev_length = MIN_MATCH - 1;
      s2.match_available = 0;
      s2.ins_h = 0;
    };
    function DeflateState() {
      this.strm = null;
      this.status = 0;
      this.pending_buf = null;
      this.pending_buf_size = 0;
      this.pending_out = 0;
      this.pending = 0;
      this.wrap = 0;
      this.gzhead = null;
      this.gzindex = 0;
      this.method = Z_DEFLATED;
      this.last_flush = -1;
      this.w_size = 0;
      this.w_bits = 0;
      this.w_mask = 0;
      this.window = null;
      this.window_size = 0;
      this.prev = null;
      this.head = null;
      this.ins_h = 0;
      this.hash_size = 0;
      this.hash_bits = 0;
      this.hash_mask = 0;
      this.hash_shift = 0;
      this.block_start = 0;
      this.match_length = 0;
      this.prev_match = 0;
      this.match_available = 0;
      this.strstart = 0;
      this.match_start = 0;
      this.lookahead = 0;
      this.prev_length = 0;
      this.max_chain_length = 0;
      this.max_lazy_match = 0;
      this.level = 0;
      this.strategy = 0;
      this.good_match = 0;
      this.nice_match = 0;
      this.dyn_ltree = new Uint16Array(HEAP_SIZE * 2);
      this.dyn_dtree = new Uint16Array((2 * D_CODES + 1) * 2);
      this.bl_tree = new Uint16Array((2 * BL_CODES + 1) * 2);
      zero(this.dyn_ltree);
      zero(this.dyn_dtree);
      zero(this.bl_tree);
      this.l_desc = null;
      this.d_desc = null;
      this.bl_desc = null;
      this.bl_count = new Uint16Array(MAX_BITS + 1);
      this.heap = new Uint16Array(2 * L_CODES + 1);
      zero(this.heap);
      this.heap_len = 0;
      this.heap_max = 0;
      this.depth = new Uint16Array(2 * L_CODES + 1);
      zero(this.depth);
      this.sym_buf = 0;
      this.lit_bufsize = 0;
      this.sym_next = 0;
      this.sym_end = 0;
      this.opt_len = 0;
      this.static_len = 0;
      this.matches = 0;
      this.insert = 0;
      this.bi_buf = 0;
      this.bi_valid = 0;
    }
    var deflateStateCheck = (strm) => {
      if (!strm) {
        return 1;
      }
      const s2 = strm.state;
      if (!s2 || s2.strm !== strm || s2.status !== INIT_STATE && //#ifdef GZIP
      s2.status !== GZIP_STATE && //#endif
      s2.status !== EXTRA_STATE && s2.status !== NAME_STATE && s2.status !== COMMENT_STATE && s2.status !== HCRC_STATE && s2.status !== BUSY_STATE && s2.status !== FINISH_STATE) {
        return 1;
      }
      return 0;
    };
    var deflateResetKeep = (strm) => {
      if (deflateStateCheck(strm)) {
        return err(strm, Z_STREAM_ERROR);
      }
      strm.total_in = strm.total_out = 0;
      strm.data_type = Z_UNKNOWN;
      const s2 = strm.state;
      s2.pending = 0;
      s2.pending_out = 0;
      if (s2.wrap < 0) {
        s2.wrap = -s2.wrap;
      }
      s2.status = //#ifdef GZIP
      s2.wrap === 2 ? GZIP_STATE : (
        //#endif
        s2.wrap ? INIT_STATE : BUSY_STATE
      );
      strm.adler = s2.wrap === 2 ? 0 : 1;
      s2.last_flush = -2;
      _tr_init(s2);
      return Z_OK;
    };
    var deflateReset = (strm) => {
      const ret = deflateResetKeep(strm);
      if (ret === Z_OK) {
        lm_init(strm.state);
      }
      return ret;
    };
    var deflateSetHeader = (strm, head) => {
      if (deflateStateCheck(strm) || strm.state.wrap !== 2) {
        return Z_STREAM_ERROR;
      }
      strm.state.gzhead = head;
      return Z_OK;
    };
    var deflateInit2 = (strm, level, method, windowBits, memLevel, strategy) => {
      if (!strm) {
        return Z_STREAM_ERROR;
      }
      let wrap = 1;
      if (level === Z_DEFAULT_COMPRESSION) {
        level = 6;
      }
      if (windowBits < 0) {
        wrap = 0;
        windowBits = -windowBits;
      } else if (windowBits > 15) {
        wrap = 2;
        windowBits -= 16;
      }
      if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED || windowBits < 8 || windowBits > 15 || level < 0 || level > 9 || strategy < 0 || strategy > Z_FIXED || windowBits === 8 && wrap !== 1) {
        return err(strm, Z_STREAM_ERROR);
      }
      if (windowBits === 8) {
        windowBits = 9;
      }
      const s2 = new DeflateState();
      strm.state = s2;
      s2.strm = strm;
      s2.status = INIT_STATE;
      s2.wrap = wrap;
      s2.gzhead = null;
      s2.w_bits = windowBits;
      s2.w_size = 1 << s2.w_bits;
      s2.w_mask = s2.w_size - 1;
      s2.hash_bits = memLevel + 7;
      s2.hash_size = 1 << s2.hash_bits;
      s2.hash_mask = s2.hash_size - 1;
      s2.hash_shift = ~~((s2.hash_bits + MIN_MATCH - 1) / MIN_MATCH);
      s2.window = new Uint8Array(s2.w_size * 2);
      s2.head = new Uint16Array(s2.hash_size);
      s2.prev = new Uint16Array(s2.w_size);
      s2.lit_bufsize = 1 << memLevel + 6;
      s2.pending_buf_size = s2.lit_bufsize * 4;
      s2.pending_buf = new Uint8Array(s2.pending_buf_size);
      s2.sym_buf = s2.lit_bufsize;
      s2.sym_end = (s2.lit_bufsize - 1) * 3;
      s2.level = level;
      s2.strategy = strategy;
      s2.method = method;
      return deflateReset(strm);
    };
    var deflateInit = (strm, level) => {
      return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);
    };
    var deflate = (strm, flush) => {
      if (deflateStateCheck(strm) || flush > Z_BLOCK || flush < 0) {
        return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;
      }
      const s2 = strm.state;
      if (!strm.output || strm.avail_in !== 0 && !strm.input || s2.status === FINISH_STATE && flush !== Z_FINISH) {
        return err(strm, strm.avail_out === 0 ? Z_BUF_ERROR : Z_STREAM_ERROR);
      }
      const old_flush = s2.last_flush;
      s2.last_flush = flush;
      if (s2.pending !== 0) {
        flush_pending(strm);
        if (strm.avail_out === 0) {
          s2.last_flush = -1;
          return Z_OK;
        }
      } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) && flush !== Z_FINISH) {
        return err(strm, Z_BUF_ERROR);
      }
      if (s2.status === FINISH_STATE && strm.avail_in !== 0) {
        return err(strm, Z_BUF_ERROR);
      }
      if (s2.status === INIT_STATE && s2.wrap === 0) {
        s2.status = BUSY_STATE;
      }
      if (s2.status === INIT_STATE) {
        let header = Z_DEFLATED + (s2.w_bits - 8 << 4) << 8;
        let level_flags = -1;
        if (s2.strategy >= Z_HUFFMAN_ONLY || s2.level < 2) {
          level_flags = 0;
        } else if (s2.level < 6) {
          level_flags = 1;
        } else if (s2.level === 6) {
          level_flags = 2;
        } else {
          level_flags = 3;
        }
        header |= level_flags << 6;
        if (s2.strstart !== 0) {
          header |= PRESET_DICT;
        }
        header += 31 - header % 31;
        putShortMSB(s2, header);
        if (s2.strstart !== 0) {
          putShortMSB(s2, strm.adler >>> 16);
          putShortMSB(s2, strm.adler & 65535);
        }
        strm.adler = 1;
        s2.status = BUSY_STATE;
        flush_pending(strm);
        if (s2.pending !== 0) {
          s2.last_flush = -1;
          return Z_OK;
        }
      }
      if (s2.status === GZIP_STATE) {
        strm.adler = 0;
        put_byte(s2, 31);
        put_byte(s2, 139);
        put_byte(s2, 8);
        if (!s2.gzhead) {
          put_byte(s2, 0);
          put_byte(s2, 0);
          put_byte(s2, 0);
          put_byte(s2, 0);
          put_byte(s2, 0);
          put_byte(s2, s2.level === 9 ? 2 : s2.strategy >= Z_HUFFMAN_ONLY || s2.level < 2 ? 4 : 0);
          put_byte(s2, OS_CODE);
          s2.status = BUSY_STATE;
          flush_pending(strm);
          if (s2.pending !== 0) {
            s2.last_flush = -1;
            return Z_OK;
          }
        } else {
          put_byte(
            s2,
            (s2.gzhead.text ? 1 : 0) + (s2.gzhead.hcrc ? 2 : 0) + (!s2.gzhead.extra ? 0 : 4) + (!s2.gzhead.name ? 0 : 8) + (!s2.gzhead.comment ? 0 : 16)
          );
          put_byte(s2, s2.gzhead.time & 255);
          put_byte(s2, s2.gzhead.time >> 8 & 255);
          put_byte(s2, s2.gzhead.time >> 16 & 255);
          put_byte(s2, s2.gzhead.time >> 24 & 255);
          put_byte(s2, s2.level === 9 ? 2 : s2.strategy >= Z_HUFFMAN_ONLY || s2.level < 2 ? 4 : 0);
          put_byte(s2, s2.gzhead.os & 255);
          if (s2.gzhead.extra && s2.gzhead.extra.length) {
            put_byte(s2, s2.gzhead.extra.length & 255);
            put_byte(s2, s2.gzhead.extra.length >> 8 & 255);
          }
          if (s2.gzhead.hcrc) {
            strm.adler = crc32(strm.adler, s2.pending_buf, s2.pending, 0);
          }
          s2.gzindex = 0;
          s2.status = EXTRA_STATE;
        }
      }
      if (s2.status === EXTRA_STATE) {
        if (s2.gzhead.extra) {
          let beg = s2.pending;
          let left = (s2.gzhead.extra.length & 65535) - s2.gzindex;
          while (s2.pending + left > s2.pending_buf_size) {
            let copy = s2.pending_buf_size - s2.pending;
            s2.pending_buf.set(s2.gzhead.extra.subarray(s2.gzindex, s2.gzindex + copy), s2.pending);
            s2.pending = s2.pending_buf_size;
            if (s2.gzhead.hcrc && s2.pending > beg) {
              strm.adler = crc32(strm.adler, s2.pending_buf, s2.pending - beg, beg);
            }
            s2.gzindex += copy;
            flush_pending(strm);
            if (s2.pending !== 0) {
              s2.last_flush = -1;
              return Z_OK;
            }
            beg = 0;
            left -= copy;
          }
          let gzhead_extra = new Uint8Array(s2.gzhead.extra);
          s2.pending_buf.set(gzhead_extra.subarray(s2.gzindex, s2.gzindex + left), s2.pending);
          s2.pending += left;
          if (s2.gzhead.hcrc && s2.pending > beg) {
            strm.adler = crc32(strm.adler, s2.pending_buf, s2.pending - beg, beg);
          }
          s2.gzindex = 0;
        }
        s2.status = NAME_STATE;
      }
      if (s2.status === NAME_STATE) {
        if (s2.gzhead.name) {
          let beg = s2.pending;
          let val;
          do {
            if (s2.pending === s2.pending_buf_size) {
              if (s2.gzhead.hcrc && s2.pending > beg) {
                strm.adler = crc32(strm.adler, s2.pending_buf, s2.pending - beg, beg);
              }
              flush_pending(strm);
              if (s2.pending !== 0) {
                s2.last_flush = -1;
                return Z_OK;
              }
              beg = 0;
            }
            if (s2.gzindex < s2.gzhead.name.length) {
              val = s2.gzhead.name.charCodeAt(s2.gzindex++) & 255;
            } else {
              val = 0;
            }
            put_byte(s2, val);
          } while (val !== 0);
          if (s2.gzhead.hcrc && s2.pending > beg) {
            strm.adler = crc32(strm.adler, s2.pending_buf, s2.pending - beg, beg);
          }
          s2.gzindex = 0;
        }
        s2.status = COMMENT_STATE;
      }
      if (s2.status === COMMENT_STATE) {
        if (s2.gzhead.comment) {
          let beg = s2.pending;
          let val;
          do {
            if (s2.pending === s2.pending_buf_size) {
              if (s2.gzhead.hcrc && s2.pending > beg) {
                strm.adler = crc32(strm.adler, s2.pending_buf, s2.pending - beg, beg);
              }
              flush_pending(strm);
              if (s2.pending !== 0) {
                s2.last_flush = -1;
                return Z_OK;
              }
              beg = 0;
            }
            if (s2.gzindex < s2.gzhead.comment.length) {
              val = s2.gzhead.comment.charCodeAt(s2.gzindex++) & 255;
            } else {
              val = 0;
            }
            put_byte(s2, val);
          } while (val !== 0);
          if (s2.gzhead.hcrc && s2.pending > beg) {
            strm.adler = crc32(strm.adler, s2.pending_buf, s2.pending - beg, beg);
          }
        }
        s2.status = HCRC_STATE;
      }
      if (s2.status === HCRC_STATE) {
        if (s2.gzhead.hcrc) {
          if (s2.pending + 2 > s2.pending_buf_size) {
            flush_pending(strm);
            if (s2.pending !== 0) {
              s2.last_flush = -1;
              return Z_OK;
            }
          }
          put_byte(s2, strm.adler & 255);
          put_byte(s2, strm.adler >> 8 & 255);
          strm.adler = 0;
        }
        s2.status = BUSY_STATE;
        flush_pending(strm);
        if (s2.pending !== 0) {
          s2.last_flush = -1;
          return Z_OK;
        }
      }
      if (strm.avail_in !== 0 || s2.lookahead !== 0 || flush !== Z_NO_FLUSH && s2.status !== FINISH_STATE) {
        let bstate = s2.level === 0 ? deflate_stored(s2, flush) : s2.strategy === Z_HUFFMAN_ONLY ? deflate_huff(s2, flush) : s2.strategy === Z_RLE ? deflate_rle(s2, flush) : configuration_table[s2.level].func(s2, flush);
        if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {
          s2.status = FINISH_STATE;
        }
        if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {
          if (strm.avail_out === 0) {
            s2.last_flush = -1;
          }
          return Z_OK;
        }
        if (bstate === BS_BLOCK_DONE) {
          if (flush === Z_PARTIAL_FLUSH) {
            _tr_align(s2);
          } else if (flush !== Z_BLOCK) {
            _tr_stored_block(s2, 0, 0, false);
            if (flush === Z_FULL_FLUSH) {
              zero(s2.head);
              if (s2.lookahead === 0) {
                s2.strstart = 0;
                s2.block_start = 0;
                s2.insert = 0;
              }
            }
          }
          flush_pending(strm);
          if (strm.avail_out === 0) {
            s2.last_flush = -1;
            return Z_OK;
          }
        }
      }
      if (flush !== Z_FINISH) {
        return Z_OK;
      }
      if (s2.wrap <= 0) {
        return Z_STREAM_END;
      }
      if (s2.wrap === 2) {
        put_byte(s2, strm.adler & 255);
        put_byte(s2, strm.adler >> 8 & 255);
        put_byte(s2, strm.adler >> 16 & 255);
        put_byte(s2, strm.adler >> 24 & 255);
        put_byte(s2, strm.total_in & 255);
        put_byte(s2, strm.total_in >> 8 & 255);
        put_byte(s2, strm.total_in >> 16 & 255);
        put_byte(s2, strm.total_in >> 24 & 255);
      } else {
        putShortMSB(s2, strm.adler >>> 16);
        putShortMSB(s2, strm.adler & 65535);
      }
      flush_pending(strm);
      if (s2.wrap > 0) {
        s2.wrap = -s2.wrap;
      }
      return s2.pending !== 0 ? Z_OK : Z_STREAM_END;
    };
    var deflateEnd = (strm) => {
      if (deflateStateCheck(strm)) {
        return Z_STREAM_ERROR;
      }
      const status = strm.state.status;
      strm.state = null;
      return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;
    };
    var deflateSetDictionary = (strm, dictionary) => {
      let dictLength = dictionary.length;
      if (deflateStateCheck(strm)) {
        return Z_STREAM_ERROR;
      }
      const s2 = strm.state;
      const wrap = s2.wrap;
      if (wrap === 2 || wrap === 1 && s2.status !== INIT_STATE || s2.lookahead) {
        return Z_STREAM_ERROR;
      }
      if (wrap === 1) {
        strm.adler = adler32(strm.adler, dictionary, dictLength, 0);
      }
      s2.wrap = 0;
      if (dictLength >= s2.w_size) {
        if (wrap === 0) {
          zero(s2.head);
          s2.strstart = 0;
          s2.block_start = 0;
          s2.insert = 0;
        }
        let tmpDict = new Uint8Array(s2.w_size);
        tmpDict.set(dictionary.subarray(dictLength - s2.w_size, dictLength), 0);
        dictionary = tmpDict;
        dictLength = s2.w_size;
      }
      const avail = strm.avail_in;
      const next = strm.next_in;
      const input = strm.input;
      strm.avail_in = dictLength;
      strm.next_in = 0;
      strm.input = dictionary;
      fill_window(s2);
      while (s2.lookahead >= MIN_MATCH) {
        let str = s2.strstart;
        let n2 = s2.lookahead - (MIN_MATCH - 1);
        do {
          s2.ins_h = HASH(s2, s2.ins_h, s2.window[str + MIN_MATCH - 1]);
          s2.prev[str & s2.w_mask] = s2.head[s2.ins_h];
          s2.head[s2.ins_h] = str;
          str++;
        } while (--n2);
        s2.strstart = str;
        s2.lookahead = MIN_MATCH - 1;
        fill_window(s2);
      }
      s2.strstart += s2.lookahead;
      s2.block_start = s2.strstart;
      s2.insert = s2.lookahead;
      s2.lookahead = 0;
      s2.match_length = s2.prev_length = MIN_MATCH - 1;
      s2.match_available = 0;
      strm.next_in = next;
      strm.input = input;
      strm.avail_in = avail;
      s2.wrap = wrap;
      return Z_OK;
    };
    module.exports.deflateInit = deflateInit;
    module.exports.deflateInit2 = deflateInit2;
    module.exports.deflateReset = deflateReset;
    module.exports.deflateResetKeep = deflateResetKeep;
    module.exports.deflateSetHeader = deflateSetHeader;
    module.exports.deflate = deflate;
    module.exports.deflateEnd = deflateEnd;
    module.exports.deflateSetDictionary = deflateSetDictionary;
    module.exports.deflateInfo = "pako deflate (from Nodeca project)";
  }
});

// node_modules/pako/lib/utils/common.js
var require_common = __commonJS({
  "node_modules/pako/lib/utils/common.js"(exports, module) {
    "use strict";
    var _has = (obj, key) => {
      return Object.prototype.hasOwnProperty.call(obj, key);
    };
    module.exports.assign = function(obj) {
      const sources = Array.prototype.slice.call(arguments, 1);
      while (sources.length) {
        const source = sources.shift();
        if (!source) {
          continue;
        }
        if (typeof source !== "object") {
          throw new TypeError(source + "must be non-object");
        }
        for (const p3 in source) {
          if (_has(source, p3)) {
            obj[p3] = source[p3];
          }
        }
      }
      return obj;
    };
    module.exports.flattenChunks = (chunks) => {
      let len = 0;
      for (let i3 = 0, l2 = chunks.length; i3 < l2; i3++) {
        len += chunks[i3].length;
      }
      const result = new Uint8Array(len);
      for (let i3 = 0, pos = 0, l2 = chunks.length; i3 < l2; i3++) {
        let chunk = chunks[i3];
        result.set(chunk, pos);
        pos += chunk.length;
      }
      return result;
    };
  }
});

// node_modules/pako/lib/utils/strings.js
var require_strings = __commonJS({
  "node_modules/pako/lib/utils/strings.js"(exports, module) {
    "use strict";
    var STR_APPLY_UIA_OK = true;
    try {
      String.fromCharCode.apply(null, new Uint8Array(1));
    } catch (__) {
      STR_APPLY_UIA_OK = false;
    }
    var _utf8len = new Uint8Array(256);
    for (let q2 = 0; q2 < 256; q2++) {
      _utf8len[q2] = q2 >= 252 ? 6 : q2 >= 248 ? 5 : q2 >= 240 ? 4 : q2 >= 224 ? 3 : q2 >= 192 ? 2 : 1;
    }
    _utf8len[254] = _utf8len[254] = 1;
    module.exports.string2buf = (str) => {
      if (typeof TextEncoder === "function" && TextEncoder.prototype.encode) {
        return new TextEncoder().encode(str);
      }
      let buf, c2, c22, m_pos, i3, str_len = str.length, buf_len = 0;
      for (m_pos = 0; m_pos < str_len; m_pos++) {
        c2 = str.charCodeAt(m_pos);
        if ((c2 & 64512) === 55296 && m_pos + 1 < str_len) {
          c22 = str.charCodeAt(m_pos + 1);
          if ((c22 & 64512) === 56320) {
            c2 = 65536 + (c2 - 55296 << 10) + (c22 - 56320);
            m_pos++;
          }
        }
        buf_len += c2 < 128 ? 1 : c2 < 2048 ? 2 : c2 < 65536 ? 3 : 4;
      }
      buf = new Uint8Array(buf_len);
      for (i3 = 0, m_pos = 0; i3 < buf_len; m_pos++) {
        c2 = str.charCodeAt(m_pos);
        if ((c2 & 64512) === 55296 && m_pos + 1 < str_len) {
          c22 = str.charCodeAt(m_pos + 1);
          if ((c22 & 64512) === 56320) {
            c2 = 65536 + (c2 - 55296 << 10) + (c22 - 56320);
            m_pos++;
          }
        }
        if (c2 < 128) {
          buf[i3++] = c2;
        } else if (c2 < 2048) {
          buf[i3++] = 192 | c2 >>> 6;
          buf[i3++] = 128 | c2 & 63;
        } else if (c2 < 65536) {
          buf[i3++] = 224 | c2 >>> 12;
          buf[i3++] = 128 | c2 >>> 6 & 63;
          buf[i3++] = 128 | c2 & 63;
        } else {
          buf[i3++] = 240 | c2 >>> 18;
          buf[i3++] = 128 | c2 >>> 12 & 63;
          buf[i3++] = 128 | c2 >>> 6 & 63;
          buf[i3++] = 128 | c2 & 63;
        }
      }
      return buf;
    };
    var buf2binstring = (buf, len) => {
      if (len < 65534) {
        if (buf.subarray && STR_APPLY_UIA_OK) {
          return String.fromCharCode.apply(null, buf.length === len ? buf : buf.subarray(0, len));
        }
      }
      let result = "";
      for (let i3 = 0; i3 < len; i3++) {
        result += String.fromCharCode(buf[i3]);
      }
      return result;
    };
    module.exports.buf2string = (buf, max) => {
      const len = max || buf.length;
      if (typeof TextDecoder === "function" && TextDecoder.prototype.decode) {
        return new TextDecoder().decode(buf.subarray(0, max));
      }
      let i3, out;
      const utf16buf = new Array(len * 2);
      for (out = 0, i3 = 0; i3 < len; ) {
        let c2 = buf[i3++];
        if (c2 < 128) {
          utf16buf[out++] = c2;
          continue;
        }
        let c_len = _utf8len[c2];
        if (c_len > 4) {
          utf16buf[out++] = 65533;
          i3 += c_len - 1;
          continue;
        }
        c2 &= c_len === 2 ? 31 : c_len === 3 ? 15 : 7;
        while (c_len > 1 && i3 < len) {
          c2 = c2 << 6 | buf[i3++] & 63;
          c_len--;
        }
        if (c_len > 1) {
          utf16buf[out++] = 65533;
          continue;
        }
        if (c2 < 65536) {
          utf16buf[out++] = c2;
        } else {
          c2 -= 65536;
          utf16buf[out++] = 55296 | c2 >> 10 & 1023;
          utf16buf[out++] = 56320 | c2 & 1023;
        }
      }
      return buf2binstring(utf16buf, out);
    };
    module.exports.utf8border = (buf, max) => {
      max = max || buf.length;
      if (max > buf.length) {
        max = buf.length;
      }
      let pos = max - 1;
      while (pos >= 0 && (buf[pos] & 192) === 128) {
        pos--;
      }
      if (pos < 0) {
        return max;
      }
      if (pos === 0) {
        return max;
      }
      return pos + _utf8len[buf[pos]] > max ? pos : max;
    };
  }
});

// node_modules/pako/lib/zlib/zstream.js
var require_zstream = __commonJS({
  "node_modules/pako/lib/zlib/zstream.js"(exports, module) {
    "use strict";
    function ZStream() {
      this.input = null;
      this.next_in = 0;
      this.avail_in = 0;
      this.total_in = 0;
      this.output = null;
      this.next_out = 0;
      this.avail_out = 0;
      this.total_out = 0;
      this.msg = "";
      this.state = null;
      this.data_type = 2;
      this.adler = 0;
    }
    module.exports = ZStream;
  }
});

// node_modules/pako/lib/deflate.js
var require_deflate2 = __commonJS({
  "node_modules/pako/lib/deflate.js"(exports, module) {
    "use strict";
    var zlib_deflate = require_deflate();
    var utils = require_common();
    var strings = require_strings();
    var msg = require_messages10();
    var ZStream = require_zstream();
    var toString = Object.prototype.toString;
    var {
      Z_NO_FLUSH,
      Z_SYNC_FLUSH,
      Z_FULL_FLUSH,
      Z_FINISH,
      Z_OK,
      Z_STREAM_END,
      Z_DEFAULT_COMPRESSION,
      Z_DEFAULT_STRATEGY,
      Z_DEFLATED
    } = require_constants();
    function Deflate(options) {
      this.options = utils.assign({
        level: Z_DEFAULT_COMPRESSION,
        method: Z_DEFLATED,
        chunkSize: 16384,
        windowBits: 15,
        memLevel: 8,
        strategy: Z_DEFAULT_STRATEGY
      }, options || {});
      let opt = this.options;
      if (opt.raw && opt.windowBits > 0) {
        opt.windowBits = -opt.windowBits;
      } else if (opt.gzip && opt.windowBits > 0 && opt.windowBits < 16) {
        opt.windowBits += 16;
      }
      this.err = 0;
      this.msg = "";
      this.ended = false;
      this.chunks = [];
      this.strm = new ZStream();
      this.strm.avail_out = 0;
      let status = zlib_deflate.deflateInit2(
        this.strm,
        opt.level,
        opt.method,
        opt.windowBits,
        opt.memLevel,
        opt.strategy
      );
      if (status !== Z_OK) {
        throw new Error(msg[status]);
      }
      if (opt.header) {
        zlib_deflate.deflateSetHeader(this.strm, opt.header);
      }
      if (opt.dictionary) {
        let dict;
        if (typeof opt.dictionary === "string") {
          dict = strings.string2buf(opt.dictionary);
        } else if (toString.call(opt.dictionary) === "[object ArrayBuffer]") {
          dict = new Uint8Array(opt.dictionary);
        } else {
          dict = opt.dictionary;
        }
        status = zlib_deflate.deflateSetDictionary(this.strm, dict);
        if (status !== Z_OK) {
          throw new Error(msg[status]);
        }
        this._dict_set = true;
      }
    }
    Deflate.prototype.push = function(data, flush_mode) {
      const strm = this.strm;
      const chunkSize = this.options.chunkSize;
      let status, _flush_mode;
      if (this.ended) {
        return false;
      }
      if (flush_mode === ~~flush_mode)
        _flush_mode = flush_mode;
      else
        _flush_mode = flush_mode === true ? Z_FINISH : Z_NO_FLUSH;
      if (typeof data === "string") {
        strm.input = strings.string2buf(data);
      } else if (toString.call(data) === "[object ArrayBuffer]") {
        strm.input = new Uint8Array(data);
      } else {
        strm.input = data;
      }
      strm.next_in = 0;
      strm.avail_in = strm.input.length;
      for (; ; ) {
        if (strm.avail_out === 0) {
          strm.output = new Uint8Array(chunkSize);
          strm.next_out = 0;
          strm.avail_out = chunkSize;
        }
        if ((_flush_mode === Z_SYNC_FLUSH || _flush_mode === Z_FULL_FLUSH) && strm.avail_out <= 6) {
          this.onData(strm.output.subarray(0, strm.next_out));
          strm.avail_out = 0;
          continue;
        }
        status = zlib_deflate.deflate(strm, _flush_mode);
        if (status === Z_STREAM_END) {
          if (strm.next_out > 0) {
            this.onData(strm.output.subarray(0, strm.next_out));
          }
          status = zlib_deflate.deflateEnd(this.strm);
          this.onEnd(status);
          this.ended = true;
          return status === Z_OK;
        }
        if (strm.avail_out === 0) {
          this.onData(strm.output);
          continue;
        }
        if (_flush_mode > 0 && strm.next_out > 0) {
          this.onData(strm.output.subarray(0, strm.next_out));
          strm.avail_out = 0;
          continue;
        }
        if (strm.avail_in === 0)
          break;
      }
      return true;
    };
    Deflate.prototype.onData = function(chunk) {
      this.chunks.push(chunk);
    };
    Deflate.prototype.onEnd = function(status) {
      if (status === Z_OK) {
        this.result = utils.flattenChunks(this.chunks);
      }
      this.chunks = [];
      this.err = status;
      this.msg = this.strm.msg;
    };
    function deflate(input, options) {
      const deflator = new Deflate(options);
      deflator.push(input, true);
      if (deflator.err) {
        throw deflator.msg || msg[deflator.err];
      }
      return deflator.result;
    }
    function deflateRaw(input, options) {
      options = options || {};
      options.raw = true;
      return deflate(input, options);
    }
    function gzip(input, options) {
      options = options || {};
      options.gzip = true;
      return deflate(input, options);
    }
    module.exports.Deflate = Deflate;
    module.exports.deflate = deflate;
    module.exports.deflateRaw = deflateRaw;
    module.exports.gzip = gzip;
    module.exports.constants = require_constants();
  }
});

// node_modules/pako/lib/zlib/inffast.js
var require_inffast = __commonJS({
  "node_modules/pako/lib/zlib/inffast.js"(exports, module) {
    "use strict";
    var BAD = 16209;
    var TYPE = 16191;
    module.exports = function inflate_fast(strm, start) {
      let _in;
      let last;
      let _out;
      let beg;
      let end;
      let dmax;
      let wsize;
      let whave;
      let wnext;
      let s_window;
      let hold;
      let bits;
      let lcode;
      let dcode;
      let lmask;
      let dmask;
      let here;
      let op;
      let len;
      let dist;
      let from;
      let from_source;
      let input, output;
      const state = strm.state;
      _in = strm.next_in;
      input = strm.input;
      last = _in + (strm.avail_in - 5);
      _out = strm.next_out;
      output = strm.output;
      beg = _out - (start - strm.avail_out);
      end = _out + (strm.avail_out - 257);
      dmax = state.dmax;
      wsize = state.wsize;
      whave = state.whave;
      wnext = state.wnext;
      s_window = state.window;
      hold = state.hold;
      bits = state.bits;
      lcode = state.lencode;
      dcode = state.distcode;
      lmask = (1 << state.lenbits) - 1;
      dmask = (1 << state.distbits) - 1;
      top:
        do {
          if (bits < 15) {
            hold += input[_in++] << bits;
            bits += 8;
            hold += input[_in++] << bits;
            bits += 8;
          }
          here = lcode[hold & lmask];
          dolen:
            for (; ; ) {
              op = here >>> 24;
              hold >>>= op;
              bits -= op;
              op = here >>> 16 & 255;
              if (op === 0) {
                output[_out++] = here & 65535;
              } else if (op & 16) {
                len = here & 65535;
                op &= 15;
                if (op) {
                  if (bits < op) {
                    hold += input[_in++] << bits;
                    bits += 8;
                  }
                  len += hold & (1 << op) - 1;
                  hold >>>= op;
                  bits -= op;
                }
                if (bits < 15) {
                  hold += input[_in++] << bits;
                  bits += 8;
                  hold += input[_in++] << bits;
                  bits += 8;
                }
                here = dcode[hold & dmask];
                dodist:
                  for (; ; ) {
                    op = here >>> 24;
                    hold >>>= op;
                    bits -= op;
                    op = here >>> 16 & 255;
                    if (op & 16) {
                      dist = here & 65535;
                      op &= 15;
                      if (bits < op) {
                        hold += input[_in++] << bits;
                        bits += 8;
                        if (bits < op) {
                          hold += input[_in++] << bits;
                          bits += 8;
                        }
                      }
                      dist += hold & (1 << op) - 1;
                      if (dist > dmax) {
                        strm.msg = "invalid distance too far back";
                        state.mode = BAD;
                        break top;
                      }
                      hold >>>= op;
                      bits -= op;
                      op = _out - beg;
                      if (dist > op) {
                        op = dist - op;
                        if (op > whave) {
                          if (state.sane) {
                            strm.msg = "invalid distance too far back";
                            state.mode = BAD;
                            break top;
                          }
                        }
                        from = 0;
                        from_source = s_window;
                        if (wnext === 0) {
                          from += wsize - op;
                          if (op < len) {
                            len -= op;
                            do {
                              output[_out++] = s_window[from++];
                            } while (--op);
                            from = _out - dist;
                            from_source = output;
                          }
                        } else if (wnext < op) {
                          from += wsize + wnext - op;
                          op -= wnext;
                          if (op < len) {
                            len -= op;
                            do {
                              output[_out++] = s_window[from++];
                            } while (--op);
                            from = 0;
                            if (wnext < len) {
                              op = wnext;
                              len -= op;
                              do {
                                output[_out++] = s_window[from++];
                              } while (--op);
                              from = _out - dist;
                              from_source = output;
                            }
                          }
                        } else {
                          from += wnext - op;
                          if (op < len) {
                            len -= op;
                            do {
                              output[_out++] = s_window[from++];
                            } while (--op);
                            from = _out - dist;
                            from_source = output;
                          }
                        }
                        while (len > 2) {
                          output[_out++] = from_source[from++];
                          output[_out++] = from_source[from++];
                          output[_out++] = from_source[from++];
                          len -= 3;
                        }
                        if (len) {
                          output[_out++] = from_source[from++];
                          if (len > 1) {
                            output[_out++] = from_source[from++];
                          }
                        }
                      } else {
                        from = _out - dist;
                        do {
                          output[_out++] = output[from++];
                          output[_out++] = output[from++];
                          output[_out++] = output[from++];
                          len -= 3;
                        } while (len > 2);
                        if (len) {
                          output[_out++] = output[from++];
                          if (len > 1) {
                            output[_out++] = output[from++];
                          }
                        }
                      }
                    } else if ((op & 64) === 0) {
                      here = dcode[(here & 65535) + (hold & (1 << op) - 1)];
                      continue dodist;
                    } else {
                      strm.msg = "invalid distance code";
                      state.mode = BAD;
                      break top;
                    }
                    break;
                  }
              } else if ((op & 64) === 0) {
                here = lcode[(here & 65535) + (hold & (1 << op) - 1)];
                continue dolen;
              } else if (op & 32) {
                state.mode = TYPE;
                break top;
              } else {
                strm.msg = "invalid literal/length code";
                state.mode = BAD;
                break top;
              }
              break;
            }
        } while (_in < last && _out < end);
      len = bits >> 3;
      _in -= len;
      bits -= len << 3;
      hold &= (1 << bits) - 1;
      strm.next_in = _in;
      strm.next_out = _out;
      strm.avail_in = _in < last ? 5 + (last - _in) : 5 - (_in - last);
      strm.avail_out = _out < end ? 257 + (end - _out) : 257 - (_out - end);
      state.hold = hold;
      state.bits = bits;
      return;
    };
  }
});

// node_modules/pako/lib/zlib/inftrees.js
var require_inftrees = __commonJS({
  "node_modules/pako/lib/zlib/inftrees.js"(exports, module) {
    "use strict";
    var MAXBITS = 15;
    var ENOUGH_LENS = 852;
    var ENOUGH_DISTS = 592;
    var CODES = 0;
    var LENS = 1;
    var DISTS = 2;
    var lbase = new Uint16Array([
      /* Length codes 257..285 base */
      3,
      4,
      5,
      6,
      7,
      8,
      9,
      10,
      11,
      13,
      15,
      17,
      19,
      23,
      27,
      31,
      35,
      43,
      51,
      59,
      67,
      83,
      99,
      115,
      131,
      163,
      195,
      227,
      258,
      0,
      0
    ]);
    var lext = new Uint8Array([
      /* Length codes 257..285 extra */
      16,
      16,
      16,
      16,
      16,
      16,
      16,
      16,
      17,
      17,
      17,
      17,
      18,
      18,
      18,
      18,
      19,
      19,
      19,
      19,
      20,
      20,
      20,
      20,
      21,
      21,
      21,
      21,
      16,
      72,
      78
    ]);
    var dbase = new Uint16Array([
      /* Distance codes 0..29 base */
      1,
      2,
      3,
      4,
      5,
      7,
      9,
      13,
      17,
      25,
      33,
      49,
      65,
      97,
      129,
      193,
      257,
      385,
      513,
      769,
      1025,
      1537,
      2049,
      3073,
      4097,
      6145,
      8193,
      12289,
      16385,
      24577,
      0,
      0
    ]);
    var dext = new Uint8Array([
      /* Distance codes 0..29 extra */
      16,
      16,
      16,
      16,
      17,
      17,
      18,
      18,
      19,
      19,
      20,
      20,
      21,
      21,
      22,
      22,
      23,
      23,
      24,
      24,
      25,
      25,
      26,
      26,
      27,
      27,
      28,
      28,
      29,
      29,
      64,
      64
    ]);
    var inflate_table = (type, lens, lens_index, codes, table, table_index, work, opts) => {
      const bits = opts.bits;
      let len = 0;
      let sym = 0;
      let min = 0, max = 0;
      let root = 0;
      let curr = 0;
      let drop = 0;
      let left = 0;
      let used = 0;
      let huff = 0;
      let incr;
      let fill;
      let low;
      let mask;
      let next;
      let base = null;
      let match;
      const count = new Uint16Array(MAXBITS + 1);
      const offs = new Uint16Array(MAXBITS + 1);
      let extra = null;
      let here_bits, here_op, here_val;
      for (len = 0; len <= MAXBITS; len++) {
        count[len] = 0;
      }
      for (sym = 0; sym < codes; sym++) {
        count[lens[lens_index + sym]]++;
      }
      root = bits;
      for (max = MAXBITS; max >= 1; max--) {
        if (count[max] !== 0) {
          break;
        }
      }
      if (root > max) {
        root = max;
      }
      if (max === 0) {
        table[table_index++] = 1 << 24 | 64 << 16 | 0;
        table[table_index++] = 1 << 24 | 64 << 16 | 0;
        opts.bits = 1;
        return 0;
      }
      for (min = 1; min < max; min++) {
        if (count[min] !== 0) {
          break;
        }
      }
      if (root < min) {
        root = min;
      }
      left = 1;
      for (len = 1; len <= MAXBITS; len++) {
        left <<= 1;
        left -= count[len];
        if (left < 0) {
          return -1;
        }
      }
      if (left > 0 && (type === CODES || max !== 1)) {
        return -1;
      }
      offs[1] = 0;
      for (len = 1; len < MAXBITS; len++) {
        offs[len + 1] = offs[len] + count[len];
      }
      for (sym = 0; sym < codes; sym++) {
        if (lens[lens_index + sym] !== 0) {
          work[offs[lens[lens_index + sym]]++] = sym;
        }
      }
      if (type === CODES) {
        base = extra = work;
        match = 20;
      } else if (type === LENS) {
        base = lbase;
        extra = lext;
        match = 257;
      } else {
        base = dbase;
        extra = dext;
        match = 0;
      }
      huff = 0;
      sym = 0;
      len = min;
      next = table_index;
      curr = root;
      drop = 0;
      low = -1;
      used = 1 << root;
      mask = used - 1;
      if (type === LENS && used > ENOUGH_LENS || type === DISTS && used > ENOUGH_DISTS) {
        return 1;
      }
      for (; ; ) {
        here_bits = len - drop;
        if (work[sym] + 1 < match) {
          here_op = 0;
          here_val = work[sym];
        } else if (work[sym] >= match) {
          here_op = extra[work[sym] - match];
          here_val = base[work[sym] - match];
        } else {
          here_op = 32 + 64;
          here_val = 0;
        }
        incr = 1 << len - drop;
        fill = 1 << curr;
        min = fill;
        do {
          fill -= incr;
          table[next + (huff >> drop) + fill] = here_bits << 24 | here_op << 16 | here_val | 0;
        } while (fill !== 0);
        incr = 1 << len - 1;
        while (huff & incr) {
          incr >>= 1;
        }
        if (incr !== 0) {
          huff &= incr - 1;
          huff += incr;
        } else {
          huff = 0;
        }
        sym++;
        if (--count[len] === 0) {
          if (len === max) {
            break;
          }
          len = lens[lens_index + work[sym]];
        }
        if (len > root && (huff & mask) !== low) {
          if (drop === 0) {
            drop = root;
          }
          next += min;
          curr = len - drop;
          left = 1 << curr;
          while (curr + drop < max) {
            left -= count[curr + drop];
            if (left <= 0) {
              break;
            }
            curr++;
            left <<= 1;
          }
          used += 1 << curr;
          if (type === LENS && used > ENOUGH_LENS || type === DISTS && used > ENOUGH_DISTS) {
            return 1;
          }
          low = huff & mask;
          table[low] = root << 24 | curr << 16 | next - table_index | 0;
        }
      }
      if (huff !== 0) {
        table[next + huff] = len - drop << 24 | 64 << 16 | 0;
      }
      opts.bits = root;
      return 0;
    };
    module.exports = inflate_table;
  }
});

// node_modules/pako/lib/zlib/inflate.js
var require_inflate = __commonJS({
  "node_modules/pako/lib/zlib/inflate.js"(exports, module) {
    "use strict";
    var adler32 = require_adler32();
    var crc32 = require_crc32();
    var inflate_fast = require_inffast();
    var inflate_table = require_inftrees();
    var CODES = 0;
    var LENS = 1;
    var DISTS = 2;
    var {
      Z_FINISH,
      Z_BLOCK,
      Z_TREES,
      Z_OK,
      Z_STREAM_END,
      Z_NEED_DICT,
      Z_STREAM_ERROR,
      Z_DATA_ERROR,
      Z_MEM_ERROR,
      Z_BUF_ERROR,
      Z_DEFLATED
    } = require_constants();
    var HEAD = 16180;
    var FLAGS = 16181;
    var TIME = 16182;
    var OS = 16183;
    var EXLEN = 16184;
    var EXTRA = 16185;
    var NAME = 16186;
    var COMMENT = 16187;
    var HCRC = 16188;
    var DICTID = 16189;
    var DICT = 16190;
    var TYPE = 16191;
    var TYPEDO = 16192;
    var STORED = 16193;
    var COPY_ = 16194;
    var COPY = 16195;
    var TABLE = 16196;
    var LENLENS = 16197;
    var CODELENS = 16198;
    var LEN_ = 16199;
    var LEN = 16200;
    var LENEXT = 16201;
    var DIST = 16202;
    var DISTEXT = 16203;
    var MATCH = 16204;
    var LIT = 16205;
    var CHECK = 16206;
    var LENGTH = 16207;
    var DONE = 16208;
    var BAD = 16209;
    var MEM = 16210;
    var SYNC = 16211;
    var ENOUGH_LENS = 852;
    var ENOUGH_DISTS = 592;
    var MAX_WBITS = 15;
    var DEF_WBITS = MAX_WBITS;
    var zswap32 = (q2) => {
      return (q2 >>> 24 & 255) + (q2 >>> 8 & 65280) + ((q2 & 65280) << 8) + ((q2 & 255) << 24);
    };
    function InflateState() {
      this.strm = null;
      this.mode = 0;
      this.last = false;
      this.wrap = 0;
      this.havedict = false;
      this.flags = 0;
      this.dmax = 0;
      this.check = 0;
      this.total = 0;
      this.head = null;
      this.wbits = 0;
      this.wsize = 0;
      this.whave = 0;
      this.wnext = 0;
      this.window = null;
      this.hold = 0;
      this.bits = 0;
      this.length = 0;
      this.offset = 0;
      this.extra = 0;
      this.lencode = null;
      this.distcode = null;
      this.lenbits = 0;
      this.distbits = 0;
      this.ncode = 0;
      this.nlen = 0;
      this.ndist = 0;
      this.have = 0;
      this.next = null;
      this.lens = new Uint16Array(320);
      this.work = new Uint16Array(288);
      this.lendyn = null;
      this.distdyn = null;
      this.sane = 0;
      this.back = 0;
      this.was = 0;
    }
    var inflateStateCheck = (strm) => {
      if (!strm) {
        return 1;
      }
      const state = strm.state;
      if (!state || state.strm !== strm || state.mode < HEAD || state.mode > SYNC) {
        return 1;
      }
      return 0;
    };
    var inflateResetKeep = (strm) => {
      if (inflateStateCheck(strm)) {
        return Z_STREAM_ERROR;
      }
      const state = strm.state;
      strm.total_in = strm.total_out = state.total = 0;
      strm.msg = "";
      if (state.wrap) {
        strm.adler = state.wrap & 1;
      }
      state.mode = HEAD;
      state.last = 0;
      state.havedict = 0;
      state.flags = -1;
      state.dmax = 32768;
      state.head = null;
      state.hold = 0;
      state.bits = 0;
      state.lencode = state.lendyn = new Int32Array(ENOUGH_LENS);
      state.distcode = state.distdyn = new Int32Array(ENOUGH_DISTS);
      state.sane = 1;
      state.back = -1;
      return Z_OK;
    };
    var inflateReset = (strm) => {
      if (inflateStateCheck(strm)) {
        return Z_STREAM_ERROR;
      }
      const state = strm.state;
      state.wsize = 0;
      state.whave = 0;
      state.wnext = 0;
      return inflateResetKeep(strm);
    };
    var inflateReset2 = (strm, windowBits) => {
      let wrap;
      if (inflateStateCheck(strm)) {
        return Z_STREAM_ERROR;
      }
      const state = strm.state;
      if (windowBits < 0) {
        wrap = 0;
        windowBits = -windowBits;
      } else {
        wrap = (windowBits >> 4) + 5;
        if (windowBits < 48) {
          windowBits &= 15;
        }
      }
      if (windowBits && (windowBits < 8 || windowBits > 15)) {
        return Z_STREAM_ERROR;
      }
      if (state.window !== null && state.wbits !== windowBits) {
        state.window = null;
      }
      state.wrap = wrap;
      state.wbits = windowBits;
      return inflateReset(strm);
    };
    var inflateInit2 = (strm, windowBits) => {
      if (!strm) {
        return Z_STREAM_ERROR;
      }
      const state = new InflateState();
      strm.state = state;
      state.strm = strm;
      state.window = null;
      state.mode = HEAD;
      const ret = inflateReset2(strm, windowBits);
      if (ret !== Z_OK) {
        strm.state = null;
      }
      return ret;
    };
    var inflateInit = (strm) => {
      return inflateInit2(strm, DEF_WBITS);
    };
    var virgin = true;
    var lenfix;
    var distfix;
    var fixedtables = (state) => {
      if (virgin) {
        lenfix = new Int32Array(512);
        distfix = new Int32Array(32);
        let sym = 0;
        while (sym < 144) {
          state.lens[sym++] = 8;
        }
        while (sym < 256) {
          state.lens[sym++] = 9;
        }
        while (sym < 280) {
          state.lens[sym++] = 7;
        }
        while (sym < 288) {
          state.lens[sym++] = 8;
        }
        inflate_table(LENS, state.lens, 0, 288, lenfix, 0, state.work, { bits: 9 });
        sym = 0;
        while (sym < 32) {
          state.lens[sym++] = 5;
        }
        inflate_table(DISTS, state.lens, 0, 32, distfix, 0, state.work, { bits: 5 });
        virgin = false;
      }
      state.lencode = lenfix;
      state.lenbits = 9;
      state.distcode = distfix;
      state.distbits = 5;
    };
    var updatewindow = (strm, src, end, copy) => {
      let dist;
      const state = strm.state;
      if (state.window === null) {
        state.wsize = 1 << state.wbits;
        state.wnext = 0;
        state.whave = 0;
        state.window = new Uint8Array(state.wsize);
      }
      if (copy >= state.wsize) {
        state.window.set(src.subarray(end - state.wsize, end), 0);
        state.wnext = 0;
        state.whave = state.wsize;
      } else {
        dist = state.wsize - state.wnext;
        if (dist > copy) {
          dist = copy;
        }
        state.window.set(src.subarray(end - copy, end - copy + dist), state.wnext);
        copy -= dist;
        if (copy) {
          state.window.set(src.subarray(end - copy, end), 0);
          state.wnext = copy;
          state.whave = state.wsize;
        } else {
          state.wnext += dist;
          if (state.wnext === state.wsize) {
            state.wnext = 0;
          }
          if (state.whave < state.wsize) {
            state.whave += dist;
          }
        }
      }
      return 0;
    };
    var inflate = (strm, flush) => {
      let state;
      let input, output;
      let next;
      let put;
      let have, left;
      let hold;
      let bits;
      let _in, _out;
      let copy;
      let from;
      let from_source;
      let here = 0;
      let here_bits, here_op, here_val;
      let last_bits, last_op, last_val;
      let len;
      let ret;
      const hbuf = new Uint8Array(4);
      let opts;
      let n2;
      const order = (
        /* permutation of code lengths */
        new Uint8Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15])
      );
      if (inflateStateCheck(strm) || !strm.output || !strm.input && strm.avail_in !== 0) {
        return Z_STREAM_ERROR;
      }
      state = strm.state;
      if (state.mode === TYPE) {
        state.mode = TYPEDO;
      }
      put = strm.next_out;
      output = strm.output;
      left = strm.avail_out;
      next = strm.next_in;
      input = strm.input;
      have = strm.avail_in;
      hold = state.hold;
      bits = state.bits;
      _in = have;
      _out = left;
      ret = Z_OK;
      inf_leave:
        for (; ; ) {
          switch (state.mode) {
            case HEAD:
              if (state.wrap === 0) {
                state.mode = TYPEDO;
                break;
              }
              while (bits < 16) {
                if (have === 0) {
                  break inf_leave;
                }
                have--;
                hold += input[next++] << bits;
                bits += 8;
              }
              if (state.wrap & 2 && hold === 35615) {
                if (state.wbits === 0) {
                  state.wbits = 15;
                }
                state.check = 0;
                hbuf[0] = hold & 255;
                hbuf[1] = hold >>> 8 & 255;
                state.check = crc32(state.check, hbuf, 2, 0);
                hold = 0;
                bits = 0;
                state.mode = FLAGS;
                break;
              }
              if (state.head) {
                state.head.done = false;
              }
              if (!(state.wrap & 1) || /* check if zlib header allowed */
              (((hold & 255) << 8) + (hold >> 8)) % 31) {
                strm.msg = "incorrect header check";
                state.mode = BAD;
                break;
              }
              if ((hold & 15) !== Z_DEFLATED) {
                strm.msg = "unknown compression method";
                state.mode = BAD;
                break;
              }
              hold >>>= 4;
              bits -= 4;
              len = (hold & 15) + 8;
              if (state.wbits === 0) {
                state.wbits = len;
              }
              if (len > 15 || len > state.wbits) {
                strm.msg = "invalid window size";
                state.mode = BAD;
                break;
              }
              state.dmax = 1 << state.wbits;
              state.flags = 0;
              strm.adler = state.check = 1;
              state.mode = hold & 512 ? DICTID : TYPE;
              hold = 0;
              bits = 0;
              break;
            case FLAGS:
              while (bits < 16) {
                if (have === 0) {
                  break inf_leave;
                }
                have--;
                hold += input[next++] << bits;
                bits += 8;
              }
              state.flags = hold;
              if ((state.flags & 255) !== Z_DEFLATED) {
                strm.msg = "unknown compression method";
                state.mode = BAD;
                break;
              }
              if (state.flags & 57344) {
                strm.msg = "unknown header flags set";
                state.mode = BAD;
                break;
              }
              if (state.head) {
                state.head.text = hold >> 8 & 1;
              }
              if (state.flags & 512 && state.wrap & 4) {
                hbuf[0] = hold & 255;
                hbuf[1] = hold >>> 8 & 255;
                state.check = crc32(state.check, hbuf, 2, 0);
              }
              hold = 0;
              bits = 0;
              state.mode = TIME;
            case TIME:
              while (bits < 32) {
                if (have === 0) {
                  break inf_leave;
                }
                have--;
                hold += input[next++] << bits;
                bits += 8;
              }
              if (state.head) {
                state.head.time = hold;
              }
              if (state.flags & 512 && state.wrap & 4) {
                hbuf[0] = hold & 255;
                hbuf[1] = hold >>> 8 & 255;
                hbuf[2] = hold >>> 16 & 255;
                hbuf[3] = hold >>> 24 & 255;
                state.check = crc32(state.check, hbuf, 4, 0);
              }
              hold = 0;
              bits = 0;
              state.mode = OS;
            case OS:
              while (bits < 16) {
                if (have === 0) {
                  break inf_leave;
                }
                have--;
                hold += input[next++] << bits;
                bits += 8;
              }
              if (state.head) {
                state.head.xflags = hold & 255;
                state.head.os = hold >> 8;
              }
              if (state.flags & 512 && state.wrap & 4) {
                hbuf[0] = hold & 255;
                hbuf[1] = hold >>> 8 & 255;
                state.check = crc32(state.check, hbuf, 2, 0);
              }
              hold = 0;
              bits = 0;
              state.mode = EXLEN;
            case EXLEN:
              if (state.flags & 1024) {
                while (bits < 16) {
                  if (have === 0) {
                    break inf_leave;
                  }
                  have--;
                  hold += input[next++] << bits;
                  bits += 8;
                }
                state.length = hold;
                if (state.head) {
                  state.head.extra_len = hold;
                }
                if (state.flags & 512 && state.wrap & 4) {
                  hbuf[0] = hold & 255;
                  hbuf[1] = hold >>> 8 & 255;
                  state.check = crc32(state.check, hbuf, 2, 0);
                }
                hold = 0;
                bits = 0;
              } else if (state.head) {
                state.head.extra = null;
              }
              state.mode = EXTRA;
            case EXTRA:
              if (state.flags & 1024) {
                copy = state.length;
                if (copy > have) {
                  copy = have;
                }
                if (copy) {
                  if (state.head) {
                    len = state.head.extra_len - state.length;
                    if (!state.head.extra) {
                      state.head.extra = new Uint8Array(state.head.extra_len);
                    }
                    state.head.extra.set(
                      input.subarray(
                        next,
                        // extra field is limited to 65536 bytes
                        // - no need for additional size check
                        next + copy
                      ),
                      /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/
                      len
                    );
                  }
                  if (state.flags & 512 && state.wrap & 4) {
                    state.check = crc32(state.check, input, copy, next);
                  }
                  have -= copy;
                  next += copy;
                  state.length -= copy;
                }
                if (state.length) {
                  break inf_leave;
                }
              }
              state.length = 0;
              state.mode = NAME;
            case NAME:
              if (state.flags & 2048) {
                if (have === 0) {
                  break inf_leave;
                }
                copy = 0;
                do {
                  len = input[next + copy++];
                  if (state.head && len && state.length < 65536) {
                    state.head.name += String.fromCharCode(len);
                  }
                } while (len && copy < have);
                if (state.flags & 512 && state.wrap & 4) {
                  state.check = crc32(state.check, input, copy, next);
                }
                have -= copy;
                next += copy;
                if (len) {
                  break inf_leave;
                }
              } else if (state.head) {
                state.head.name = null;
              }
              state.length = 0;
              state.mode = COMMENT;
            case COMMENT:
              if (state.flags & 4096) {
                if (have === 0) {
                  break inf_leave;
                }
                copy = 0;
                do {
                  len = input[next + copy++];
                  if (state.head && len && state.length < 65536) {
                    state.head.comment += String.fromCharCode(len);
                  }
                } while (len && copy < have);
                if (state.flags & 512 && state.wrap & 4) {
                  state.check = crc32(state.check, input, copy, next);
                }
                have -= copy;
                next += copy;
                if (len) {
                  break inf_leave;
                }
              } else if (state.head) {
                state.head.comment = null;
              }
              state.mode = HCRC;
            case HCRC:
              if (state.flags & 512) {
                while (bits < 16) {
                  if (have === 0) {
                    break inf_leave;
                  }
                  have--;
                  hold += input[next++] << bits;
                  bits += 8;
                }
                if (state.wrap & 4 && hold !== (state.check & 65535)) {
                  strm.msg = "header crc mismatch";
                  state.mode = BAD;
                  break;
                }
                hold = 0;
                bits = 0;
              }
              if (state.head) {
                state.head.hcrc = state.flags >> 9 & 1;
                state.head.done = true;
              }
              strm.adler = state.check = 0;
              state.mode = TYPE;
              break;
            case DICTID:
              while (bits < 32) {
                if (have === 0) {
                  break inf_leave;
                }
                have--;
                hold += input[next++] << bits;
                bits += 8;
              }
              strm.adler = state.check = zswap32(hold);
              hold = 0;
              bits = 0;
              state.mode = DICT;
            case DICT:
              if (state.havedict === 0) {
                strm.next_out = put;
                strm.avail_out = left;
                strm.next_in = next;
                strm.avail_in = have;
                state.hold = hold;
                state.bits = bits;
                return Z_NEED_DICT;
              }
              strm.adler = state.check = 1;
              state.mode = TYPE;
            case TYPE:
              if (flush === Z_BLOCK || flush === Z_TREES) {
                break inf_leave;
              }
            case TYPEDO:
              if (state.last) {
                hold >>>= bits & 7;
                bits -= bits & 7;
                state.mode = CHECK;
                break;
              }
              while (bits < 3) {
                if (have === 0) {
                  break inf_leave;
                }
                have--;
                hold += input[next++] << bits;
                bits += 8;
              }
              state.last = hold & 1;
              hold >>>= 1;
              bits -= 1;
              switch (hold & 3) {
                case 0:
                  state.mode = STORED;
                  break;
                case 1:
                  fixedtables(state);
                  state.mode = LEN_;
                  if (flush === Z_TREES) {
                    hold >>>= 2;
                    bits -= 2;
                    break inf_leave;
                  }
                  break;
                case 2:
                  state.mode = TABLE;
                  break;
                case 3:
                  strm.msg = "invalid block type";
                  state.mode = BAD;
              }
              hold >>>= 2;
              bits -= 2;
              break;
            case STORED:
              hold >>>= bits & 7;
              bits -= bits & 7;
              while (bits < 32) {
                if (have === 0) {
                  break inf_leave;
                }
                have--;
                hold += input[next++] << bits;
                bits += 8;
              }
              if ((hold & 65535) !== (hold >>> 16 ^ 65535)) {
                strm.msg = "invalid stored block lengths";
                state.mode = BAD;
                break;
              }
              state.length = hold & 65535;
              hold = 0;
              bits = 0;
              state.mode = COPY_;
              if (flush === Z_TREES) {
                break inf_leave;
              }
            case COPY_:
              state.mode = COPY;
            case COPY:
              copy = state.length;
              if (copy) {
                if (copy > have) {
                  copy = have;
                }
                if (copy > left) {
                  copy = left;
                }
                if (copy === 0) {
                  break inf_leave;
                }
                output.set(input.subarray(next, next + copy), put);
                have -= copy;
                next += copy;
                left -= copy;
                put += copy;
                state.length -= copy;
                break;
              }
              state.mode = TYPE;
              break;
            case TABLE:
              while (bits < 14) {
                if (have === 0) {
                  break inf_leave;
                }
                have--;
                hold += input[next++] << bits;
                bits += 8;
              }
              state.nlen = (hold & 31) + 257;
              hold >>>= 5;
              bits -= 5;
              state.ndist = (hold & 31) + 1;
              hold >>>= 5;
              bits -= 5;
              state.ncode = (hold & 15) + 4;
              hold >>>= 4;
              bits -= 4;
              if (state.nlen > 286 || state.ndist > 30) {
                strm.msg = "too many length or distance symbols";
                state.mode = BAD;
                break;
              }
              state.have = 0;
              state.mode = LENLENS;
            case LENLENS:
              while (state.have < state.ncode) {
                while (bits < 3) {
                  if (have === 0) {
                    break inf_leave;
                  }
                  have--;
                  hold += input[next++] << bits;
                  bits += 8;
                }
                state.lens[order[state.have++]] = hold & 7;
                hold >>>= 3;
                bits -= 3;
              }
              while (state.have < 19) {
                state.lens[order[state.have++]] = 0;
              }
              state.lencode = state.lendyn;
              state.lenbits = 7;
              opts = { bits: state.lenbits };
              ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);
              state.lenbits = opts.bits;
              if (ret) {
                strm.msg = "invalid code lengths set";
                state.mode = BAD;
                break;
              }
              state.have = 0;
              state.mode = CODELENS;
            case CODELENS:
              while (state.have < state.nlen + state.ndist) {
                for (; ; ) {
                  here = state.lencode[hold & (1 << state.lenbits) - 1];
                  here_bits = here >>> 24;
                  here_op = here >>> 16 & 255;
                  here_val = here & 65535;
                  if (here_bits <= bits) {
                    break;
                  }
                  if (have === 0) {
                    break inf_leave;
                  }
                  have--;
                  hold += input[next++] << bits;
                  bits += 8;
                }
                if (here_val < 16) {
                  hold >>>= here_bits;
                  bits -= here_bits;
                  state.lens[state.have++] = here_val;
                } else {
                  if (here_val === 16) {
                    n2 = here_bits + 2;
                    while (bits < n2) {
                      if (have === 0) {
                        break inf_leave;
                      }
                      have--;
                      hold += input[next++] << bits;
                      bits += 8;
                    }
                    hold >>>= here_bits;
                    bits -= here_bits;
                    if (state.have === 0) {
                      strm.msg = "invalid bit length repeat";
                      state.mode = BAD;
                      break;
                    }
                    len = state.lens[state.have - 1];
                    copy = 3 + (hold & 3);
                    hold >>>= 2;
                    bits -= 2;
                  } else if (here_val === 17) {
                    n2 = here_bits + 3;
                    while (bits < n2) {
                      if (have === 0) {
                        break inf_leave;
                      }
                      have--;
                      hold += input[next++] << bits;
                      bits += 8;
                    }
                    hold >>>= here_bits;
                    bits -= here_bits;
                    len = 0;
                    copy = 3 + (hold & 7);
                    hold >>>= 3;
                    bits -= 3;
                  } else {
                    n2 = here_bits + 7;
                    while (bits < n2) {
                      if (have === 0) {
                        break inf_leave;
                      }
                      have--;
                      hold += input[next++] << bits;
                      bits += 8;
                    }
                    hold >>>= here_bits;
                    bits -= here_bits;
                    len = 0;
                    copy = 11 + (hold & 127);
                    hold >>>= 7;
                    bits -= 7;
                  }
                  if (state.have + copy > state.nlen + state.ndist) {
                    strm.msg = "invalid bit length repeat";
                    state.mode = BAD;
                    break;
                  }
                  while (copy--) {
                    state.lens[state.have++] = len;
                  }
                }
              }
              if (state.mode === BAD) {
                break;
              }
              if (state.lens[256] === 0) {
                strm.msg = "invalid code -- missing end-of-block";
                state.mode = BAD;
                break;
              }
              state.lenbits = 9;
              opts = { bits: state.lenbits };
              ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);
              state.lenbits = opts.bits;
              if (ret) {
                strm.msg = "invalid literal/lengths set";
                state.mode = BAD;
                break;
              }
              state.distbits = 6;
              state.distcode = state.distdyn;
              opts = { bits: state.distbits };
              ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);
              state.distbits = opts.bits;
              if (ret) {
                strm.msg = "invalid distances set";
                state.mode = BAD;
                break;
              }
              state.mode = LEN_;
              if (flush === Z_TREES) {
                break inf_leave;
              }
            case LEN_:
              state.mode = LEN;
            case LEN:
              if (have >= 6 && left >= 258) {
                strm.next_out = put;
                strm.avail_out = left;
                strm.next_in = next;
                strm.avail_in = have;
                state.hold = hold;
                state.bits = bits;
                inflate_fast(strm, _out);
                put = strm.next_out;
                output = strm.output;
                left = strm.avail_out;
                next = strm.next_in;
                input = strm.input;
                have = strm.avail_in;
                hold = state.hold;
                bits = state.bits;
                if (state.mode === TYPE) {
                  state.back = -1;
                }
                break;
              }
              state.back = 0;
              for (; ; ) {
                here = state.lencode[hold & (1 << state.lenbits) - 1];
                here_bits = here >>> 24;
                here_op = here >>> 16 & 255;
                here_val = here & 65535;
                if (here_bits <= bits) {
                  break;
                }
                if (have === 0) {
                  break inf_leave;
                }
                have--;
                hold += input[next++] << bits;
                bits += 8;
              }
              if (here_op && (here_op & 240) === 0) {
                last_bits = here_bits;
                last_op = here_op;
                last_val = here_val;
                for (; ; ) {
                  here = state.lencode[last_val + ((hold & (1 << last_bits + last_op) - 1) >> last_bits)];
                  here_bits = here >>> 24;
                  here_op = here >>> 16 & 255;
                  here_val = here & 65535;
                  if (last_bits + here_bits <= bits) {
                    break;
                  }
                  if (have === 0) {
                    break inf_leave;
                  }
                  have--;
                  hold += input[next++] << bits;
                  bits += 8;
                }
                hold >>>= last_bits;
                bits -= last_bits;
                state.back += last_bits;
              }
              hold >>>= here_bits;
              bits -= here_bits;
              state.back += here_bits;
              state.length = here_val;
              if (here_op === 0) {
                state.mode = LIT;
                break;
              }
              if (here_op & 32) {
                state.back = -1;
                state.mode = TYPE;
                break;
              }
              if (here_op & 64) {
                strm.msg = "invalid literal/length code";
                state.mode = BAD;
                break;
              }
              state.extra = here_op & 15;
              state.mode = LENEXT;
            case LENEXT:
              if (state.extra) {
                n2 = state.extra;
                while (bits < n2) {
                  if (have === 0) {
                    break inf_leave;
                  }
                  have--;
                  hold += input[next++] << bits;
                  bits += 8;
                }
                state.length += hold & (1 << state.extra) - 1;
                hold >>>= state.extra;
                bits -= state.extra;
                state.back += state.extra;
              }
              state.was = state.length;
              state.mode = DIST;
            case DIST:
              for (; ; ) {
                here = state.distcode[hold & (1 << state.distbits) - 1];
                here_bits = here >>> 24;
                here_op = here >>> 16 & 255;
                here_val = here & 65535;
                if (here_bits <= bits) {
                  break;
                }
                if (have === 0) {
                  break inf_leave;
                }
                have--;
                hold += input[next++] << bits;
                bits += 8;
              }
              if ((here_op & 240) === 0) {
                last_bits = here_bits;
                last_op = here_op;
                last_val = here_val;
                for (; ; ) {
                  here = state.distcode[last_val + ((hold & (1 << last_bits + last_op) - 1) >> last_bits)];
                  here_bits = here >>> 24;
                  here_op = here >>> 16 & 255;
                  here_val = here & 65535;
                  if (last_bits + here_bits <= bits) {
                    break;
                  }
                  if (have === 0) {
                    break inf_leave;
                  }
                  have--;
                  hold += input[next++] << bits;
                  bits += 8;
                }
                hold >>>= last_bits;
                bits -= last_bits;
                state.back += last_bits;
              }
              hold >>>= here_bits;
              bits -= here_bits;
              state.back += here_bits;
              if (here_op & 64) {
                strm.msg = "invalid distance code";
                state.mode = BAD;
                break;
              }
              state.offset = here_val;
              state.extra = here_op & 15;
              state.mode = DISTEXT;
            case DISTEXT:
              if (state.extra) {
                n2 = state.extra;
                while (bits < n2) {
                  if (have === 0) {
                    break inf_leave;
                  }
                  have--;
                  hold += input[next++] << bits;
                  bits += 8;
                }
                state.offset += hold & (1 << state.extra) - 1;
                hold >>>= state.extra;
                bits -= state.extra;
                state.back += state.extra;
              }
              if (state.offset > state.dmax) {
                strm.msg = "invalid distance too far back";
                state.mode = BAD;
                break;
              }
              state.mode = MATCH;
            case MATCH:
              if (left === 0) {
                break inf_leave;
              }
              copy = _out - left;
              if (state.offset > copy) {
                copy = state.offset - copy;
                if (copy > state.whave) {
                  if (state.sane) {
                    strm.msg = "invalid distance too far back";
                    state.mode = BAD;
                    break;
                  }
                }
                if (copy > state.wnext) {
                  copy -= state.wnext;
                  from = state.wsize - copy;
                } else {
                  from = state.wnext - copy;
                }
                if (copy > state.length) {
                  copy = state.length;
                }
                from_source = state.window;
              } else {
                from_source = output;
                from = put - state.offset;
                copy = state.length;
              }
              if (copy > left) {
                copy = left;
              }
              left -= copy;
              state.length -= copy;
              do {
                output[put++] = from_source[from++];
              } while (--copy);
              if (state.length === 0) {
                state.mode = LEN;
              }
              break;
            case LIT:
              if (left === 0) {
                break inf_leave;
              }
              output[put++] = state.length;
              left--;
              state.mode = LEN;
              break;
            case CHECK:
              if (state.wrap) {
                while (bits < 32) {
                  if (have === 0) {
                    break inf_leave;
                  }
                  have--;
                  hold |= input[next++] << bits;
                  bits += 8;
                }
                _out -= left;
                strm.total_out += _out;
                state.total += _out;
                if (state.wrap & 4 && _out) {
                  strm.adler = state.check = /*UPDATE_CHECK(state.check, put - _out, _out);*/
                  state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out);
                }
                _out = left;
                if (state.wrap & 4 && (state.flags ? hold : zswap32(hold)) !== state.check) {
                  strm.msg = "incorrect data check";
                  state.mode = BAD;
                  break;
                }
                hold = 0;
                bits = 0;
              }
              state.mode = LENGTH;
            case LENGTH:
              if (state.wrap && state.flags) {
                while (bits < 32) {
                  if (have === 0) {
                    break inf_leave;
                  }
                  have--;
                  hold += input[next++] << bits;
                  bits += 8;
                }
                if (state.wrap & 4 && hold !== (state.total & 4294967295)) {
                  strm.msg = "incorrect length check";
                  state.mode = BAD;
                  break;
                }
                hold = 0;
                bits = 0;
              }
              state.mode = DONE;
            case DONE:
              ret = Z_STREAM_END;
              break inf_leave;
            case BAD:
              ret = Z_DATA_ERROR;
              break inf_leave;
            case MEM:
              return Z_MEM_ERROR;
            case SYNC:
            default:
              return Z_STREAM_ERROR;
          }
        }
      strm.next_out = put;
      strm.avail_out = left;
      strm.next_in = next;
      strm.avail_in = have;
      state.hold = hold;
      state.bits = bits;
      if (state.wsize || _out !== strm.avail_out && state.mode < BAD && (state.mode < CHECK || flush !== Z_FINISH)) {
        if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {
          state.mode = MEM;
          return Z_MEM_ERROR;
        }
      }
      _in -= strm.avail_in;
      _out -= strm.avail_out;
      strm.total_in += _in;
      strm.total_out += _out;
      state.total += _out;
      if (state.wrap & 4 && _out) {
        strm.adler = state.check = /*UPDATE_CHECK(state.check, strm.next_out - _out, _out);*/
        state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out);
      }
      strm.data_type = state.bits + (state.last ? 64 : 0) + (state.mode === TYPE ? 128 : 0) + (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);
      if ((_in === 0 && _out === 0 || flush === Z_FINISH) && ret === Z_OK) {
        ret = Z_BUF_ERROR;
      }
      return ret;
    };
    var inflateEnd = (strm) => {
      if (inflateStateCheck(strm)) {
        return Z_STREAM_ERROR;
      }
      let state = strm.state;
      if (state.window) {
        state.window = null;
      }
      strm.state = null;
      return Z_OK;
    };
    var inflateGetHeader = (strm, head) => {
      if (inflateStateCheck(strm)) {
        return Z_STREAM_ERROR;
      }
      const state = strm.state;
      if ((state.wrap & 2) === 0) {
        return Z_STREAM_ERROR;
      }
      state.head = head;
      head.done = false;
      return Z_OK;
    };
    var inflateSetDictionary = (strm, dictionary) => {
      const dictLength = dictionary.length;
      let state;
      let dictid;
      let ret;
      if (inflateStateCheck(strm)) {
        return Z_STREAM_ERROR;
      }
      state = strm.state;
      if (state.wrap !== 0 && state.mode !== DICT) {
        return Z_STREAM_ERROR;
      }
      if (state.mode === DICT) {
        dictid = 1;
        dictid = adler32(dictid, dictionary, dictLength, 0);
        if (dictid !== state.check) {
          return Z_DATA_ERROR;
        }
      }
      ret = updatewindow(strm, dictionary, dictLength, dictLength);
      if (ret) {
        state.mode = MEM;
        return Z_MEM_ERROR;
      }
      state.havedict = 1;
      return Z_OK;
    };
    module.exports.inflateReset = inflateReset;
    module.exports.inflateReset2 = inflateReset2;
    module.exports.inflateResetKeep = inflateResetKeep;
    module.exports.inflateInit = inflateInit;
    module.exports.inflateInit2 = inflateInit2;
    module.exports.inflate = inflate;
    module.exports.inflateEnd = inflateEnd;
    module.exports.inflateGetHeader = inflateGetHeader;
    module.exports.inflateSetDictionary = inflateSetDictionary;
    module.exports.inflateInfo = "pako inflate (from Nodeca project)";
  }
});

// node_modules/pako/lib/zlib/gzheader.js
var require_gzheader = __commonJS({
  "node_modules/pako/lib/zlib/gzheader.js"(exports, module) {
    "use strict";
    function GZheader() {
      this.text = 0;
      this.time = 0;
      this.xflags = 0;
      this.os = 0;
      this.extra = null;
      this.extra_len = 0;
      this.name = "";
      this.comment = "";
      this.hcrc = 0;
      this.done = false;
    }
    module.exports = GZheader;
  }
});

// node_modules/pako/lib/inflate.js
var require_inflate2 = __commonJS({
  "node_modules/pako/lib/inflate.js"(exports, module) {
    "use strict";
    var zlib_inflate = require_inflate();
    var utils = require_common();
    var strings = require_strings();
    var msg = require_messages10();
    var ZStream = require_zstream();
    var GZheader = require_gzheader();
    var toString = Object.prototype.toString;
    var {
      Z_NO_FLUSH,
      Z_FINISH,
      Z_OK,
      Z_STREAM_END,
      Z_NEED_DICT,
      Z_STREAM_ERROR,
      Z_DATA_ERROR,
      Z_MEM_ERROR
    } = require_constants();
    function Inflate(options) {
      this.options = utils.assign({
        chunkSize: 1024 * 64,
        windowBits: 15,
        to: ""
      }, options || {});
      const opt = this.options;
      if (opt.raw && opt.windowBits >= 0 && opt.windowBits < 16) {
        opt.windowBits = -opt.windowBits;
        if (opt.windowBits === 0) {
          opt.windowBits = -15;
        }
      }
      if (opt.windowBits >= 0 && opt.windowBits < 16 && !(options && options.windowBits)) {
        opt.windowBits += 32;
      }
      if (opt.windowBits > 15 && opt.windowBits < 48) {
        if ((opt.windowBits & 15) === 0) {
          opt.windowBits |= 15;
        }
      }
      this.err = 0;
      this.msg = "";
      this.ended = false;
      this.chunks = [];
      this.strm = new ZStream();
      this.strm.avail_out = 0;
      let status = zlib_inflate.inflateInit2(
        this.strm,
        opt.windowBits
      );
      if (status !== Z_OK) {
        throw new Error(msg[status]);
      }
      this.header = new GZheader();
      zlib_inflate.inflateGetHeader(this.strm, this.header);
      if (opt.dictionary) {
        if (typeof opt.dictionary === "string") {
          opt.dictionary = strings.string2buf(opt.dictionary);
        } else if (toString.call(opt.dictionary) === "[object ArrayBuffer]") {
          opt.dictionary = new Uint8Array(opt.dictionary);
        }
        if (opt.raw) {
          status = zlib_inflate.inflateSetDictionary(this.strm, opt.dictionary);
          if (status !== Z_OK) {
            throw new Error(msg[status]);
          }
        }
      }
    }
    Inflate.prototype.push = function(data, flush_mode) {
      const strm = this.strm;
      const chunkSize = this.options.chunkSize;
      const dictionary = this.options.dictionary;
      let status, _flush_mode, last_avail_out;
      if (this.ended)
        return false;
      if (flush_mode === ~~flush_mode)
        _flush_mode = flush_mode;
      else
        _flush_mode = flush_mode === true ? Z_FINISH : Z_NO_FLUSH;
      if (toString.call(data) === "[object ArrayBuffer]") {
        strm.input = new Uint8Array(data);
      } else {
        strm.input = data;
      }
      strm.next_in = 0;
      strm.avail_in = strm.input.length;
      for (; ; ) {
        if (strm.avail_out === 0) {
          strm.output = new Uint8Array(chunkSize);
          strm.next_out = 0;
          strm.avail_out = chunkSize;
        }
        status = zlib_inflate.inflate(strm, _flush_mode);
        if (status === Z_NEED_DICT && dictionary) {
          status = zlib_inflate.inflateSetDictionary(strm, dictionary);
          if (status === Z_OK) {
            status = zlib_inflate.inflate(strm, _flush_mode);
          } else if (status === Z_DATA_ERROR) {
            status = Z_NEED_DICT;
          }
        }
        while (strm.avail_in > 0 && status === Z_STREAM_END && strm.state.wrap > 0 && data[strm.next_in] !== 0) {
          zlib_inflate.inflateReset(strm);
          status = zlib_inflate.inflate(strm, _flush_mode);
        }
        switch (status) {
          case Z_STREAM_ERROR:
          case Z_DATA_ERROR:
          case Z_NEED_DICT:
          case Z_MEM_ERROR:
            this.onEnd(status);
            this.ended = true;
            return false;
        }
        last_avail_out = strm.avail_out;
        if (strm.next_out) {
          if (strm.avail_out === 0 || status === Z_STREAM_END) {
            if (this.options.to === "string") {
              let next_out_utf8 = strings.utf8border(strm.output, strm.next_out);
              let tail = strm.next_out - next_out_utf8;
              let utf8str = strings.buf2string(strm.output, next_out_utf8);
              strm.next_out = tail;
              strm.avail_out = chunkSize - tail;
              if (tail)
                strm.output.set(strm.output.subarray(next_out_utf8, next_out_utf8 + tail), 0);
              this.onData(utf8str);
            } else {
              this.onData(strm.output.length === strm.next_out ? strm.output : strm.output.subarray(0, strm.next_out));
            }
          }
        }
        if (status === Z_OK && last_avail_out === 0)
          continue;
        if (status === Z_STREAM_END) {
          status = zlib_inflate.inflateEnd(this.strm);
          this.onEnd(status);
          this.ended = true;
          return true;
        }
        if (strm.avail_in === 0)
          break;
      }
      return true;
    };
    Inflate.prototype.onData = function(chunk) {
      this.chunks.push(chunk);
    };
    Inflate.prototype.onEnd = function(status) {
      if (status === Z_OK) {
        if (this.options.to === "string") {
          this.result = this.chunks.join("");
        } else {
          this.result = utils.flattenChunks(this.chunks);
        }
      }
      this.chunks = [];
      this.err = status;
      this.msg = this.strm.msg;
    };
    function inflate(input, options) {
      const inflator = new Inflate(options);
      inflator.push(input);
      if (inflator.err)
        throw inflator.msg || msg[inflator.err];
      return inflator.result;
    }
    function inflateRaw(input, options) {
      options = options || {};
      options.raw = true;
      return inflate(input, options);
    }
    module.exports.Inflate = Inflate;
    module.exports.inflate = inflate;
    module.exports.inflateRaw = inflateRaw;
    module.exports.ungzip = inflate;
    module.exports.constants = require_constants();
  }
});

// node_modules/pako/index.js
var require_pako = __commonJS({
  "node_modules/pako/index.js"(exports, module) {
    "use strict";
    var { Deflate, deflate, deflateRaw, gzip } = require_deflate2();
    var { Inflate, inflate, inflateRaw, ungzip } = require_inflate2();
    var constants = require_constants();
    module.exports.Deflate = Deflate;
    module.exports.deflate = deflate;
    module.exports.deflateRaw = deflateRaw;
    module.exports.gzip = gzip;
    module.exports.Inflate = Inflate;
    module.exports.inflate = inflate;
    module.exports.inflateRaw = inflateRaw;
    module.exports.ungzip = ungzip;
    module.exports.constants = constants;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/build/signingcosmwasmclient.js
var require_signingcosmwasmclient = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/build/signingcosmwasmclient.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SigningCosmWasmClient = void 0;
    var amino_1 = require_build6();
    var crypto_1 = require_build5();
    var encoding_1 = require_build2();
    var math_1 = require_build3();
    var proto_signing_1 = require_build7();
    var stargate_1 = require_build12();
    var tendermint_rpc_1 = require_build11();
    var utils_1 = require_build4();
    var tx_1 = require_tx4();
    var tx_2 = require_tx11();
    var signing_1 = require_signing();
    var tx_3 = require_tx();
    var tx_4 = require_tx13();
    var long_1 = __importDefault(require_long());
    var pako_1 = __importDefault(require_pako());
    var cosmwasmclient_1 = require_cosmwasmclient();
    var modules_1 = require_modules2();
    function createDeliverTxResponseErrorMessage(result) {
      return `Error when broadcasting tx ${result.transactionHash} at height ${result.height}. Code: ${result.code}; Raw log: ${result.rawLog}`;
    }
    var SigningCosmWasmClient = class _SigningCosmWasmClient extends cosmwasmclient_1.CosmWasmClient {
      constructor(tmClient, signer, options) {
        super(tmClient);
        const { registry = new proto_signing_1.Registry([...stargate_1.defaultRegistryTypes, ...modules_1.wasmTypes]), aminoTypes = new stargate_1.AminoTypes({
          ...(0, stargate_1.createDefaultAminoConverters)(),
          ...(0, modules_1.createWasmAminoConverters)()
        }) } = options;
        this.registry = registry;
        this.aminoTypes = aminoTypes;
        this.signer = signer;
        this.broadcastTimeoutMs = options.broadcastTimeoutMs;
        this.broadcastPollIntervalMs = options.broadcastPollIntervalMs;
        this.gasPrice = options.gasPrice;
      }
      /**
       * Creates an instance by connecting to the given Tendermint RPC endpoint.
       *
       * For now this uses the Tendermint 0.34 client. If you need Tendermint 0.37
       * support, see `createWithSigner`.
       */
      static async connectWithSigner(endpoint, signer, options = {}) {
        const tmClient = await tendermint_rpc_1.Tendermint34Client.connect(endpoint);
        return _SigningCosmWasmClient.createWithSigner(tmClient, signer, options);
      }
      /**
       * Creates an instance from a manually created Tendermint client.
       * Use this to use `Tendermint37Client` instead of `Tendermint34Client`.
       */
      static async createWithSigner(tmClient, signer, options = {}) {
        return new _SigningCosmWasmClient(tmClient, signer, options);
      }
      /**
       * Creates a client in offline mode.
       *
       * This should only be used in niche cases where you know exactly what you're doing,
       * e.g. when building an offline signing application.
       *
       * When you try to use online functionality with such a signer, an
       * exception will be raised.
       */
      static async offline(signer, options = {}) {
        return new _SigningCosmWasmClient(void 0, signer, options);
      }
      async simulate(signerAddress, messages, memo) {
        const anyMsgs = messages.map((m2) => this.registry.encodeAsAny(m2));
        const accountFromSigner = (await this.signer.getAccounts()).find((account) => account.address === signerAddress);
        if (!accountFromSigner) {
          throw new Error("Failed to retrieve account from signer");
        }
        const pubkey = (0, amino_1.encodeSecp256k1Pubkey)(accountFromSigner.pubkey);
        const { sequence } = await this.getSequence(signerAddress);
        const { gasInfo } = await this.forceGetQueryClient().tx.simulate(anyMsgs, memo, pubkey, sequence);
        (0, utils_1.assertDefined)(gasInfo);
        return math_1.Uint53.fromString(gasInfo.gasUsed.toString()).toNumber();
      }
      /** Uploads code and returns a receipt, including the code ID */
      async upload(senderAddress, wasmCode, fee, memo = "") {
        const compressed = pako_1.default.gzip(wasmCode, { level: 9 });
        const storeCodeMsg = {
          typeUrl: "/cosmwasm.wasm.v1.MsgStoreCode",
          value: tx_4.MsgStoreCode.fromPartial({
            sender: senderAddress,
            wasmByteCode: compressed
          })
        };
        const result = await this.signAndBroadcast(senderAddress, [storeCodeMsg], fee, memo);
        if ((0, stargate_1.isDeliverTxFailure)(result)) {
          throw new Error(createDeliverTxResponseErrorMessage(result));
        }
        const parsedLogs = stargate_1.logs.parseRawLog(result.rawLog);
        const codeIdAttr = stargate_1.logs.findAttribute(parsedLogs, "store_code", "code_id");
        return {
          originalSize: wasmCode.length,
          originalChecksum: (0, encoding_1.toHex)((0, crypto_1.sha256)(wasmCode)),
          compressedSize: compressed.length,
          compressedChecksum: (0, encoding_1.toHex)((0, crypto_1.sha256)(compressed)),
          codeId: Number.parseInt(codeIdAttr.value, 10),
          logs: parsedLogs,
          height: result.height,
          transactionHash: result.transactionHash,
          events: result.events,
          gasWanted: result.gasWanted,
          gasUsed: result.gasUsed
        };
      }
      async instantiate(senderAddress, codeId, msg, label, fee, options = {}) {
        const instantiateContractMsg = {
          typeUrl: "/cosmwasm.wasm.v1.MsgInstantiateContract",
          value: tx_4.MsgInstantiateContract.fromPartial({
            sender: senderAddress,
            codeId: long_1.default.fromString(new math_1.Uint53(codeId).toString()),
            label,
            msg: (0, encoding_1.toUtf8)(JSON.stringify(msg)),
            funds: [...options.funds || []],
            admin: options.admin
          })
        };
        const result = await this.signAndBroadcast(senderAddress, [instantiateContractMsg], fee, options.memo);
        if ((0, stargate_1.isDeliverTxFailure)(result)) {
          throw new Error(createDeliverTxResponseErrorMessage(result));
        }
        const parsedLogs = stargate_1.logs.parseRawLog(result.rawLog);
        const contractAddressAttr = stargate_1.logs.findAttribute(parsedLogs, "instantiate", "_contract_address");
        return {
          contractAddress: contractAddressAttr.value,
          logs: parsedLogs,
          height: result.height,
          transactionHash: result.transactionHash,
          events: result.events,
          gasWanted: result.gasWanted,
          gasUsed: result.gasUsed
        };
      }
      async updateAdmin(senderAddress, contractAddress, newAdmin, fee, memo = "") {
        const updateAdminMsg = {
          typeUrl: "/cosmwasm.wasm.v1.MsgUpdateAdmin",
          value: tx_4.MsgUpdateAdmin.fromPartial({
            sender: senderAddress,
            contract: contractAddress,
            newAdmin
          })
        };
        const result = await this.signAndBroadcast(senderAddress, [updateAdminMsg], fee, memo);
        if ((0, stargate_1.isDeliverTxFailure)(result)) {
          throw new Error(createDeliverTxResponseErrorMessage(result));
        }
        return {
          logs: stargate_1.logs.parseRawLog(result.rawLog),
          height: result.height,
          transactionHash: result.transactionHash,
          events: result.events,
          gasWanted: result.gasWanted,
          gasUsed: result.gasUsed
        };
      }
      async clearAdmin(senderAddress, contractAddress, fee, memo = "") {
        const clearAdminMsg = {
          typeUrl: "/cosmwasm.wasm.v1.MsgClearAdmin",
          value: tx_4.MsgClearAdmin.fromPartial({
            sender: senderAddress,
            contract: contractAddress
          })
        };
        const result = await this.signAndBroadcast(senderAddress, [clearAdminMsg], fee, memo);
        if ((0, stargate_1.isDeliverTxFailure)(result)) {
          throw new Error(createDeliverTxResponseErrorMessage(result));
        }
        return {
          logs: stargate_1.logs.parseRawLog(result.rawLog),
          height: result.height,
          transactionHash: result.transactionHash,
          events: result.events,
          gasWanted: result.gasWanted,
          gasUsed: result.gasUsed
        };
      }
      async migrate(senderAddress, contractAddress, codeId, migrateMsg, fee, memo = "") {
        const migrateContractMsg = {
          typeUrl: "/cosmwasm.wasm.v1.MsgMigrateContract",
          value: tx_4.MsgMigrateContract.fromPartial({
            sender: senderAddress,
            contract: contractAddress,
            codeId: long_1.default.fromString(new math_1.Uint53(codeId).toString()),
            msg: (0, encoding_1.toUtf8)(JSON.stringify(migrateMsg))
          })
        };
        const result = await this.signAndBroadcast(senderAddress, [migrateContractMsg], fee, memo);
        if ((0, stargate_1.isDeliverTxFailure)(result)) {
          throw new Error(createDeliverTxResponseErrorMessage(result));
        }
        return {
          logs: stargate_1.logs.parseRawLog(result.rawLog),
          height: result.height,
          transactionHash: result.transactionHash,
          events: result.events,
          gasWanted: result.gasWanted,
          gasUsed: result.gasUsed
        };
      }
      async execute(senderAddress, contractAddress, msg, fee, memo = "", funds) {
        const instruction = {
          contractAddress,
          msg,
          funds
        };
        return this.executeMultiple(senderAddress, [instruction], fee, memo);
      }
      /**
       * Like `execute` but allows executing multiple messages in one transaction.
       */
      async executeMultiple(senderAddress, instructions, fee, memo = "") {
        const msgs = instructions.map((i3) => ({
          typeUrl: "/cosmwasm.wasm.v1.MsgExecuteContract",
          value: tx_4.MsgExecuteContract.fromPartial({
            sender: senderAddress,
            contract: i3.contractAddress,
            msg: (0, encoding_1.toUtf8)(JSON.stringify(i3.msg)),
            funds: [...i3.funds || []]
          })
        }));
        const result = await this.signAndBroadcast(senderAddress, msgs, fee, memo);
        if ((0, stargate_1.isDeliverTxFailure)(result)) {
          throw new Error(createDeliverTxResponseErrorMessage(result));
        }
        return {
          logs: stargate_1.logs.parseRawLog(result.rawLog),
          height: result.height,
          transactionHash: result.transactionHash,
          events: result.events,
          gasWanted: result.gasWanted,
          gasUsed: result.gasUsed
        };
      }
      async sendTokens(senderAddress, recipientAddress, amount, fee, memo = "") {
        const sendMsg = {
          typeUrl: "/cosmos.bank.v1beta1.MsgSend",
          value: {
            fromAddress: senderAddress,
            toAddress: recipientAddress,
            amount: [...amount]
          }
        };
        return this.signAndBroadcast(senderAddress, [sendMsg], fee, memo);
      }
      async delegateTokens(delegatorAddress, validatorAddress, amount, fee, memo = "") {
        const delegateMsg = {
          typeUrl: "/cosmos.staking.v1beta1.MsgDelegate",
          value: tx_2.MsgDelegate.fromPartial({ delegatorAddress, validatorAddress, amount })
        };
        return this.signAndBroadcast(delegatorAddress, [delegateMsg], fee, memo);
      }
      async undelegateTokens(delegatorAddress, validatorAddress, amount, fee, memo = "") {
        const undelegateMsg = {
          typeUrl: "/cosmos.staking.v1beta1.MsgUndelegate",
          value: tx_2.MsgUndelegate.fromPartial({ delegatorAddress, validatorAddress, amount })
        };
        return this.signAndBroadcast(delegatorAddress, [undelegateMsg], fee, memo);
      }
      async withdrawRewards(delegatorAddress, validatorAddress, fee, memo = "") {
        const withdrawDelegatorRewardMsg = {
          typeUrl: "/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward",
          value: tx_1.MsgWithdrawDelegatorReward.fromPartial({ delegatorAddress, validatorAddress })
        };
        return this.signAndBroadcast(delegatorAddress, [withdrawDelegatorRewardMsg], fee, memo);
      }
      /**
       * Creates a transaction with the given messages, fee and memo. Then signs and broadcasts the transaction.
       *
       * @param signerAddress The address that will sign transactions using this instance. The signer must be able to sign with this address.
       * @param messages
       * @param fee
       * @param memo
       */
      async signAndBroadcast(signerAddress, messages, fee, memo = "") {
        let usedFee;
        if (fee == "auto" || typeof fee === "number") {
          (0, utils_1.assertDefined)(this.gasPrice, "Gas price must be set in the client options when auto gas is used.");
          const gasEstimation = await this.simulate(signerAddress, messages, memo);
          const multiplier = typeof fee === "number" ? fee : 1.3;
          usedFee = (0, stargate_1.calculateFee)(Math.round(gasEstimation * multiplier), this.gasPrice);
        } else {
          usedFee = fee;
        }
        const txRaw = await this.sign(signerAddress, messages, usedFee, memo);
        const txBytes = tx_3.TxRaw.encode(txRaw).finish();
        return this.broadcastTx(txBytes, this.broadcastTimeoutMs, this.broadcastPollIntervalMs);
      }
      async sign(signerAddress, messages, fee, memo, explicitSignerData) {
        let signerData;
        if (explicitSignerData) {
          signerData = explicitSignerData;
        } else {
          const { accountNumber, sequence } = await this.getSequence(signerAddress);
          const chainId = await this.getChainId();
          signerData = {
            accountNumber,
            sequence,
            chainId
          };
        }
        return (0, proto_signing_1.isOfflineDirectSigner)(this.signer) ? this.signDirect(signerAddress, messages, fee, memo, signerData) : this.signAmino(signerAddress, messages, fee, memo, signerData);
      }
      async signAmino(signerAddress, messages, fee, memo, { accountNumber, sequence, chainId }) {
        (0, utils_1.assert)(!(0, proto_signing_1.isOfflineDirectSigner)(this.signer));
        const accountFromSigner = (await this.signer.getAccounts()).find((account) => account.address === signerAddress);
        if (!accountFromSigner) {
          throw new Error("Failed to retrieve account from signer");
        }
        const pubkey = (0, proto_signing_1.encodePubkey)((0, amino_1.encodeSecp256k1Pubkey)(accountFromSigner.pubkey));
        const signMode = signing_1.SignMode.SIGN_MODE_LEGACY_AMINO_JSON;
        const msgs = messages.map((msg) => this.aminoTypes.toAmino(msg));
        const signDoc = (0, amino_1.makeSignDoc)(msgs, fee, chainId, memo, accountNumber, sequence);
        const { signature, signed } = await this.signer.signAmino(signerAddress, signDoc);
        const signedTxBody = {
          typeUrl: "/cosmos.tx.v1beta1.TxBody",
          value: {
            messages: signed.msgs.map((msg) => this.aminoTypes.fromAmino(msg)),
            memo: signed.memo
          }
        };
        const signedTxBodyBytes = this.registry.encode(signedTxBody);
        const signedGasLimit = math_1.Int53.fromString(signed.fee.gas).toNumber();
        const signedSequence = math_1.Int53.fromString(signed.sequence).toNumber();
        const signedAuthInfoBytes = (0, proto_signing_1.makeAuthInfoBytes)([{ pubkey, sequence: signedSequence }], signed.fee.amount, signedGasLimit, signed.fee.granter, signed.fee.payer, signMode);
        return tx_3.TxRaw.fromPartial({
          bodyBytes: signedTxBodyBytes,
          authInfoBytes: signedAuthInfoBytes,
          signatures: [(0, encoding_1.fromBase64)(signature.signature)]
        });
      }
      async signDirect(signerAddress, messages, fee, memo, { accountNumber, sequence, chainId }) {
        (0, utils_1.assert)((0, proto_signing_1.isOfflineDirectSigner)(this.signer));
        const accountFromSigner = (await this.signer.getAccounts()).find((account) => account.address === signerAddress);
        if (!accountFromSigner) {
          throw new Error("Failed to retrieve account from signer");
        }
        const pubkey = (0, proto_signing_1.encodePubkey)((0, amino_1.encodeSecp256k1Pubkey)(accountFromSigner.pubkey));
        const txBody = {
          typeUrl: "/cosmos.tx.v1beta1.TxBody",
          value: {
            messages,
            memo
          }
        };
        const txBodyBytes = this.registry.encode(txBody);
        const gasLimit = math_1.Int53.fromString(fee.gas).toNumber();
        const authInfoBytes = (0, proto_signing_1.makeAuthInfoBytes)([{ pubkey, sequence }], fee.amount, gasLimit, fee.granter, fee.payer);
        const signDoc = (0, proto_signing_1.makeSignDoc)(txBodyBytes, authInfoBytes, chainId, accountNumber);
        const { signature, signed } = await this.signer.signDirect(signerAddress, signDoc);
        return tx_3.TxRaw.fromPartial({
          bodyBytes: signed.bodyBytes,
          authInfoBytes: signed.authInfoBytes,
          signatures: [(0, encoding_1.fromBase64)(signature.signature)]
        });
      }
    };
    exports.SigningCosmWasmClient = SigningCosmWasmClient;
  }
});

// node_modules/@cosmjs/cosmwasm-stargate/build/index.js
var require_build13 = __commonJS({
  "node_modules/@cosmjs/cosmwasm-stargate/build/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SigningCosmWasmClient = exports.setupWasmExtension = exports.isMsgUpdateAdminEncodeObject = exports.isMsgStoreCodeEncodeObject = exports.isMsgMigrateEncodeObject = exports.isMsgInstantiateContractEncodeObject = exports.isMsgExecuteEncodeObject = exports.isMsgClearAdminEncodeObject = exports.createWasmAminoConverters = exports.instantiate2Address = exports._instantiate2AddressIntermediate = exports.toBinary = exports.fromBinary = exports.CosmWasmClient = void 0;
    var cosmwasmclient_1 = require_cosmwasmclient();
    Object.defineProperty(exports, "CosmWasmClient", { enumerable: true, get: function() {
      return cosmwasmclient_1.CosmWasmClient;
    } });
    var encoding_1 = require_encoding2();
    Object.defineProperty(exports, "fromBinary", { enumerable: true, get: function() {
      return encoding_1.fromBinary;
    } });
    Object.defineProperty(exports, "toBinary", { enumerable: true, get: function() {
      return encoding_1.toBinary;
    } });
    var instantiate2_1 = require_instantiate2();
    Object.defineProperty(exports, "_instantiate2AddressIntermediate", { enumerable: true, get: function() {
      return instantiate2_1._instantiate2AddressIntermediate;
    } });
    Object.defineProperty(exports, "instantiate2Address", { enumerable: true, get: function() {
      return instantiate2_1.instantiate2Address;
    } });
    var modules_1 = require_modules2();
    Object.defineProperty(exports, "createWasmAminoConverters", { enumerable: true, get: function() {
      return modules_1.createWasmAminoConverters;
    } });
    Object.defineProperty(exports, "isMsgClearAdminEncodeObject", { enumerable: true, get: function() {
      return modules_1.isMsgClearAdminEncodeObject;
    } });
    Object.defineProperty(exports, "isMsgExecuteEncodeObject", { enumerable: true, get: function() {
      return modules_1.isMsgExecuteEncodeObject;
    } });
    Object.defineProperty(exports, "isMsgInstantiateContractEncodeObject", { enumerable: true, get: function() {
      return modules_1.isMsgInstantiateContractEncodeObject;
    } });
    Object.defineProperty(exports, "isMsgMigrateEncodeObject", { enumerable: true, get: function() {
      return modules_1.isMsgMigrateEncodeObject;
    } });
    Object.defineProperty(exports, "isMsgStoreCodeEncodeObject", { enumerable: true, get: function() {
      return modules_1.isMsgStoreCodeEncodeObject;
    } });
    Object.defineProperty(exports, "isMsgUpdateAdminEncodeObject", { enumerable: true, get: function() {
      return modules_1.isMsgUpdateAdminEncodeObject;
    } });
    Object.defineProperty(exports, "setupWasmExtension", { enumerable: true, get: function() {
      return modules_1.setupWasmExtension;
    } });
    var signingcosmwasmclient_1 = require_signingcosmwasmclient();
    Object.defineProperty(exports, "SigningCosmWasmClient", { enumerable: true, get: function() {
      return signingcosmwasmclient_1.SigningCosmWasmClient;
    } });
  }
});

// node_modules/js-sha3/src/sha3.js
var require_sha32 = __commonJS({
  "node_modules/js-sha3/src/sha3.js"(exports, module) {
    (function() {
      "use strict";
      var INPUT_ERROR = "input is invalid type";
      var FINALIZE_ERROR = "finalize already called";
      var WINDOW = typeof window === "object";
      var root = WINDOW ? window : {};
      if (root.JS_SHA3_NO_WINDOW) {
        WINDOW = false;
      }
      var WEB_WORKER = !WINDOW && typeof self === "object";
      var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === "object" && process.versions && process.versions.node;
      if (NODE_JS) {
        root = global;
      } else if (WEB_WORKER) {
        root = self;
      }
      var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && typeof module === "object" && module.exports;
      var AMD = typeof define === "function" && define.amd;
      var ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== "undefined";
      var HEX_CHARS = "0123456789abcdef".split("");
      var SHAKE_PADDING = [31, 7936, 2031616, 520093696];
      var CSHAKE_PADDING = [4, 1024, 262144, 67108864];
      var KECCAK_PADDING = [1, 256, 65536, 16777216];
      var PADDING = [6, 1536, 393216, 100663296];
      var SHIFT = [0, 8, 16, 24];
      var RC = [
        1,
        0,
        32898,
        0,
        32906,
        2147483648,
        2147516416,
        2147483648,
        32907,
        0,
        2147483649,
        0,
        2147516545,
        2147483648,
        32777,
        2147483648,
        138,
        0,
        136,
        0,
        2147516425,
        0,
        2147483658,
        0,
        2147516555,
        0,
        139,
        2147483648,
        32905,
        2147483648,
        32771,
        2147483648,
        32770,
        2147483648,
        128,
        2147483648,
        32778,
        0,
        2147483658,
        2147483648,
        2147516545,
        2147483648,
        32896,
        2147483648,
        2147483649,
        0,
        2147516424,
        2147483648
      ];
      var BITS = [224, 256, 384, 512];
      var SHAKE_BITS = [128, 256];
      var OUTPUT_TYPES = ["hex", "buffer", "arrayBuffer", "array", "digest"];
      var CSHAKE_BYTEPAD = {
        "128": 168,
        "256": 136
      };
      if (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {
        Array.isArray = function(obj) {
          return Object.prototype.toString.call(obj) === "[object Array]";
        };
      }
      if (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {
        ArrayBuffer.isView = function(obj) {
          return typeof obj === "object" && obj.buffer && obj.buffer.constructor === ArrayBuffer;
        };
      }
      var createOutputMethod = function(bits2, padding, outputType) {
        return function(message) {
          return new Keccak(bits2, padding, bits2).update(message)[outputType]();
        };
      };
      var createShakeOutputMethod = function(bits2, padding, outputType) {
        return function(message, outputBits) {
          return new Keccak(bits2, padding, outputBits).update(message)[outputType]();
        };
      };
      var createCshakeOutputMethod = function(bits2, padding, outputType) {
        return function(message, outputBits, n2, s2) {
          return methods["cshake" + bits2].update(message, outputBits, n2, s2)[outputType]();
        };
      };
      var createKmacOutputMethod = function(bits2, padding, outputType) {
        return function(key, message, outputBits, s2) {
          return methods["kmac" + bits2].update(key, message, outputBits, s2)[outputType]();
        };
      };
      var createOutputMethods = function(method, createMethod2, bits2, padding) {
        for (var i4 = 0; i4 < OUTPUT_TYPES.length; ++i4) {
          var type = OUTPUT_TYPES[i4];
          method[type] = createMethod2(bits2, padding, type);
        }
        return method;
      };
      var createMethod = function(bits2, padding) {
        var method = createOutputMethod(bits2, padding, "hex");
        method.create = function() {
          return new Keccak(bits2, padding, bits2);
        };
        method.update = function(message) {
          return method.create().update(message);
        };
        return createOutputMethods(method, createOutputMethod, bits2, padding);
      };
      var createShakeMethod = function(bits2, padding) {
        var method = createShakeOutputMethod(bits2, padding, "hex");
        method.create = function(outputBits) {
          return new Keccak(bits2, padding, outputBits);
        };
        method.update = function(message, outputBits) {
          return method.create(outputBits).update(message);
        };
        return createOutputMethods(method, createShakeOutputMethod, bits2, padding);
      };
      var createCshakeMethod = function(bits2, padding) {
        var w2 = CSHAKE_BYTEPAD[bits2];
        var method = createCshakeOutputMethod(bits2, padding, "hex");
        method.create = function(outputBits, n2, s2) {
          if (!n2 && !s2) {
            return methods["shake" + bits2].create(outputBits);
          } else {
            return new Keccak(bits2, padding, outputBits).bytepad([n2, s2], w2);
          }
        };
        method.update = function(message, outputBits, n2, s2) {
          return method.create(outputBits, n2, s2).update(message);
        };
        return createOutputMethods(method, createCshakeOutputMethod, bits2, padding);
      };
      var createKmacMethod = function(bits2, padding) {
        var w2 = CSHAKE_BYTEPAD[bits2];
        var method = createKmacOutputMethod(bits2, padding, "hex");
        method.create = function(key, outputBits, s2) {
          return new Kmac(bits2, padding, outputBits).bytepad(["KMAC", s2], w2).bytepad([key], w2);
        };
        method.update = function(key, message, outputBits, s2) {
          return method.create(key, outputBits, s2).update(message);
        };
        return createOutputMethods(method, createKmacOutputMethod, bits2, padding);
      };
      var algorithms = [
        { name: "keccak", padding: KECCAK_PADDING, bits: BITS, createMethod },
        { name: "sha3", padding: PADDING, bits: BITS, createMethod },
        { name: "shake", padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod },
        { name: "cshake", padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createCshakeMethod },
        { name: "kmac", padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createKmacMethod }
      ];
      var methods = {}, methodNames = [];
      for (var i3 = 0; i3 < algorithms.length; ++i3) {
        var algorithm = algorithms[i3];
        var bits = algorithm.bits;
        for (var j2 = 0; j2 < bits.length; ++j2) {
          var methodName = algorithm.name + "_" + bits[j2];
          methodNames.push(methodName);
          methods[methodName] = algorithm.createMethod(bits[j2], algorithm.padding);
          if (algorithm.name !== "sha3") {
            var newMethodName = algorithm.name + bits[j2];
            methodNames.push(newMethodName);
            methods[newMethodName] = methods[methodName];
          }
        }
      }
      function Keccak(bits2, padding, outputBits) {
        this.blocks = [];
        this.s = [];
        this.padding = padding;
        this.outputBits = outputBits;
        this.reset = true;
        this.finalized = false;
        this.block = 0;
        this.start = 0;
        this.blockCount = 1600 - (bits2 << 1) >> 5;
        this.byteCount = this.blockCount << 2;
        this.outputBlocks = outputBits >> 5;
        this.extraBytes = (outputBits & 31) >> 3;
        for (var i4 = 0; i4 < 50; ++i4) {
          this.s[i4] = 0;
        }
      }
      Keccak.prototype.update = function(message) {
        if (this.finalized) {
          throw new Error(FINALIZE_ERROR);
        }
        var notString, type = typeof message;
        if (type !== "string") {
          if (type === "object") {
            if (message === null) {
              throw new Error(INPUT_ERROR);
            } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {
              message = new Uint8Array(message);
            } else if (!Array.isArray(message)) {
              if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {
                throw new Error(INPUT_ERROR);
              }
            }
          } else {
            throw new Error(INPUT_ERROR);
          }
          notString = true;
        }
        var blocks = this.blocks, byteCount = this.byteCount, length = message.length, blockCount = this.blockCount, index = 0, s2 = this.s, i4, code;
        while (index < length) {
          if (this.reset) {
            this.reset = false;
            blocks[0] = this.block;
            for (i4 = 1; i4 < blockCount + 1; ++i4) {
              blocks[i4] = 0;
            }
          }
          if (notString) {
            for (i4 = this.start; index < length && i4 < byteCount; ++index) {
              blocks[i4 >> 2] |= message[index] << SHIFT[i4++ & 3];
            }
          } else {
            for (i4 = this.start; index < length && i4 < byteCount; ++index) {
              code = message.charCodeAt(index);
              if (code < 128) {
                blocks[i4 >> 2] |= code << SHIFT[i4++ & 3];
              } else if (code < 2048) {
                blocks[i4 >> 2] |= (192 | code >> 6) << SHIFT[i4++ & 3];
                blocks[i4 >> 2] |= (128 | code & 63) << SHIFT[i4++ & 3];
              } else if (code < 55296 || code >= 57344) {
                blocks[i4 >> 2] |= (224 | code >> 12) << SHIFT[i4++ & 3];
                blocks[i4 >> 2] |= (128 | code >> 6 & 63) << SHIFT[i4++ & 3];
                blocks[i4 >> 2] |= (128 | code & 63) << SHIFT[i4++ & 3];
              } else {
                code = 65536 + ((code & 1023) << 10 | message.charCodeAt(++index) & 1023);
                blocks[i4 >> 2] |= (240 | code >> 18) << SHIFT[i4++ & 3];
                blocks[i4 >> 2] |= (128 | code >> 12 & 63) << SHIFT[i4++ & 3];
                blocks[i4 >> 2] |= (128 | code >> 6 & 63) << SHIFT[i4++ & 3];
                blocks[i4 >> 2] |= (128 | code & 63) << SHIFT[i4++ & 3];
              }
            }
          }
          this.lastByteIndex = i4;
          if (i4 >= byteCount) {
            this.start = i4 - byteCount;
            this.block = blocks[blockCount];
            for (i4 = 0; i4 < blockCount; ++i4) {
              s2[i4] ^= blocks[i4];
            }
            f(s2);
            this.reset = true;
          } else {
            this.start = i4;
          }
        }
        return this;
      };
      Keccak.prototype.encode = function(x3, right) {
        var o2 = x3 & 255, n2 = 1;
        var bytes = [o2];
        x3 = x3 >> 8;
        o2 = x3 & 255;
        while (o2 > 0) {
          bytes.unshift(o2);
          x3 = x3 >> 8;
          o2 = x3 & 255;
          ++n2;
        }
        if (right) {
          bytes.push(n2);
        } else {
          bytes.unshift(n2);
        }
        this.update(bytes);
        return bytes.length;
      };
      Keccak.prototype.encodeString = function(str) {
        var notString, type = typeof str;
        if (type !== "string") {
          if (type === "object") {
            if (str === null) {
              throw new Error(INPUT_ERROR);
            } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {
              str = new Uint8Array(str);
            } else if (!Array.isArray(str)) {
              if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {
                throw new Error(INPUT_ERROR);
              }
            }
          } else {
            throw new Error(INPUT_ERROR);
          }
          notString = true;
        }
        var bytes = 0, length = str.length;
        if (notString) {
          bytes = length;
        } else {
          for (var i4 = 0; i4 < str.length; ++i4) {
            var code = str.charCodeAt(i4);
            if (code < 128) {
              bytes += 1;
            } else if (code < 2048) {
              bytes += 2;
            } else if (code < 55296 || code >= 57344) {
              bytes += 3;
            } else {
              code = 65536 + ((code & 1023) << 10 | str.charCodeAt(++i4) & 1023);
              bytes += 4;
            }
          }
        }
        bytes += this.encode(bytes * 8);
        this.update(str);
        return bytes;
      };
      Keccak.prototype.bytepad = function(strs, w2) {
        var bytes = this.encode(w2);
        for (var i4 = 0; i4 < strs.length; ++i4) {
          bytes += this.encodeString(strs[i4]);
        }
        var paddingBytes = w2 - bytes % w2;
        var zeros = [];
        zeros.length = paddingBytes;
        this.update(zeros);
        return this;
      };
      Keccak.prototype.finalize = function() {
        if (this.finalized) {
          return;
        }
        this.finalized = true;
        var blocks = this.blocks, i4 = this.lastByteIndex, blockCount = this.blockCount, s2 = this.s;
        blocks[i4 >> 2] |= this.padding[i4 & 3];
        if (this.lastByteIndex === this.byteCount) {
          blocks[0] = blocks[blockCount];
          for (i4 = 1; i4 < blockCount + 1; ++i4) {
            blocks[i4] = 0;
          }
        }
        blocks[blockCount - 1] |= 2147483648;
        for (i4 = 0; i4 < blockCount; ++i4) {
          s2[i4] ^= blocks[i4];
        }
        f(s2);
      };
      Keccak.prototype.toString = Keccak.prototype.hex = function() {
        this.finalize();
        var blockCount = this.blockCount, s2 = this.s, outputBlocks = this.outputBlocks, extraBytes = this.extraBytes, i4 = 0, j3 = 0;
        var hex = "", block;
        while (j3 < outputBlocks) {
          for (i4 = 0; i4 < blockCount && j3 < outputBlocks; ++i4, ++j3) {
            block = s2[i4];
            hex += HEX_CHARS[block >> 4 & 15] + HEX_CHARS[block & 15] + HEX_CHARS[block >> 12 & 15] + HEX_CHARS[block >> 8 & 15] + HEX_CHARS[block >> 20 & 15] + HEX_CHARS[block >> 16 & 15] + HEX_CHARS[block >> 28 & 15] + HEX_CHARS[block >> 24 & 15];
          }
          if (j3 % blockCount === 0) {
            f(s2);
            i4 = 0;
          }
        }
        if (extraBytes) {
          block = s2[i4];
          hex += HEX_CHARS[block >> 4 & 15] + HEX_CHARS[block & 15];
          if (extraBytes > 1) {
            hex += HEX_CHARS[block >> 12 & 15] + HEX_CHARS[block >> 8 & 15];
          }
          if (extraBytes > 2) {
            hex += HEX_CHARS[block >> 20 & 15] + HEX_CHARS[block >> 16 & 15];
          }
        }
        return hex;
      };
      Keccak.prototype.arrayBuffer = function() {
        this.finalize();
        var blockCount = this.blockCount, s2 = this.s, outputBlocks = this.outputBlocks, extraBytes = this.extraBytes, i4 = 0, j3 = 0;
        var bytes = this.outputBits >> 3;
        var buffer;
        if (extraBytes) {
          buffer = new ArrayBuffer(outputBlocks + 1 << 2);
        } else {
          buffer = new ArrayBuffer(bytes);
        }
        var array = new Uint32Array(buffer);
        while (j3 < outputBlocks) {
          for (i4 = 0; i4 < blockCount && j3 < outputBlocks; ++i4, ++j3) {
            array[j3] = s2[i4];
          }
          if (j3 % blockCount === 0) {
            f(s2);
          }
        }
        if (extraBytes) {
          array[i4] = s2[i4];
          buffer = buffer.slice(0, bytes);
        }
        return buffer;
      };
      Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;
      Keccak.prototype.digest = Keccak.prototype.array = function() {
        this.finalize();
        var blockCount = this.blockCount, s2 = this.s, outputBlocks = this.outputBlocks, extraBytes = this.extraBytes, i4 = 0, j3 = 0;
        var array = [], offset, block;
        while (j3 < outputBlocks) {
          for (i4 = 0; i4 < blockCount && j3 < outputBlocks; ++i4, ++j3) {
            offset = j3 << 2;
            block = s2[i4];
            array[offset] = block & 255;
            array[offset + 1] = block >> 8 & 255;
            array[offset + 2] = block >> 16 & 255;
            array[offset + 3] = block >> 24 & 255;
          }
          if (j3 % blockCount === 0) {
            f(s2);
          }
        }
        if (extraBytes) {
          offset = j3 << 2;
          block = s2[i4];
          array[offset] = block & 255;
          if (extraBytes > 1) {
            array[offset + 1] = block >> 8 & 255;
          }
          if (extraBytes > 2) {
            array[offset + 2] = block >> 16 & 255;
          }
        }
        return array;
      };
      function Kmac(bits2, padding, outputBits) {
        Keccak.call(this, bits2, padding, outputBits);
      }
      Kmac.prototype = new Keccak();
      Kmac.prototype.finalize = function() {
        this.encode(this.outputBits, true);
        return Keccak.prototype.finalize.call(this);
      };
      var f = function(s2) {
        var h2, l2, n2, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, b0, b1, b22, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17, b18, b19, b20, b21, b222, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33, b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;
        for (n2 = 0; n2 < 48; n2 += 2) {
          c0 = s2[0] ^ s2[10] ^ s2[20] ^ s2[30] ^ s2[40];
          c1 = s2[1] ^ s2[11] ^ s2[21] ^ s2[31] ^ s2[41];
          c2 = s2[2] ^ s2[12] ^ s2[22] ^ s2[32] ^ s2[42];
          c3 = s2[3] ^ s2[13] ^ s2[23] ^ s2[33] ^ s2[43];
          c4 = s2[4] ^ s2[14] ^ s2[24] ^ s2[34] ^ s2[44];
          c5 = s2[5] ^ s2[15] ^ s2[25] ^ s2[35] ^ s2[45];
          c6 = s2[6] ^ s2[16] ^ s2[26] ^ s2[36] ^ s2[46];
          c7 = s2[7] ^ s2[17] ^ s2[27] ^ s2[37] ^ s2[47];
          c8 = s2[8] ^ s2[18] ^ s2[28] ^ s2[38] ^ s2[48];
          c9 = s2[9] ^ s2[19] ^ s2[29] ^ s2[39] ^ s2[49];
          h2 = c8 ^ (c2 << 1 | c3 >>> 31);
          l2 = c9 ^ (c3 << 1 | c2 >>> 31);
          s2[0] ^= h2;
          s2[1] ^= l2;
          s2[10] ^= h2;
          s2[11] ^= l2;
          s2[20] ^= h2;
          s2[21] ^= l2;
          s2[30] ^= h2;
          s2[31] ^= l2;
          s2[40] ^= h2;
          s2[41] ^= l2;
          h2 = c0 ^ (c4 << 1 | c5 >>> 31);
          l2 = c1 ^ (c5 << 1 | c4 >>> 31);
          s2[2] ^= h2;
          s2[3] ^= l2;
          s2[12] ^= h2;
          s2[13] ^= l2;
          s2[22] ^= h2;
          s2[23] ^= l2;
          s2[32] ^= h2;
          s2[33] ^= l2;
          s2[42] ^= h2;
          s2[43] ^= l2;
          h2 = c2 ^ (c6 << 1 | c7 >>> 31);
          l2 = c3 ^ (c7 << 1 | c6 >>> 31);
          s2[4] ^= h2;
          s2[5] ^= l2;
          s2[14] ^= h2;
          s2[15] ^= l2;
          s2[24] ^= h2;
          s2[25] ^= l2;
          s2[34] ^= h2;
          s2[35] ^= l2;
          s2[44] ^= h2;
          s2[45] ^= l2;
          h2 = c4 ^ (c8 << 1 | c9 >>> 31);
          l2 = c5 ^ (c9 << 1 | c8 >>> 31);
          s2[6] ^= h2;
          s2[7] ^= l2;
          s2[16] ^= h2;
          s2[17] ^= l2;
          s2[26] ^= h2;
          s2[27] ^= l2;
          s2[36] ^= h2;
          s2[37] ^= l2;
          s2[46] ^= h2;
          s2[47] ^= l2;
          h2 = c6 ^ (c0 << 1 | c1 >>> 31);
          l2 = c7 ^ (c1 << 1 | c0 >>> 31);
          s2[8] ^= h2;
          s2[9] ^= l2;
          s2[18] ^= h2;
          s2[19] ^= l2;
          s2[28] ^= h2;
          s2[29] ^= l2;
          s2[38] ^= h2;
          s2[39] ^= l2;
          s2[48] ^= h2;
          s2[49] ^= l2;
          b0 = s2[0];
          b1 = s2[1];
          b32 = s2[11] << 4 | s2[10] >>> 28;
          b33 = s2[10] << 4 | s2[11] >>> 28;
          b14 = s2[20] << 3 | s2[21] >>> 29;
          b15 = s2[21] << 3 | s2[20] >>> 29;
          b46 = s2[31] << 9 | s2[30] >>> 23;
          b47 = s2[30] << 9 | s2[31] >>> 23;
          b28 = s2[40] << 18 | s2[41] >>> 14;
          b29 = s2[41] << 18 | s2[40] >>> 14;
          b20 = s2[2] << 1 | s2[3] >>> 31;
          b21 = s2[3] << 1 | s2[2] >>> 31;
          b22 = s2[13] << 12 | s2[12] >>> 20;
          b3 = s2[12] << 12 | s2[13] >>> 20;
          b34 = s2[22] << 10 | s2[23] >>> 22;
          b35 = s2[23] << 10 | s2[22] >>> 22;
          b16 = s2[33] << 13 | s2[32] >>> 19;
          b17 = s2[32] << 13 | s2[33] >>> 19;
          b48 = s2[42] << 2 | s2[43] >>> 30;
          b49 = s2[43] << 2 | s2[42] >>> 30;
          b40 = s2[5] << 30 | s2[4] >>> 2;
          b41 = s2[4] << 30 | s2[5] >>> 2;
          b222 = s2[14] << 6 | s2[15] >>> 26;
          b23 = s2[15] << 6 | s2[14] >>> 26;
          b4 = s2[25] << 11 | s2[24] >>> 21;
          b5 = s2[24] << 11 | s2[25] >>> 21;
          b36 = s2[34] << 15 | s2[35] >>> 17;
          b37 = s2[35] << 15 | s2[34] >>> 17;
          b18 = s2[45] << 29 | s2[44] >>> 3;
          b19 = s2[44] << 29 | s2[45] >>> 3;
          b10 = s2[6] << 28 | s2[7] >>> 4;
          b11 = s2[7] << 28 | s2[6] >>> 4;
          b42 = s2[17] << 23 | s2[16] >>> 9;
          b43 = s2[16] << 23 | s2[17] >>> 9;
          b24 = s2[26] << 25 | s2[27] >>> 7;
          b25 = s2[27] << 25 | s2[26] >>> 7;
          b6 = s2[36] << 21 | s2[37] >>> 11;
          b7 = s2[37] << 21 | s2[36] >>> 11;
          b38 = s2[47] << 24 | s2[46] >>> 8;
          b39 = s2[46] << 24 | s2[47] >>> 8;
          b30 = s2[8] << 27 | s2[9] >>> 5;
          b31 = s2[9] << 27 | s2[8] >>> 5;
          b12 = s2[18] << 20 | s2[19] >>> 12;
          b13 = s2[19] << 20 | s2[18] >>> 12;
          b44 = s2[29] << 7 | s2[28] >>> 25;
          b45 = s2[28] << 7 | s2[29] >>> 25;
          b26 = s2[38] << 8 | s2[39] >>> 24;
          b27 = s2[39] << 8 | s2[38] >>> 24;
          b8 = s2[48] << 14 | s2[49] >>> 18;
          b9 = s2[49] << 14 | s2[48] >>> 18;
          s2[0] = b0 ^ ~b22 & b4;
          s2[1] = b1 ^ ~b3 & b5;
          s2[10] = b10 ^ ~b12 & b14;
          s2[11] = b11 ^ ~b13 & b15;
          s2[20] = b20 ^ ~b222 & b24;
          s2[21] = b21 ^ ~b23 & b25;
          s2[30] = b30 ^ ~b32 & b34;
          s2[31] = b31 ^ ~b33 & b35;
          s2[40] = b40 ^ ~b42 & b44;
          s2[41] = b41 ^ ~b43 & b45;
          s2[2] = b22 ^ ~b4 & b6;
          s2[3] = b3 ^ ~b5 & b7;
          s2[12] = b12 ^ ~b14 & b16;
          s2[13] = b13 ^ ~b15 & b17;
          s2[22] = b222 ^ ~b24 & b26;
          s2[23] = b23 ^ ~b25 & b27;
          s2[32] = b32 ^ ~b34 & b36;
          s2[33] = b33 ^ ~b35 & b37;
          s2[42] = b42 ^ ~b44 & b46;
          s2[43] = b43 ^ ~b45 & b47;
          s2[4] = b4 ^ ~b6 & b8;
          s2[5] = b5 ^ ~b7 & b9;
          s2[14] = b14 ^ ~b16 & b18;
          s2[15] = b15 ^ ~b17 & b19;
          s2[24] = b24 ^ ~b26 & b28;
          s2[25] = b25 ^ ~b27 & b29;
          s2[34] = b34 ^ ~b36 & b38;
          s2[35] = b35 ^ ~b37 & b39;
          s2[44] = b44 ^ ~b46 & b48;
          s2[45] = b45 ^ ~b47 & b49;
          s2[6] = b6 ^ ~b8 & b0;
          s2[7] = b7 ^ ~b9 & b1;
          s2[16] = b16 ^ ~b18 & b10;
          s2[17] = b17 ^ ~b19 & b11;
          s2[26] = b26 ^ ~b28 & b20;
          s2[27] = b27 ^ ~b29 & b21;
          s2[36] = b36 ^ ~b38 & b30;
          s2[37] = b37 ^ ~b39 & b31;
          s2[46] = b46 ^ ~b48 & b40;
          s2[47] = b47 ^ ~b49 & b41;
          s2[8] = b8 ^ ~b0 & b22;
          s2[9] = b9 ^ ~b1 & b3;
          s2[18] = b18 ^ ~b10 & b12;
          s2[19] = b19 ^ ~b11 & b13;
          s2[28] = b28 ^ ~b20 & b222;
          s2[29] = b29 ^ ~b21 & b23;
          s2[38] = b38 ^ ~b30 & b32;
          s2[39] = b39 ^ ~b31 & b33;
          s2[48] = b48 ^ ~b40 & b42;
          s2[49] = b49 ^ ~b41 & b43;
          s2[0] ^= RC[n2];
          s2[1] ^= RC[n2 + 1];
        }
      };
      if (COMMON_JS) {
        module.exports = methods;
      } else {
        for (i3 = 0; i3 < methodNames.length; ++i3) {
          root[methodNames[i3]] = methods[methodNames[i3]];
        }
        if (AMD) {
          define(function() {
            return methods;
          });
        }
      }
    })();
  }
});

// node_modules/@leapwallet/name-matcha/dist/index.es.js
var import_cosmwasm_stargate = __toESM(require_build13());
var X2 = __toESM(require_sha32());

// node_modules/idna-uts46-hx/dist/index.mjs
var t = 2147483647;
var n = 36;
var e = { overflow: "Overflow: input needs wider integers to process", "not-basic": "Illegal input >= 0x80 (not a basic code point)", "invalid-input": "Invalid input" };
var i = Math.floor;
var s = String.fromCharCode;
function l(t2) {
  throw new RangeError(e[t2]);
}
function a(t2) {
  const n2 = [];
  let o2 = 0;
  const r = t2.length;
  for (; o2 < r; ) {
    const e2 = t2.charCodeAt(o2++);
    if (e2 >= 55296 && e2 <= 56319 && o2 < r) {
      const r2 = t2.charCodeAt(o2++);
      56320 == (64512 & r2) ? n2.push(((1023 & e2) << 10) + (1023 & r2) + 65536) : (n2.push(e2), o2--);
    } else
      n2.push(e2);
  }
  return n2;
}
var c = (t2) => String.fromCodePoint(...t2);
var u = function(t2, o2, r) {
  let e2 = 0;
  for (t2 = r ? i(t2 / 700) : t2 >> 1, t2 += i(t2 / o2); t2 > 455; e2 += n)
    t2 = i(t2 / 35);
  return i(e2 + 36 * t2 / (t2 + 38));
};
var h = function(o2) {
  const r = [], e2 = o2.length;
  let s2 = 0, a2 = 128, c2 = 72, f = o2.lastIndexOf("-");
  f < 0 && (f = 0);
  for (let t2 = 0; t2 < f; ++t2)
    o2.charCodeAt(t2) >= 128 && l("not-basic"), r.push(o2.charCodeAt(t2));
  for (let d = f > 0 ? f + 1 : 0; d < e2; ) {
    const f2 = s2;
    for (let r2 = 1, a3 = n; ; a3 += n) {
      d >= e2 && l("invalid-input");
      const f3 = (h2 = o2.charCodeAt(d++)) >= 48 && h2 < 58 ? h2 - 48 + 26 : h2 >= 65 && h2 < 91 ? h2 - 65 : h2 >= 97 && h2 < 123 ? h2 - 97 : n;
      f3 >= n && l("invalid-input"), f3 > i((t - s2) / r2) && l("overflow"), s2 += f3 * r2;
      const u3 = a3 <= c2 ? 1 : a3 >= c2 + 26 ? 26 : a3 - c2;
      if (f3 < u3)
        break;
      const m3 = n - u3;
      r2 > i(t / m3) && l("overflow"), r2 *= m3;
    }
    const m2 = r.length + 1;
    c2 = u(s2 - f2, m2, 0 == f2), i(s2 / m2) > t - a2 && l("overflow"), a2 += i(s2 / m2), s2 %= m2, r.splice(s2++, 0, a2);
  }
  var h2;
  return String.fromCodePoint(...r);
};
var m = (t2, n2) => Array(n2).fill(t2);
var p = (t2) => new Uint32Array(t2);
var g = 6291456;
var w = 23068672;
var v = 14680064;
var C = 2097409;
var k = 2097889;
var b = 2097249;
var I = 2097825;
var A = 2097217;
var x = 2097505;
var S = 2097697;
var y = 2097857;
var E = 2106753;
var D = 2097153;
var j = 2097281;
var F = 2097441;
var N = 2097537;
var P = 2097729;
var z = 2097761;
var q = 2097793;
var L = 2097921;
var W = 2097953;
var O = 2097377;
var U = 2097473;
var $ = 2097601;
var M = 2097665;
var R = 18874368;
var _ = 2097185;
var B = 2097313;
var G = 2097345;
var H = 2097569;
var J = 2097633;
var K = 2107105;
var Q = 2106945;
var T = 2106977;
var V = 2107009;
var X = 2106657;
var Y = 2106785;
var Z = 10486593;
var tt = 2106593;
var nt = 2106561;
var ot = 2107137;
var rt = 2107073;
var et = 2107201;
var it = [p([v, v, v, v, v, v, v, v, v, v, v, v, v, v, v, v]), p([v, v, v, v, v, v, v, v, v, v, v, v, v, g, g, v]), p([g, g, g, g, g, g, g, g, g, g, v, v, v, v, v, v]), p([v, D, _, A, b, j, B, G, O, C, F, U, x, N, H, $]), p([J, M, S, P, z, q, I, y, k, L, W, v, v, v, v, v]), p([v, g, g, g, g, g, g, g, g, g, g, g, g, g, g, g]), p([g, g, g, g, g, g, g, g, g, g, g, v, v, v, v, v]), p([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), p([Z, g, g, g, g, g, g, g, 10486626, g, D, g, g, 2097152, g, 10486690]), p([g, g, 2098145, 2098177, 10486818, 2098273, g, g, 10486914, 2098369, $, g, 2098403, 2098499, 2098595, g]), p([2098689, 2098721, 2098753, 2098785, 2098817, 2098849, 2098881, 2098913, 2098945, 2098977, 2099009, 2099041, 2099073, 2099105, 2099137, 2099169]), p([2099201, 2099233, 2099265, 2099297, 2099329, 2099361, 2099393, g, 2099425, 2099457, 2099489, 2099521, 2099553, 2099585, 2099617, 4196802]), p([g, g, g, g, g, g, g, g, g, g, g, g, g, g, g, g]), p([2099713, g, 2099745, g, 2099777, g, 2099809, g, 2099841, g, 2099873, g, 2099905, g, 2099937, g]), p([2099969, g, 2100001, g, 2100033, g, 2100065, g, 2100097, g, 2100129, g, 2100161, g, 2100193, g]), p([2100225, g, 2100257, g, 2100289, g, 2100321, g, 2100353, g, 2100385, g, 2100417, g, 2100449, g]), p([2100482, g, 2097410, 2097410, 2100545, g, 2100577, g, g, 2100609, g, 2100641, g, 2100673, g, 2100706]), p([2100706, 2100769, g, 2100801, g, 2100833, g, 2100865, g, 2100898, 2100961, g, 2100993, g, 2101025, g]), p([2101057, g, 2101089, g, 2101121, g, 2101153, g, 2101185, g, 2101217, g, 2101249, g, 2101281, g]), p([2101313, g, 2101345, g, 2101377, g, 2101409, g, 2101441, g, 2101473, g, 2101505, g, 2101537, g]), p([2101569, g, 2101601, g, 2101633, g, 2101665, g, 2101697, 2101729, g, 2101761, g, 2101793, g, P]), p([g, 2101825, 2101857, g, 2101889, g, 2101921, 2101953, g, 2101985, 2102017, 2102049, g, g, 2102081, 2102113]), p([2102145, 2102177, g, 2102209, 2102241, g, 2102273, 2102305, 2102337, g, g, g, 2102369, 2102401, g, 2102433]), p([2102465, g, 2102497, g, 2102529, g, 2102561, 2102593, g, 2102625, g, g, 2102657, g, 2102689, 2102721]), p([g, 2102753, 2102785, 2102817, g, 2102849, g, 2102881, 2102913, g, g, g, 2102945, g, g, g]), p([g, g, g, g, 2102978, 2102978, 2102978, 2103042, 2103042, 2103042, 2103106, 2103106, 2103106, 2103169, g, 2103201]), p([g, 2103233, g, 2103265, g, 2103297, g, 2103329, g, 2103361, g, 2103393, g, g, 2103425, g]), p([2103457, g, 2103489, g, 2103521, g, 2103553, g, 2103585, g, 2103617, g, 2103649, g, 2103681, g]), p([g, 2103714, 2103714, 2103714, 2103777, g, 2103809, 2103841, 2103873, g, 2103905, g, 2103937, g, 2103969, g]), p([2104001, g, 2104033, g, 2104065, g, 2104097, g, 2104129, g, 2104161, g, 2104193, g, 2104225, g]), p([2104257, g, 2104289, g, 2104321, g, 2104353, g, 2104385, g, 2104417, g, 2104449, g, 2104481, g]), p([2104513, g, 2104545, g, 2104577, g, 2104609, g, 2104641, g, 2104673, g, 2104705, g, 2104737, g]), p([2104769, g, 2104801, g, g, g, g, g, g, g, 2104833, 2104865, g, 2104897, 2104929, g]), p([g, 2104961, g, 2104993, 2105025, 2105057, 2105089, g, 2105121, g, 2105153, g, 2105185, g, 2105217, g]), p([O, 2105249, F, S, 2105281, 2105313, 2105345, y, L, g, g, g, g, g, g, g]), p([g, g, g, g, g, g, g, g, 10493986, 10494050, 10494114, 10494178, 10494242, 10494306, g, g]), p([2102241, x, P, k, 2105761, g, g, g, g, g, g, g, g, g, g, g]), p([w, w, w, w, w, w, w, w, w, w, w, w, w, w, w, w]), p([18883009, 18875457, w, 18883041, 18883074, 18883137, w, w, w, w, w, w, w, w, w, R]), p([2105953, g, 2105985, g, 2106017, g, 2106049, g, 0, 0, 10494690, g, g, g, 10494753, 2106177]), p([0, 0, 0, 0, 10486818, 10494819, 2106305, 2100737, 2106337, 2106369, 2106401, 0, 2106433, 0, 2106465, 2106497]), p([g, 2106529, nt, tt, 2106625, X, 2106689, 2106721, E, 2105921, Y, 2106817, 2098273, 2106849, 2106881, 2106913]), p([Q, T, 0, V, 2107041, rt, K, ot, 2107169, et, 2107233, 2107265, g, g, g, g]), p([g, g, 4204161, g, g, g, g, g, g, g, g, g, g, g, g, 2107297]), p([nt, E, rt, 2106465, 2107265, K, Q, g, 2107329, g, 2107361, g, 2107393, g, 2107425, g]), p([2107457, g, 2107489, g, 2107521, g, 2107553, g, 2107585, g, 2107617, g, 2107649, g, 2107681, g]), p([Y, T, V, g, E, X, g, 2107713, g, V, 2107745, g, g, 2107777, 2107809, 2107841]), p([2107873, 2107905, 2107937, 2107969, 2108001, 2108033, 2108065, 2108097, 2108129, 2108161, 2108193, 2108225, 2108257, 2108289, 2108321, 2108353]), p([2108385, 2108417, 2108449, 2108481, 2108513, 2108545, 2108577, 2108609, 2108641, 2108673, 2108705, 2108737, 2108769, 2108801, 2108833, 2108865]), p([2108897, 2108929, 2108961, 2108993, 2109025, 2109057, 2109089, 2109121, 2109153, 2109185, 2109217, 2109249, 2109281, 2109313, 2109345, 2109377]), p([2109409, g, 2109441, g, 2109473, g, 2109505, g, 2109537, g, 2109569, g, 2109601, g, 2109633, g]), p([2109665, g, 2109697, g, 2109729, g, 2109761, g, 2109793, g, 2109825, g, 2109857, g, 2109889, g]), p([2109921, g, g, w, w, w, w, w, w, w, 2109953, g, 2109985, g, 2110017, g]), p([2110049, g, 2110081, g, 2110113, g, 2110145, g, 2110177, g, 2110209, g, 2110241, g, 2110273, g]), p([2110305, g, 2110337, g, 2110369, g, 2110401, g, 2110433, g, 2110465, g, 2110497, g, 2110529, g]), p([2110561, g, 2110593, g, 2110625, g, 2110657, g, 2110689, g, 2110721, g, 2110753, g, 2110785, g]), p([0, 2110817, g, 2110849, g, 2110881, g, 2110913, g, 2110945, g, 2110977, g, 2111009, g, g]), p([2111041, g, 2111073, g, 2111105, g, 2111137, g, 2111169, g, 2111201, g, 2111233, g, 2111265, g]), p([2111297, g, 2111329, g, 2111361, g, 2111393, g, 2111425, g, 2111457, g, 2111489, g, 2111521, g]), p([2111553, g, 2111585, g, 2111617, g, 2111649, g, 2111681, g, 2111713, g, 2111745, g, 2111777, g]), p([2111809, g, 2111841, g, 2111873, g, 2111905, g, 2111937, g, 2111969, g, 2112001, g, 2112033, g]), p([2112065, g, 2112097, g, 2112129, g, 2112161, g, 2112193, g, 2112225, g, 2112257, g, 2112289, g]), p([2112321, g, 2112353, g, 2112385, g, 2112417, g, 2112449, g, 2112481, g, 2112513, g, 2112545, g]), p([0, 2112577, 2112609, 2112641, 2112673, 2112705, 2112737, 2112769, 2112801, 2112833, 2112865, 2112897, 2112929, 2112961, 2112993, 2113025]), p([2113057, 2113089, 2113121, 2113153, 2113185, 2113217, 2113249, 2113281, 2113313, 2113345, 2113377, 2113409, 2113441, 2113473, 2113505, 2113537]), p([2113569, 2113601, 2113633, 2113665, 2113697, 2113729, 2113761, 0, 0, g, g, g, g, g, g, g]), p([g, g, g, g, g, g, g, 2113794, g, g, g, 0, 0, g, g, g]), p([0, w, w, w, w, w, w, w, w, w, w, w, w, w, w, w]), p([w, w, w, w, w, w, w, w, w, w, w, w, w, w, g, w]), p([g, w, w, g, w, w, g, w, 0, 0, 0, 0, 0, 0, 0, 0]), p([g, g, g, g, g, g, g, g, g, g, g, 0, 0, 0, 0, g]), p([g, g, g, g, g, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), p([0, 0, 0, 0, 0, 0, g, g, g, g, g, g, g, g, g, g]), p([w, w, w, w, w, w, w, w, w, w, w, g, 0, g, g, g]), p([g, g, g, g, g, g, g, g, g, g, g, w, w, w, w, w]), p([w, g, g, g, g, 2113858, 2113922, 2113986, 2114050, g, g, g, g, g, g, g]), p([g, g, g, g, g, g, w, w, w, w, w, w, w, 0, g, w]), p([w, w, w, w, w, g, g, w, w, g, w, w, w, w, g, g]), p([g, g, g, g, g, g, g, g, g, g, g, g, g, g, 0, 0]), p([g, w, g, g, g, g, g, g, g, g, g, g, g, g, g, g]), p([w, w, w, w, w, w, w, w, w, w, w, 0, 0, g, g, g]), p([g, g, g, g, g, g, w, w, w, w, w, w, w, w, w, w]), p([w, g, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), p([w, w, w, w, g, g, g, g, g, g, g, 0, 0, w, g, g]), p([g, g, g, g, g, g, w, w, w, w, g, w, w, w, w, w]), p([w, w, w, w, g, w, w, w, g, w, w, w, w, w, 0, 0]), p([g, g, g, g, g, g, g, g, g, g, g, g, g, g, g, 0]), p([g, g, g, g, g, g, g, g, g, w, w, w, 0, 0, g, 0]), p([g, g, g, g, g, g, g, g, g, g, g, 0, 0, 0, 0, 0]), p([0, 0, 0, 0, 0, 0, 0, 0, w, w, w, w, w, w, w, w]), p([g, g, g, g, g, g, g, g, g, g, w, w, w, w, w, w]), p([w, w, 0, w, w, w, w, w, w, w, w, w, w, w, w, w]), p([w, w, w, w, g, g, g, g, g, g, g, g, g, g, g, g]), p([g, g, g, g, g, g, g, g, g, g, w, w, w, g, w, w]), p([g, w, w, w, w, w, w, w, 2114114, 2114178, 2114242, 2114306, 2114370, 2114434, 2114498, 2114562]), p([g, g, w, w, g, g, g, g, g, g, g, g, g, g, g, g]), p([g, w, w, w, 0, g, g, g, g, g, g, g, g, 0, 0, g]), p([g, 0, 0, g, g, g, g, g, g, g, g, g, g, g, g, g]), p([g, g, g, g, g, g, g, g, g, 0, g, g, g, g, g, g]), p([g, 0, g, 0, 0, 0, g, g, g, g, 0, 0, w, g, w, w]), p([w, w, w, w, w, 0, 0, w, w, 0, 0, w, w, w, g, 0]), p([0, 0, 0, 0, 0, 0, 0, w, 0, 0, 0, 0, 2114626, 2114690, 0, 2114754]), p([g, g, w, w, 0, 0, g, g, g, g, g, g, g, g, g, g]), p([g, g, g, g, g, g, g, g, g, g, g, g, g, g, w, 0]), p([0, w, w, w, 0, g, g, g, g, g, g, 0, 0, 0, 0, g]), p([g, 0, g, 2114818, 0, g, 2114882, 0, g, g, 0, 0, w, 0, w, w]), p([w, w, w, 0, 0, 0, 0, w, w, 0, 0, w, w, w, 0, 0]), p([0, w, 0, 0, 0, 0, 0, 0, 0, 2114946, 2115010, 2115074, g, 0, 2115138, 0]), p([w, w, g, g, g, w, g, 0, 0, 0, 0, 0, 0, 0, 0, 0]), p([0, w, w, w, 0, g, g, g, g, g, g, g, g, g, 0, g]), p([g, g, 0, g, g, g, g, g, g, g, g, g, g, g, g, g]), p([g, 0, g, g, 0, g, g, g, g, g, 0, 0, w, g, w, w]), p([w, w, w, w, w, w, 0, w, w, w, 0, w, w, w, 0, 0]), p([g, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), p([g, g, 0, 0, 0, 0, 0, 0, 0, g, w, w, w, w, w, w]), p([0, w, w, w, 0, g, g, g, g, g, g, g, g, 0, 0, g]), p([w, w, w, w, w, 0, 0, w, w, 0, 0, w, w, w, 0, 0]), p([0, 0, 0, 0, 0, w, w, w, 0, 0, 0, 0, 2115202, 2115266, 0, g]), p([g, g, g, g, g, g, g, g, 0, 0, 0, 0, 0, 0, 0, 0]), p([0, 0, w, g, 0, g, g, g, g, g, g, 0, 0, 0, g, g]), p([g, 0, g, g, g, g, 0, 0, 0, g, g, 0, g, 0, g, g]), p([0, 0, 0, g, g, 0, 0, 0, g, g, g, 0, 0, 0, g, g]), p([g, g, g, g, g, g, g, g, g, g, 0, 0, 0, 0, w, w]), p([w, w, w, 0, 0, 0, w, w, w, 0, w, w, w, w, 0, 0]), p([g, 0, 0, 0, 0, 0, 0, w, 0, 0, 0, 0, 0, 0, 0, 0]), p([w, w, w, w, w, g, g, g, g, g, g, g, g, 0, g, g]), p([g, 0, g, g, g, g, g, g, g, g, g, g, g, g, g, g]), p([g, g, g, g, g, g, g, g, g, g, 0, 0, w, g, w, w]), p([w, w, w, w, w, 0, w, w, w, 0, w, w, w, w, 0, 0]), p([0, 0, 0, 0, 0, w, w, 0, g, g, g, 0, 0, g, 0, 0]), p([0, 0, 0, 0, 0, 0, 0, g, g, g, g, g, g, g, g, g]), p([g, w, w, w, g, g, g, g, g, g, g, g, g, 0, g, g]), p([g, g, g, g, 0, g, g, g, g, g, 0, 0, w, g, w, w]), p([0, 0, 0, 0, 0, w, w, 0, 0, 0, 0, 0, 0, g, g, 0]), p([0, g, g, w, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), p([w, w, w, w, g, g, g, g, g, g, g, g, g, 0, g, g]), p([g, g, g, g, g, g, g, g, g, g, g, w, w, g, w, w]), p([w, w, w, w, w, 0, w, w, w, 0, w, w, w, w, g, g]), p([0, 0, 0, 0, g, g, g, w, g, g, g, g, g, g, g, g]), p([0, w, w, w, 0, g, g, g, g, g, g, g, g, g, g, g]), p([g, g, g, g, g, g, g, 0, 0, 0, g, g, g, g, g, g]), p([g, g, 0, g, g, g, g, g, g, g, g, g, 0, g, 0, 0]), p([g, g, g, g, g, g, g, 0, 0, 0, w, 0, 0, 0, 0, w]), p([w, w, w, w, w, 0, w, 0, w, w, w, w, w, w, w, w]), p([0, 0, w, w, g, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), p([0, g, g, g, g, g, g, g, g, g, g, g, g, g, g, g]), p([g, w, g, 2115330, w, w, w, w, w, w, w, 0, 0, 0, 0, g]), p([g, g, g, g, g, g, g, w, w, w, w, w, w, w, w, g]), p([g, g, g, g, g, g, g, g, g, g, g, g, 0, 0, 0, 0]), p([0, g, g, 0, g, 0, g, g, g, g, g, 0, g, g, g, g]), p([g, g, g, g, 0, g, 0, g, g, g, g, g, g, g, g, g]), p([g, w, g, 2115394, w, w, w, w, w, w, w, w, w, g, 0, 0]), p([g, g, g, g, g, 0, g, 0, w, w, w, w, w, w, w, 0]), p([g, g, g, g, g, g, g, g, g, g, 0, 0, 2115458, 2115522, g, g]), p([g, g, g, g, g, g, g, g, g, g, g, g, 2115585, g, g, g]), p([g, g, g, g, g, g, g, g, w, w, g, g, g, g, g, g]), p([g, g, g, g, g, w, g, w, g, w, g, g, g, g, w, w]), p([g, g, g, 2115618, g, g, g, g, 0, g, g, g, g, 2115682, g, g]), p([g, g, 2115746, g, g, g, g, 2115810, g, g, g, g, 2115874, g, g, g]), p([g, g, g, g, g, g, g, g, g, 2115938, g, g, g, 0, 0, 0]), p([0, w, w, 18893218, w, 18893282, 18893346, 18893411, 18893506, 18893571, w, w, w, w, w, w]), p([w, 18893442, w, w, w, g, w, w, g, g, g, g, g, w, w, w]), p([w, w, w, 18893666, w, w, w, w, 0, w, w, w, w, 18893730, w, w]), p([w, w, 18893794, w, w, w, w, 18893858, w, w, w, w, 18893922, w, w, w]), p([w, w, w, w, w, w, w, w, w, 18893986, w, w, w, 0, g, g]), p([g, g, g, g, g, g, w, g, g, g, g, g, g, 0, g, g]), p([w, w, w, w, w, w, w, w, w, w, w, w, w, w, w, g]), p([g, g, g, g, g, g, w, w, w, w, g, g, g, g, w, w]), p([w, g, w, w, w, g, g, w, w, w, w, w, w, w, g, g]), p([g, w, w, w, w, g, g, g, g, g, g, g, g, g, g, g]), p([g, g, w, w, w, w, w, w, w, w, w, w, w, w, g, w]), p([g, g, g, g, g, g, g, g, g, g, w, w, w, w, g, g]), p([0, 0, 0, 0, 0, 0, 0, 2116833, 0, 0, 0, 0, 0, 2116865, 0, 0]), p([g, g, g, g, g, g, g, g, g, g, g, g, 2116897, g, g, g]), p([g, g, g, g, g, g, g, g, g, 0, g, g, g, g, 0, 0]), p([g, g, g, g, g, g, g, 0, g, 0, g, g, g, g, 0, 0]), p([g, 0, g, g, g, g, 0, 0, g, g, g, g, g, g, g, 0]), p([g, 0, g, g, g, g, 0, 0, g, g, g, g, g, g, g, g]), p([g, g, g, g, g, g, g, 0, g, g, g, g, g, g, g, g]), p([g, g, g, g, g, g, g, g, g, g, g, 0, 0, w, w, w]), p([g, g, g, g, g, g, g, g, g, g, g, g, g, 0, 0, 0]), p([g, g, g, g, g, g, g, g, g, g, 0, 0, 0, 0, 0, 0]), p([g, g, g, g, g, g, 0, 0, 2116929, 2116961, 2116993, 2117025, 2117057, 2117089, 0, 0]), p([g, g, g, g, g, g, g, g, g, 0, 0, 0, 0, 0, 0, 0]), p([g, g, w, w, w, w, 0, 0, 0, 0, 0, 0, 0, 0, 0, g]), p([g, g, w, w, w, g, g, 0, 0, 0, 0, 0, 0, 0, 0, 0]), p([g, g, w, w, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), p([g, g, g, g, g, g, g, g, g, g, g, g, g, 0, g, g]), p([g, 0, w, w, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), p([g, g, g, g, 16777216, 16777216, w, w, w, w, w, w, w, w, w, w]), p([w, w, w, w, g, g, g, g, g, g, g, g, g, w, 0, 0]), p([g, g, g, g, g, g, 0, g, g, g, g, R, R, R, 0, R]), p([g, g, g, g, g, w, w, g, g, g, g, g, g, g, g, g]), p([g, g, g, g, g, g, g, g, g, w, g, 0, 0, 0, 0, 0]), p([g, g, g, g, g, g, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), p([w, w, w, w, w, w, w, w, w, w, w, w, 0, 0, 0, 0]), p([g, 0, 0, 0, g, g, g, g, g, g, g, g, g, g, g, g]), p([g, g, g, g, g, g, g, g, g, g, g, 0, 0, 0, g, g]), p([g, g, g, g, g, g, g, w, w, w, w, w, 0, 0, g, g]), p([g, g, g, g, g, w, w, w, w, w, w, w, w, w, w, 0]), p([w, w, w, w, w, w, w, w, w, w, w, w, w, 0, 0, w]), p([w, w, w, w, w, w, w, w, w, w, w, w, w, w, w, 0]), p([w, w, w, w, w, g, g, g, g, g, g, g, g, g, g, g]), p([g, g, g, g, w, w, w, w, w, w, w, w, w, w, w, w]), p([w, w, w, w, w, g, g, g, g, g, g, g, g, 0, 0, 0]), p([w, w, w, w, g, g, g, g, g, g, g, g, g, g, g, 0]), p([w, w, w, g, g, g, g, g, g, g, g, g, g, g, g, g]), p([g, w, w, w, w, w, w, w, w, w, w, w, w, w, g, g]), p([w, w, w, w, 0, 0, 0, 0, 0, 0, 0, 0, g, g, g, g]), p([w, w, w, w, w, w, w, w, 0, 0, 0, g, g, g, g, g]), p([g, g, g, g, g, g, g, g, g, g, 0, 0, 0, g, g, g]), p([2108449, 2108513, 2108833, 2108929, 2108961, 2108961, 2109217, 2109441, 2117121, 0, 0, 0, 0, 0, 0, 0]), p([2117153, 2117185, 2117217, 2117249, 2117281, 2117313, 2117345, 2117377, 2117409, 2117441, 2117473, 2117505, 2116897, 2117537, 2117569, 2117601]), p([2117633, 2117665, 2117697, 2117729, 2117761, 2117793, 2117825, 2117857, 2117889, 2117921, 2117953, 2117985, 2118017, 2118049, 2118081, 2118113]), p([2118145, 2118177, 2118209, 2118241, 2118273, 2118305, 2118337, 2118369, 2118401, 2118433, 2118465, 0, 0, 2118497, 2118529, 2118561]), p([w, w, w, g, w, w, w, w, w, w, w, w, w, w, w, w]), p([w, w, w, w, w, w, w, w, w, g, g, g, g, w, g, g]), p([g, g, g, g, w, g, g, w, w, w, g, 0, 0, 0, 0, 0]), p([g, g, g, g, g, g, g, g, g, g, g, g, D, 2098881, _, g]), p([b, j, 2102081, G, O, C, F, U, x, N, H, g, $, 2104545, J, S]), p([z, q, y, D, 2118593, 2118625, 2118657, _, b, j, 2102113, 2102145, 2118689, G, g, U]), p([N, 2100961, $, 2101921, 2118721, 2118753, J, z, q, 2118785, 2102369, I, 2118817, nt, tt, 2106625]), p([K, ot, C, S, q, I, nt, tt, T, K, ot, g, g, g, g, g]), p([g, g, g, g, g, g, g, g, 2108801, g, g, g, g, g, g, g]), p([g, g, g, g, g, g, g, g, g, g, g, 2118849, A, 2118881, 2099201, 2118689]), p([B, 2118913, 2118945, 2118977, 2102305, 2102273, 2119009, 2119041, 2119073, 2119105, 2119137, 2119169, 2119201, 2119233, 2102401, 2119265]), p([2119297, 2102433, 2119329, 2119361, 2102625, 2119393, 2105025, 2102753, 2119425, 2102785, 2105057, W, 2119457, 2119489, 2102881, E]), p([2119521, g, 2119553, g, 2119585, g, 2119617, g, 2119649, g, 2119681, g, 2119713, g, 2119745, g]), p([2119777, g, 2119809, g, 2119841, g, 2119873, g, 2119905, g, 2119937, g, 2119969, g, 2120001, g]), p([2120033, g, 2120065, g, 2120097, g, 2120129, g, 2120161, g, 2120193, g, 2120225, g, 2120257, g]), p([2120289, g, 2120321, g, 2120353, g, 2120385, g, 2120417, g, 2120449, g, 2120481, g, 2120513, g]), p([2120545, g, 2120577, g, 2120609, g, 2120641, g, 2120673, g, 2120705, g, 2120737, g, 2120769, g]), p([2120801, g, 2120833, g, 2120865, g, 2120897, g, 2120929, g, 2120961, g, 2120993, g, 2121025, g]), p([2121057, g, 2121089, g, 2121121, g, 2121153, g, 2121185, g, 2121217, g, 2121249, g, 2121281, g]), p([2121313, g, 2121345, g, 2121377, g, 2121409, g, 2121441, g, 2121473, g, 2121505, g, 2121537, g]), p([2121569, g, 2121601, g, 2121633, g, 2121665, g, 2121697, g, 2121729, g, 2121761, g, 2121793, g]), p([2121825, g, 2121857, g, 2121889, g, g, g, g, g, 2121922, 2121057, g, g, 2099650, g]), p([2121985, g, 2122017, g, 2122049, g, 2122081, g, 2122113, g, 2122145, g, 2122177, g, 2122209, g]), p([2122241, g, 2122273, g, 2122305, g, 2122337, g, 2122369, g, 2122401, g, 2122433, g, 2122465, g]), p([2122497, g, 2122529, g, 2122561, g, 2122593, g, 2122625, g, 2122657, g, 2122689, g, 2122721, g]), p([2122753, g, 2122785, g, 2122817, g, 2122849, g, 2122881, g, 2122913, g, 2122945, g, 2122977, g]), p([2123009, g, 2123041, g, 2123073, g, 2123105, g, 2123137, g, 2123169, g, 2123201, g, 2123233, g]), p([2123265, g, 2123297, g, 2123329, g, 2123361, g, 2123393, g, 2123425, g, 2123457, g, 2123489, g]), p([g, g, g, g, g, g, g, g, 2123521, 2123553, 2123585, 2123617, 2123649, 2123681, 2123713, 2123745]), p([g, g, g, g, g, g, 0, 0, 2123777, 2123809, 2123841, 2123873, 2123905, 2123937, 0, 0]), p([g, g, g, g, g, g, g, g, 2123969, 2124001, 2124033, 2124065, 2124097, 2124129, 2124161, 2124193]), p([g, g, g, g, g, g, g, g, 2124225, 2124257, 2124289, 2124321, 2124353, 2124385, 2124417, 2124449]), p([g, g, g, g, g, g, 0, 0, 2124481, 2124513, 2124545, 2124577, 2124609, 2124641, 0, 0]), p([g, g, g, g, g, g, g, g, 0, 2124673, 0, 2124705, 0, 2124737, 0, 2124769]), p([g, g, g, g, g, g, g, g, 2124801, 2124833, 2124865, 2124897, 2124929, 2124961, 2124993, 2125025]), p([g, 2106305, g, 2106337, g, 2106369, g, 2106401, g, 2106433, g, 2106465, g, 2106497, 0, 0]), p([2125058, 2125122, 2125186, 2125250, 2125314, 2125378, 2125442, 2125506, 2125058, 2125122, 2125186, 2125250, 2125314, 2125378, 2125442, 2125506]), p([2125570, 2125634, 2125698, 2125762, 2125826, 2125890, 2125954, 2126018, 2125570, 2125634, 2125698, 2125762, 2125826, 2125890, 2125954, 2126018]), p([2126082, 2126146, 2126210, 2126274, 2126338, 2126402, 2126466, 2126530, 2126082, 2126146, 2126210, 2126274, 2126338, 2126402, 2126466, 2126530]), p([g, g, 2126594, 2126658, 2126722, 0, g, 2126786, 2126849, 2126881, 2126593, 2106305, 2126658, 10515522, 2105921, 10515522]), p([10515586, 10515651, 2127138, 2127202, 2127266, 0, g, 2127330, 2127393, 2106337, 2127137, 2106369, 2127202, 10516035, 10516131, 10516227]), p([g, g, g, 2127713, 0, 0, g, g, 2127745, 2127777, 2127809, 2106401, 0, 10516451, 10516547, 10516643]), p([g, g, g, 2128129, g, g, g, g, 2128161, 2128193, 2128225, 2106465, 2128257, 10516899, 10494819, 10516993]), p([0, 0, 2128418, 2128482, 2128546, 0, g, 2128610, 2128673, 2106433, 2128417, 2106497, 2128482, 10486818, 10516450, 0]), p([Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, 2097152, 4194304, 4194304, 0, 0]), p([g, 2128705, g, g, g, g, g, 10517346, g, g, g, g, g, g, g, g]), p([g, g, g, g, 0, 0, 0, g, 0, 0, 0, 0, 0, 0, 0, Z]), p([g, g, g, 2128802, 2128867, g, 2128962, 2129027, g, g, g, g, 10517730, g, 10517794, g]), p([g, g, g, g, g, g, g, 10517858, 10517922, 10517986, g, g, g, g, g, g]), p([g, g, g, g, g, g, g, 2128804, g, g, g, g, g, g, g, Z]), p([2097152, 0, 0, 0, 2097152, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), p([2129441, C, 0, 0, 2098465, 2129473, 2129505, 2129537, 2129569, 2129601, 10518241, 2129665, 10518305, 10518337, 10518369, H]), p([2129441, 2098369, 2098145, 2098177, 2098465, 2129473, 2129505, 2129537, 2129569, 2129601, 10518241, 2129665, 10518305, 10518337, 10518369, 0]), p([D, j, $, k, 2102113, O, U, x, N, H, J, P, z, 0, 0, 0]), p([g, g, g, g, g, g, g, g, 2097698, g, g, g, g, g, g, g]), p([w, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), p([10518403, 10518499, A, 2129986, g, 10518659, 10518755, 2102145, g, 2130242, G, O, O, O, O, 2100321]), p([C, C, x, x, g, H, 2097570, g, g, J, M, S, S, S, g, g]), p([2130306, 2130371, 2130466, g, W, g, et, g, W, g, U, 2098849, _, A, g, j]), p([j, B, 0, N, $, 2130529, 2130561, 2130593, 2130625, C, g, 2130659, Q, tt, tt, Q]), p([2130753, g, g, g, g, b, b, j, C, F, g, g, g, g, g, g]), p([2130787, 2130883, 2130980, 2131107, 2131203, 2131299, 2131395, 2131491, 2131587, 2131683, 2131779, 2131875, 2131971, 2132067, 2132163, 2098402]), p([C, 2132258, 2132323, 2132418, I, 2132482, 2132547, 2132644, 2132770, k, 2132834, 2132899, x, A, b, N]), p([C, 2132258, 2132259, 2132418, I, 2132482, 2132547, 2132644, 2132770, k, 2132834, 2132899, x, A, b, N]), p([g, g, g, 0, g, g, g, g, g, 2132995, g, g, 0, 0, 0, 0]), p([g, g, g, g, g, g, g, g, g, g, g, g, 2133090, 2133155, g, 2133250]), p([2133315, g, g, g, g, g, g, g, g, g, g, g, g, g, g, g]), p([v, g, g, g, g, g, g, g, g, g, g, g, g, g, v, v]), p([g, g, g, g, g, g, g, g, g, 2133409, 2133441, g, g, g, g, g]), p([g, g, g, g, g, g, g, 0, 0, 0, 0, 0, 0, 0, 0, 0]), p([2098369, 2098145, 2098177, 2098465, 2129473, 2129505, 2129537, 2129569, 2129601, 2131042, 2098370, 2133474, 2133538, 2133602, 2133666, 2133730]), p([2133794, 2133858, 2133922, 2133986, 10522659, 10522755, 10522851, 10522947, 10523043, 10523139, 10523235, 10523331, 10523427, 10523524, 10523652, 10523780]), p([10523908, 10524036, 10524164, 10524292, 10524420, 10524548, 10524676, 10524804, 0, 0, 0, 0, 0, 0, 0, 0]), p([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10524931, 10525027, 10525123, 10525219]), p([10525315, 10525411, 10525507, 10525603, 10525699, 10525795, 10525891, 10525987, 10526083, 10526179, 10526275, 10526371, 10526467, 10526563, 10526659, 10526755]), p([10526851, 10526947, 10527043, 10527139, 10527235, 10527331, D, _, A, b, j, B, G, O, C, F]), p([U, x, N, H, $, J, M, S, P, z, q, I, y, k, L, W]), p([D, _, A, b, j, B, G, O, C, F, U, x, N, H, $, J]), p([M, S, P, z, q, I, y, k, L, W, 2129441, g, g, g, g, g]), p([g, g, g, g, g, g, g, g, g, g, g, g, 2133092, g, g, g]), p([g, g, g, g, 10527427, 10527522, 10527491, g, g, g, g, g, g, g, g, g]), p([g, g, g, g, g, g, g, g, g, g, g, g, 2138978, g, g, g]), p([g, g, g, g, 0, 0, g, g, g, g, g, g, g, g, g, g]), p([g, g, g, g, g, g, 0, g, g, g, g, g, g, g, g, g]), p([2139041, 2139073, 2139105, 2139137, 2139169, 2139201, 2139233, 2139265, 2139297, 2139329, 2139361, 2139393, 2139425, 2139457, 2139489, 2139521]), p([2139553, 2139585, 2139617, 2139649, 2139681, 2139713, 2139745, 2139777, 2139809, 2139841, 2139873, 2139905, 2139937, 2139969, 2140001, 2140033]), p([2140065, 2140097, 2140129, 2140161, 2140193, 2140225, 2140257, 2140289, 2140321, 2140353, 2140385, 2140417, 2140449, 2140481, 2140513, 2140545]), p([2140577, g, 2140609, 2140641, 2140673, g, g, 2140705, g, 2140737, g, 2140769, g, 2118625, 2119201, 2118593]), p([2118849, g, 2140801, g, g, 2140833, g, g, g, g, g, g, F, I, 2140865, 2140897]), p([2140929, g, 2140961, g, 2140993, g, 2141025, g, 2141057, g, 2141089, g, 2141121, g, 2141153, g]), p([2141185, g, 2141217, g, 2141249, g, 2141281, g, 2141313, g, 2141345, g, 2141377, g, 2141409, g]), p([2141441, g, 2141473, g, 2141505, g, 2141537, g, 2141569, g, 2141601, g, 2141633, g, 2141665, g]), p([2141697, g, 2141729, g, 2141761, g, 2141793, g, 2141825, g, 2141857, g, 2141889, g, 2141921, g]), p([2141953, g, 2141985, g, 2142017, g, 2142049, g, 2142081, g, 2142113, g, 2142145, g, 2142177, g]), p([2142209, g, 2142241, g, 2142273, g, 2142305, g, 2142337, g, 2142369, g, 2142401, g, 2142433, g]), p([2142465, g, 2142497, g, g, g, g, g, g, g, g, 2142529, g, 2142561, g, w]), p([w, w, 2142593, g, 0, 0, 0, 0, 0, g, g, g, g, g, g, g]), p([g, g, g, g, g, g, 0, g, 0, 0, 0, 0, 0, g, 0, 0]), p([g, g, g, g, g, g, g, g, 0, 0, 0, 0, 0, 0, 0, 2142625]), p([g, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, w]), p([g, g, g, g, g, g, g, 0, g, g, g, g, g, g, g, 0]), p([g, g, g, g, g, g, g, g, g, g, 0, g, g, g, g, 2142657]), p([g, g, g, 2142689, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), p([2142721, 2142753, 2142785, 2142817, 2142849, 2142881, 2142913, 2142945, 2142977, 2143009, 2143041, 2143073, 2143105, 2143137, 2143169, 2143201]), p([2143233, 2143265, 2143297, 2143329, 2143361, 2143393, 2143425, 2143457, 2143489, 2143521, 2143553, 2143585, 2143617, 2143649, 2143681, 2143713]), p([2143745, 2143777, 2143809, 2143841, 2143873, 2143905, 2143937, 2143969, 2144001, 2144033, 2144065, 2144097, 2144129, 2144161, 2144193, 2144225]), p([2144257, 2144289, 2144321, 2144353, 2144385, 2144417, 2144449, 2144481, 2144513, 2144545, 2144577, 2144609, 2144641, 2144673, 2144705, 2144737]), p([2144769, 2144801, 2144833, 2144865, 2144897, 2144929, 2144961, 2144993, 2145025, 2145057, 2145089, 2145121, 2145153, 2145185, 2145217, 2145249]), p([2145281, 2145313, 2145345, 2145377, 2145409, 2145441, 2145473, 2145505, 2145537, 2145569, 2145601, 2145633, 2145665, 2145697, 2145729, 2145761]), p([2145793, 2145825, 2145857, 2145889, 2145921, 2145953, 2145985, 2146017, 2146049, 2146081, 2146113, 2146145, 2146177, 2146209, 2146241, 2146273]), p([2146305, 2146337, 2146369, 2146401, 2146433, 2146465, 2146497, 2146529, 2146561, 2146593, 2146625, 2146657, 2146689, 2146721, 2146753, 2146785]), p([2146817, 2146849, 2146881, 2146913, 2146945, 2146977, 2147009, 2147041, 2147073, 2147105, 2147137, 2147169, 2147201, 2147233, 2147265, 2147297]), p([2147329, 2147361, 2147393, 2147425, 2147457, 2147489, 2147521, 2147553, 2147585, 2147617, 2147649, 2147681, 2147713, 2147745, 2147777, 2147809]), p([2147841, 2147873, 2147905, 2147937, 2147969, 2148001, 2148033, 2148065, 2148097, 2148129, 2148161, 2148193, 2148225, 2148257, 2148289, 2148321]), p([2148353, 2148385, 2148417, 2148449, 2148481, 2148513, 2148545, 2148577, 2148609, 2148641, 2148673, 2148705, 2148737, 2148769, 2148801, 2148833]), p([2148865, 2148897, 2148929, 2148961, 2148993, 2149025, 2149057, 2149089, 2149121, 2149153, 2149185, 2149217, 2149249, 2149281, 2149313, 2149345]), p([2149377, 2149409, 2149441, 2149473, 2149505, 2149537, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), p([Z, g, 2149569, g, g, g, g, g, g, g, g, g, g, g, g, g]), p([g, g, g, g, g, g, 2149601, g, 2143457, 2149633, 2149665, g, g, g, g, g]), p([g, g, g, g, g, g, g, 0, 0, w, w, 10538306, 10538370, g, g, 2149826]), p([g, g, g, g, g, g, g, g, g, g, g, g, g, g, g, 2149890]), p([0, 0, 0, 0, 0, g, g, g, g, g, g, g, g, g, g, g]), p([0, 2149953, 2149985, 2150017, 2150049, 2150081, 2150113, 2150145, 2150177, 2150209, 2150241, 2150273, 2150305, 2150337, 2150369, 2150401]), p([2150433, 2150465, 2150497, 2150529, 2150561, 2150593, 2150625, 2150657, 2150689, 2150721, 2150753, 2150785, 2150817, 2150849, 2150881, 2150913]), p([2150945, 2150977, 2151009, 2151041, 2151073, 2151105, 2151137, 2151169, 2151201, 2151233, 2151265, 2151297, 2151329, 2151361, 2151393, 2151425]), p([2151457, 2151489, 2151521, 2151553, 0, 2151585, 2151617, 2151649, 2151681, 2151713, 2151745, 2151777, 2151809, 2151841, 2151873, 2151905]), p([2151937, 2151969, 2152001, 2152033, 2152065, 2152097, 2152129, 2152161, 2152193, 2152225, 2152257, 2152289, 2152321, 2152353, 2152385, 2152417]), p([2152449, 2152481, 2152513, 2152545, 2152577, 2152609, 2152641, 2152673, 2152705, 2152737, 2152769, 2152801, 2152833, 2152865, 2152897, 0]), p([g, g, 2142721, 2142913, 2152929, 2152961, 2152993, 2153025, 2153057, 2153089, 2142849, 2153121, 2153153, 2153185, 2153217, 2142977]), p([g, g, g, g, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), p([10541859, 10541955, 10542051, 10542147, 10542243, 10542339, 10542435, 10542531, 10542627, 10542723, 10542819, 10542915, 10543011, 10543107, 10543203, 10543299]), p([10543395, 10543491, 10543587, 10543683, 10543779, 10543875, 10543971, 10544067, 10544163, 10544259, 10544355, 10544451, 10544547, 10544644, 10544772, 0]), p([10544899, 10544995, 10545091, 10545187, 10545283, 10545379, 10545475, 10545571, 10545667, 10545763, 10545859, 10545955, 10546051, 10546147, 10546243, 10546339]), p([10546435, 10546531, 10546627, 10546723, 10546819, 10546915, 10547011, 10547107, 10547203, 10547299, 10547395, 10547491, 10547587, 10547683, 10547779, 10547875]), p([10547971, 10548067, 10548163, 10548259, 2159745, 2159777, 2144833, 2159809, g, g, g, g, g, g, g, g]), p([2159843, 2133506, 2159938, 2098146, 2160002, 2160066, 2160130, 2160194, 2160258, 2160322, 2160386, 2131266, 2131170, 2160450, 2160514, 2160578]), p([2149953, 2150049, 2150145, 2150209, 2150465, 2150497, 2150593, 2150657, 2150689, 2150753, 2150785, 2150817, 2150849, 2150881, 2154625, 2154721]), p([2154817, 2154913, 2155009, 2155105, 2155201, 2155297, 2155393, 2155489, 2155585, 2155681, 2155777, 2155873, 2160642, 2160706, 2160769, g]), p([2142721, 2142913, 2152929, 2152961, 2156705, 2156801, 2156897, 2143073, 2157089, 2143457, 2145057, 2145441, 2145409, 2145089, 2148033, 2143713]), p([2144993, 2157953, 2158049, 2158145, 2158241, 2158337, 2158433, 2158529, 2158625, 2160801, 2160833, 2143905, 2160865, 2160897, 2160929, 2160961]), p([2160993, 2159489, 2161025, 2161057, 2152993, 2153025, 2153057, 2161089, 2161121, 2161153, 2161185, 2158913, 2159009, 2159105, 2159201, 2159297]), p([2161217, 2161250, 2161314, 2161378, 2161442, 2161506, 2098466, 2160034, 2160546, 2161570, 2161634, 2161698, 2161762, 2161826, 2161890, 2161954]), p([2162018, 2162082, 2162146, 2162210, 2162274, 2162338, 2162402, 2162466, 2162530, 2162595, 2162691, 2162787, 2162882, 2162947, 2163042, 2163107]), p([2163201, 2163233, 2163265, 2163297, 2163329, 2163361, 2163393, 2163425, 2163457, 2149889, 2163489, 2163521, 2163553, 2163585, 2163617, 2163649]), p([2163681, 2163713, 2163745, 2149921, 2163777, 2163809, 2163841, 2163873, 2163905, 2163937, 2163969, 2164001, 2164033, 2164065, 2164097, 2164129]), p([2164161, 2164193, 2164225, 2164257, 2164289, 2164321, 2164353, 2164385, 2164417, 2164449, 2164481, 2164513, 2164545, 2164577, 2164609, 2164642]), p([2164708, 2164836, 2164964, 2165091, 2165188, 2165315, 2165411, 2165509, 2165668, 2165795, 2165891, 2165987, 2166084, 2166212, 2166339, 2166435]), p([2166530, 2166595, 2166692, 2166820, 2166946, 2167013, 2167174, 2167365, 2167075, 2167525, 2167685, 2167844, 2167971, 2168067, 2168163, 2168260]), p([2168389, 2168548, 2168675, 2168771, 2168867, 2168962, 2169026, 2167618, 2169090, 2169155, 2169251, 2169349, 2169507, 2169604, 2169733, 2169891]), p([2169986, 2170050, 2170117, 2170276, 2170405, 2170563, 2170661, 2170818, 2170883, 2170979, 2171075, 2171171, 2171267, 2171364, 2171491, 2171586]), p([2171651, 2171747, 2171843, 2171940, 2172067, 2172163, 2172259, 2172357, 2172516, 2172642, 2172709, 2172866, 2172932, 2167236, 2173059, 2173155]), p([2173251, 2173348, 2173474, 2173539, 2173636, 2173762, 2173829, 2167427, 2173986, 2174050, 2174114, 2174178, 2174242, 2174306, 2174370, 2174434]), p([2174498, 2174562, 2174627, 2174723, 2174819, 2174915, 2175011, 2175107, 2175203, 2175299, 2175395, 2175491, 2175587, 2175683, 2175779, 2175875]), p([2175971, 2176067, 2176162, 2176226, 2176291, 2176386, 2176450, 2176514, 2176579, 2176675, 2176770, 2176834, 2176898, 2176962, 2177026, 2177092]), p([2176098, 2177218, 2177282, 2177346, 2177410, 2177474, 2177538, 2177602, 2177667, 2177764, 2177890, 2177954, 2178018, 2178082, 2178146, 2178210]), p([2178274, 2178339, 2178435, 2178243, 2178531, 2178626, 2178690, 2178754, 2097474, 2178818, 2178882, 2178946, 2179010, 2179074, 2179138, 2179203]), p([2179299, 2176610, 2179395, 2179491, 2179587, 2176706, 2179683, 2179779, 2179876, 2176098, 2180003, 2180099, 2180195, 2180291, 2180389, 2180550]), p([2180738, 2180802, 2180866, 2180930, 2180994, 2181058, 2181122, 2181186, 2181250, 2181186, 2181314, 2181378, 2181442, 2181506, 2181570, 2181506]), p([2181634, 2181698, 0, 2181762, 2130018, 2097218, 2181828, 0, 2181954, 2182018, 2182082, 2176066, 2182146, 2182210, 2179138, 2182274]), p([2097506, 2182338, 2182403, 2182498, 2177538, 2182563, 2182659, 2182754, 0, 2182819, 2182914, 2180514, 2182978, 2183042, 2183107, 2183203]), p([2183298, 2183362, 2183426, 2183490, 2183554, 2183618, 2183682, 2183746, 2183810, 2183875, 2183971, 2184067, 2184163, 2184259, 2184355, 2184451]), p([2184547, 2184643, 2184739, 2184835, 2184931, 2185027, 2185123, 2185219, 2185315, 2185411, 2185507, 2185603, 2185699, 2185795, 2185891, 2185987]), p([2186081, g, 2186113, g, 2186145, g, 2186177, g, 2186209, g, 2117121, g, 2186241, g, 2186273, g]), p([2186305, g, 2186337, g, 2186369, g, 2186401, g, 2186433, g, 2186465, g, 2186497, g, 2186529, g]), p([2186561, g, 2186593, g, 2186625, g, 2186657, g, 2186689, g, 2186721, g, 2186753, g, g, w]), p([w, w, w, g, w, w, w, w, w, w, w, w, w, w, g, g]), p([2186785, g, 2186817, g, 2186849, g, 2186881, g, 2186913, g, 2186945, g, 2186977, g, 2187009, g]), p([2187041, g, 2187073, g, 2187105, g, 2187137, g, 2187169, g, 2187201, g, 2109217, 2109281, w, w]), p([w, w, g, g, g, g, g, g, 0, 0, 0, 0, 0, 0, 0, 0]), p([g, g, 2187233, g, 2187265, g, 2187297, g, 2187329, g, 2187361, g, 2187393, g, 2187425, g]), p([g, g, 2187457, g, 2187489, g, 2187521, g, 2187553, g, 2187585, g, 2187617, g, 2187649, g]), p([2187681, g, 2187713, g, 2187745, g, 2187777, g, 2187809, g, 2187841, g, 2187873, g, 2187905, g]), p([2187937, g, 2187969, g, 2188001, g, 2188033, g, 2188065, g, 2188097, g, 2188129, g, 2188161, g]), p([2188193, g, 2188225, g, 2188257, g, 2188289, g, 2188321, g, 2188353, g, 2188385, g, 2188417, g]), p([2188417, g, g, g, g, g, g, g, g, 2188449, g, 2188481, g, 2188513, 2188545, g]), p([2188577, g, 2188609, g, 2188641, g, 2188673, g, g, g, g, 2188705, g, 2118977, g, g]), p([2188737, g, 2188769, g, g, g, 2188801, g, 2188833, g, 2188865, g, 2188897, g, 2188929, g]), p([2188961, g, 2188993, g, 2189025, g, 2189057, g, 2189089, g, 2105249, 2118689, 2118945, 2189121, 2119009, g]), p([2189153, 2189185, 2119073, 2189217, 2189249, g, 2189281, g, 2189313, g, 2189345, g, 2189377, g, 2189409, g]), p([2189441, g, 2189473, g, 2189505, 2119361, 2189537, 2189569, g, 2189601, g, 0, 0, 0, 0, 0]), p([2189633, g, 0, g, 0, g, 2189665, g, 2189697, g, 0, 0, 0, 0, 0, 0]), p([0, 0, A, B, M, 2189729, g, g, 2100321, 2101089, g, g, g, g, g, g]), p([g, g, w, g, g, g, w, g, g, g, g, w, g, g, g, g]), p([g, g, g, w, w, w, w, w, g, g, g, g, w, 0, 0, 0]), p([w, w, g, g, g, g, g, g, g, g, g, g, g, g, g, g]), p([w, w, w, w, w, w, 0, 0, 0, 0, 0, 0, 0, 0, g, g]), p([w, w, g, g, g, g, g, g, g, g, g, g, g, g, g, w]), p([g, g, g, g, g, g, w, w, w, w, w, w, w, w, g, g]), p([g, g, g, g, g, g, g, w, w, w, w, w, w, w, w, w]), p([w, w, w, w, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, g]), p([g, g, g, w, w, w, w, w, w, w, w, w, w, w, w, w]), p([w, g, g, g, g, g, g, g, g, g, g, g, g, g, 0, g]), p([g, g, g, g, g, g, g, g, g, g, 0, 0, 0, 0, g, g]), p([g, g, g, g, g, w, g, g, g, g, g, g, g, g, g, g]), p([g, g, g, g, g, g, g, g, g, w, w, w, w, w, w, w]), p([w, w, w, w, w, w, w, 0, 0, 0, 0, 0, 0, 0, 0, 0]), p([g, g, g, w, g, g, g, g, g, g, g, g, w, w, 0, 0]), p([g, g, g, g, g, g, g, g, g, g, 0, 0, g, g, g, g]), p([g, g, g, g, g, g, g, g, g, g, g, w, w, w, g, g]), p([w, g, w, w, w, g, g, w, w, g, g, g, g, g, w, w]), p([g, w, g, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), p([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, g, g, g, g, g]), p([g, g, g, g, g, w, w, 0, 0, 0, 0, 0, 0, 0, 0, 0]), p([0, g, g, g, g, g, g, 0, 0, g, g, g, g, g, g, 0]), p([0, g, g, g, g, g, g, 0, 0, 0, 0, 0, 0, 0, 0, 0]), p([g, g, g, g, g, g, g, g, g, g, g, g, 2187297, 2189761, 2140609, 2189793]), p([g, g, g, g, g, g, g, g, g, 2189825, g, g, 0, 0, 0, 0]), p([2189857, 2189889, 2189921, 2189953, 2189985, 2190017, 2190049, 2190081, 2190113, 2190145, 2190177, 2190209, 2190241, 2190273, 2190305, 2190337]), p([2190369, 2190401, 2190433, 2190465, 2190497, 2190529, 2190561, 2190593, 2190625, 2190657, 2190689, 2190721, 2190753, 2190785, 2190817, 2190849]), p([2190881, 2190913, 2190945, 2190977, 2191009, 2191041, 2191073, 2191105, 2191137, 2191169, 2191201, 2191233, 2191265, 2191297, 2191329, 2191361]), p([2191393, 2191425, 2191457, 2191489, 2191521, 2191553, 2191585, 2191617, 2191649, 2191681, 2191713, 2191745, 2191777, 2191809, 2191841, 2191873]), p([2191905, 2191937, 2191969, 2192001, 2192033, 2192065, 2192097, 2192129, 2192161, 2192193, 2192225, 2192257, 2192289, 2192321, 2192353, 2192385]), p([g, g, g, w, w, w, w, w, w, w, w, g, w, w, 0, 0]), p([g, g, g, g, g, g, g, 0, 0, 0, 0, g, g, g, g, g]), p([2192417, 2192449, 2147777, 2192481, 2192513, 2192545, 2192577, 2149505, 2149505, 2192609, 2148033, 2192641, 2192673, 2192705, 2192737, 2192769]), p([2192801, 2192833, 2192865, 2192897, 2192929, 2192961, 2192993, 2193025, 2193057, 2193089, 2193121, 2193153, 2193185, 2193217, 2193249, 2193281]), p([2193313, 2193345, 2193377, 2193409, 2193441, 2193473, 2193505, 2193537, 2193569, 2193601, 2193633, 2193665, 2193697, 2193729, 2193761, 2193793]), p([2193825, 2193857, 2193889, 2193921, 2146689, 2193953, 2193985, 2194017, 2194049, 2194081, 2194113, 2194145, 2194177, 2194209, 2194241, 2194273]), p([2149025, 2194305, 2194337, 2194369, 2194401, 2194433, 2194465, 2194497, 2194529, 2194561, 2194593, 2194625, 2194657, 2194689, 2194721, 2194753]), p([2194785, 2194817, 2194849, 2194881, 2194913, 2194945, 2194977, 2195009, 2195041, 2195073, 2195105, 2195137, 2192929, 2195169, 2195201, 2195233]), p([2195265, 2195297, 2195329, 2195361, 2195393, 2195425, 2195457, 2195489, 2195521, 2195553, 2195585, 2195617, 2195649, 2195681, 2195713, 2195745]), p([2195777, 2147841, 2195809, 2195841, 2195873, 2195905, 2195937, 2195969, 2196001, 2196033, 2196065, 2196097, 2196129, 2196161, 2196193, 2196225]), p([2196257, 2143905, 2196289, 2196321, 2196353, 2196385, 2196417, 2196449, 2196481, 2196513, 2143297, 2196545, 2196577, 2196609, 2196641, 2196673]), p([2196705, 2196737, 2196769, 2196801, 2196833, 2196865, 2196897, 2196929, 2196961, 2196993, 2197025, 2197057, 2197089, 2197121, 2197153, 2197185]), p([2197217, 2195745, 2197249, 2197281, 2197313, 2197345, 2197377, 2197409, 2164641, 2197441, 2195233, 2197473, 2197505, 2197537, 2197569, 2197601]), p([2197633, 2197665, 2197697, 2197729, 2197761, 2197793, 2197825, 2197857, 2197889, 2197921, 2197953, 2197985, 2198017, 2198049, 2198081, 2192929]), p([2198113, 2198145, 2198177, 2198209, 2149473, 2198241, 2198273, 2198305, 2198337, 2198369, 2198401, 2198433, 2198465, 2198497, 2198529, 2198561]), p([2198593, 2156801, 2198625, 2198657, 2198689, 2198721, 2198753, 2198785, 2198817, 2198849, 2198881, 2195297, 2198913, 2198945, 2198977, 2199009]), p([2199041, 2199073, 2199105, 2199137, 2199169, 2199201, 2199233, 2199265, 2199297, 2148001, 2199329, 2199361, 2199393, 2199425, 2199457, 2199489]), p([2199521, 2199553, 2199585, 2199617, 2199649, 2199681, 2199713, 2146433, 2199745, 2199777, 2199809, 2199841, 2199873, 2199905, 2199937, 2199969]), p([2200001, 2200033, 2200065, 2200097, 2200129, 2200161, 2200193, 2200225, 2147297, 2200257, 2147393, 2200289, 2200321, 2200353, g, g]), p([2200385, g, 2200417, g, g, 2200449, 2200481, 2200513, 2200545, 2200577, 2200609, 2200641, 2200673, 2200705, 2146657, g]), p([2200737, g, 2200769, g, g, 2200801, 2200833, g, g, g, 2200865, 2200897, 2200929, 2200961, 2200993, 2201025]), p([2201057, 2201089, 2201121, 2201153, 2201185, 2201217, 2201249, 2201281, 2201313, 2201345, 2201377, 2201409, 2144129, 2201441, 2201473, 2201505]), p([2201537, 2201569, 2201601, 2201633, 2201665, 2201697, 2201729, 2201761, 2201793, 2201825, 2201857, 2201889, 2158145, 2201921, 2201953, 2201985]), p([2202017, 2158529, 2202049, 2202081, 2202113, 2202145, 2202177, 2196897, 2202209, 2202241, 2202273, 2202305, 2202337, 2202369, 2202369, 2202401]), p([2202433, 2202465, 2202497, 2202529, 2202561, 2202593, 2202625, 2200801, 2202657, 2202689, 2202721, 2202753, 2202786, 2202849, 0, 0]), p([2202881, 2202913, 2202945, 2202977, 2203009, 2203041, 2203073, 2203105, 2201249, 2203137, 2203169, 2203201, 2200385, 2203233, 2203265, 2203297]), p([2203329, 2203361, 2203393, 2203425, 2203457, 2203489, 2203521, 2203553, 2203585, 2201505, 2203617, 2201537, 2203649, 2203681, 2203713, 2203745]), p([2203777, 2200417, 2193601, 2203809, 2203841, 2145185, 2195777, 2198401, 2203873, 2203905, 2201761, 2203937, 2201793, 2203969, 2204001, 2204033]), p([2200481, 2204065, 2204097, 2204129, 2204161, 2204193, 2200513, 2204225, 2204257, 2204289, 2204321, 2204353, 2204385, 2202177, 2204417, 2204449]), p([2196897, 2204481, 2202305, 2204513, 2204545, 2204577, 2204609, 2204641, 2202465, 2204673, 2200769, 2204705, 2202497, 2195169, 2204737, 2202529]), p([2204769, 2202593, 2204801, 2204833, 2204865, 2204897, 2204929, 2202657, 2200673, 2204961, 2202689, 2204993, 2202721, 2205025, 2149505, 2205058]), p([2205122, 2205186, 2205249, 2205281, 2205313, 2205346, 2205410, 2205474, 2205537, 2205569, 0, 0, 0, 0, 0, 0]), p([2205602, 2205666, 2205730, 2205635, 2205795, 2097730, 2097730, 0, 0, 0, 0, 0, 0, 0, 0, 0]), p([0, 0, 0, 2205890, 2205954, 2206018, 2206082, 2206146, 0, 0, 0, 0, 0, 2206210, w, 2206274]), p([2206337, 2130529, 2130625, 2206369, 2206401, 2206433, 2206465, 2206497, 2206529, 10518241, 2206562, 2206626, 2206691, 2206787, 2206882, 2206946]), p([2207010, 2207074, 2207138, 2207202, 2207266, 2207330, 2207394, 0, 2207458, 2207522, 2207586, 2207650, 2207714, 0, 2207778, 0]), p([2207842, 2207906, 0, 2207970, 2208034, 0, 2208098, 2208162, 2208226, 2206690, 2208290, 2208354, 2208418, 2208482, 2208546, 2208610]), p([2208673, 2208673, 2208705, 2208705, 2208705, 2208705, 2208737, 2208737, 2208737, 2208737, 2208769, 2208769, 2208769, 2208769, 2208801, 2208801]), p([2208801, 2208801, 2208833, 2208833, 2208833, 2208833, 2208865, 2208865, 2208865, 2208865, 2208897, 2208897, 2208897, 2208897, 2208929, 2208929]), p([2208929, 2208929, 2208961, 2208961, 2208961, 2208961, 2208993, 2208993, 2208993, 2208993, 2209025, 2209025, 2209025, 2209025, 2209057, 2209057]), p([2209057, 2209057, 2209089, 2209089, 2209121, 2209121, 2209153, 2209153, 2209185, 2209185, 2209217, 2209217, 2209249, 2209249, 2209281, 2209281]), p([2209281, 2209281, 2209313, 2209313, 2209313, 2209313, 2209345, 2209345, 2209345, 2209345, 2209377, 2209377, 2209377, 2209377, 2209409, 2209409]), p([2209441, 2209441, 2209441, 2209441, 2209473, 2209473, 2209505, 2209505, 2209505, 2209505, 2209537, 2209537, 2209537, 2209537, 2209569, 2209569]), p([2209601, 2209601, g, g, g, g, g, g, g, g, g, g, g, g, g, g]), p([g, g, g, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), p([0, 0, 0, 2209633, 2209633, 2209633, 2209633, 2113985, 2113985, 2209665, 2209665, 2209697, 2209697, 2113986, 2209729, 2209729]), p([2209761, 2209761, 2209793, 2209793, 2209825, 2209825, 2209825, 2209825, 2209857, 2209857, 2209890, 2209890, 2209954, 2209954, 2210018, 2210018]), p([2210082, 2210082, 2210146, 2210146, 2210210, 2210210, 2210274, 2210274, 2210274, 2210338, 2210338, 2210338, 2210401, 2210401, 2210401, 2210401]), p([2210434, 2210498, 2210562, 2210338, 2210626, 2210690, 2210754, 2210818, 2210882, 2210946, 2211010, 2211074, 2211138, 2211202, 2211266, 2211330]), p([2211394, 2211458, 2211522, 2211586, 2211650, 2211714, 2211778, 2211746, 2211842, 2211906, 2211970, 2212034, 2212098, 2212162, 2212226, 2212290]), p([2212354, 2212418, 2212482, 2212546, 2212610, 2212674, 2212738, 2212802, 2212866, 2212930, 2212994, 2213058, 2213122, 2213186, 2213250, 2213314]), p([2213378, 2213442, 2213506, 2213570, 2213634, 2213698, 2213762, 2213826, 2213890, 2213954, 2214018, 2214082, 2214146, 2214210, 2214274, 2214338]), p([2214402, 2214466, 2214530, 2214594, 2214658, 2214722, 2211810, 2211874, 2214786, 2214850, 2214914, 2214978, 2215042, 2215106, 2215170, 2215234]), p([2215298, 2215362, 2215426, 2215490, 2215554, 2211682, 2215618, 2215682, 2214690, 2215746, 2215586, 2215810, 2215874, 2215938, 10604611, 10604707]), p([10604803, 10604899, 10604995, 10605091, 2216578, 2216642, 2210562, 2216706, 2210338, 2210626, 2216770, 2216834, 2210882, 2216898, 2210946, 2211010]), p([2216962, 2217026, 2211266, 2217090, 2211330, 2211394, 2217154, 2217218, 2211522, 2217282, 2211586, 2211650, 2213442, 2213506, 2213698, 2213762]), p([2213826, 2214082, 2214146, 2214210, 2214274, 2214530, 2214594, 2214658, 2217346, 2214786, 2217410, 2217474, 2215170, 2217538, 2215234, 2215298]), p([2215938, 2217602, 2217666, 2214690, 2214946, 2215746, 2215586, 2210434, 2210498, 2217730, 2210562, 2217794, 2210690, 2210754, 2210818, 2210882]), p([2217858, 2211074, 2211138, 2211202, 2211266, 2217922, 2211522, 2211714, 2211778, 2211746, 2211842, 2211906, 2212034, 2212098, 2212162, 2212226]), p([2212290, 2212354, 2217986, 2212418, 2212482, 2212546, 2212610, 2212674, 2212738, 2212866, 2212930, 2212994, 2213058, 2213122, 2213186, 2213250]), p([2213314, 2213378, 2213570, 2213634, 2213890, 2213954, 2214018, 2214082, 2214146, 2214338, 2214402, 2214466, 2214530, 2218050, 2214722, 2211810]), p([2211874, 2214786, 2214978, 2215042, 2215106, 2215170, 2218114, 2215362, 2215426, 2218178, 2211682, 2215618, 2215682, 2214690, 2215330, 2210562]), p([2217794, 2210882, 2217858, 2211266, 2217922, 2211522, 2218242, 2212290, 2218306, 2218370, 2218434, 2214082, 2214146, 2214530, 2215170, 2218114]), p([2214690, 2215330, 2218499, 2218595, 2218691, 2218786, 2218850, 2218914, 2218978, 2219042, 2219106, 2219170, 2219234, 2219298, 2219362, 2219426]), p([2215650, 2219490, 2219554, 2219618, 2215714, 2219682, 2219746, 2219810, 2219874, 2219938, 2220002, 2220066, 2218370, 2220130, 2220194, 2220258]), p([2220322, 2218786, 2218850, 2218914, 2218978, 2219042, 2219106, 2219170, 2219234, 2219298, 2219362, 2219426, 2215650, 2219490, 2219554, 2219618]), p([2215714, 2219682, 2219746, 2219810, 2219874, 2219938, 2220002, 2220066, 2218370, 2220130, 2220194, 2220258, 2220322, 2219938, 2220002, 2220066]), p([2218370, 2218306, 2218434, 2212802, 2212098, 2212162, 2212226, 2219938, 2220002, 2220066, 2212802, 2212866, 2220386, 2220386, g, g]), p([2220451, 2220547, 2220547, 2220643, 2220739, 2220835, 2220931, 2221027, 2211779, 2211779, 2221123, 2221219, 2221315, 2221411, 2221507, 2221603]), p([2221603, 2221699, 2221795, 2221795, 2221891, 2221891, 2221987, 2222083, 2222083, 2222179, 2222275, 2222275, 2222371, 2222371, 2222467, 2222563]), p([2222563, 2222659, 2222659, 2222755, 2222851, 2222947, 2223043, 2223043, 2223139, 2223235, 2223331, 2223427, 2223523, 2223523, 2223619, 2223715]), p([2223811, 2223907, 2224003, 2224099, 2224099, 2224195, 2224195, 2224291, 2224291, 2224387, 2211811, 2224483, 2224579, 2214723, 2211875, 2224675]), p([0, 0, 2224771, 2224867, 2224963, 2225059, 2225155, 2225251, 2225251, 2225347, 2225443, 2225539, 2225635, 2225635, 2225731, 2225827]), p([2225923, 2226019, 2226115, 2226211, 2226307, 2226403, 2226499, 2226595, 2226691, 2226787, 2226883, 2226979, 2227075, 2227171, 2215619, 2227267]), p([2227363, 2227459, 2227555, 2227651, 2223619, 2223811, 2227747, 2227843, 2227939, 2228035, 2228131, 2228227, 2228131, 2227939, 2228323, 2228419]), p([2228515, 2228611, 2228707, 2228227, 2222947, 2221987, 2228803, 2228899, 0, 0, 0, 0, 0, 0, 0, g]), p([2228995, 2229091, 2229188, 2229316, 2229444, 2229572, 2229700, 2229828, 2229956, 2230083, 10618802, 10619368, 2231012, g, g, g]), p([R, R, R, R, R, R, R, R, R, R, R, R, R, R, R, R]), p([10619745, 2231169, 0, 10527425, 10494753, 10517729, 10517857, 2231201, 2231233, 0, 0, 0, 0, 0, 0, 0]), p([0, 2231265, 2231297, 10619937, 10619937, 10518337, 10518369, 10619969, 10620001, 2231425, 2231457, 2231489, 2231521, 2231553, 2231585, 2133409]), p([2133441, 2231617, 2231649, 2231681, 2231713, g, g, 10620353, 10620385, 10517794, 10517794, 10517794, 10517794, 10619937, 10619937, 10619937]), p([10619745, 2231169, 0, 0, 10494753, 10527425, 10517857, 10517729, 2231265, 10518337, 10518369, 10619969, 10620001, 2231425, 2231457, 10620417]), p([10620449, 10620481, 10518241, 2231905, 10620545, 10620577, 10518305, 0, 10620609, 10620641, 10620673, 10620705, 0, 0, 0, 0]), p([10620738, 2232194, 10604610, g, 10604706, 0, 10604802, 2218498, 10604898, 2218594, 10604994, 2218690, 10605090, 2232258, 10620930, 2232386]), p([2232449, 2232481, 2232481, 2232513, 2232513, 2232545, 2232545, 2232577, 2232577, 2209889, 2209889, 2209889, 2209889, 2113857, 2113857, 2210689]), p([2210689, 2210689, 2210689, 2232609, 2232609, 2211073, 2211073, 2211073, 2211073, 2211457, 2211457, 2211457, 2211457, 2210465, 2210465, 2210465]), p([2210465, 2210529, 2210529, 2210529, 2210529, 2210849, 2210849, 2210849, 2210849, 2229537, 2229537, 2215809, 2215809, 2215873, 2215873, 2216673]), p([2216673, 2212097, 2212097, 2212097, 2212097, 2218369, 2218369, 2218369, 2218369, 2212353, 2212353, 2212353, 2212353, 2212481, 2212481, 2212481]), p([2212481, 2212737, 2212737, 2212737, 2212737, 2212865, 2212865, 2212865, 2212865, 2212929, 2212929, 2212929, 2212929, 2213057, 2213057, 2213057]), p([2213057, 2213185, 2213185, 2213185, 2213185, 2213569, 2213569, 2213569, 2213569, 2213825, 2213825, 2213825, 2213825, 2214113, 2214113, 2214113]), p([2214113, 2210593, 2210593, 2210593, 2210593, 2214977, 2214977, 2214977, 2214977, 2215361, 2215361, 2215361, 2215361, 2113921, 2113921, 2209857]), p([2209857, 2114049, 2114049, 2114049, 2114049, 2232642, 2232642, 2232706, 2232706, 2232770, 2232770, 2230882, 2230882, 0, 0, 2097152]), p([0, 10517729, 10621441, 10620417, 10620641, 10620673, 10620449, 10621473, 10518337, 10518369, 10620481, 10518241, 10619745, 2231905, 2149569, 10518433]), p([2129441, 2098369, 2098145, 2098177, 2098465, 2129473, 2129505, 2129537, 2129569, 2129601, 10527425, 10494753, 10620545, 10518305, 10620577, 10517857]), p([10620705, D, _, A, b, j, B, G, O, C, F, U, x, N, H, $]), p([J, M, S, P, z, q, I, y, k, L, W, 10620353, 10620609, 10620385, 10621505, 10619937]), p([10516993, D, _, A, b, j, B, G, O, C, F, U, x, N, H, $]), p([J, M, S, P, z, q, I, y, k, L, W, 10619969, 10621537, 10620001, 10621569, 2232993]), p([2233025, 2149569, 2231617, 2231649, 2231169, 2233057, 2164609, 2164929, 2170305, 2233089, 2170497, 2165441, 2233121, 2166721, 2172449, 2166145]), p([2164769, 2163201, 2163233, 2163265, 2163297, 2163329, 2163361, 2163393, 2163425, 2163457, 2149889, 2163489, 2163521, 2163553, 2163585, 2163617]), p([2163649, 2163681, 2163713, 2163745, 2149921, 2163777, 2163809, 2163841, 2163873, 2163905, 2163937, 2163969, 2164001, 2164033, 2164065, 2164097]), p([2164129, 2164161, 2164193, 2164225, 2164257, 2164289, 2164321, 2164353, 2164385, 2164417, 2164449, 2164481, 2164513, 2164993, 2149729, 2149793]), p([2150433, 2150465, 2150497, 2150529, 2150561, 2150593, 2150625, 2150657, 2150689, 2150721, 2150753, 2150785, 2150817, 2150849, 2150881, 0]), p([0, 0, 2150913, 2150945, 2150977, 2151009, 2151041, 2151073, 0, 0, 2151105, 2151137, 2151169, 2151201, 2151233, 2151265]), p([0, 0, 2151297, 2151329, 2151361, 2151393, 2151425, 2151457, 0, 0, 2151489, 2151521, 2151553, 0, 0, 0]), p([2233153, 2233185, 2233217, 10486690, 2233249, 2233281, 2233313, 0, 2233345, 2233377, 2233409, 2233441, 2233473, 2233505, 2233537, 0]), p([g, g, g, g, g, g, g, g, g, g, g, g, 0, g, g, g]), p([g, g, g, g, g, g, g, g, g, g, g, 0, g, g, 0, g]), p([g, g, g, 0, 0, 0, 0, g, g, g, g, g, g, g, g, g]), p([g, g, g, g, 0, 0, 0, g, g, g, g, g, g, g, g, g]), p([g, g, g, g, g, g, g, g, g, g, g, g, g, w, 0, 0]), p([w, g, g, g, g, g, g, g, g, g, g, g, g, g, g, g]), p([g, g, g, g, 0, 0, 0, 0, 0, 0, 0, 0, 0, g, g, g]), p([g, g, g, g, g, g, w, w, w, w, w, 0, 0, 0, 0, 0]), p([g, g, g, g, g, g, g, g, g, g, g, g, g, g, 0, g]), p([g, g, g, g, 0, 0, 0, 0, g, g, g, g, g, g, g, g]), p([2233570, 2233634, 2233698, 2233762, 2233826, 2233890, 2233954, 2234018, 2234082, 2234146, 2234210, 2234274, 2234338, 2234402, 2234466, 2234530]), p([2234594, 2234658, 2234722, 2234786, 2234850, 2234914, 2234978, 2235042, 2235106, 2235170, 2235234, 2235298, 2235362, 2235426, 2235490, 2235554]), p([2235618, 2235682, 2235746, 2235810, 2235874, 2235938, 2236002, 2236066, g, g, g, g, g, g, g, g]), p([2236130, 2236194, 2236258, 2236322, 2236386, 2236450, 2236514, 2236578, 2236642, 2236706, 2236770, 2236834, 2236898, 2236962, 2237026, 2237090]), p([2237154, 2237218, 2237282, 2237346, 2237410, 2237474, 2237538, 2237602, 2237666, 2237730, 2237794, 2237858, 2237922, 2237986, 2238050, 2238114]), p([2238178, 2238242, 2238306, 2238370, 0, 0, 0, 0, g, g, g, g, g, g, g, g]), p([g, g, g, g, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, g]), p([2238434, 2238498, 2238562, 2238626, 2238690, 2238754, 2238818, 2238882, 2238946, 2239010, 2239074, 0, 2239138, 2239202, 2239266, 2239330]), p([2239394, 2239458, 2239522, 2239586, 2239650, 2239714, 2239778, 2239842, 2239906, 2239970, 2240034, 0, 2240098, 2240162, 2240226, 2240290]), p([2240354, 2240418, 2240482, 0, 2240546, 2240610, 0, g, g, g, g, g, g, g, g, g]), p([g, g, 0, g, g, g, g, g, g, g, 0, g, g, 0, 0, 0]), p([g, 2240673, 2240705, 2098881, 2240737, 2101825, 0, 2240769, 2240801, 2240833, 2240865, 2101985, 2102017, 2240897, 2240929, 2240961]), p([2240993, 2241025, 2241057, 2102209, 2241089, 2100321, 2241121, 2241153, 2241185, 2241217, 2241249, 2189121, 2241282, 2241345, 2241377, 2241410]), p([2241473, 2241506, 2099425, 2241569, 2241601, M, 2241633, 2241666, 2140673, 2241729, 2102561, 2241761, 2241793, 2241825, 2241857, 2102689]), p([2241889, 0, 2241921, 2241953, 2241985, 2242017, 2242049, 2242081, 2242113, 2242146, 2242210, 0, 0, 0, 0, 0]), p([g, g, g, g, g, g, 0, 0, g, 0, g, g, g, g, g, g]), p([g, g, g, g, g, g, 0, g, g, 0, 0, 0, g, 0, 0, g]), p([g, g, g, 0, g, g, 0, 0, 0, 0, 0, g, g, g, g, g]), p([g, g, g, g, g, g, g, g, g, g, g, g, 0, 0, 0, g]), p([g, g, g, g, g, g, g, g, g, g, 0, 0, 0, 0, 0, g]), p([g, g, g, g, g, g, g, g, 0, 0, 0, 0, g, g, g, g]), p([0, 0, g, g, g, g, g, g, g, g, g, g, g, g, g, g]), p([g, w, w, w, 0, w, w, 0, 0, 0, 0, 0, w, w, w, w]), p([g, g, g, g, 0, g, g, g, 0, g, g, g, g, g, g, g]), p([g, g, g, g, g, g, 0, 0, w, w, w, 0, 0, 0, 0, w]), p([g, g, g, g, g, w, w, 0, 0, 0, 0, g, g, g, g, g]), p([g, g, g, g, g, g, 0, 0, 0, g, g, g, g, g, g, g]), p([g, g, g, g, g, g, 0, 0, g, g, g, g, g, g, g, g]), p([g, g, g, 0, 0, 0, 0, 0, g, g, g, g, g, g, g, g]), p([g, g, 0, 0, 0, 0, 0, 0, 0, g, g, g, g, 0, 0, 0]), p([0, 0, 0, 0, 0, 0, 0, 0, 0, g, g, g, g, g, g, g]), p([2242274, 2242338, 2242402, 2242466, 2242530, 2242594, 2242658, 2242722, 2242786, 2242850, 2242914, 2242978, 2243042, 2243106, 2243170, 2243234]), p([2243298, 2243362, 2243426, 2243490, 2243554, 2243618, 2243682, 2243746, 2243810, 2243874, 2243938, 2244002, 2244066, 2244130, 2244194, 2244258]), p([2244322, 2244386, 2244450, 2244514, 2244578, 2244642, 2244706, 2244770, 2244834, 2244898, 2244962, 2245026, 2245090, 2245154, 2245218, 2245282]), p([2245346, 2245410, 2245474, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), p([g, g, g, 0, 0, 0, 0, 0, 0, 0, g, g, g, g, g, g]), p([g, g, g, g, w, w, w, w, 0, 0, 0, 0, 0, 0, 0, 0]), p([g, g, g, g, g, g, g, g, g, g, 0, w, w, g, 0, 0]), p([g, g, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), p([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, w, w, w]), p([w, g, g, g, g, g, g, g, g, g, 0, 0, 0, 0, 0, 0]), p([g, g, w, w, w, w, g, g, g, g, 0, 0, 0, 0, 0, 0]), p([g, g, g, g, g, g, g, g, w, w, w, w, w, w, w, w]), p([w, w, w, w, w, w, w, g, g, g, g, g, g, g, 0, 0]), p([w, g, g, w, w, g, 0, 0, 0, 0, 0, 0, 0, 0, 0, w]), p([w, w, w, w, w, w, w, w, w, w, w, g, g, 0, g, g]), p([g, g, w, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), p([w, w, w, w, w, 0, g, g, g, g, g, g, g, g, g, g]), p([g, g, g, g, g, w, w, g, 0, 0, 0, 0, 0, 0, 0, 0]), p([g, g, g, w, g, g, g, 0, 0, 0, 0, 0, 0, 0, 0, 0]), p([w, g, g, g, g, g, g, g, g, w, w, w, w, g, w, w]), p([g, g, g, g, g, g, g, g, g, g, g, g, w, w, w, w]), p([w, w, w, w, w, w, w, w, g, g, g, g, g, g, w, g]), p([g, w, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), p([g, g, g, g, g, g, g, 0, g, 0, g, g, g, g, 0, g]), p([g, g, g, g, g, g, g, g, g, g, g, g, g, g, g, w]), p([w, w, w, w, w, w, w, w, w, w, w, 0, 0, 0, 0, 0]), p([w, w, w, w, 0, g, g, g, g, g, g, g, g, 0, 0, g]), p([g, 0, g, g, 0, g, g, g, g, g, 0, w, w, g, w, w]), p([g, 0, 0, 0, 0, 0, 0, w, 0, 0, 0, 0, 0, g, g, g]), p([g, g, w, w, 0, 0, w, w, w, w, w, w, w, 0, 0, 0]), p([w, w, w, w, w, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), p([g, g, g, g, g, w, w, w, w, w, w, w, w, w, w, w]), p([w, w, w, w, w, w, w, g, g, g, g, g, g, g, g, g]), p([g, g, g, g, g, g, g, g, g, g, g, g, 0, g, w, g]), p([w, w, w, w, g, g, g, g, 0, 0, 0, 0, 0, 0, 0, 0]), p([w, w, w, w, w, w, 0, 0, w, w, w, w, w, w, w, w]), p([g, g, g, g, g, g, g, g, g, g, g, g, w, w, 0, 0]), p([w, g, g, g, g, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), p([w, w, w, w, w, w, w, w, g, g, 0, 0, 0, 0, 0, 0]), p([w, w, w, w, w, w, w, w, w, w, w, g, 0, 0, 0, 0]), p([2245538, 2245602, 2245666, 2245730, 2245794, 2245858, 2245922, 2245986, 2246050, 2246114, 2246178, 2246242, 2246306, 2246370, 2246434, 2246498]), p([2246562, 2246626, 2246690, 2246754, 2246818, 2246882, 2246946, 2247010, 2247074, 2247138, 2247202, 2247266, 2247330, 2247394, 2247458, 2247522]), p([g, g, g, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, g]), p([g, g, g, g, g, g, g, 0, 0, g, 0, 0, g, g, g, g]), p([g, g, g, g, 0, g, g, 0, g, g, g, g, g, g, g, g]), p([w, w, w, w, w, w, 0, w, w, 0, 0, w, w, w, w, g]), p([w, g, w, w, g, g, g, 0, 0, 0, 0, 0, 0, 0, 0, 0]), p([g, g, g, g, g, g, g, g, 0, 0, g, g, g, g, g, g]), p([g, w, w, w, w, w, w, w, 0, 0, w, w, w, w, w, w]), p([w, g, g, g, w, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), p([g, w, w, w, w, w, w, w, w, w, w, g, g, g, g, g]), p([g, g, g, w, w, w, w, w, w, w, g, w, w, w, w, g]), p([g, g, g, g, g, g, g, w, 0, 0, 0, 0, 0, 0, 0, 0]), p([g, w, w, w, w, w, w, w, w, w, w, w, g, g, g, g]), p([w, w, w, w, w, w, w, w, w, w, g, g, g, g, g, g]), p([w, w, w, w, w, w, w, 0, w, w, w, w, w, w, w, w]), p([0, 0, w, w, w, w, w, w, w, w, w, w, w, w, w, w]), p([w, w, w, w, w, w, w, w, 0, w, w, w, w, w, w, w]), p([g, g, g, g, g, g, g, 0, g, g, 0, g, g, g, g, g]), p([g, w, w, w, w, w, w, 0, 0, 0, w, 0, w, w, 0, w]), p([w, w, w, w, w, w, g, w, 0, 0, 0, 0, 0, 0, 0, 0]), p([g, g, g, g, g, g, 0, g, g, 0, g, g, g, g, g, g]), p([g, g, g, g, g, g, g, g, g, g, w, w, w, w, w, 0]), p([w, w, 0, w, w, w, w, w, g, 0, 0, 0, 0, 0, 0, 0]), p([g, g, g, w, w, w, w, g, g, 0, 0, 0, 0, 0, 0, 0]), p([w, w, g, w, g, g, g, g, g, g, g, g, g, g, g, g]), p([g, g, g, g, w, w, w, w, w, w, w, 0, 0, 0, w, w]), p([g, g, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, g]), p([w, g, g, g, g, g, g, w, w, w, w, w, w, w, w, w]), p([w, w, w, w, w, w, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), p([w, w, w, w, w, g, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), p([g, g, g, g, g, g, g, g, g, g, 0, g, g, g, g, g]), p([g, g, g, g, g, g, g, g, 0, 0, 0, 0, 0, g, g, g]), p([2247586, 2247650, 2247714, 2247778, 2247842, 2247906, 2247970, 2248034, 2248098, 2248162, 2248226, 2248290, 2248354, 2248418, 2248482, 2248546]), p([2248610, 2248674, 2248738, 2248802, 2248866, 2248930, 2248994, 2249058, 2249122, 2249186, 2249250, 2249314, 2249378, 2249442, 2249506, 2249570]), p([g, g, g, g, g, g, g, g, g, g, g, 0, 0, 0, 0, w]), p([g, w, w, w, w, w, w, w, w, w, w, w, w, w, w, w]), p([w, w, w, w, w, w, w, w, 0, 0, 0, 0, 0, 0, 0, w]), p([g, g, g, g, w, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), p([w, w, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), p([g, g, g, g, 0, g, g, g, g, g, g, g, 0, g, g, 0]), p([0, 0, g, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), p([g, g, g, 0, 0, g, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), p([0, 0, 0, 0, g, g, g, g, 0, 0, 0, 0, 0, 0, 0, 0]), p([g, g, g, g, g, g, g, g, g, g, 0, 0, g, w, w, g]), p([2097152, 2097152, 2097152, 2097152, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), p([w, w, w, w, w, w, w, w, w, w, w, w, w, w, 0, 0]), p([g, g, g, g, g, g, g, 0, 0, g, g, g, g, g, g, g]), p([g, g, g, g, g, g, g, g, g, g, g, g, g, g, 2249636, 2249764]), p([2249894, 2250086, 2250278, 2250470, 2250662, w, w, w, w, w, g, g, g, w, w, w]), p([w, w, w, 0, 0, 0, 0, 0, 0, 0, 0, w, w, w, w, w]), p([w, w, w, g, g, w, w, w, w, w, w, w, g, g, g, g]), p([g, g, g, g, g, g, g, g, g, g, g, 2250852, 2250980, 2251110, 2251302, 2251494]), p([2251686, g, g, g, g, g, g, g, g, g, g, g, g, g, g, g]), p([g, g, w, w, w, g, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), p([M, S, P, z, q, I, y, k, L, W, D, _, A, b, j, B]), p([G, O, C, F, U, x, N, H, $, J, M, S, P, z, q, I]), p([y, k, L, W, D, _, A, b, j, B, G, O, C, F, U, x]), p([N, H, $, J, M, S, P, z, q, I, y, k, L, W, D, _]), p([A, b, j, B, G, 0, C, F, U, x, N, H, $, J, M, S]), p([P, z, q, I, y, k, L, W, D, _, A, b, j, B, G, O]), p([C, F, U, x, N, H, $, J, M, S, P, z, q, I, y, k]), p([L, W, D, _, A, b, j, B, G, O, C, F, U, x, N, H]), p([$, J, M, S, P, z, q, I, y, k, L, W, D, 0, A, b]), p([0, 0, G, 0, 0, F, U, 0, 0, H, $, J, M, 0, P, z]), p([q, I, y, k, L, W, D, _, A, b, 0, B, 0, O, C, F]), p([U, x, N, H, 0, J, M, S, P, z, q, I, y, k, L, W]), p([y, k, L, W, D, _, 0, b, j, B, G, 0, 0, F, U, x]), p([N, H, $, J, M, 0, P, z, q, I, y, k, L, 0, D, _]), p([A, b, j, B, G, O, C, F, U, x, N, H, $, J, M, S]), p([P, z, q, I, y, k, L, W, D, _, 0, b, j, B, G, 0]), p([C, F, U, x, N, 0, $, 0, 0, 0, P, z, q, I, y, k]), p([L, 0, D, _, A, b, j, B, G, O, C, F, U, x, N, H]), p([$, J, M, S, P, z, q, I, y, k, L, W, D, _, A, b]), p([j, B, G, O, C, F, U, x, N, H, $, J, M, S, P, z]), p([q, I, y, k, L, W, D, _, A, b, j, B, G, O, C, F]), p([y, k, L, W, 2251873, 2251905, 0, 0, 2106529, nt, tt, 2106625, X, 2106689, 2106721, E]), p([2105921, Y, 2106817, 2098273, 2106849, 2106881, 2106913, Q, T, E, V, 2107041, rt, K, ot, 2107169]), p([et, 2251937, 2106529, nt, tt, 2106625, X, 2106689, 2106721, E, 2105921, Y, 2106817, 2098273, 2106849, 2106881]), p([2106913, Q, T, V, V, 2107041, rt, K, ot, 2107169, et, 2251969, X, E, Y, K]), p([T, Q, 2106529, nt, tt, 2106625, X, 2106689, 2106721, E, 2105921, Y, 2106817, 2098273, 2106849, 2106881]), p([2106913, Q, T, E, V, 2107041, rt, K, ot, 2107169, et, 2251937, 2106529, nt, tt, 2106625]), p([X, 2106689, 2106721, E, 2105921, Y, 2106817, 2098273, 2106849, 2106881, 2106913, Q, T, V, V, 2107041]), p([rt, K, ot, 2107169, et, 2251969, X, E, Y, K, T, Q, 2106529, nt, tt, 2106625]), p([X, 2106689, 2106721, E, 2105921, Y, 2106817, 2098273, 2106849, 2106881, 2106913, Q, T, E, V, 2107041]), p([rt, K, ot, 2107169, et, 2251937, 2106529, nt, tt, 2106625, X, 2106689, 2106721, E, 2105921, Y]), p([2106817, 2098273, 2106849, 2106881, 2106913, Q, T, V, V, 2107041, rt, K, ot, 2107169, et, 2251969]), p([X, E, Y, K, T, Q, 2106529, nt, tt, 2106625, X, 2106689, 2106721, E, 2105921, Y]), p([2106817, 2098273, 2106849, 2106881, 2106913, Q, T, E, V, 2107041, rt, K, ot, 2107169, et, 2251937]), p([2106529, nt, tt, 2106625, X, 2106689, 2106721, E, 2105921, Y, 2106817, 2098273, 2106849, 2106881, 2106913, Q]), p([T, V, V, 2107041, rt, K, ot, 2107169, et, 2251969, X, E, Y, K, T, Q]), p([T, E, V, 2107041, rt, K, ot, 2107169, et, 2251937, 2106529, nt, tt, 2106625, X, 2106689]), p([2106721, E, 2105921, Y, 2106817, 2098273, 2106849, 2106881, 2106913, Q, T, V, V, 2107041, rt, K]), p([ot, 2107169, et, 2251969, X, E, Y, K, T, Q, 2107393, 2107393, 0, 0, 2129441, 2098369]), p([2098145, 2098177, 2098465, 2129473, 2129505, 2129537, 2129569, 2129601, 2129441, 2098369, 2098145, 2098177, 2098465, 2129473, 2129505, 2129537]), p([2129569, 2129601, 2129441, 2098369, 2098145, 2098177, 2098465, 2129473, 2129505, 2129537, 2129569, 2129601, 2129441, 2098369, 2098145, 2098177]), p([2098465, 2129473, 2129505, 2129537, 2129569, 2129601, 2129441, 2098369, 2098145, 2098177, 2098465, 2129473, 2129505, 2129537, 2129569, 2129601]), p([w, w, w, w, w, w, w, g, g, g, g, w, w, w, w, w]), p([w, w, w, w, w, w, w, w, w, w, w, w, w, g, g, g]), p([g, g, g, g, w, g, g, g, g, g, g, g, 0, 0, 0, 0]), p([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, w, w, w, w, w]), p([0, 0, 0, 0, 0, g, g, g, g, g, g, 0, 0, 0, 0, 0]), p([w, w, w, w, w, w, w, w, w, 0, 0, w, w, w, w, w]), p([w, w, 0, w, w, 0, w, w, w, w, w, 0, 0, 0, 0, 0]), p([2108385, 2108417, 2108449, 2108481, 2108513, 2108545, 2108577, 2108609, 2108641, 2108705, 2108737, 2108769, 2108833, 2108865, 2108897, 2108929]), p([2108961, 2108993, 2109025, 2109057, 2109089, 2109121, 2109153, 2109249, 2109313, 2109345, 2186913, 2111169, 2108065, 2108129, 2111425, 2110529]), p([2252001, 2108385, 2108417, 2108449, 2108481, 2108513, 2108545, 2108577, 2108609, 2108641, 2108705, 2108737, 2108833, 2108865, 2108929, 2108993]), p([2109025, 2109057, 2109089, 2109121, 2109153, 2109217, 2109249, 2110049, 2108065, 2108033, 2108353, 2110465, 2186305, 2110561, 0, 0]), p([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, w]), p([g, g, g, g, g, g, g, 0, g, g, g, g, 0, g, g, 0]), p([g, g, g, g, g, 0, 0, g, g, g, g, g, g, g, g, g]), p([2252034, 2252098, 2252162, 2252226, 2252290, 2252354, 2252418, 2252482, 2252546, 2252610, 2252674, 2252738, 2252802, 2252866, 2252930, 2252994]), p([2253058, 2253122, 2253186, 2253250, 2253314, 2253378, 2253442, 2253506, 2253570, 2253634, 2253698, 2253762, 2253826, 2253890, 2253954, 2254018]), p([2254082, 2254146, g, g, g, g, g, g, g, g, g, g, g, g, g, g]), p([g, g, g, g, w, w, w, w, w, w, w, g, 0, 0, 0, 0]), p([2113857, 2210689, 2210465, 2229537, 0, 2113921, 2216673, 2210529, 2212737, 2114049, 2213825, 2214113, 2210593, 2214977, 2212097, 2212929]), p([2213185, 2212353, 2213569, 2215873, 2218369, 2211073, 2211457, 2210849, 2215809, 2212481, 2212865, 2213057, 2254209, 2209409, 2254241, 2254273]), p([0, 2210689, 2210465, 0, 2215361, 0, 0, 2210529, 0, 2114049, 2213825, 2214113, 2210593, 2214977, 2212097, 2212929]), p([2213185, 2212353, 2213569, 0, 2218369, 2211073, 2211457, 2210849, 0, 2212481, 0, 2213057, 0, 0, 0, 0]), p([0, 0, 2210465, 0, 0, 0, 0, 2210529, 0, 2114049, 0, 2214113, 0, 2214977, 2212097, 2212929]), p([0, 2212353, 2213569, 0, 2218369, 0, 0, 2210849, 0, 2212481, 0, 2213057, 0, 2209409, 0, 2254273]), p([0, 2210689, 2210465, 0, 2215361, 0, 0, 2210529, 2212737, 2114049, 2213825, 0, 2210593, 2214977, 2212097, 2212929]), p([2213185, 2212353, 2213569, 0, 2218369, 2211073, 2211457, 2210849, 0, 2212481, 2212865, 2213057, 2254209, 0, 2254241, 0]), p([2113857, 2210689, 2210465, 2229537, 2215361, 2113921, 2216673, 2210529, 2212737, 2114049, 0, 2214113, 2210593, 2214977, 2212097, 2212929]), p([2213185, 2212353, 2213569, 2215873, 2218369, 2211073, 2211457, 2210849, 2215809, 2212481, 2212865, 2213057, 0, 0, 0, 0]), p([0, 2210689, 2210465, 2229537, 0, 2113921, 2216673, 2210529, 2212737, 2114049, 0, 2214113, 2210593, 2214977, 2212097, 2212929]), p([0, 10642914, 10642978, 10643042, 10643106, 10643170, 10643234, 10643298, 10643362, 10643426, 10643490, g, g, g, g, g]), p([10524931, 10525027, 10525123, 10525219, 10525315, 10525411, 10525507, 10525603, 10525699, 10525795, 10525891, 10525987, 10526083, 10526179, 10526275, 10526371]), p([10526467, 10526563, 10526659, 10526755, 10526851, 10526947, 10527043, 10527139, 10527235, 10527331, 2254947, A, S, 2097218, 2255042, g]), p([M, S, P, z, q, I, y, k, L, W, 2255106, 2181186, 2255170, 2099650, 2255235, 2255330]), p([g, g, g, g, g, g, g, g, g, g, 2179042, 2176546, 2255394, g, g, g]), p([2255458, g, g, g, g, g, g, g, g, g, g, g, g, g, g, g]), p([2255522, 2255586, 2163489, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), p([2144737, 2255649, 2255681, 2168961, 2142913, 2255713, 2255745, 2153185, 2255777, 2255809, 2255841, 2198081, 2255873, 2255905, 2255937, 2255969]), p([2256001, 2256033, 2145889, 2256065, 2256097, 2256129, 2256161, 2256193, 2256225, 2142721, 2152929, 2256257, 2161089, 2153025, 2161121, 2256289]), p([2147681, 2256321, 2256353, 2256385, 2256417, 2256449, 2158049, 2145057, 2256481, 2256513, 2256545, 2256577, 0, 0, 0, 0]), p([2256611, 2256707, 2256803, 2256899, 2256995, 2257091, 2257187, 2257283, 2257379, 0, 0, 0, 0, 0, 0, 0]), p([2257473, 2257505, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), p([g, g, g, g, g, g, 0, 0, 0, 0, 0, 0, 0, 0, g, g]), p([g, g, g, 0, g, g, g, g, g, g, g, g, g, g, g, g]), p([2129441, 2098369, 2098145, 2098177, 2098465, 2129473, 2129505, 2129537, 2129569, 2129601, 0, 0, 0, 0, 0, 0]), p([2257537, 2257569, 2257601, 2257634, 2257697, 2201057, 2257729, 2257761, 2257793, 2257825, 2201089, 2257857, 2257889, 2257922, 2201121, 2257985]), p([2258017, 2258049, 2258082, 2258145, 2258177, 2255937, 2258210, 2258273, 2258305, 2258337, 2258369, 2202913, 2258402, 2143233, 2258465, 2258497]), p([2258529, 2258561, 2256513, 2258593, 2258625, 2203073, 2201153, 2201185, 2203105, 2258657, 2258689, 2195361, 2258721, 2201217, 2258753, 2258785]), p([2258817, 2258849, 2258849, 2258849, 2258882, 2258945, 2258977, 2259009, 2259042, 2259105, 2259137, 2259169, 2259201, 2259233, 2259265, 2259297]), p([2259329, 2259361, 2259393, 2259425, 2259457, 2259489, 2259489, 2203169, 2259521, 2259553, 2259585, 2259617, 2201281, 2259649, 2259681, 2259713]), p([2200001, 2259745, 2259777, 2259809, 2259841, 2259873, 2259905, 2259937, 2259969, 2260002, 2260065, 2260097, 2260129, 2255713, 2260161, 2260193]), p([2260226, 2260290, 2260353, 2260385, 2260417, 2260449, 2260481, 2260513, 0, 2260545, 2260577, 2260577, 2260610, 2260673, 2260705, 2195233]), p([2260737, 2260770, 2260833, 2260865, 0, 2144065, 2260897, 2260929, 2144129, 2260961, 2260993, 2261026, 2261089, 2261122, 2261185, 2261217]), p([2261249, 2261281, 2261313, 2261345, 2261377, 2261409, 2261441, 2261473, 2261505, 2261538, 2261601, 2261633, 2261665, 2261697, 2193569, 2261730]), p([2144449, 2261794, 2261794, 2261857, 2261889, 2261889, 2261921, 2261954, 2262018, 2262081, 2262113, 2262145, 2262177, 2262209, 2262241, 2262273]), p([2262305, 2262337, 2262369, 2201441, 2262402, 2262465, 2262497, 2262529, 2203553, 2262529, 2262561, 2201505, 2262593, 2262625, 2262657, 2262689]), p([2201537, 2192705, 2176865, 2262721, 2262753, 2262785, 2262817, 2262849, 2262882, 2262945, 2262977, 2263009, 2263041, 2263073, 2263106, 2263169]), p([2263201, 2263233, 2263265, 2263297, 2263329, 2263361, 2263393, 2263425, 2201569, 2263457, 2263490, 2263553, 2263585, 2263617, 2263649, 2201633]), p([2263681, 2263713, 2263745, 2263777, 2263809, 2263841, 2263873, 2263905, 2193601, 2203809, 2263937, 2263969, 2264001, 2264034, 2264097, 2264129]), p([2264161, 2264193, 2201665, 2264226, 2264289, 2264321, 2264353, 2205249, 2264385, 2264417, 2264449, 2264481, 2264514, 2264577, 2264609, 2264641]), p([2264674, 2264737, 2264769, 2264801, 2264833, 2195777, 2264865, 2264898, 2264962, 2265026, 2265089, 2265122, 2265185, 2265217, 2265249, 2265281]), p([2265313, 2201697, 2198401, 2265345, 2265377, 2265409, 2265442, 2265505, 2265537, 2265569, 2265601, 2203905, 2265633, 2265666, 2265729, 2265761]), p([2265794, 2265858, 2265921, 2265953, 2203937, 2265985, 2266017, 2266049, 2266081, 2266113, 2266145, 2266178, 2266241, 2266274, 2266337, 0]), p([2266369, 2204001, 2266401, 2266434, 2266497, 2266529, 2266562, 2266626, 2266689, 2266721, 2266753, 2266785, 2266817, 2266817, 2266849, 2266881]), p([2204065, 2266913, 2266945, 2266977, 2267009, 2267042, 2267105, 2267138, 2195329, 2267202, 2267265, 2267298, 2267362, 2267426, 2267489, 2267521]), p([2204257, 2267554, 2267618, 2267682, 2267746, 2267809, 2267841, 2267841, 2204289, 2205313, 2267873, 2267905, 2267937, 2267970, 2268033, 2194145]), p([2204353, 2268065, 2268098, 2202017, 2268162, 2268226, 2200641, 2268289, 2268321, 2202113, 2268353, 2268385, 2268418, 2268482, 2268482, 0]), p([2268545, 2268578, 2268641, 2268673, 2268705, 2268738, 2268801, 2268833, 2268865, 2268897, 2268929, 2268962, 2269025, 2269057, 2269089, 2269121]), p([2269153, 2269185, 2269218, 2269282, 2269345, 2269378, 2269441, 2269474, 2269537, 2269569, 2202305, 2269602, 2269666, 2269729, 2269762, 2269825]), p([2269858, 2269921, 2269953, 2269985, 2270017, 2270049, 2270081, 2270114, 2270178, 2270242, 2270306, 2261857, 2270369, 2270401, 2270433, 2270465]), p([2270497, 2270529, 2270561, 2270593, 2270625, 2270657, 2270689, 2270722, 2195873, 2270785, 2270817, 2270849, 2270881, 2270913, 2270945, 2202401]), p([2270977, 2271009, 2271041, 2271073, 2271106, 2271170, 2271234, 2271297, 2271329, 2271361, 2271393, 2271426, 2271489, 2271522, 2271585, 2271617]), p([2271650, 2271714, 2271777, 2271809, 2193985, 2271841, 2271873, 2271905, 2271937, 2271969, 2272001, 2204577, 2272033, 2272065, 2272097, 0]), p([2272129, 2272161, 2272193, 2272225, 2147329, 2272258, 2272321, 2272353, 2272385, 2272417, 2272449, 2272482, 2272546, 2272609, 2272641, 2272673]), p([2204737, 2204769, 2147553, 2272706, 2272769, 2272801, 2272833, 2272865, 2272898, 2272962, 2273025, 2273057, 2273089, 2273122, 2273185, 2204801]), p([2273218, 2273282, 2273345, 2273377, 2273409, 2273442, 2273505, 2273537, 2273569, 2273601, 2273633, 2273665, 2273697, 2273730, 2273793, 2273825]), p([2273857, 2273890, 2273953, 2273985, 2274017, 2274049, 2274082, 2274146, 2274209, 2274241, 2274273, 2274306, 2274369, 2274402, 2204993, 2204993]), p([2274465, 2274498, 2274561, 2274593, 2274625, 2274657, 2274689, 2274721, 2274753, 2274786, 2205025, 2274849, 2274881, 2274913, 2274945, 2274977]), p([2275010, 2275073, 2275106, 2275170, 2275234, 2149089, 2275297, 2149217, 2275329, 2275361, 2275393, 2275425, 2149377, 2275458, 0, 0]), p([g, g, g, g, g, g, g, g, g, g, g])];
var st = new Uint16Array([0, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 11, 12, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, ...m(12, 6), 34, 12, 35, 36, 12, ...m(37, 4), 38, 37, 37, 39, 40, 41, 42, 12, 43, 44, 45, 46, 47, 48, 49, 12, 12, 12, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 12, 12, 66, 67, 37, 68, 69, 12, 70, 71, 72, 73, 12, 12, 74, 37, 12, 75, ...m(12, 5), 76, 77, 12, 78, 79, 12, 37, 80, ...m(12, 5), 81, 82, 12, 12, 74, 83, 12, 84, 85, 86, 12, 87, 88, 12, 86, 89, 12, 12, 90, 37, 91, 37, 92, 12, 12, 93, 37, 94, 95, 12, 96, 97, 98, 99, 100, 101, 102, 103, 104, 97, 98, 105, 106, 107, 72, 108, 109, 110, 98, 111, 112, 113, 102, 114, 115, 97, 98, 111, 116, 117, 102, 118, 119, 120, 121, 122, 123, 124, 72, 88, 125, 126, 98, 127, 128, 129, 102, 130, 131, 126, 98, 132, 128, 133, 102, 134, 135, 126, 12, 136, 137, 138, 102, 12, 139, 140, 12, 141, 142, 143, 72, 144, 145, 12, 12, 146, 147, 148, 7, 7, 149, 12, 150, 151, 152, 153, 7, 7, 154, 155, 12, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 88, 7, 7, 12, 12, 74, 166, 12, 167, 168, 169, 170, 171, 7, 7, 172, 12, 12, 173, ...m(12, 5), 86, 145, ...m(12, 13), 174, 175, 12, 12, 174, 12, 12, 176, 177, 178, 12, 12, 12, 177, 12, 12, 12, 179, 12, 180, 12, 181, ...m(12, 5), 182, ...m(12, 40), 145, 180, ...m(12, 5), 183, 12, 184, 12, 185, 12, 186, 187, 188, 12, 12, 12, 189, 37, 190, 181, 181, 191, 181, ...m(12, 5), 183, 192, 12, 193, ...m(12, 4), 194, 12, 86, 195, 195, 196, 12, 78, 71, 12, 12, 148, 12, 181, 197, 12, 12, 12, 198, 12, 12, 12, 199, 37, 200, 181, 181, 78, 37, 201, 7, 7, 7, 202, 12, 12, 203, 204, 12, 74, 205, 206, 12, 207, 12, 12, 12, 81, 208, 12, 12, 203, 209, 210, 12, 12, 12, 211, 212, 213, 214, 118, 215, 216, 217, 12, 12, 218, 219, 220, 221, 222, 223, 12, 224, 225, 226, ...m(37, 4), 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 12, 113, 37, 37, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, ...m(12, 9), 280, 281, 12, 12, 282, ...m(12, 11), 283, ...m(12, 15), 284, 7, 88, 7, 285, 286, 287, 288, 289, 290, 291, 292, 293, ...m(12, 81), 294, ...m(12, 6), 295, ...m(12, 5), 296, ...m(12, 9), 297, 12, 298, ...m(12, 6), 299, 300, 301, 12, 12, 12, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 12, 12, 312, 12, 12, 12, 313, 314, 12, 284, ...m(315, 4), 37, 37, ...m(12, 5), 78, 7, 7, 12, 316, ...m(12, 5), 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 7, 7, 332, 12, 90, 333, 145, ...m(12, 4), 334, ...m(12, 5), 335, 336, 12, 12, 337, 338, 339, 340, 341, 342, 343, ...m(12, 4), 344, 12, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, ...m(12, 1800), 180, 12, 12, 12, 284, ...m(12, 21), 148, 7, 377, 378, 379, 380, 381, 382, ...m(12, 5), 383, 12, 12, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 7, 396, 397, 12, 398, 181, 12, 12, 12, 118, 399, 12, 12, 203, 400, 181, 37, 401, 12, 12, 402, 12, 403, 404, 12, 180, 92, 12, 12, 405, 406, 407, 408, 86, 12, 12, 409, 410, 411, 412, 12, 413, 12, 12, 12, 414, 415, 416, 74, 417, 418, 419, 315, 12, 12, 420, 421, 422, 423, 424, 425, 426, 12, 12, 427, 181, ...m(12, 698), 344, 12, 428, 12, 12, 148, ...m(7, 528), 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 7, 7, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 12, 495, 496, 497, 498, 499, 500, 501, 502, 7, 7, 503, 504, 505, 37, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 337, 529, 530, 531, 532, 7, 533, 12, 178, 534, 78, 78, 7, 7, ...m(12, 7), 88, 535, 12, 12, 536, ...m(12, 4), 86, 180, 113, 7, 7, 12, 12, 537, ...m(7, 8), 12, 180, 12, 12, 12, 113, 538, 148, 12, 12, 539, 12, 88, 12, 12, 540, 12, 541, 12, 12, 542, 194, 7, 7, 543, 544, 545, ...m(12, 6), 78, 181, 546, 547, 548, 12, 148, 12, 12, 118, 12, 12, 12, 549, 550, 551, 552, 110, 553, 7, 7, 7, 7, ...m(12, 19), 284, 12, 194, 118, 7, 554, 555, 556, 557, 7, 7, 7, 7, 558, 12, 12, 559, 12, 298, 12, 12, 12, 86, 130, 7, 7, 7, 12, 560, 12, 561, 12, 562, 7, 7, 7, 7, 12, 12, 12, 563, 12, 564, 12, 12, 565, 566, 12, 567, 183, 183, ...m(12, 4), 7, 7, 12, 12, 568, 284, 12, 12, 12, 569, 12, 570, 12, 571, 12, 572, 573, ...m(7, 5), ...m(12, 4), 183, 7, 7, 7, 574, 575, 576, 577, 12, 12, 12, 578, 12, 12, 579, 181, ...m(7, 18), 12, 86, 12, 12, 580, 581, 7, 7, 7, 582, 12, 12, 118, 12, 81, 583, 7, 12, 584, 7, 7, 12, 148, 7, 12, 284, 206, 12, 12, 585, 586, 564, 12, 587, 206, 12, 12, 588, 589, 12, 183, 181, 206, 12, 403, 590, 591, 12, 12, 592, 206, 12, 12, 405, 593, 12, 145, 71, 12, 110, 594, 595, 596, 7, 7, 7, 597, 541, 181, 12, 12, 598, 599, 181, 600, 97, 98, 601, 116, 602, 603, 604, ...m(7, 8), 12, 12, 12, 605, 606, 607, 581, 7, 12, 12, 12, 37, 608, 181, ...m(7, 10), 12, 12, 598, 609, 538, 610, 7, 7, 12, 12, 12, 37, 611, 181, 180, 7, 12, 12, 74, 612, 181, 7, 7, 7, 12, 179, 195, 12, 284, ...m(7, 11), 12, 12, 594, 613, ...m(7, 6), 614, 615, 12, 12, 12, 616, 617, 618, 12, 619, 620, 181, 7, 7, 7, 7, 621, 12, 12, 622, 623, 7, 624, 12, 12, 625, 626, 627, 12, 12, 90, 628, 471, ...m(12, 4), 183, 181, ...m(7, 15), 98, 12, 598, 629, 194, 12, 180, 12, 12, 630, 631, 410, 7, 7, 7, 7, 632, 12, 12, 633, 634, 181, 635, 12, 636, 637, 181, ...m(7, 19), 12, 638, 639, 126, 12, 640, 206, 181, ...m(7, 5), 113, 12, 12, 12, 641, ...m(12, 57), 181, ...m(7, 6), ...m(12, 6), 86, 71, ...m(12, 12), 344, ...m(7, 164), ...m(12, 6), 471, ...m(12, 67), 7, 642, 643, ...m(7, 250), ...m(12, 36), 284, ...m(7, 539), ...m(12, 35), 183, 12, 86, 407, ...m(12, 4), 86, 181, 12, 78, 644, 12, 12, 12, 606, 194, 645, 110, 646, 12, ...m(7, 43), 647, 648, 12, 12, 12, 88, ...m(7, 6), ...m(12, 4), 649, 650, 37, 37, 651, 206, 7, 7, 7, 7, 652, 653, ...m(12, 383), 118, ...m(12, 77), 194, 7, 7, 183, ...m(7, 558), 654, ...m(12, 18), 471, 655, 7, 656, 657, ...m(12, 24), 148, ...m(7, 144), ...m(12, 6), 88, 180, 183, 658, 659, ...m(7, 293), 37, 37, 660, 37, 410, ...m(12, 7), 344, 7, 7, 7, ...m(12, 15), 194, 12, 12, 661, 12, 12, 662, 663, 664, 665, 12, 171, 666, 667, 12, 88, 7, ...m(12, 4), 668, ...m(7, 7), 12, 344, 12, 344, ...m(12, 5), 284, 12, 183, ...m(7, 8), 292, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 292, 669, 670, 681, 682, 683, 684, 685, 686, 687, 688, 689, 291, 292, 669, 670, 671, 672, 683, 674, 675, 676, 687, 688, 689, 291, 292, 669, 670, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 703, 705, 706, 707, 708, 709, 710, ...m(12, 32), 37, 37, 37, 711, 37, 37, 712, 408, 713, 714, 67, ...m(7, 69), 12, 86, 715, ...m(7, 13), 629, 716, 717, 718, 719, 720, 721, 7, 722, ...m(7, 7), 12, 12, 180, 586, 407, ...m(7, 20), 12, 103, 7, 12, 12, 594, 562, ...m(7, 29), 12, 594, 181, ...m(7, 46), 723, 86, ...m(12, 12), 724, 410, 7, 7, 725, 726, 727, 12, 728, 407, ...m(7, 49), 145, 12, 12, 12, 71, 7, 7, 7, 7, 145, 12, 12, 78, ...m(7, 12), 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 738, 7, 7, 7, 581, ...m(7, 16), 12, 12, 148, ...m(12, 6), 344, 86, ...m(145, 3), 12, 194, 740, 741, 742, 292, 743, 12, 744, 12, 12, 745, 78, 7, 7, 7, 72, 12, 746, 747, 748, 749, 750, 751, 194, ...m(7, 9), ...m(12, 61), 563, 180, 180, ...m(12, 7), 428, ...m(12, 5), 181, 148, 113, 148, 12, 12, 12, 118, 181, 12, 12, 118, 12, 78, 581, 7, 7, 7, 7, ...m(12, 21), 344, 78, 180, 183, 12, 12, 541, 752, 148, 183, 183, ...m(12, 9), 753, 12, 12, 88, 7, 7, 754, ...m(7, 64), ...m(12, 2670), 7, 7, ...m(12, 259), 181, ...m(12, 13), 78, ...m(12, 360), 581, ...m(12, 467), 113, ...m(7, 193), 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, ...m(7, 93), 7]);
var lt = "abcdefghijklmnopqrstuvwxyz  ̈ ̄23 ́μ ̧11⁄41⁄23⁄4àáâãäåæçèéêëìíîïðñòóôõöøùúûüýþssāăąćĉċčďđēĕėęěĝğġģĥħĩīĭįi̇ĵķĺļľl·łńņňʼnŋōŏőœŕŗřśŝşšţťŧũūŭůűųŵŷÿźżžɓƃƅɔƈɖɗƌǝəɛƒɠɣɩɨƙɯɲɵơƣƥʀƨʃƭʈưʊʋƴƶʒƹƽdžljnjǎǐǒǔǖǘǚǜǟǡǣǥǧǩǫǭǯdzǵƕƿǹǻǽǿȁȃȅȇȉȋȍȏȑȓȕȗșțȝȟƞȣȥȧȩȫȭȯȱȳⱥȼƚⱦɂƀʉʌɇɉɋɍɏɦɹɻʁ ̆ ̇ ̊ ̨ ̃ ̋ʕ̀̓̈́ιͱͳʹͷ ι;ϳ ̈́άέήίόύώαβγδεζηθκλνξοπρστυφχψωϊϋϗϙϛϝϟϡϣϥϧϩϫϭϯϸϻͻͼͽѐёђѓєѕіїјљњћќѝўџабвгдежзийклмнопрстуфхцчшщъыьэюяѡѣѥѧѩѫѭѯѱѳѵѷѹѻѽѿҁҋҍҏґғҕҗҙқҝҟҡңҥҧҩҫҭүұҳҵҷҹһҽҿӂӄӆӈӊӌӎӑӓӕӗәӛӝӟӡӣӥӧөӫӭӯӱӳӵӷӹӻӽӿԁԃԅԇԉԋԍԏԑԓԕԗԙԛԝԟԡԣԥԧԩԫԭԯաբգդեզէըթժիլխծկհձղճմյնշոչպջռսվտրցւփքօֆեւاٴوٴۇٴيٴक़ख़ग़ज़ड़ढ़फ़य़ড়ঢ়য়ਲ਼ਸ਼ਖ਼ਗ਼ਜ਼ਫ਼ଡ଼ଢ଼ําໍາຫນຫມ་གྷཌྷདྷབྷཛྷཀྵཱཱིུྲྀྲཱྀླྀླཱྀྒྷྜྷྡྷྦྷྫྷྐྵⴧⴭნᏰᏱᏲᏳᏴᏵꙋაბგდევზთიკლმოპჟრსტუფქღყშჩცძწჭხჯჰჱჲჳჴჵჶჷჸჹჺჽჾჿɐɑᴂɜᴖᴗᴝᴥɒɕɟɡɥɪᵻʝɭᶅʟɱɰɳɴɸʂƫᴜʐʑḁḃḅḇḉḋḍḏḑḓḕḗḙḛḝḟḡḣḥḧḩḫḭḯḱḳḵḷḹḻḽḿṁṃṅṇṉṋṍṏṑṓṕṗṙṛṝṟṡṣṥṧṩṫṭṯṱṳṵṷṹṻṽṿẁẃẅẇẉẋẍẏẑẓẕaʾạảấầẩẫậắằẳẵặẹẻẽếềểễệỉịọỏốồổỗộớờởỡợụủứừửữựỳỵỷỹỻỽỿἀἁἂἃἄἅἆἇἐἑἒἓἔἕἠἡἢἣἤἥἦἧἰἱἲἳἴἵἶἷὀὁὂὃὄὅὑὓὕὗὠὡὢὣὤὥὦὧἀιἁιἂιἃιἄιἅιἆιἇιἠιἡιἢιἣιἤιἥιἦιἧιὠιὡιὢιὣιὤιὥιὦιὧιὰιαιάιᾶιᾰᾱ ̓ ͂ ̈͂ὴιηιήιῆιὲ ̓̀ ̓́ ̓͂ΐῐῑὶ ̔̀ ̔́ ̔͂ΰῠῡὺῥ ̈̀`ὼιωιώιῶιὸ‐ ̳′′′′′‵‵‵‵‵!! ̅???!!?056789+−=()a/ca/s°cc/oc/u°fsmteltmאבגדfax∑1⁄71⁄91⁄101⁄32⁄31⁄52⁄53⁄54⁄51⁄65⁄61⁄83⁄85⁄87⁄8iiiiiivviviiviiiixxixii0⁄3∫∫∫∫∫∮∮∮∮∮〈〉121314151617181920(1)(2)(3)(4)(5)(6)(7)(8)(9)(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)(20)(a)(b)(c)(d)(e)(f)(g)(h)(i)(j)(k)(l)(m)(n)(o)(p)(q)(r)(s)(t)(u)(v)(w)(x)(y)(z)::===⫝̸ⰰⰱⰲⰳⰴⰵⰶⰷⰸⰹⰺⰻⰼⰽⰾⰿⱀⱁⱂⱃⱄⱅⱆⱇⱈⱉⱊⱋⱌⱍⱎⱏⱐⱑⱒⱓⱔⱕⱖⱗⱘⱙⱚⱛⱜⱝⱞⱟⱡɫᵽɽⱨⱪⱬⱳⱶȿɀⲁⲃⲅⲇⲉⲋⲍⲏⲑⲓⲕⲗⲙⲛⲝⲟⲡⲣⲥⲧⲩⲫⲭⲯⲱⲳⲵⲷⲹⲻⲽⲿⳁⳃⳅⳇⳉⳋⳍⳏⳑⳓⳕⳗⳙⳛⳝⳟⳡⳣⳬⳮⳳⵡ母龟一丨丶丿乙亅二亠人儿入八冂冖冫几凵刀力勹匕匚匸十卜卩厂厶又口囗土士夂夊夕大女子宀寸小尢尸屮山巛工己巾干幺广廴廾弋弓彐彡彳心戈戶手支攴文斗斤方无日曰月木欠止歹殳毋比毛氏气水火爪父爻爿片牙牛犬玄玉瓜瓦甘生用田疋疒癶白皮皿目矛矢石示禸禾穴立竹米糸缶网羊羽老而耒耳聿肉臣自至臼舌舛舟艮色艸虍虫血行衣襾見角言谷豆豕豸貝赤走足身車辛辰辵邑酉釆里金長門阜隶隹雨靑非面革韋韭音頁風飛食首香馬骨高髟鬥鬯鬲鬼魚鳥鹵鹿麥麻黃黍黑黹黽鼎鼓鼠鼻齊齒龍龜龠.〒卄卅 ゙ ゚よりコトᄀᄁᆪᄂᆬᆭᄃᄄᄅᆰᆱᆲᆳᆴᆵᄚᄆᄇᄈᄡᄉᄊᄋᄌᄍᄎᄏᄐᄑ하ᅢᅣᅤᅥᅦᅧᅨᅩᅪᅫᅬᅭᅮᅯᅰᅱᅲᅳᅴᅵᄔᄕᇇᇈᇌᇎᇓᇗᇙᄜᇝᇟᄝᄞᄠᄢᄣᄧᄩᄫᄬᄭᄮᄯᄲᄶᅀᅇᅌᇱᇲᅗᅘᅙᆄᆅᆈᆑᆒᆔᆞᆡ三四上中下甲丙丁天地(ᄀ)(ᄂ)(ᄃ)(ᄅ)(ᄆ)(ᄇ)(ᄉ)(ᄋ)(ᄌ)(ᄎ)(ᄏ)(ᄐ)(ᄑ)(ᄒ)(가)(나)(다)(라)(마)(바)(사)(아)(자)(차)(카)(타)(파)(하)(주)(오전)(오후)(一)(二)(三)(四)(五)(六)(七)(八)(九)(十)(月)(火)(水)(木)(金)(土)(日)(株)(有)(社)(名)(特)(財)(祝)(労)(代)(呼)(学)(監)(企)(資)(協)(祭)(休)(自)(至)問幼箏pte2224252627282930333435참고주의우秘男適優印注項写正左右医宗夜3637383940444546474849501月2月3月4月5月6月7月8月9月10月11月12月hgergevltdアイウエオカキクケサシスセソタチツテナニヌネノハヒフヘホマミムメモヤユヨラリルレロワヰヱヲ令和アパートアルファアンペアアールイニングインチウォンエスクードエーカーオンスオームカイリカラットカロリーガロンガンマギガギニーキュリーギルダーキロキログラムキロメートルキロワットグラムトンクルゼイロクローネケースコルナコーポサイクルサンチームシリングセンチセントダースデシドルナノノットハイツパーセントパーツバーレルピアストルピクルピコビルファラッドフィートブッシェルフランヘクタールペソペニヒヘルツペンスページベータポイントボルトホンポンドホールホーンマイクロマイルマッハマルクマンションミクロンミリミリバールメガメガトンヤードヤールユアンリットルリラルピールーブルレムレントゲン0点1点2点3点4点5点6点7点8点9点10点11点12点13点14点15点16点17点18点19点20点21点22点23点24点hpadaaubarovpcdmdm2dm3iu平成昭和大正明治株式会社naμamakakbmbgbcalkcalpfnfμfμgmgkghzkhzmhzthzμlmldlfmnmμmmmcmkmmm2cm2km2mm3cm3km3m∕sm∕s2kpampagparadrad∕srad∕s2psnsμsmspvnvμvmvkvpwnwμwmwkwkωmωbqc∕kgdbgyhainkkktlnloglxmilmolphppmprsvwbv∕ma∕m1日2日3日4日5日6日7日8日9日10日11日12日13日14日15日16日17日18日19日20日21日22日23日24日25日26日27日28日29日30日31日galꙁꙃꙅꙇꙉꙍꙏꙑꙓꙕꙗꙙꙛꙝꙟꙡꙣꙥꙧꙩꙫꙭꚁꚃꚅꚇꚉꚋꚍꚏꚑꚓꚕꚗꚙꚛꜣꜥꜧꜩꜫꜭꜯꜳꜵꜷꜹꜻꜽꜿꝁꝃꝅꝇꝉꝋꝍꝏꝑꝓꝕꝗꝙꝛꝝꝟꝡꝣꝥꝧꝩꝫꝭꝯꝺꝼᵹꝿꞁꞃꞅꞇꞌꞑꞓꞗꞙꞛꞝꞟꞡꞣꞥꞧꞩɬʞʇꭓꞵꞷꞹꞻꞽꞿꟁꟃꞔᶎꟈꟊꟑꟗꟙꟶꬷꭒʍᎠᎡᎢᎣᎤᎥᎦᎧᎨᎩᎪᎫᎬᎭᎮᎯᎰᎱᎲᎳᎴᎵᎶᎷᎸᎹᎺᎻᎼᎽᎾᎿᏀᏁᏂᏃᏄᏅᏆᏇᏈᏉᏊᏋᏌᏍᏎᏏᏐᏑᏒᏓᏔᏕᏖᏗᏘᏙᏚᏛᏜᏝᏞᏟᏠᏡᏢᏣᏤᏥᏦᏧᏨᏩᏪᏫᏬᏭᏮᏯ豈更賈滑串句契喇奈懶癩羅蘿螺裸邏樂洛烙珞落酪駱亂卵欄爛蘭鸞嵐濫藍襤拉臘蠟廊朗浪狼郎來冷勞擄櫓爐盧蘆虜路露魯鷺碌祿綠菉錄論壟弄籠聾牢磊賂雷壘屢樓淚漏累縷陋勒肋凜凌稜綾菱陵讀拏諾丹寧怒率異北磻便復不泌數索參塞省葉說殺沈拾若掠略亮兩凉梁糧良諒量勵呂廬旅濾礪閭驪麗黎曆歷轢年憐戀撚漣煉璉秊練聯輦蓮連鍊列劣咽烈裂廉念捻殮簾獵囹嶺怜玲瑩羚聆鈴零靈領例禮醴隸惡了僚寮尿料燎療蓼遼暈阮劉杻柳流溜琉留硫紐類戮陸倫崙淪輪律慄栗隆利吏履易李梨泥理痢罹裏裡離匿溺吝燐璘藺隣鱗麟林淋臨笠粒狀炙識什茶刺切度拓糖宅洞暴輻降廓兀嗀塚晴凞猪益礼神祥福靖精蘒諸逸都飯飼館鶴郞隷侮僧免勉勤卑喝嘆器塀墨層悔慨憎懲敏既暑梅海渚漢煮爫琢碑祉祈祐祖禍禎穀突節縉繁署者臭艹著褐視謁謹賓贈辶難響頻恵𤋮舘並况全侀充冀勇勺啕喙嗢墳奄奔婢嬨廒廙彩徭惘慎愈慠戴揄搜摒敖望杖滛滋瀞瞧爵犯瑱甆画瘝瘟盛直睊着磌窱类絛缾荒華蝹襁覆調請諭變輸遲醙鉶陼韛頋鬒𢡊𢡄𣏕㮝䀘䀹𥉉𥳐𧻓齃龎fffiflfflմնմեմիվնմխיִײַעהכלםרתשׁשׂשּׁשּׂאַאָאּבּגּדּהּוּזּטּיּךּכּלּמּנּסּףּפּצּקּרּתּוֹבֿכֿפֿאלٱٻپڀٺٿٹڤڦڄڃچڇڍڌڎڈژڑکگڳڱںڻۀہھےۓڭۆۈۋۅۉېىئائەئوئۇئۆئۈئېئىیئجئحئمئيبجبحبخبمبىبيتجتحتختمتىتيثجثمثىثيجحجمحمخجخحخمسجسحسخسمصحصمضجضحضخضمطحطمظمعجعمغجغمفجفحفخفمفىفيقحقمقىقيكاكجكحكخكلكمكىكيلجلحلخلملىليمجمممىمينجنحنخنمنىنيهجهمهىهييحيخيىذٰرٰىٰ ٌّ ٍّ َّ ُّ ِّ ّٰئرئزئنبربزبنترتزتنثرثزثنمانرنزننيريزئخئهبهتهصخلهنههٰثهسهشمشهـَّـُّـِّطىطيعىعيغىغيسىسيشىشيحىجىجيخىصىصيضىضيشجشحشخشرسرصرضراًتجمتحجتحمتخمتمجتمحتمخحميحمىسحجسجحسجىسمحسمجسممصححصممشحمشجيشمخشممضحىضخمطمحطممطميعجمعممعمىغممغميغمىفخمقمحقمملحملحيلحىلججلخملمحمحجمحيمجحمخممجخهمجهممنحمنحىنجمنجىنمينمىيممبخيتجيتجىتخيتخىتميتمىجميجحىجمىسخىصحيشحيضحيلجيلمييجييميمميقمينحيعميكمينجحمخيلجمكممجحيحجيمجيفميبحيسخينجيصلےقلےاللهاكبرمحمدصلعمرسولعليهوسلمصلىصلى الله عليه وسلمجل جلالهریال,、〖〗—–_{}〔〕【】《》「」『』[]#&*-<>\\$%@ ًـًـّ ْـْءآأؤإةلآلألإ\"'^|~⦅⦆・ゥャ¢£¬¦¥₩│←↑→↓■○𐐨𐐩𐐪𐐫𐐬𐐭𐐮𐐯𐐰𐐱𐐲𐐳𐐴𐐵𐐶𐐷𐐸𐐹𐐺𐐻𐐼𐐽𐐾𐐿𐑀𐑁𐑂𐑃𐑄𐑅𐑆𐑇𐑈𐑉𐑊𐑋𐑌𐑍𐑎𐑏𐓘𐓙𐓚𐓛𐓜𐓝𐓞𐓟𐓠𐓡𐓢𐓣𐓤𐓥𐓦𐓧𐓨𐓩𐓪𐓫𐓬𐓭𐓮𐓯𐓰𐓱𐓲𐓳𐓴𐓵𐓶𐓷𐓸𐓹𐓺𐓻𐖗𐖘𐖙𐖚𐖛𐖜𐖝𐖞𐖟𐖠𐖡𐖣𐖤𐖥𐖦𐖧𐖨𐖩𐖪𐖫𐖬𐖭𐖮𐖯𐖰𐖱𐖳𐖴𐖵𐖶𐖷𐖸𐖹𐖻𐖼ːˑʙʣꭦʥʤᶑɘɞʩɤɢʛʜɧʄʪʫ𝼄ꞎɮ𝼅ʎ𝼆ɶɷɺ𝼈ɾʨʦꭧʧⱱʏʡʢʘǀǁǂ𝼊𝼞𐳀𐳁𐳂𐳃𐳄𐳅𐳆𐳇𐳈𐳉𐳊𐳋𐳌𐳍𐳎𐳏𐳐𐳑𐳒𐳓𐳔𐳕𐳖𐳗𐳘𐳙𐳚𐳛𐳜𐳝𐳞𐳟𐳠𐳡𐳢𐳣𐳤𐳥𐳦𐳧𐳨𐳩𐳪𐳫𐳬𐳭𐳮𐳯𐳰𐳱𐳲𑣀𑣁𑣂𑣃𑣄𑣅𑣆𑣇𑣈𑣉𑣊𑣋𑣌𑣍𑣎𑣏𑣐𑣑𑣒𑣓𑣔𑣕𑣖𑣗𑣘𑣙𑣚𑣛𑣜𑣝𑣞𑣟𖹠𖹡𖹢𖹣𖹤𖹥𖹦𖹧𖹨𖹩𖹪𖹫𖹬𖹭𖹮𖹯𖹰𖹱𖹲𖹳𖹴𖹵𖹶𖹷𖹸𖹹𖹺𖹻𖹼𖹽𖹾𖹿𝅗𝅥𝅘𝅥𝅘𝅥𝅮𝅘𝅥𝅯𝅘𝅥𝅰𝅘𝅥𝅱𝅘𝅥𝅲𝆹𝅥𝆺𝅥𝆹𝅥𝅮𝆺𝅥𝅮𝆹𝅥𝅯𝆺𝅥𝅯ıȷ∇∂ӏ𞤢𞤣𞤤𞤥𞤦𞤧𞤨𞤩𞤪𞤫𞤬𞤭𞤮𞤯𞤰𞤱𞤲𞤳𞤴𞤵𞤶𞤷𞤸𞤹𞤺𞤻𞤼𞤽𞤾𞤿𞥀𞥁𞥂𞥃ٮڡٯ0,1,2,3,4,5,6,7,8,9,〔s〕wzhvsdppvwcmrdjほかココ字双多解交映無前後再新初終販声吹演投捕遊指打禁空合満申割営配〔本〕〔三〕〔二〕〔安〕〔点〕〔打〕〔盗〕〔勝〕〔敗〕得可丽丸乁𠄢你侻倂偺備像㒞𠘺兔兤具𠔜㒹內𠕋冗冤仌冬𩇟刃㓟刻剆剷㔕包匆卉博即卽卿𠨬灰及叟𠭣叫叱吆咞吸呈周咢哶唐啓啣善喫喳嗂圖圗噑噴壮城埴堍型堲報墬𡓤売壷夆夢奢𡚨𡛪姬娛娧姘婦㛮嬈嬾𡧈寃寘寳𡬘寿将㞁屠峀岍𡷤嵃𡷦嵮嵫嵼巡巢㠯巽帨帽幩㡢𢆃㡼庰庳庶𪎒𢌱舁弢㣇𣊸𦇚形彫㣣徚忍志忹悁㤺㤜𢛔惇慈慌慺憲憤憯懞戛扝抱拔捐𢬌挽拼捨掃揤𢯱搢揅掩㨮摩摾撝摷㩬敬𣀊旣書晉㬙㬈㫤冒冕最暜肭䏙朡杞杓𣏃㭉柺枅桒𣑭梎栟椔楂榣槪檨𣚣櫛㰘次𣢧歔㱎歲殟殻𣪍𡴋𣫺汎𣲼沿泍汧洖派浩浸涅𣴞洴港湮㴳滇𣻑淹潮𣽞𣾎濆瀹瀛㶖灊災灷炭𠔥煅𤉣熜爨牐𤘈犀犕𤜵𤠔獺王㺬玥㺸瑇瑜璅瓊㼛甤𤰶甾𤲒𢆟瘐𤾡𤾸𥁄㿼䀈𥃳𥃲𥄙𥄳眞真瞋䁆䂖𥐝硎䃣𥘦𥚚𥛅秫䄯穊穏𥥼𥪧䈂𥮫篆築䈧𥲀糒䊠糨糣紀𥾆絣䌁緇縂繅䌴𦈨𦉇䍙𦋙罺𦌾羕翺𦓚𦔣聠𦖨聰𣍟䏕育脃䐋脾媵𦞧𦞵𣎓𣎜舄辞䑫芑芋芝劳花芳芽苦𦬼茝荣莭茣莽菧荓菊菌菜𦰶𦵫𦳕䔫蓱蓳蔖𧏊蕤𦼬䕝䕡𦾱𧃒䕫虐虧虩蚩蚈蜎蛢蜨蝫螆蟡蠁䗹衠𧙧裗裞䘵裺㒻𧢮𧥦䚾䛇誠𧲨貫賁贛起𧼯𠠄跋趼跰𠣞軔𨗒𨗭邔郱鄑𨜮鄛鈸鋗鋘鉼鏹鐕𨯺開䦕閷𨵷䧦雃嶲霣𩅅𩈚䩮䩶韠𩐊䪲𩒖頩𩖶飢䬳餩馧駂駾䯎𩬰鱀鳽䳎䳭鵧𪃎䳸𪄅𪈎𪊑䵖黾鼅鼏鼖𪘀";
function at(t2) {
  return t2 >= 196608 ? t2 >= 917760 && t2 <= 917999 ? 18874368 : 0 : it[st[t2 >> 4]][15 & t2];
}
function ct(t2, n2, o2) {
  const r = [], e2 = a(t2);
  for (let t3 = 0; t3 < e2.length; t3++) {
    const i3 = e2[t3], s2 = c([e2[t3]]), l2 = at(i3), a2 = l2 >> 23, f = l2 >> 21 & 3, u3 = l2 >> 5 & 65535, h2 = 31 & l2, d = lt.substr(u3, h2);
    if (0 === f || n2 && 1 & a2)
      throw new Error("Illegal char " + s2);
    1 === f ? r.push(d) : 2 === f ? r.push(o2 ? d : s2) : 3 === f && r.push(s2);
  }
  return r.join("").normalize("NFC");
}
function ft(t2, n2, o2) {
  void 0 === o2 && (o2 = false);
  let r = ct(t2, o2, n2).split(".");
  return r = r.map(function(t3) {
    return t3.startsWith("xn--") ? ut(t3 = h(t3.substring(4)), o2, false) : ut(t3, o2, n2), t3;
  }), r.join(".");
}
function ut(t2, n2, o2) {
  if ("-" === t2[2] && "-" === t2[3])
    throw new Error("Failed to validate " + t2);
  if (t2.startsWith("-") || t2.endsWith("-"))
    throw new Error("Failed to validate " + t2);
  if (t2.includes("."))
    throw new Error("Failed to validate " + t2);
  if (ct(t2, n2, o2) !== t2)
    throw new Error("Failed to validate " + t2);
  const r = t2.codePointAt(0);
  if (at(r) & 2 << 23)
    throw new Error("Label contains illegal character: " + r);
}
function mt(t2, n2) {
  void 0 === n2 && (n2 = {});
  return ft(t2, false, "useStd3ASCII" in n2 && n2.useStd3ASCII);
}

// node_modules/@leapwallet/name-matcha/dist/index.es.js
var J2 = Object.defineProperty;
var M2 = (s2, a2, n2) => a2 in s2 ? J2(s2, a2, { enumerable: true, configurable: true, writable: true, value: n2 }) : s2[a2] = n2;
var u2 = (s2, a2, n2) => (M2(s2, typeof a2 != "symbol" ? a2 + "" : a2, n2), n2);
var U2 = "qpzry9x8gf2tvdw0s3jn54khce6mua7l";
var T2 = {};
for (D2 = 0; D2 < U2.length; D2++) {
  q2 = U2.charAt(D2);
  if (T2[q2] !== void 0)
    throw new TypeError(q2 + " is ambiguous");
  T2[q2] = D2;
}
var q2;
var D2;
function g2(s2) {
  var a2 = s2 >> 25;
  return (s2 & 33554431) << 5 ^ -(a2 >> 0 & 1) & 996825010 ^ -(a2 >> 1 & 1) & 642813549 ^ -(a2 >> 2 & 1) & 513874426 ^ -(a2 >> 3 & 1) & 1027748829 ^ -(a2 >> 4 & 1) & 705979059;
}
function R2(s2) {
  for (var a2 = 1, n2 = 0; n2 < s2.length; ++n2) {
    var e2 = s2.charCodeAt(n2);
    if (e2 < 33 || e2 > 126)
      return "Invalid prefix (" + s2 + ")";
    a2 = g2(a2) ^ e2 >> 5;
  }
  for (a2 = g2(a2), n2 = 0; n2 < s2.length; ++n2) {
    var r = s2.charCodeAt(n2);
    a2 = g2(a2) ^ r & 31;
  }
  return a2;
}
function Z2(s2, a2, n2) {
  if (n2 = n2 || 90, s2.length + 7 + a2.length > n2)
    throw new TypeError("Exceeds length limit");
  s2 = s2.toLowerCase();
  var e2 = R2(s2);
  if (typeof e2 == "string")
    throw new Error(e2);
  for (var r = s2 + "1", t2 = 0; t2 < a2.length; ++t2) {
    var c2 = a2[t2];
    if (c2 >> 5)
      throw new Error("Non 5-bit word");
    e2 = g2(e2) ^ c2, r += U2.charAt(c2);
  }
  for (t2 = 0; t2 < 6; ++t2)
    e2 = g2(e2);
  for (e2 ^= 1, t2 = 0; t2 < 6; ++t2) {
    var l2 = e2 >> (5 - t2) * 5 & 31;
    r += U2.charAt(l2);
  }
  return r;
}
function P2(s2, a2) {
  if (a2 = a2 || 90, s2.length < 8)
    return s2 + " too short";
  if (s2.length > a2)
    return "Exceeds length limit";
  var n2 = s2.toLowerCase(), e2 = s2.toUpperCase();
  if (s2 !== n2 && s2 !== e2)
    return "Mixed-case string " + s2;
  s2 = n2;
  var r = s2.lastIndexOf("1");
  if (r === -1)
    return "No separator character for " + s2;
  if (r === 0)
    return "Missing prefix for " + s2;
  var t2 = s2.slice(0, r), c2 = s2.slice(r + 1);
  if (c2.length < 6)
    return "Data too short";
  var l2 = R2(t2);
  if (typeof l2 == "string")
    return l2;
  for (var w2 = [], d = 0; d < c2.length; ++d) {
    var h2 = c2.charAt(d), m2 = T2[h2];
    if (m2 === void 0)
      return "Unknown character " + h2;
    l2 = g2(l2) ^ m2, !(d + 6 >= c2.length) && w2.push(m2);
  }
  return l2 !== 1 ? "Invalid checksum for " + s2 : { prefix: t2, words: w2 };
}
function ee() {
  var s2 = P2.apply(null, arguments);
  if (typeof s2 == "object")
    return s2;
}
function te(s2) {
  var a2 = P2.apply(null, arguments);
  if (typeof a2 == "object")
    return a2;
  throw new Error(a2);
}
function C2(s2, a2, n2, e2) {
  for (var r = 0, t2 = 0, c2 = (1 << n2) - 1, l2 = [], w2 = 0; w2 < s2.length; ++w2)
    for (r = r << a2 | s2[w2], t2 += a2; t2 >= n2; )
      t2 -= n2, l2.push(r >> t2 & c2);
  if (e2)
    t2 > 0 && l2.push(r << n2 - t2 & c2);
  else {
    if (t2 >= a2)
      return "Excess padding";
    if (r << n2 - t2 & c2)
      return "Non-zero padding";
  }
  return l2;
}
function re(s2) {
  var a2 = C2(s2, 8, 5, true);
  if (Array.isArray(a2))
    return a2;
}
function se(s2) {
  var a2 = C2(s2, 8, 5, true);
  if (Array.isArray(a2))
    return a2;
  throw new Error(a2);
}
function ne(s2) {
  var a2 = C2(s2, 5, 8, false);
  if (Array.isArray(a2))
    return a2;
}
function ae(s2) {
  var a2 = C2(s2, 5, 8, false);
  if (Array.isArray(a2))
    return a2;
  throw new Error(a2);
}
var v2 = {
  decodeUnsafe: ee,
  decode: te,
  encode: Z2,
  toWordsUnsafe: re,
  toWords: se,
  fromWordsUnsafe: ne,
  fromWords: ae
};
var o = ((s2) => (s2.NETWORK = "network", s2.NOT_FOUND = "not-found", s2.UNREGISTERED_SERVICE = "unregistered-service", s2.DUPLICATE_SERVICE = "duplicate-service", s2.INVALID_ADDRESS = "invalid-address", s2.UNAVAILABLE_METHOD = "invalid-address", s2))(o || {});
var i2 = class extends Error {
  constructor(n2, e2) {
    super(n2);
    u2(this, "type");
    this.name = "MatchaError", this.type = e2;
  }
};
var S2 = class {
};
var N2 = S2;
u2(N2, "clients", {}), u2(N2, "getClient", async (a2) => {
  let n2 = S2.clients[a2];
  return n2 === void 0 && (n2 = await import_cosmwasm_stargate.CosmWasmClient.connect(a2), S2.clients[a2] = n2), n2;
});
var y2 = class {
  /**
   * @param network The network to use
   */
  getCosmWasmClient(a2) {
    return N2.getClient(a2);
  }
};
var F2 = {
  mainnet: "https://rpc.cosmos.directory/osmosis",
  testnet: "https://rpc-test.osmosis.zone"
};
var x2 = "icns";
var ce = class extends y2 {
  constructor() {
    super(...arguments);
    u2(this, "serviceID", x2);
    u2(this, "chain", "osmosis");
    u2(this, "contractAddress", {
      mainnet: "osmo1xk0s8xgktn9x5vwcgtjdxqzadg88fgn33p8u9cnpdxwemvxscvast52cdd",
      testnet: "osmo1q2qpencrnnlamwalxt6tac2ytl35z5jejn0v4frnp6jff7gwp37sjcnhu5"
    });
  }
  async resolve(n2, e2, r) {
    var w2, d, h2, m2;
    const t2 = await this.getCosmWasmClient(
      ((d = (w2 = r == null ? void 0 : r.rpcUrls) == null ? void 0 : w2[x2]) == null ? void 0 : d[e2]) ?? F2[e2]
    ), [c2, l2] = n2.split(".");
    try {
      const f = await (t2 == null ? void 0 : t2.queryContractSmart(
        this.contractAddress[e2],
        {
          address: {
            name: c2,
            bech32_prefix: l2
          }
        }
      ));
      if (!(f != null && f.address) || ((m2 = (h2 = r == null ? void 0 : r.allowedTopLevelDomains) == null ? void 0 : h2.icns) == null ? void 0 : m2.indexOf(l2)) === -1)
        throw new i2("", o.NOT_FOUND);
      return f.address;
    } catch {
      throw new i2("", o.NOT_FOUND);
    }
  }
  async lookup(n2, e2, r) {
    var l2, w2;
    const t2 = await this.getCosmWasmClient(
      ((w2 = (l2 = r == null ? void 0 : r.rpcUrls) == null ? void 0 : l2[x2]) == null ? void 0 : w2[e2]) ?? F2[e2]
    ), c2 = {
      prefix: null,
      words: null
    };
    try {
      const { prefix: d, words: h2 } = v2.decode(n2);
      c2.prefix = d, c2.words = h2;
    } catch {
      throw new i2("", o.INVALID_ADDRESS);
    }
    try {
      const d = await (t2 == null ? void 0 : t2.queryContractSmart(
        this.contractAddress[e2],
        {
          primary_name: {
            address: n2
          }
        }
      ));
      if (!(d != null && d.name))
        throw new i2("", o.NOT_FOUND);
      return `${d.name}.${c2.prefix}`;
    } catch {
      throw new i2("", o.NOT_FOUND);
    }
  }
};
var E2 = {
  mainnet: "https://rpc.cosmos.directory/juno",
  testnet: "https://rpc.uni.kingnodes.com"
};
var O2 = "ibcDomains";
var oe = class extends y2 {
  constructor() {
    super(...arguments);
    u2(this, "serviceID", O2);
    u2(this, "chain", "juno");
    u2(this, "contractAddress", {
      mainnet: "juno1ce7wjfsuk79t2mdvpdjtv8280pcc64yh9mh62qptuvxe64twt4pqa68z2a",
      testnet: "juno19al2ptpxz3xk6q8nl3eyvyslkz8g6nz25w48dfpaepwaxavq3mhqsjjqe5"
    });
  }
  async resolve(n2, e2, r) {
    var w2, d, h2, m2;
    const t2 = await this.getCosmWasmClient(
      ((d = (w2 = r == null ? void 0 : r.rpcUrls) == null ? void 0 : w2[O2]) == null ? void 0 : d[e2]) ?? E2[e2]
    ), [c2, l2] = n2.split(".");
    try {
      const f = await (t2 == null ? void 0 : t2.queryContractSmart(
        this.contractAddress[e2],
        {
          owner_of: {
            token_id: c2
          }
        }
      ));
      if (!(f != null && f.owner) || ((m2 = (h2 = r == null ? void 0 : r.allowedTopLevelDomains) == null ? void 0 : h2.ibcDomains) == null ? void 0 : m2.indexOf(l2)) === -1)
        throw new i2("", o.NOT_FOUND);
      try {
        const { words: j2 } = v2.decode(f.owner);
        return v2.encode(l2, j2);
      } catch {
        throw new i2("", o.NOT_FOUND);
      }
    } catch {
      throw new i2("", o.NOT_FOUND);
    }
  }
  async lookup(n2, e2, r) {
    var w2, d;
    const t2 = await this.getCosmWasmClient(
      ((d = (w2 = r == null ? void 0 : r.rpcUrls) == null ? void 0 : w2[O2]) == null ? void 0 : d[e2]) ?? E2[e2]
    ), c2 = {
      prefix: null,
      words: null
    };
    try {
      const { prefix: h2, words: m2 } = v2.decode(n2);
      c2.prefix = h2, c2.words = m2;
    } catch {
      throw new i2("", o.INVALID_ADDRESS);
    }
    const l2 = v2.encode("juno", c2.words);
    try {
      const h2 = await (t2 == null ? void 0 : t2.queryContractSmart(
        this.contractAddress[e2],
        {
          primary_domain: {
            address: l2
          }
        }
      ));
      if (!(h2 != null && h2.domain))
        throw new i2("", o.NOT_FOUND);
      return `${h2.domain}.${c2.prefix}`;
    } catch {
      throw new i2("", o.NOT_FOUND);
    }
  }
};
var k2 = {
  mainnet: "https://rpc.cosmos.directory/stargaze",
  testnet: "https://rpc.elgafar-1.stargaze-apis.com"
};
var A2 = "stargazeNames";
var ie = class extends y2 {
  constructor() {
    super(...arguments);
    u2(this, "serviceID", A2);
    u2(this, "chain", "stargaze");
    u2(this, "contractAddress", {
      mainnet: "stars1fx74nkqkw2748av8j7ew7r3xt9cgjqduwn8m0ur5lhe49uhlsasszc5fhr",
      testnet: "stars1rp5ttjvd5g0vlpltrkyvq62tcrdz949gjtpah000ynh4n2laz52qarz2z8"
    });
  }
  async resolve(n2, e2, r) {
    var w2, d, h2, m2;
    const t2 = await this.getCosmWasmClient(
      ((d = (w2 = r == null ? void 0 : r.rpcUrls) == null ? void 0 : w2[A2]) == null ? void 0 : d[e2]) ?? k2[e2]
    ), [c2, l2] = n2.split(".");
    try {
      const f = await t2.queryContractSmart(
        this.contractAddress[e2],
        {
          associated_address: {
            name: c2
          }
        }
      );
      if (!f || ((m2 = (h2 = r == null ? void 0 : r.allowedTopLevelDomains) == null ? void 0 : h2.stargazeNames) == null ? void 0 : m2.indexOf(l2)) === -1)
        throw new i2("", o.NOT_FOUND);
      try {
        const { words: j2 } = v2.decode(f);
        return v2.encode(l2, j2);
      } catch {
        throw new i2("", o.NOT_FOUND);
      }
    } catch {
      throw new i2("", o.NOT_FOUND);
    }
  }
  async lookup(n2, e2, r) {
    var l2, w2;
    const t2 = await this.getCosmWasmClient(
      ((w2 = (l2 = r == null ? void 0 : r.rpcUrls) == null ? void 0 : l2[A2]) == null ? void 0 : w2[e2]) ?? k2[e2]
    ), c2 = {
      prefix: null,
      words: null
    };
    try {
      const { prefix: d, words: h2 } = v2.decode(n2);
      c2.prefix = d, c2.words = h2;
    } catch {
      throw new i2("", o.INVALID_ADDRESS);
    }
    try {
      return `${await t2.queryContractSmart(
        this.contractAddress[e2],
        {
          name: {
            address: n2
          }
        }
      )}.${c2.prefix}`;
    } catch {
      throw new i2("", o.NOT_FOUND);
    }
  }
};
var L2 = {
  mainnet: "https://rpc.mainnet.archway.io",
  testnet: "https://rpc.constantine.archway.tech"
};
var _2 = "archIds";
var de = class extends y2 {
  constructor() {
    super(...arguments);
    u2(this, "serviceID", _2);
    u2(this, "chain", "archway");
    u2(this, "contractAddress", {
      mainnet: "archway1275jwjpktae4y4y0cdq274a2m0jnpekhttnfuljm6n59wnpyd62qppqxq0",
      testnet: "archway1lr8rstt40s697hqpedv2nvt27f4cuccqwvly9gnvuszxmcevrlns60xw4r"
    });
  }
  // reference: https://gist.github.com/drewstaylor/088af645dd36c013c02a2b4d05110479#file-archid-resolve-address-js
  async resolve(n2, e2, r) {
    var l2, w2, d, h2;
    const t2 = await this.getCosmWasmClient(
      ((w2 = (l2 = r == null ? void 0 : r.rpcUrls) == null ? void 0 : l2[_2]) == null ? void 0 : w2[e2]) ?? L2[e2]
    ), [, c2] = n2.split(".");
    try {
      const m2 = await (t2 == null ? void 0 : t2.queryContractSmart(
        this.contractAddress[e2],
        {
          resolve_record: {
            name: n2
          }
        }
      ));
      if (!(m2 != null && m2.address) || ((h2 = (d = r == null ? void 0 : r.allowedTopLevelDomains) == null ? void 0 : d.archIds) == null ? void 0 : h2.indexOf(c2)) === -1)
        throw new i2("", o.NOT_FOUND);
      return m2.address;
    } catch {
      throw new i2("", o.NOT_FOUND);
    }
  }
  // reference: https://gist.github.com/drewstaylor/088af645dd36c013c02a2b4d05110479#file-archid-check-domains-resolve-to-address-js
  async lookup(n2, e2, r) {
    var l2, w2, d;
    const t2 = await this.getCosmWasmClient(
      ((w2 = (l2 = r == null ? void 0 : r.rpcUrls) == null ? void 0 : l2[_2]) == null ? void 0 : w2[e2]) ?? L2[e2]
    ), c2 = {
      prefix: null,
      words: null
    };
    try {
      const { prefix: h2, words: m2 } = v2.decode(n2);
      c2.prefix = h2, c2.words = m2;
    } catch {
      throw new i2("", o.INVALID_ADDRESS);
    }
    try {
      const h2 = await (t2 == null ? void 0 : t2.queryContractSmart(
        this.contractAddress[e2],
        {
          resolve_address: {
            address: n2
          }
        }
      ));
      if (!(h2 != null && h2.names) || !((d = h2 == null ? void 0 : h2.names) != null && d.length))
        throw new i2("", o.NOT_FOUND);
      return h2.names.join(", ");
    } catch {
      throw new i2("", o.NOT_FOUND);
    }
  }
};
var { keccak_256: W2 } = X2;
var he = (s2) => s2 && mt(s2, { useStd3ASCII: true });
var le = (s2) => {
  if (!(s2.startsWith("[") && s2.endsWith("]")))
    throw Error(
      "Expected encoded labelhash to start and end with square brackets"
    );
  if (s2.length !== 66)
    throw Error("Expected encoded labelhash to have a length of 66");
  return `${s2.slice(1, -1)}`;
};
var we = (s2) => s2.startsWith("[") && s2.endsWith("]") && s2.length === 66;
var me = (s2) => {
  let a2 = "";
  for (let n2 = 0; n2 < 32; n2++)
    a2 += "00";
  if (s2) {
    const n2 = s2.split(".");
    for (let e2 = n2.length - 1; e2 >= 0; e2--) {
      let r;
      if (we(n2[e2]))
        r = le(n2[e2]);
      else {
        const t2 = he(n2[e2]);
        r = W2(t2);
      }
      a2 = W2(Buffer.from(a2 + r, "hex"));
    }
  }
  return "0x" + a2;
};
function ue(s2) {
  if (!s2)
    return [];
  const a2 = me(s2);
  return Array.from(Buffer.from(a2.slice(2), "hex"));
}
var p2 = {
  inj: {
    mainnet: "https://tm.injective.network",
    testnet: "https://testnet.tm.injective.dev"
  },
  sei: {
    mainnet: "https://rpc.wallet.pacific-1.sei.io",
    testnet: "https://sei-testnet-rpc.polkachu.com"
  }
};
var B2 = "spaceIds";
var fe = class extends y2 {
  constructor() {
    super(...arguments);
    u2(this, "serviceID", B2);
    u2(this, "chain", ["injective", "sei"]);
    u2(this, "contractAddress", {
      inj: {
        mainnet: "inj1x9m0hceug9qylcyrrtwqtytslv2jrph433thgu",
        testnet: "inj1ppneyx6qfnye26k9mwnf3ngyelvqng67f5v948"
      },
      sei: {
        mainnet: "sei1qujw7gxacyk08fpg0lsf377f727ldq8f9cmjlrxt6awdkag9ypjsdnkh98",
        testnet: "sei1a59k7mc9hsvtaeu532etl2geqmqdyufjncjkg0h3lxsu5u2rpensanaxwf"
      }
    });
  }
  async resolve(n2, e2, r) {
    var t2, c2, l2;
    try {
      const [, w2] = n2.split("."), d = (t2 = p2 == null ? void 0 : p2[w2]) == null ? void 0 : t2[e2], h2 = this.contractAddress[w2][e2];
      if (d && h2) {
        const m2 = await this.getCosmWasmClient(d), f = await (m2 == null ? void 0 : m2.queryContractSmart(h2, {
          address: {
            node: ue(n2)
          }
        }));
        if (!(f != null && f.address) || ((l2 = (c2 = r == null ? void 0 : r.allowedTopLevelDomains) == null ? void 0 : c2.spaceIds) == null ? void 0 : l2.indexOf(w2)) === -1)
          throw new i2("", o.NOT_FOUND);
        return f == null ? void 0 : f.address;
      } else
        throw new i2("", o.NOT_FOUND);
    } catch {
      throw new i2("", o.NOT_FOUND);
    }
  }
  async lookup(n2, e2) {
    var t2;
    const r = {
      prefix: null,
      words: null
    };
    try {
      const { prefix: c2, words: l2 } = v2.decode(n2);
      r.prefix = c2, r.words = l2;
    } catch {
      throw new i2("", o.INVALID_ADDRESS);
    }
    try {
      const c2 = (t2 = p2 == null ? void 0 : p2[r.prefix]) == null ? void 0 : t2[e2], l2 = this.contractAddress[r.prefix][e2];
      if (c2 && l2) {
        const w2 = await this.getCosmWasmClient(c2), d = await (w2 == null ? void 0 : w2.queryContractSmart(l2, {
          name: {
            address: n2.toLowerCase()
          }
        }));
        if (!(d != null && d.name))
          throw new i2("", o.NOT_FOUND);
        return d.name.endsWith(r.prefix) ? d.name : d.name + r.prefix;
      } else
        throw new i2("", o.NOT_FOUND);
    } catch {
      throw new i2("", o.NOT_FOUND);
    }
  }
};
var G2 = "sns";
var z2 = {
  mainnet: "https://injective-rpc.publicnode.com:443",
  testnet: "https://testnet.sentry.tm.injective.network:443"
};
var ve = (s2) => s2.endsWith(".sol") ? s2.slice(0, -4) : s2;
var ye = class extends y2 {
  constructor() {
    super(...arguments);
    u2(this, "serviceID", G2);
    u2(this, "chain", "injective");
    u2(this, "contractAddress", {
      mainnet: "inj1v7chmgm7vmuwldjt80utmw9c95jkrch979ps8z",
      testnet: "inj1q79ujqyh72p43mhr2ldaly3x6d50rzp3354at3"
    });
  }
  async resolve(n2, e2) {
    const r = await this.getCosmWasmClient(z2[e2]);
    try {
      const t2 = await r.queryContractSmart(
        this.contractAddress[e2],
        {
          resolve: {
            domain_name: ve(n2)
          }
        }
      );
      if (!t2)
        throw new i2("", o.NOT_FOUND);
      return t2;
    } catch {
      throw new i2("", o.NOT_FOUND);
    }
  }
  async lookup(n2, e2) {
    var t2, c2;
    const r = await this.getCosmWasmClient(z2[e2]);
    try {
      const l2 = v2.decode(n2), w2 = v2.fromWords(l2.words), d = [...new Array(12).fill(0), ...w2], h2 = await r.queryContractSmart(
        this.contractAddress[e2],
        {
          get_domains_for_owner: {
            owner_chain: 19,
            owner_address: d,
            max_len: 1,
            domain_offset: void 0
          }
        }
      );
      if (!h2)
        throw new i2("", o.NOT_FOUND);
      const m2 = (c2 = (t2 = h2 == null ? void 0 : h2.domains) == null ? void 0 : t2.pop) == null ? void 0 : c2.call(t2);
      if (!m2)
        throw new i2("", o.NOT_FOUND);
      return m2 + ".sol";
    } catch {
      throw new i2("", o.NOT_FOUND);
    }
  }
};
var b2 = "bdd";
var $2 = {
  mainnet: "https://full-node.mainnet-1.coreum.dev:26657",
  testnet: "https://full-node.testnet-1.coreum.dev:26657"
};
var pe = class extends y2 {
  constructor() {
    super(...arguments);
    u2(this, "serviceID", b2);
    u2(this, "chain", "coreum");
    u2(this, "contractAddress", {
      mainnet: "core1z22n0xy004sxm5w9fms48exwpl3vwqxd890nt8ve0kwjj048tgqstlqf6f",
      testnet: "testcore1uwe9yemth6gr58tm56sx3u37t0c5rhmk963fjt480y4nz3cfxers9fn2kh"
    });
  }
  async resolve(n2, e2) {
    const r = await this.getCosmWasmClient($2[e2]);
    try {
      const t2 = await r.queryContractSmart(
        this.contractAddress[e2],
        {
          resolve: {
            name: n2
          }
        }
      );
      if (!t2)
        throw new i2("", o.NOT_FOUND);
      return t2;
    } catch {
      throw new i2("", o.NOT_FOUND);
    }
  }
  async lookup(n2, e2, r) {
    var d, h2;
    const t2 = await this.getCosmWasmClient(
      ((h2 = (d = r == null ? void 0 : r.rpcUrls) == null ? void 0 : d[b2]) == null ? void 0 : h2[e2]) ?? $2[e2]
    ), c2 = {
      prefix: null,
      words: null
    };
    try {
      const { prefix: m2, words: f } = v2.decode(n2);
      c2.prefix = m2, c2.words = f;
    } catch {
      throw new i2("", o.INVALID_ADDRESS);
    }
    const l2 = e2 === "mainnet" ? "core" : "testcore", w2 = v2.encode(l2, c2.words);
    try {
      const m2 = await (t2 == null ? void 0 : t2.queryContractSmart(
        this.contractAddress[e2],
        {
          primary: {
            address: w2
          }
        }
      ));
      if (!m2)
        throw new i2("", o.NOT_FOUND);
      return m2;
    } catch {
      throw new i2("", o.NOT_FOUND);
    }
  }
};
var H2 = "nibId";
var ge = {
  mainnet: "https://rpc.nibiru.fi:443",
  testnet: "https://rpc.testnet-2.nibiru.fi:443"
};
var Ne = (s2) => s2.endsWith(".nibi") ? s2.slice(0, -5) : s2;
var De = class extends y2 {
  constructor() {
    super(...arguments);
    u2(this, "serviceID", H2);
    u2(this, "chain", "nibiru");
    u2(this, "contractAddress", {
      mainnet: "nibi1q0e70vhrv063eah90mu97sazhywmeegptx642t5px7yfcrf0rrsq2dylen",
      testnet: ""
    });
  }
  async resolve(n2, e2) {
    const r = await this.getCosmWasmClient(ge[e2]);
    if (this.contractAddress[e2] == "")
      throw new i2("", o.NOT_FOUND);
    try {
      const t2 = await r.queryContractSmart(
        this.contractAddress[e2],
        {
          resolve_record: {
            name: Ne(n2)
          }
        }
      );
      if (t2 == "" || t2 == null)
        throw new i2("", o.NOT_FOUND);
      return t2 == null ? void 0 : t2.address;
    } catch {
      throw new i2("", o.NOT_FOUND);
    }
  }
  async lookup(n2, e2) {
    throw new i2(`Lookup is unavailable for ${n2} on ${e2}`, o.UNAVAILABLE_METHOD);
  }
};
var K2 = "degeNS";
var V2 = {
  mainnet: "https://rpc.sei-apis.com:443"
};
var xe = class extends y2 {
  constructor() {
    super(...arguments);
    u2(this, "serviceID", K2);
    u2(this, "chain", "sei");
    u2(this, "contractAddress", {
      mainnet: "sei10nulnfpdhx2wf7lp9kqa8aez2yxuyxwjyfw9rzlrexd500nhal0sl7mtzm",
      testnet: ""
    });
  }
  async resolve(n2, e2) {
    if (e2 === "testnet")
      throw new i2(
        `Resolve is unavailable for ${n2} on ${e2}`,
        o.UNAVAILABLE_METHOD
      );
    const r = await this.getCosmWasmClient(V2[e2]);
    if (this.contractAddress[e2] == "")
      throw new i2("", o.NOT_FOUND);
    try {
      const t2 = await r.queryContractSmart(
        this.contractAddress[e2],
        {
          extension: {
            msg: {
              resolves_to: {
                domain_name: n2
              }
            }
          }
        }
      );
      if (t2 == "" || t2 == null)
        throw new i2("", o.NOT_FOUND);
      return t2 == null ? void 0 : t2.address;
    } catch {
      throw new i2("", o.NOT_FOUND);
    }
  }
  async lookup(n2, e2) {
    if (e2 === "testnet")
      throw new i2(
        `Lookup is unavailable for ${n2} on ${e2}`,
        o.UNAVAILABLE_METHOD
      );
    const r = await this.getCosmWasmClient(V2[e2]);
    if (this.contractAddress[e2] == "")
      throw new i2("", o.NOT_FOUND);
    try {
      const t2 = await r.queryContractSmart(
        this.contractAddress[e2],
        {
          extension: {
            msg: {
              primary_of: {
                owner: n2
              }
            }
          }
        }
      );
      if (t2 == "" || t2 == null)
        throw new i2("", o.NOT_FOUND);
      return t2 == null ? void 0 : t2.domain_name;
    } catch {
      throw new i2("", o.NOT_FOUND);
    }
  }
};
var I2 = [
  "agoric",
  "akash",
  "arkh",
  "axelar",
  "band",
  "bcna",
  "bitsong",
  "bostrom",
  "cerberus",
  "certik",
  "cheqd",
  "chihuahua",
  "chronic",
  "comdex",
  "cosmos",
  "crc",
  "cre",
  "cro",
  "cudos",
  "darc",
  "decentr",
  "desmos",
  "dig",
  "echelon",
  "emoney",
  "evmos",
  "fetch",
  "firma",
  "galaxy",
  "genesis",
  "gravity",
  "iaa",
  "inj",
  "ixo",
  "juno",
  "kava",
  "ki",
  "like",
  "logos",
  "lum",
  "mantle",
  "mars",
  "meme",
  "micro",
  "mythos",
  "nomic",
  "octa",
  "odin",
  "orai",
  "osmo",
  "panacea",
  "pb",
  "persistence",
  "regen",
  "rizon",
  "secret",
  "sent",
  "sif",
  "somm",
  "star",
  "stars",
  "swth",
  "terra",
  "thor",
  "umee",
  "vdl",
  "kujira",
  "sei",
  "stride",
  "jkl",
  "tori",
  "omniflix",
  "canto",
  "pasg",
  "archway",
  "quasar",
  "neutron",
  "testcore",
  "core",
  "quick",
  "migaloo",
  "kyve",
  "onomy",
  "noble",
  "plq",
  "nolus",
  "c4e",
  "gitopia",
  "nibi",
  "maya",
  "empower",
  "dydx"
];
var Oe = {
  icns: I2,
  ibcDomains: I2,
  stargazeNames: I2,
  archIds: ["arch"],
  spaceIds: ["inj", "sei"],
  sns: ["sol"],
  nibId: ["nibi"],
  degeNS: ["pp", "sei"],
  bdd: ["core"]
};
var Ce = {
  icns: x2,
  ibcDomains: O2,
  stargazeNames: A2,
  archIds: _2,
  spaceIds: B2,
  sns: G2,
  bdd: b2,
  nibId: H2,
  degeNS: K2
};
var je = Oe;
var Ae = class {
  constructor(a2) {
    u2(this, "services", {});
    this.network = a2, this.network = a2, this.registerService(new ce()), this.registerService(new oe()), this.registerService(new ie()), this.registerService(new de()), this.registerService(new fe()), this.registerService(new ye()), this.registerService(new pe()), this.registerService(new De()), this.registerService(new xe());
  }
  registerService(a2) {
    if (this.services[a2.serviceID])
      throw new i2(
        "Service already registered",
        o.DUPLICATE_SERVICE
      );
    this.services[a2.serviceID] = a2;
  }
  getService(a2) {
    const n2 = this.services[a2];
    if (!n2)
      throw new i2(
        "Service not registered",
        o.UNREGISTERED_SERVICE
      );
    return n2;
  }
  listServices() {
    return Object.keys(this.services);
  }
  setNetwork(a2) {
    this.network = a2;
  }
  getNetwork() {
    return this.network;
  }
  async resolve(a2, n2, e2) {
    return this.getService(n2).resolve(a2, this.network, e2);
  }
  async lookup(a2, n2, e2) {
    return this.getService(n2).lookup(a2, this.network, e2);
  }
  async resolveAll(a2, n2) {
    const e2 = {};
    return await Promise.all(
      Object.entries(this.services).map(async ([r, t2]) => {
        try {
          const c2 = await t2.resolve(a2, this.network, n2);
          e2[r] = c2;
        } catch {
          e2[r] = null;
        }
      })
    ), e2;
  }
  async lookupAll(a2, n2) {
    const e2 = {};
    return await Promise.all(
      Object.entries(this.services).map(async ([r, t2]) => {
        try {
          const c2 = await t2.lookup(a2, this.network, n2);
          e2[r] = c2;
        } catch {
          e2[r] = null;
        }
      })
    ), e2;
  }
};
var qe = new Ae("mainnet");
export {
  je as allowedTopLevelDomains,
  qe as registry,
  Ce as services
};
/*! Bundled license information:

js-sha3/src/sha3.js:
  (**
   * [js-sha3]{@link https://github.com/emn178/js-sha3}
   *
   * @version 0.8.0
   * @author Chen, Yi-Cyuan [emn178@gmail.com]
   * @copyright Chen, Yi-Cyuan 2015-2018
   * @license MIT
   *)
*/
//# sourceMappingURL=@leapwallet_name-matcha.js.map
